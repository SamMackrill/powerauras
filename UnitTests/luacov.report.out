
==============================================================================
../GTFO_Spells.lua
==============================================================================
	--------------------------------------------------------------------------
	-- GTFO_Spells.lua 
	--------------------------------------------------------------------------
	--[[
0	GTFO Spell List
0	Author: Lyta of Malygos
	
0	Change Log:
0		v0.2
0			- Added Spells
0		v0.3
0			- Wrath spells
0		v0.3.1
0			- Naxx spells
0		v0.3.2
0			- Naxx, Archavon
0		v0.3.3
0			- Ulduar
0		v1.0
0			- Trial of the Crusader
0		v1.0.1
0			- Added Koralon's Flaming Cinder, Ulduar spells
0			- Replaced some spell names with spell IDs
0		v1.1
0			- Replaced some spell names with spell IDs
0			- Added Ground Fissure (Freya trash)
0		v1.1.1
0			- Fixed Lord Jaraxxus's Legion Flame
0			- Added Lord Jaraxxus's Fel Inferno
0			- Fixed Northrend Beast's Slime Pool
0			- Fixed Northrend Beast's Fire Bomb
0		v1.1.2
0			- Added Deathstalker Visceri's Poison Bottle
0			- Added Anub'arak's Scarabs' Acid-Drenched Mandibles
0			- Added Mimiron's Flames
0			- Added Freya Trash's Hurricane
0		v1.1.3
0			- Added Runemaster Molgeim's Rune of Death
0			- Added Stormcaller Brundir's Lightning Tendrils
0		v1.1.4
0			- Added Drakuru's Blight Crystal Explosion
0			- Added Toxic Waste (Pit of Saron)
0			- Added Scourgelord Tyrannus's Icy Blast
0			- Added Onyxia's Deep Breath
0	]]--
	
2	if (not GTFO) then -- Add only if not already present
	
0	GTFO = {SpellID = {}, SpellName = {}};
	
0	GTFO.SpellID["40611"] = {
0		desc = "Blaze (Illidan)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["41482"] = {
0		desc = "Blizzard (Illidari Council)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["41481"] = {
0		desc = "Flamestrike (Illidari Council)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["41541"] = {
0		desc = "Consecration (Illidari Council)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["28865"] = {
0		desc = "Consumption (Netherspite)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["31944"] = {
0		desc = "Doomfire (Archimonde)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["30129"] = {
0		desc = "Charred Earth (Nightbane)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["50746"] = {
0		desc = "Burn (Illidan)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62548"] = {
0		desc = "Scorch (Ignis-10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62549"] = {
0		desc = "Scorch (Ignis-10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63475"] = {
0		desc = "Scorch (Ignis-25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63476"] = {
0		desc = "Scorch (Ignis-25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["29371"] = {
0		desc = "Eruption (Heigan the Unclean)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["47579"] = {
0		desc = "Freezing Cloud (Skadi)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["60020"] = {
0		desc = "Freezing Cloud (Skadi)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["51103"] = {
0		desc = "Frostbomb (Mage-Lord Urom)";
0		sound = 2;
0	};
	
0	GTFO.SpellID["56926"] = {
0		desc = "Thundershock (Jedoga Shadowseeker)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["60029"] = {
0		desc = "Thundershock (Jedoga Shadowseeker - Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["58965"] = {
0		desc = "Choking Cloud (Archavon 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["61672"] = {
0		desc = "Choking Cloud (Archavon 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["28547"] = {
0		desc = "Chill (Sapphron 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["55699"] = {
0		desc = "Chill (Sapphron 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["60919"] = {
0		desc = "Rock Shower (Archavon Warder 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["60923"] = {
0		desc = "Rock Shower (Archavon Warder 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["54362"] = {
0		desc = "Poison (Grobbulus)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["28158"] = {
0		desc = "Poison (Grobbulus)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["28241"] = {
0		desc = "Poison (Grobbulus)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["54363"] = {
0		desc = "Poison (Grobbulus)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["53400"] = {
0		desc = "Acid Cloud (Hadronox)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["59419"] = {
0		desc = "Acid Cloud (Hadronox - Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["64851"] = {
0		desc = "Flaming Rune (Ulduar trash)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["64989"] = {
0		desc = "Flaming Rune (Ulduar trash)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["50752"] = {
0		desc = "Storm of Grief (Maiden of Grief)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["59772"] = {
0		desc = "Storm of Grief (Maiden of Grief - Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["59451"] = {
0		desc = "Mojo Puddle";
0		sound = 1;
0	};
	
0	GTFO.SpellID["58994"] = {
0		desc = "Mojo Puddle - Heroic";
0		sound = 1;
0	};
	
0	GTFO.SpellID["55627"] = {
0		desc = "Mojo Puddle";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62466"] = {
0		desc = "Lightning Charge (Thorim)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62451"] = {
0		desc = "Unstable Energy (Freya 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62865"] = {
0		desc = "Unstable Energy (Freya 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["66881"] = {
0		desc = "Slime Pool (Northrend Beasts 10 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67639"] = {
0		desc = "Slime Pool (Northrend Beasts 10 Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67638"] = {
0		desc = "Slime Pool (Northrend Beasts 25 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67640"] = {
0		desc = "Slime Pool (Northrend Beasts 25 Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["66320"] = {
0		desc = "Fire Bomb (Northrend Beasts 10 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67473"] = {
0		desc = "Fire Bomb (Northrend Beasts 10 Heroic)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["67472"] = {
0		desc = "Fire Bomb (Northrend Beasts 25 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67475"] = {
0		desc = "Fire Bomb (Northrend Beasts 25 Heroic)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["66877"] = {
0		desc = "Legion Flame (Lord Jaraxxus 10 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67071"] = {
0		desc = "Legion Flame (Lord Jaraxxus 10 Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67070"] = {
0		desc = "Legion Flame (Lord Jaraxxus 25 Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67072"] = {
0		desc = "Legion Flame (Lord Jaraxxus 25 Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["66496"] = {
0		desc = "Fel Inferno (Lord Jaraxxus 10 Normal)";
0		sound = 2;
0	};
	
0	GTFO.SpellID["68717"] = {
0		desc = "Fel Inferno (Lord Jaraxxus 10 Heroic)";
0		sound = 2;
0	};
	
0	GTFO.SpellID["68716"] = {
0		desc = "Fel Inferno (Lord Jaraxxus 25 Normal)";
0		sound = 2;
0	};
	
0	GTFO.SpellID["68718"] = {
0		desc = "Fel Inferno (Lord Jaraxxus 25 Heroic)";
0		sound = 2;
0	};
	
0	GTFO.SpellID["64704"] = {
0		desc = "Devouring Flame (Razorscale 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["64733"] = {
0		desc = "Devouring Flame (Razorscale 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["66684"] = {
0		desc = "Flaming Cinder (Koralon 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67332"] = {
0		desc = "Flaming Cinder (Koralon 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63346"] = {
0		desc = "Focused Eyebeam (Kologarn 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63976"] = {
0		desc = "Focused Eyebeam (Kologarn 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["64459"] = {
0		desc = "Seeping Feral Essence (Auriaya 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["64675"] = {
0		desc = "Seeping Feral Essence (Auriaya 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["66351"] = {
0		desc = "Mine Explosion (Mimiron 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63009"] = {
0		desc = "Mine Explosion (Mimiron 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63157"] = {
0		desc = "Ground Fissure (Freya Trash 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63548"] = {
0		desc = "Ground Fissure (Freya Trash 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["67594"] = {
0		desc = "Poison Bottle (Trials of the Champion Regular)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["68316"] = {
0		desc = "Poison Bottle (Trials of the Champion Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["65775"] = {
0		desc = "Acid-Drenched Mandibles (Anub'arak 10 Normal)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["67861"] = {
0		desc = "Acid-Drenched Mandibles (Anub'arak 10 Heroic)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["67862"] = {
0		desc = "Acid-Drenched Mandibles (Anub'arak 25 Normal)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["67863"] = {
0		desc = "Acid-Drenched Mandibles (Anub'arak 25 Heroic)";
0		sound = 1;
0		applicationOnly = true;
0	};
	
0	GTFO.SpellID["64566"] = {
0		desc = "Flames (Mimiron Hard Mode)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63272"] = {
0		desc = "Hurricane (Freya Trash)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["62269"] = {
0		desc = "Rune of Death (Runemaster Molgeim 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63490"] = {
0		desc = "Rune of Death (Runemaster Molgeim 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["61886"] = {
0		desc = "Lightning Tendrils (Stormcaller Brundir 10)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["63485"] = {
0		desc = "Lightning Tendrils (Stormcaller Brundir 25)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["54115"] = {
0		desc = "Blight Crystal Explosion (Drakuru)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["69024"] = {
0		desc = "Toxic Waste";
0		sound = 1;
0	};
	
0	GTFO.SpellID["70274"] = {
0		desc = "Toxic Waste";
0		sound = 1;
0	};
	
0	GTFO.SpellID["70436"] = {
0		desc = "Toxic Waste";
0		sound = 1;
0	};
	
0	GTFO.SpellID["69238"] = {
0		desc = "Icy Blast (Scourgelord Tyrannus - Normal)";
0		sound = 1;
0	};
	
0	GTFO.SpellID["69628"] = {
0		desc = "Icy Blast (Scourgelord Tyrannus - Heroic)";
0		sound = 1;
0	};
	
0	GTFO.SpellName["Shadow Void"] = {
0		desc = "Shadow Void";
0		sound = 1;
0	};
	
0	GTFO.SpellName["Poison Cloud"] = {
0		desc = "Poison Cloud";
0		sound = 1;
0	};
	
0	GTFO.SpellName["Void Zone"] = {
0		desc = "Void Zone";
0		sound = 1;
0	};
	
0	GTFO.SpellName["Spirit Fount"] = {
0		desc = "Spirit Fount";
0		sound = 1;
0	};
	
0	GTFO.SpellName["Flamestrike"] = {
0		desc = "Flamestrike (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Blizzard"] = {
0		desc = "Blizzard (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Death and Decay"] = {
0		desc = "Death and Decay (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Raging Consecration"] = {
0		desc = "Raging Consecration";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Rain of Fire"] = {
0		desc = "Rain of Fire (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Volley"] = {
0		desc = "Volley (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Hellfire"] = {
0		desc = "Hellfire (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Hurricane"] = {
0		desc = "Hurricane (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Magma Totem"] = {
0		desc = "Magma Totem (Generic)";
0		sound = 2;
0	};
	
0	GTFO.SpellName["Consumption"] = {
0		desc = "Consumption";
0		sound = 1;
0	};
	
	-- There are 92 different spell IDs for this one!  Going to stick with the name for now...
0	GTFO.SpellName["Breath"] = {
0		desc = "Breath (Onyxia)";
0		sound = 1;
0	};
	
	end
	
	--PvP
	
2	PowaGTFOPvP = {
	-- Paladin Consecration
2	["26573"] = true,
2	["20116"] = true,
2	["20922"] = true,
2	["20923"] = true,
2	["20924"] = true,
2	["48818"] = true,
2	["48819"] = true,
2	}

==============================================================================
../PowerAuras.lua
==============================================================================
	--- ------------------------------------------------
	---            << Power Auras >>
	---              Par -Sinsthar-
	---    [Ziya/Tiven - serveur Fr - Kirin Tor] 
	---
	---     Effets visuels autour du personnage 
	---     en cas de buff, debuff et autres...
	--- ------------------------------------------------
	
	--- Author: Smacker(v2.6.2),Gameldar (v2.6.1), Driizt (v2.5+), Garstiger (Powa Continued), Sinsthar (original author/concept)
	--- Thanks: Kouri for debuff type detection code
	--- Thanks: StingerSoft for Russian translations
	--- Thanks: Doomiris for Chinese Translations
	--- Thanks: JD for new aura textures
	--- Thanks: Suicidalkatt for the number textures
	--- Changes:
	--- Version 2.6.3 (lolkat)
	--- Version 2.6.2 (WotLK Raid or Self or Party)
	---  Feature: Option to match buff/debuff on group (raid or party or self)
	---  Feature: Option to match on buff/debuff tool-tip text
	---  Feature: In Vehicle flag added
	---  Feature: Resting flag added (except when in combat)
	---  Feature: Stun/Silence/Root/CC/Snare detection added to DebuffType
	---  Feature: Can flag to trigger only dispellable DebuffTypes 
	---  Feature: Added >= and <= stack comparisons
	---  Feature: Copy/Import/Export now includes timer settings
	---  Feature: Ability to look-up buffs/debuffs/spellalerts by icon name (ensure at least one underscore is in the buff name)
	---  Feature: Ability to look-up spells by spellIds (use [12345])
	---  Feature: Russian localisation added (thanks to StingerSoft)
	---  Feature: Option to hide leading zeros on timers
	---  Feature: Option to use transparent timer textures
	---  Change: Use Blizzard threat values instead of Banzi
	---  Bugfix: PvP Trigger now works
	---  Bugfix: Timers on buffs/debuff on other players now show
	--- Version 2.6.1a (WotLK Dual-Specs)
	---  Bugfix: corrected typo in the index value for the dual spec conditional (j != k)
	--- Version 2.6.1 (WotLK Dual-Specs)
	---  Feature: WoW 3.1 verison match (no longer out of date)
	---  Feature: Basic integration of dual specs support
	--- Version 2.6.0 (WotLK)
	---  Feature: WoW 3.1 compatibility update.
	---  Feature: Deathknight Presences added to Stance Auras.
	---  Feature: Whitespace added to export strings to facilitate forum posting.
	---  Feature: Better granularity for Mana/Health/Rage/Energy/Power threshold (step 5 -> 2).
	---  Feature: Mounted option changed to toggle (checked: only when mounted, unchecked: only when dismounted)
	---  Feature: Texture glow option affects timer.
	---  Bugfix: Mana/Rage/Energy/RunicPower Party & Raid triggers.
	---  Bugfix: Mana/Rage/Energy/RunicPower Unit triggers.
	---  Bugfix: PvP Trigger.
	---  Bugfix: "Casted" -> "Cast" typo.
	--- Version 2.5.9a (WotLK)
	---  Bugfix: 'hundredth', 'dual' timers checkbox errors.
	--- Version 2.5.9 (WotLK)
	---  Feature: Option to monitor "my" buffs/debuffs.
	---  Feature: Unlimited timers. (1 per aura instead of 5 total)
	---  Feature: Dynamic Aura update when multiple matches and 'own texture' checked.
	---  Feature: Import and export Auras as strings.
	---  Feature: Any/All toggle for party, raid buff checks. (default = all)
	---  Bugfix: Action Usable aura when action linked to stance.
	---  Bugfix: Make "Activate Power Auras" checkbox actually do something and shutdown processing when unchecked. :P
	--- Version 2.5.8b (WotLK)
	---  Bugfix: gui bug threshold invert option.
	--- Version 2.5.8a (WotLK)
	---  Bugfix: combination triggers with "show when not active" checked.
	---  Various internal logic optimizations.
	--- Version 2.5.8 (WotLK)
	---  Bugfix: Various label fonts (template breakage by Blizzard in builds 8982->9014)
	---  Bugfix: Font Select button not visible on first editor open.
	---  Feature: Text shadow option for textauras.
	---  Feature: Ability to setup auras with combination of triggers.
	---  Feature: Spell Casting activation trigger added (target and focus).
	--- Version 2.5.7b (WotLK)
	---  Bugfix: Begin animation "replaying" on aura refresh.
	--- Version 2.5.7a (WotLK)
	---  Bugfix: Offhand temporary enchant detection/stacks
	---	 Feature: Weapon buff auras can be defined separately per temporary enchant 
	---           and optionally filtered by slot (main or offhand)
	--- Version 2.5.7 (WotLK)
	---  Feature: Text Aura Option added (thanks to Garstiger for initial code)
	---  Feature: Option to invert default threshold behavior added.
	---  Feature: Pet health/mana activation enabled (enter "pet" in UnitName editbox)
	---  Bugfix: Manual.html pictures (submitted by Garstiger)
	---  Bugfix: Aura Type checkboxes
	---  Bugfix: UnitName nil error
	---  Bugfix: Threshold when Rage/Energy/Power is zero.
	--- Version 2.5.6c (WotLK)
	---  Bugfix: Not in Combat initial state.
	--- Version 2.5.6b (WotLK)
	---  Bugfix: .TimerFrame checkboxes nil error
	---  Bugfix: Target buff/debuff timers
	--- Version 2.5.6a (WotLK)
	---  Bugfix: GetComboPoints() API change.
	--- Version 2.5.6 (WotLK)
	---  Feature: Runic Power threshold added.
	---  Bugfix: GetPlayerBuff/UnitBuff/Debuff API changes.
	---  Bugfix: UIDropMenu, PanelTemplates_TabResize, Font Widget, this->self changes. 
	--- Version 2.5.5b
	---  Bugfix: Health/Mana threshold for party/raid units (line 1297 error)
	--- Version 2.5.5a
	---  Bugfix: Custom duration timer for target buffs/debuffs (wasn't reseting on target change)
	---  Bugfix: Hide player auras when dead/ghost.
	--- Version 2.5.5
	---  Feature: Stance options for Druid and Rogue(stealth) added
	---  Bugfix: Stance detection is now dynamic so lower levels that don't have all forms/stances yet are supported.
	---  Feature: Custom timer enabled for action usable. It overrides the calculated timers if used.
	---  Feature: Rage/Energy trigger implemented with upper thresholds.
	--- Version 2.5.4a
	---  Bugfix: Buff and Debuff timers for non-player units.
	--- Version 2.5.4
	---  Bugfix: Buff and Debuff timers.
	---  Feature: Custom textures editbox now accepts spellname or spellid in addition to filename.tga
	--- Version 2.5.3
	---  Bugfix: Buff and Debuff stacks.
	---  Bugfix: Mana-threshold auras when shifting to bear/cat.
	---  Feature: New custom sounds.
	---  Feature: Updated zh-CN localization by <Doomiris>.
	--- Version 2.5.2
	---  Feature: 30 more wow textures added to available choices
	---  Feature: PvP flag added to triggers
	---  Feature: Aggro status added to triggers
	---  Feature: Option to use ability/spell texture instead of predetermined choice where available.
	--- Version 2.5.1a
	---  Feature: Hide Auras when hiding the interface (Alt+z)
	--- Version 2.5.1
	---  Feature: WoW 2.4 compatibility re-code (various changes related to the new combatlog)
	---  Feature: New textures can now be added to defaults as long as they're named Auraxx.tga
	---           The selection slider will accommodate automatically next time you start the game.
	---  Bugfix: Stance detection
	---  Bugfix: Mounted detection (flying included)
	---  Bugfix: Aura change
	---  Bugfix: Action Usable (workaround for the absense of cooldown complete events)
	---          If you want to get notification when a trinket or bag item is usable you have
	---					 drag it to an actionbar (doesn't have to be a visible one)	 
	
	-- Exposed for Saving
2	PowaMisc = 
0		{
2			Disabled = false,
2			debug = false,
2			OnUpdateLimit = 0,
2			AnimationLimit = 0,
2			Version = GetAddOnMetadata("PowerAuras", "Version"),
2			DefaultTimerTexture = "Original",
2			DefaultStacksTexture = "Original",
2			TimerRoundUp = true,
2			AnimationFps = 30,
2			UseGTFO = true,
2		};
	
		
2	PowaAuras.PowaMiscDefault = PowaAuras:CopyTable(PowaMisc);
	
2	PowaSet = {};
2	PowaTimer = {};
	
2	PowaGlobalSet = {};
2	PowaGlobalListe = {};
2	PowaPlayerListe = {};
	
	--Default page names
12	for i = 1, 5 do
10		PowaPlayerListe[i] = PowaAuras.Text.ListePlayer.." "..i;
	end
22	for i = 1, 10 do
20		PowaGlobalListe[i] = PowaAuras.Text.ListeGlobal.." "..i;
	end
	
	--- ---------------------------------------------------------------------------------------------------------
	
4	function PowaAuras:Toggle(enable)
0		if (self.Initialising) then return; end
		--self:ShowText("Toggle Frame=", PowaAuras_Frame);
0		if (enable==nil) then
0			enable = PowaMisc.Disabled;
		end
0		if enable then
0			if (not PowaMisc.Disabled) then
0				return;
			end
0			if PowaAuras_Frame and not PowaAuras_Frame:IsShown() then		
0				PowaAuras_Frame:Show(); -- Show Main Options Frame
0				self:RegisterEvents(PowaAuras_Frame);
			end
0			PowaMisc.Disabled = false;
0			self:Setup();
0			self:DisplayText("Power Auras "..self.Colors.Green..PowaAuras.Text.Enabled.."|r");
		else
0			if (PowaMisc.Disabled) then
0				return;
			end
0			if PowaAuras_Frame and PowaAuras_Frame:IsShown() then
0				PowaAuras_Frame:UnregisterAllEvents();
0				PowaAuras_Frame:Hide();
			end
0			self:OptionHideAll(true);
0			PowaMisc.Disabled = true;
0			self:DisplayText("Power Auras "..self.Colors.Red..ADDON_DISABLED.."|r");
		end
	end
	
4	function PowaAuras:OnLoad(frame)
		
		--- Setting up the Import/Export static popups
0		self:SetupStaticPopups();
	
0		frame:RegisterEvent("VARIABLES_LOADED");
0		frame:RegisterEvent("PLAYER_ENTERING_WORLD");
		
		--- options init
0		SlashCmdList["POWA"] = PowaAuras_CommanLine;
0		SLASH_POWA1 = "/powa"	
	end
	
4	function PowaAuras:RegisterEvents(frame)
		--- TODO: conditionally Register/unregister events according to options for improved performance
94		for _, event in ipairs(self.Events) do
92			if (self[event]) then
92				frame:RegisterEvent(event);
			else
0				self:DisplayText("Event has no method ", event); --OK
			end
		end
	end
	
4	function PowaAuras:LoadAuras()
		--self:Message("Saved varaible convertion: PowaSet");
	
2		self.Auras = {};
		
2		for k, v in pairs(PowaGlobalSet) do
0			self:UnitTestDebug("PowaGlobalSet",k,v.buffname);
0			if (k~=0 and v.is_a == nil or not v:is_a(cPowaAura)) then
0				self:UnitTestDebug(k,v.buffname);
0				self.Auras[k] = self:AuraFactory(v.bufftype, k, v);
			end
		end
	
37		for k, v in pairs(PowaSet) do
35			self:UnitTestDebug("PowaSet",k,v.buffname, self.Auras[k]);
35			if (k>0 and k <121 and not self.Auras[k]) then
34				self:UnitTestDebug("is_a=",v.is_a);
34				if (v.is_a == nil or not v:is_a(cPowaAura)) then
					--self:ShowText("load aura ", k, " isResting=", v.isResting);
34					self.Auras[k] = self:AuraFactory(v.bufftype, k, v);
34					self:UnitTestDebug("Out=",self.Auras[k].buffname);
				end
			end
		end
	
		--self:Message("backwards combatiblity");
		--self.Auras[0] = cPowaAura(0, {off=true});
	
		-- Update for backwards combatiblity
722		for i = 1, 360 do
			-- gere les rajouts
720			local aura = self.Auras[i];
720			local oldaura = PowaSet[i];
720			if (oldaura==nil) then
686				oldaura = PowaGlobalSet[i];
			end
720			if (aura) then
34				if (aura.combat==0) then
26					aura.combat = 0;
8				elseif (aura.combat==1) then
2					aura.combat = true;
6				elseif (aura.combat==2) then
2					aura.combat = false;
				end
34				if (aura.ignoreResting==true) then
0					aura.isResting = true;
34				elseif (aura.ignoreResting==true) then
0					aura.isResting = false;
				end
34				aura.ignoreResting = nil;
34				if (aura.isinraid==true) then
0					aura.inRaid = true;
34				elseif (aura.isinraid==false) then
0					aura.inRaid = 0;
				end
34				aura.isinraid = nil;
34				if (aura.isDead==true) then
0					aura.isAlive = false;
34				elseif (aura.isDead==false) then
0					aura.isAlive = true;
34				elseif (aura.isDead==0) then
0					aura.isAlive = 0;
				end
34				aura.isDead = nil;
34				if (aura.buffname == "") then
					--self:Message("Delete aura "..i);
0					self.Auras[i] = nil;
34				elseif (aura.bufftype == nil and oldaura~=nil) then
					--self:Message("Repair bufftype for #"..i);
					
0					if (oldaura.isdebuff) then
0						aura.bufftype = self.BuffTypes.Debuff;
0					elseif (oldaura.isdebufftype) then
0						aura.bufftype = self.BuffTypes.TypeDebuff;
0					elseif (oldaura.isenchant) then
0						aura.bufftype = self.BuffTypes.Enchant;
					else
0						aura.bufftype = self.BuffTypes.Buff;
					end
					
				-- Update old combo style 1235 => 1/2/3/5
34				elseif (aura.bufftype==self.BuffTypes.Combo) then
					--self:UnitTestDebug("Combo upgrade check ", aura.buffname, " for ", aura.id);
0					if (string.len(aura.buffname)>1 and string.find(aura.buffname, "/", 1, true)==nil) then
0						local newBuffName=string.sub(aura.buffname, 1, 1);
0						for i=2, string.len(aura.buffname) do
0							newBuffName = newBuffName.."/"..string.sub(aura.buffname, i, i);
						end
0						aura.buffname = newBuffName
					end
				end
	
			end
		end
		
		--self:Message("Saved varaible convertion: PowaTimer #", #PowaTimer);
		-- Copy old timer info (should be once only)
2		for k, v in pairs(PowaTimer) do
0			local aura = self.Auras[k];
0			if (aura) then
0				aura.Timer = cPowaTimer(aura, v);
0				if (PowaSet[k]~=nil and PowaSet[k].timer~=nil) then
0					aura.Timer.enabled = PowaSet[k].timer;
				end
0				if (PowaGlobalSet[k]~=nil and PowaGlobalSet[k].timer~=nil) then
0					aura.Timer.enabled = PowaGlobalSet[k].timer;
				end
			end
		end
		
		-- Copy to Saved Sets
2		PowaSet = self.Auras;
482		for i = 121, 360 do
480			PowaGlobalSet[i] = self.Auras[i];
		end
2		PowaTimer = {};
		
36		for k, v in pairs(self.Auras) do
34			self:UnitTestDebug("Loaded Auras ",k, " ", v.buffname);
		end
	
	end
	------------------------------------------------------------------------------------------------------- EVENTS
4	function PowaAuras:FindAllChildren()
2		self:UnitTestDebug("FindAllChildren");
36		for _, aura in pairs(self.Auras) do
34			aura.Children = nil;
		end
36		for _, aura in pairs(self.Auras) do
34			self:FindChildren(aura);
		end
		--for _, aura in pairs(self.Auras) do
		--	if (aura.Children) then
		--		self:ShowText("Aura "..aura.id.." Children:");
		--		for childId in pairs(aura.Children) do
		--			self:ShowText("  "..childId);
		--		end
		--	end
		--end
	end
	
4	function PowaAuras:FindChildren(aura)
34		if (not aura.multiids or aura.multiids=="") then return; end
		--self:ShowText(aura.id.." "..aura.multiids);
17		for pword in string.gmatch(aura.multiids, "[^/]+") do
10			if (string.sub(pword, 1, 1) == "!") then
0				pword = string.sub(pword, 2);
			end
10			local id = tonumber(pword);
			--self:ShowText(" >>"..id);
10			local dependant = self.Auras[id];
10			if (dependant) then
10				if (not dependant.Children) then
7					dependant.Children = {};
				end
10				dependant.Children[aura.id] = true;
			end
		end
	end
	
4	function PowaAuras:CustomTexPath(customname)
0		local texpath;
0		if string.find(customname,".", 1, true) then
0			texpath = "Interface\\Addons\\PowerAuras\\Custom\\"..customname;
		else
0			_, _, texpath = GetSpellInfo(customname);
		end
0		if not texpath then texpath = "" end
0		return texpath;
	end
	
	--- ------------------------------------------------------------------------------------
	
4	function PowaAuras:CreateTimerFrame(auraId, index, updatePing)
0		local frame = CreateFrame("Frame", "TimerFrame"..auraId.."_"..index);
0		self.TimerFrame[auraId][index] = frame;
		
0		frame:SetFrameStrata("LOW");
0		frame:Hide(); 
0		frame.TimerValue = 0;
		
0		frame.texture = frame:CreateTexture(nil,"BACKGROUND");
0		frame.texture:SetBlendMode("ADD");
0		frame.texture:SetAllPoints(frame);
0		frame.texture:SetTexture(self.Auras[auraId].Timer:GetTexture());
0		if (updatePing) then
			--self:ShowText("Creating Ping animation ", auraId, " ", index);
0			frame.PingAnimationGroup = frame:CreateAnimationGroup("Ping");
0			self:AddJumpScaleAndReturn(frame.PingAnimationGroup, 1.1, 1.1, 0.3, PowaMisc.AnimationFps, 1)
0			self:AddBrightenAndReturn(frame.PingAnimationGroup, 1.2, self.Auras[auraId].alpha, 0.3, PowaMisc.AnimationFps, 1);
		end
		
	end
	
4	function PowaAuras:CreateTimerFrameIfMissing(auraId, updatePing)
0		if (not self.TimerFrame[auraId]) then
			--self:Message("Creating missing TimerFrames for aura "..tostring(auraId));		
0			self.TimerFrame[auraId] = {};
0			self:CreateTimerFrame(auraId, 1, updatePing);
0			self:CreateTimerFrame(auraId, 2, updatePing);
		end
0		self:UpdateOptionsTimer(auraId);
0		return self.TimerFrame[auraId][1], self.TimerFrame[auraId][2];
	end
	
4	function PowaAuras:CreateStacksFrameIfMissing(auraId, updatePing)
0		if (not self.StacksFrames[auraId]) then
			--self:Message("Creating missing StacksFrame for aura "..tostring(auraId));		
0			local frame = CreateFrame("Frame", "StacksFrame"..auraId);
0			self.StacksFrames[auraId] = frame;
			
0			frame:SetFrameStrata("LOW");
0			frame:Hide(); 
			
0			frame.texture = frame:CreateTexture(nil,"BACKGROUND");
0			frame.texture:SetBlendMode("ADD");
0			frame.texture:SetAllPoints(frame);
0			frame.texture:SetTexture(self.Auras[auraId].Stacks:GetTexture());
0			if (updatePing) then
				--self:ShowText("Creating Ping animation ", auraId, " ", index);
0				frame.PingAnimationGroup = frame:CreateAnimationGroup("Ping");
0				self:AddJumpScaleAndReturn(frame.PingAnimationGroup, 1.1, 1.1, 0.3, PowaMisc.AnimationFps, 1)
0				self:AddBrightenAndReturn(frame.PingAnimationGroup, 1.2, self.Auras[auraId].alpha, 0.3, PowaMisc.AnimationFps, 1);
			end
		end
0		self:UpdateOptionsStacks(auraId);
0		return self.StacksFrames[auraId];
	end
	
	--- ----------------------------------------------------------------------------------------------- CREE LA LISTE DES CHECKS
	
4	function PowaAuras:CreateEffectLists()
2		self:UnitTestDebug("---CreateEffectLists---");
		
98		for k in pairs(self.AurasByType) do
96			self.AurasByType[k] = {};
		end
		
36		for auraId, aura in pairs(self.Auras) do
34			self:UnitTestDebug("AddEffect Aura=", aura.id, " off=", aura.off);
34			if (aura ~= nil and aura.off ~= true) then
				--print("Aura", aura.id);
30				self:UnitTestDebug("AddEffect Aura=", aura.id);
30				aura:AddEffect(auraId);
			end
		end 
	
2		if (PowaMisc.debug == true) then
0			for k in pairs(self.AurasByType) do
0				self:DisplayText(k .. " : " .. #self.AurasByType[k]);
			end
		end
	
	end
	
	
	--- ----------------------------------------------------------------------------------------------- Memorize les actions
4	function PowaAuras:MemorizeActions(actionIndex)
0		local imin, imax;
2		self:UnitTestDebug("---MemorizeActions---");
2		self:UnitTestDebug("ActionReady Auras=", #self.AurasByType.Actions);
2		if (#self.AurasByType.Actions == 0) then
0			return;
		end
		
		--- scan all the action buttons for slot changes
2		if (actionIndex == nil) then
2			self:UnitTestDebug("---Scan all Actionbuttons---");
2			imin = 1;
2			imax = 120;
			--- reset all action positions
5			for _, v in pairs(self.AurasByType.Actions) do
3				self.Auras[v].slot = nil;
			end
			
		else
0			imin = actionIndex;
0			imax = actionIndex;
		end
	
242		for i = imin, imax do
240			if (HasAction(i)) then
131				self:UnitTestDebug("---Button",i," Action Found---");
131				PowaAction_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
131			 	PowaAction_Tooltip:SetAction(i);
131				local text = PowaAction_TooltipTextLeft1:GetText();				
131				self:UnitTestDebug("tooltip text=",text);
131				if text and text ~= "" then
89					self:UnitTestDebug("| "..text.." |");
				end	
131				if (text~=nil and PowaAction_TooltipTextLeft1:IsShown()) then
240					for _, v in pairs(self.AurasByType.Actions) do
151						local actionAura = self.Auras[v];
151						self:UnitTestDebug("actionAura",v,actionAura.buffname, actionAura.ignoremaj);
151						if((actionAura.ignoremaj == true  and string.find(string.upper(text), string.upper(actionAura.buffname), 1, true)) or
145						   (actionAura.ignoremaj == false and string.find(text, actionAura.buffname, 1, true)) ) then --- slot found
6							actionAura.slot = i; --- remember the slot
6							self:UnitTestDebug("---------------------------------------");
6							self:UnitTestDebug("Actionname="..actionAura.buffname.." / Search in Tooltipstring="..text);
							--- remember the texture
6							local tempicon;
6							if (actionAura.owntex == true) then
0								getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0								tempicon = getglobal("PowaIconTexture"):GetTexture();
0								if (actionAura.icon ~= tempicon) then
0									actionAura.icon = tempicon;
								end
							end
6							if (actionAura.icon == "") then
0								getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0								actionAura.icon = getglobal("PowaIconTexture"):GetTexture();
							end
						end
					end
				end
131				PowaAction_Tooltip:Hide();
			end
		end
	end
	
	--- ----------------------------------------------------------------------------------------------- Memorize les actions
4	function PowaAuras:MemorizeActions2(actionIndex)
0		local imin, imax;
		--self:Debug("---MemorizeActions---");
0		if (#self.AurasByType.Actions == 0) then
0			return;
		end
		
		--- scan tout ou uniquement le slot qui a change
0		if (actionIndex == nil) then
			--self:ShowText("---Scan all Actionbuttons---");
0			imin = 1;
0			imax = 120;
			--- reset all action positions
0			for _, v in pairs(self.AurasByType.Actions) do
0				self.Auras[v].slot = nil;
			end
			
		else
0			imin = actionIndex;
0			imax = actionIndex;
		end
	
0		for i = imin, imax do
0			if (HasAction(i)) then
0				local type, id, subType, spellID = GetActionInfo(i);
0				local name, text;
0				if (type=="macro") then
0					name = GetMacroInfo(id);
				end
0				PowaAction_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0				PowaAction_Tooltip:SetAction(i);
0				text = PowaAction_TooltipTextLeft1:GetText();
0				PowaAction_Tooltip:Hide();
	
				--self:ShowText("---Button",i," Action Found---");
				--self:ShowText("tooltip text=",text);
				--if text and text ~= "" then
				--	self:ShowText("| "..text.." |");
				--end	
0				if (text~=nil) then
0					for _, v in pairs(self.AurasByType.Actions) do
0						local actionAura = self.Auras[v];
0						if (not actionAura.slot) then
							--self:ShowText("actionAura",v,actionAura.buffname, actionAura.ignoremaj);
0							if (self:MatchString(name, actionAura.buffname, actionAura.ignoremaj)
0							 or self:MatchString(text, actionAura.buffname, actionAura.ignoremaj)) then
0								actionAura.slot = i; --- remember the slot
								--self:ShowText("---------------------------------------");
								--self:ShowText("Name=", name, "Tooltip=", text, " Match=", actionAura.buffname);
								--- remember the texture
0								local tempicon;
0								if (actionAura.owntex == true) then
0									getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0									tempicon = getglobal("PowaIconTexture"):GetTexture();
0									if (actionAura.icon ~= tempicon) then
0										actionAura.icon = tempicon;
									end
0								elseif (actionAura.icon == "") then
0									getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0									actionAura.icon = getglobal("PowaIconTexture"):GetTexture();
								end
							end
						end
					end
				end
			end
		end
	end
	
4	function PowaAuras:CheckMultiple(aura, reason, giveReason)
0		if (not aura.multiids or aura.multiids == "") then
0			if (not giveReason) then return true; end
0			return true, reason;
		end
0		if string.find(aura.multiids, "[^0-9/!]") then --- invalid input (only numbers and / allowed)
			--self:Debug("Multicheck. Invalid Input. Only numbers and '/' allowed.");
0			if (not giveReason) then return true; end
0			return true, reason;
		end
0		for pword in string.gmatch(aura.multiids, "[^/]+") do
0			local reverse;
0			if (string.sub(pword, 1, 1) == "!") then
0				pword = string.sub(pword, 2);
0				reverse = true;
			end
0			local k = tonumber(pword);
0			local linkedAura = self.Auras[k];
0			local state;
0			if linkedAura then
				--self:ShowText("Multicheck. Aura ",k);	
0				result, reason = linkedAura:ShouldShow(giveReason, reverse);
0				if (not result) then
0					if (not giveReason) then return false; end
0					return result, reason;
				end 				
			else
				--self:Debug("Multicheck. Non-existant Aura ID specified: "..pword);
			end
		end
0		if (not giveReason) then return true; end
0		return true, self:InsertText(self.Text.nomReasonMulti, aura.multiids);	
	end
	
4	function PowaAuras:TestThisEffect(auraId, giveReason, ignoreCascade)
0		self:UnitTestInfo("TestThisEffect", auraId);
		--self:ShowText("TestThisEffect", auraId);
	
0		local aura = self.Auras[auraId];
0		if (not aura) then
			--self:ShowText("Aura missing ", auraId);
0			return false, self.Text.nomReasonAuraMissing;
		end
0		if (aura.off) then
0			if (aura.Showing) then
				--self:ShowText("aura:Hide because off", auraId);
0				aura:Hide();
			end
0			if (not giveReason) then return false; end
0			return false, self.Text.nomReasonAuraOff;
		end
		
0		local debugEffectTest = PowaAuras.DebugCycle;
	
0		if (debugEffectTest) then
0			self:Message("----------------------------------");
0			self:Message("Test Aura for Hide or Show = ",auraId, " showing=",aura.Showing);
		end
		-- Prevent crash if class not set-up properly
0		if (not aura.ShouldShow) then
0			self:Message("ShouldShow nil! id= ",auraId)
0			if (not giveReason) then return false; end
0			return false, self.Text.nomReasonAuraBad;
		end
		
		--self:ShowText("Test Aura for Hide or Show = ",auraId, " showing=",aura.Showing);
0		aura.TimerInactiveDueToMulti = nil;
0		local shouldShow, reason = aura:ShouldShow(giveReason or debugEffectTest);
			
0		if (shouldShow) then
0			shouldShow, reason = self:CheckMultiple(aura, reason, giveReason or debugEffectTest);
0			if (not shouldShow) then
				--self:ShowText("TimerInactiveDueToMulti Aura ", aura.buffname, " (",auraId,")");
0				aura.TimerInactiveDueToMulti = true;
			end
0		elseif (aura.Timer and aura.CanHaveTimerOnInverse) then
0			local multiShouldShow = self:CheckMultiple(aura, reason, giveReason or debugEffectTest);
0			if (not multiShouldShow) then
				--self:ShowText("TimerInactiveDueToMulti Aura ", aura.buffname, " (",auraId,")");
0				aura.TimerInactiveDueToMulti = true;
			end
		end
0		if (debugEffectTest) then
0			self:Message("TestThisEffect ", aura.buffname, " (",auraId,") InactiveDueToState=", aura.InactiveDueToState, " ", reason);
		end
		
0		if shouldShow then
0			if (not aura.Active) then
0				if (debugEffectTest) then
0					self:Message("ShowAura ", aura.buffname, " (",auraId,") ", reason);
				end
				--self:ShowText("ShowAura ", aura.buffname, " (",auraId,")");
0				self:DisplayAura(auraId);
0				if (not ignoreCascade) then self:AddChildrenToCascade(aura); end
			end
0			aura.Active = true;
		else
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (aura.Showing) then
0				if (debugEffectTest) then
0					self:Message("HideAura ", aura.buffname, " (",auraId,") ", reason);
				end
				--self:ShowText("HideAura ", aura.buffname, " (",auraId,")");
0				self:SetAuraHideRequest(aura, secondaryAura);
			end
0			if (aura.Active and not ignoreCascade) then
0				self:AddChildrenToCascade(aura);
			end
0			aura.Active = false;
0			if (secondaryAura) then
0				secondaryAura.Active = false;
			end
		end
		
0		return shouldShow, reason;
	end
	
4	function PowaAuras:AddChildrenToCascade(aura, originalId)
0		if (not aura or not aura.Children) then return; end
0		for id in pairs(aura.Children) do
0			if (not self.Cascade[id] and id~=originalId) then
				--self:ShowText("Cascade adding aura."..id);
0				self.Cascade[id] = true;
0				self:AddChildrenToCascade(self.Auras[id], originalId or aura.id);
			end
		end
	end
	
4	function PowaAuras:SetAuraHideRequest(aura, secondaryAura)
		--self:ShowText("SetAuraHideRequest ", aura.buffname);
0		aura.HideRequest = true;
0		if (not aura.InvertTimeHides) then
0			aura.ForceTimeInvert = nil;
		end
0		if (secondaryAura and secondaryAura.Active) then
0			secondaryAura.HideRequest = true;
		end
	end
	
4	function PowaAuras:NewCheckBuffs()
0	   	self:UnitTestInfo("NewCheckBuffs");
	
		--if (self.DoCheck.All) then
		--	self:ShowText("self.DoCheck.All");
		--end
0		for auraType in pairs(self.AurasByType) do
0			if ((self.DoCheck[auraType] or self.DoCheck.All) and #self.AurasByType[auraType]>0) then
				--if (self.DoCheck.All) then
				--self:ShowText("TestAuraTypes ",auraType," DoCheck ", self.DoCheck[auraType], " All ", self.DoCheck.All, " #", #self.AurasByType[auraType]);
				--end
0				for _, v in pairs(self.AurasByType[auraType]) do
					--if (self.DoCheck.All) then
					--self:ShowText("TestThisEffect ",v);
					--end
0					self:TestThisEffect(v);
				end
0				self.DoCheck[auraType] = false;
			end
		end
	
0		self.DoCheck.All = false;
0		for spellId in pairs (PowaAuras.AoeAuraAdded) do
0			PowaAuras.AoeAuraAdded[spellId] = nil;
		end
	
	end
	
	--- -----------------------------------------------------------------------------------------------------------
4	function PowaAuras:ShowAuraForFirstTime(aura)
0		self:UnitTestInfo("ShowAuraForFirstTime", aura.id);
		--self:ShowText("ShowAuraForFirstTime ", aura.id);
0		local auraId = aura.id;
	
0		if (self.ModTest == false) then
0			if (aura.sound > 0) and (aura.customsound == "") then
0				PlaySound(aura.soundfile);
			end	
0			if not (aura.customsound == "") then
0				PlaySoundFile("Interface\\AddOns\\PowerAuras\\Sounds\\"..aura.customsound);
			end	
		end
		
0		local frame, texture = aura:CreateFrames();
	
0		if (aura.owntex == true) then
0			texture:SetTexture(aura.icon);
0		elseif (aura.wowtex == true) then
0			texture:SetTexture(self.WowTextures[aura.texture]);
0		elseif (aura.customtex == true) then
0			texture:SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura == true) then
0			texture:SetText(aura.aurastext);	  	
		else
0			texture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
	  
0		if (aura.randomcolor) then
0			texture:SetVertexColor(random(20,100)/100,random(20,100)/100,random(20,100)/100);	
		else
0			texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
	  
0		if (aura.texmode == 1) then
0			if (aura.textaura ~= true) then
0				texture:SetBlendMode("ADD");
			else
0				texture:SetShadowColor(0.0, 0.0, 0.0, 0.8);
0				texture:SetShadowOffset(2,-2);
			end
0			frame:SetFrameStrata("LOW");
		else
0			if (aura.textaura ~= true) then
0				texture:SetBlendMode("DISABLE");
			else
0				texture:SetShadowColor(0.0, 0.0, 0.0, 0.0);
0				texture:SetShadowOffset(0,0);
			end
0			frame:SetFrameStrata("BACKGROUND");
		end
	
0		if (aura.textaura ~= true) then
0		  if (aura.symetrie == 1) then 
0			texture:SetTexCoord(1, 0, 0, 1); --- inverse X
0		  elseif (aura.symetrie == 2) then 
0			texture:SetTexCoord(0, 1, 1, 0); --- inverse Y
0		  elseif (aura.symetrie == 3) then 
0			texture:SetTexCoord(1, 0, 1, 0); --- inverse XY
		  else 
0			texture:SetTexCoord(0, 1, 0, 1); 
		  end	
		end
	
0		frame.baseH = 256 * aura.size * (2-aura.torsion);
0		if (aura.textaura == true) then
0			local fontsize = math.min(33, math.max(10, math.floor(frame.baseH / 12.8)));
0			local checkfont = texture:SetFont(self.Fonts[aura.aurastextfont], fontsize, "OUTLINE, MONOCHROME");
0			if not checkfont then
0				texture:SetFont(STANDARD_TEXT_FONT, fontsize, "OUTLINE, MONOCHROME");
			end
0			frame.baseL = texture:GetStringWidth() + 5;
		else
0			frame.baseL = 256 * aura.size * aura.torsion;
		end
	
0		PowaAuras:InitialiseFrame(aura, frame);
	
0		if (aura.duration>0) then
0			aura.TimeToHide = GetTime() + aura.duration;
		else
0			aura.TimeToHide = nil;
		end
		
0		if (aura.InvertTimeHides) then
0			aura.ForceTimeInvert = nil;
		end
0		if (aura.Timer and aura.timerduration) then
0			aura.Timer.CustomDuration = aura.timerduration;
		end
	
0		if (aura.UseOldAnimations) then
		
0			frame.statut = 0;
		
0			if (aura.begin > 0) then 
0				frame.beginAnim = 1;
			else 
0				frame.beginAnim = 0; 
			end
	
0			if (aura.begin and aura.begin>0) then
0				aura.animation = self:AnimationBeginFactory(aura.begin, aura, frame);
			else
0				aura.animation = self:AnimationMainFactory(aura.anim1, aura, frame);
			end
		else
		
0			if (not aura.BeginAnimation) then aura.BeginAnimation = self:AddBeginAnimation(aura, frame); end
0			if (not aura.MainAnimation) then aura.MainAnimation = self:AddMainAnimation(aura, frame); end
0			if (not aura.EndAnimation) then aura.EndAnimation = self:AddEndAnimation(aura, frame); end
		
		end
	
0		self:UnitTestInfo("frame:Show()", aura.id);
		--self:ShowText("frame:Show()", aura.id, " ", frame);
	
0		frame:Show(); -- Show Aura Frame
		
0		if (not aura.UseOldAnimations) then
0			if (aura.BeginAnimation) then
0				aura.BeginAnimation:Play();
0			elseif (aura.MainAnimation) then
0				aura.MainAnimation:Play();
		
		
			end
		end
	
0		aura.Showing = true;
0		aura.HideRequest = false;
0		self:ShowSecondaryAuraForFirstTime(aura);	
	end
	
4	function PowaAuras:InitialiseFrame(aura, frame)
0		frame:SetAlpha(math.min(aura.alpha,0.99));
0		frame:SetPoint("CENTER",aura.x, aura.y);
0		frame:SetWidth(frame.baseL);
0		frame:SetHeight(frame.baseH);
	end
	
4	function PowaAuras:ShowSecondaryAuraForFirstTime(aura)
0		self:UnitTestInfo("ShowSecondaryAuraForFirstTime", aura.id);
	
0		if (aura.anim2 == 0) then --- no secondary aura
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (secondaryAura) then
0				secondaryAura:Hide();
			end
0			self.SecondaryAuras[aura.id] = nil;
0			self.SecondaryFrames[aura.id] = nil;
0			self.SecondaryTextures[aura.id] = nil;
0			return;
		end
	
		-- new secondary Aura
0		local secondaryAura = self:AuraFactory(aura.bufftype, aura.id, aura);
0		self.SecondaryAuras[aura.id] = secondaryAura;
		
0		secondaryAura.isSecondary = true;
0		secondaryAura.alpha = aura.alpha * 0.5;
0		secondaryAura.anim1 = aura.anim2;
0		secondaryAura.speed = aura.speed - 0.1; --- legerement plus lent
	
0		local auraId = aura.id;
0		local frame = self.Frames[auraId];
0		local texture = self.Textures[auraId];
	
0		local secondaryFrame, secondaryTexture = secondaryAura:CreateFrames();
		
0		if (aura.owntex == true) then
0			secondaryTexture:SetTexture(aura.icon);
0		elseif (aura.wowtex == true) then
0			secondaryTexture:SetTexture(self.WowTextures[aura.texture]);
0		elseif (aura.customtex == true) then
0			secondaryTexture:SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura == true) then
0			secondaryTexture:SetText(aura.aurastext);	  	
		else
0			secondaryTexture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
		
0		if (aura.randomcolor) then
0			if texture:GetObjectType() == "Texture" then
0				secondaryTexture:SetVertexColor( texture:GetVertexColor() );
0			elseif texture:GetObjectType() == "FontString" then
0				secondaryTexture:SetVertexColor(texture:GetTextColor());
			end
		else
0			secondaryTexture:SetVertexColor(aura.r,aura.g,aura.b);
		end
		
0		if (aura.texmode == 1) then
0			if (aura.textaura ~= true) then
0				secondaryTexture:SetBlendMode("ADD");
			end
0			secondaryFrame:SetFrameStrata("LOW");
		else
0			if (aura.textaura ~= true) then
0				secondaryTexture:SetBlendMode("DISABLE");
			end
0			secondaryFrame:SetFrameStrata("BACKGROUND");
		end
	
0		if not aura.textaura == true then
0			if (aura.symetrie == 1) then 
0				secondaryTexture:SetTexCoord(1, 0, 0, 1); --- inverse X
0			elseif (aura.symetrie == 2) then 
0				secondaryTexture:SetTexCoord(0, 1, 1, 0); --- inverse Y
0			elseif (aura.symetrie == 3) then 
0				secondaryTexture:SetTexCoord(1, 0, 1, 0); --- inverse XY
			else 
0				secondaryTexture:SetTexCoord(0, 1, 0, 1); 
			end
		end
	
0		secondaryFrame.baseL = frame.baseL;
0		secondaryFrame.baseH = frame.baseH;
0		secondaryFrame:SetPoint("CENTER",aura.x, aura.y);
0		secondaryFrame:SetWidth(secondaryFrame.baseL);
0		secondaryFrame:SetHeight(secondaryFrame.baseH);
	
	
	
0		if (aura.UseOldAnimations) then
	
0			secondaryFrame.statut = 1;
			
0			if (aura.begin > 0) then 
0				secondaryFrame.beginAnim = 2;
			else 
0				secondaryFrame.beginAnim = 0; 
			end
	
0			if (not aura.begin or aura.begin==0) then
0				secondaryAura.animation = self:AnimationMainFactory(aura.anim2, secondaryAura, secondaryFrame);
			else
0				secondaryFrame:SetAlpha(0.0); -- Hide secondary until primary begin animation finishes
			end
0			self:UnitTestInfo("secondaryFrame:Show()", aura.id);
0			secondaryFrame:Show(); -- Show Secondary Aura Frame
			--self:Message("Show #2");
		else	
0			if (not secondaryAura.MainAnimation) then secondaryAura.MainAnimation = self:AddMainAnimation(secondaryAura, secondaryFrame); end	
		
0			if (not aura.BeginAnimation) then
0				self:UnitTestInfo("secondaryFrame:Show()", aura.id);
0				secondaryFrame:Show(); -- Show Secondary Aura Frame
				--self:Message("Show #2");
0				if (secondaryAura.MainAnimation) then
0					secondaryAura.MainAnimation:Play();
				end
			end
	
		end
		
0		secondaryAura.Showing = true;
0		secondaryAura.HideRequest = false;
	end
	
4	function PowaAuras:DisplayAura(auraId)
0		self:UnitTestInfo("DisplayAura", auraId);
		--self:ShowText("DisplayAura aura ", auraId);
0		if (self.Initialising) then return; end   --- de-actived
	
0		local aura = self.Auras[auraId];
0		if (aura==nil or aura.off) then return; end
	
		--self:ShowText("DisplayAura aura ", aura.id);
		
0		self:ShowAuraForFirstTime(aura);
	end
	
	
4	function PowaAuras:UpdateAura(aura, elapsed)
		--self:ShowText("UpdateAura ", aura.id, " ", elapsed);
0		if (aura == nil) then
0			self:UnitTestInfo("UpdateAura: Don't show, aura missing");
			--self:ShowText("UpdateAura: Don't show, aura missing");
0			return false;
		end
0		if (aura.off) then
0			if (aura.Showing) then
0				aura:Hide();
			end
0			if (aura.Timer and aura.Timer.Showing) then
0				aura.Timer:Hide(); -- Aura off
			end
0			return false;
		end
		
0		if (PowaAuras.DebugCycle) then
0			self:DisplayText("------Aura"..aura.id.."------");
0			self:DisplayText("aura.HideRequest=",aura.HideRequest);
0			self:DisplayText("aura.Showing=",aura.Showing);
		end
	
		--self:ShowText("aura.Showing ", aura.Showing);
0		if (aura.Showing) then
0			local frame = aura:GetFrame();
0			if (frame == nil) then
0				self:UnitTestInfo("UpdateAura: Don't show, frame missing");
				--self:ShowText("UpdateAura: Don't show, frame missing");
0				return false;
			end
			--self:ShowText("UpdateAura ", aura, " ", elapsed);
			
0			if (not aura.HideRequest and not aura.isSecondary and not self.ModTest and aura.TimeToHide) then
0				if (GetTime() >= aura.TimeToHide) then --- If duration has expired then hide this aura
0					self:UnitTestInfo("UpdateAura: Hide, duration expired");
					--self:ShowText("UpdateAura: Hide, duration expired");
0					self:SetAuraHideRequest(aura);
0					aura.TimeToHide = nil;
0					aura.Active = false;
				end
			end
			
0			if (aura.HideRequest) then
	
0				if (aura.Stacks) then
0					aura.Stacks:Hide();
				end
				--self:ShowText("Hide Requested for ",aura.id);
				
0				if (aura.UseOldAnimations) then
0					aura.animation = self:AnimationEndFactory(aura.finish, aura, frame);
0					if (not aura.animation) then
0						aura:Hide();
					end
				else
0					if (not aura.EndAnimation) then
0						aura:Hide();
					else
						--self:ShowText("Stop current animations ",aura.id);
0						if (aura.BeginAnimation and aura.BeginAnimation:IsPlaying()) then
0							aura.BeginAnimation:Stop();	
						end
0						if (aura.MainAnimation and aura.MainAnimation:IsPlaying()) then
0							aura.MainAnimation:Stop();
						end
						--self:ShowText("Play end animation ",aura.id);
0						aura.EndAnimation:Play();
					end
				end
			end
	
0			if (aura.UseOldAnimations) then
0				self:UpdateAuraAnimation(aura, elapsed, frame);
			end
	
0			if (self.ModTest and aura.Stacks and aura.Active) then
0				if (aura.Stacks.SetStackCount) then
0					aura.Stacks:SetStackCount(random(1,12));
				else
0					self:Message("aura.Stacks:SetStackCount nil!! ",aura.id);			
				end
			end
	
		end
	
0		aura.HideRequest = false;
0		return true;
	end
	
4	function PowaAuras:UpdateTimer(aura, timerElapsed, skipTimerUpdate)
	
0		if (not aura.Timer or skipTimerUpdate) then
0			return;
		end
		
0		if (PowaAuras.DebugCycle) then
0			self:DisplayText("aura.Timer id=",aura.id);
0			self:DisplayText("ShowOnAuraHide=",aura.Timer.ShowOnAuraHide);
0			self:DisplayText("ForceTimeInvert=",aura.ForceTimeInvert);
0			self:DisplayText("InvertTimeHides=",aura.InvertTimeHides);
0			self:DisplayText("ModTest=",self.ModTest);
0			self:DisplayText("aura.Active=",aura.Active);
		end
0		local timerHide;
0		if (aura.Timer.ShowOnAuraHide and not self.ModTest and (not aura.ForceTimeInvert and not aura.InvertTimeHides)) then
0			timerHide = aura.Active;
		else
0			timerHide = not aura.Active;
		end
0		if (PowaAuras.DebugCycle) then
0			self:Message("timerHide=",timerHide);
0			self:Message("InactiveDueToState=",aura.InactiveDueToState);
		end
0		if (timerHide or (aura.InactiveDueToState and not aura.Active) or aura.TimerInactiveDueToMulti) then
0			aura.Timer:Hide(); -- Request or state
0			if (aura.ForceTimeInvert) then
0				aura.Timer:Update(timerElapsed);				
			end
		else
0			aura.Timer:Update(timerElapsed);
		end
		
	end
	
4	function PowaAuras:UpdateAuraAnimation(aura, elapsed, frame)
0		if (not aura.Showing) then return; end
0		if (not aura.animation or elapsed==0) then return; end
0		if (aura.isSecondary) then
			-- Secondary animation only shows during primary main animation
0			primaryAnimation = PowaAuras.Auras[aura.id].animation;
0			if (primaryAnimation.IsBegin or primaryAnimation.IsEnd) then
0				return;
			end
		end
				
0		local finished = aura.animation:Update(math.min(elapsed, 0.03));
		
0		if (not finished) then return end
		
0		if (aura.animation.IsBegin) then
			--self:ShowText("Create main animation for primary aura");
0			aura.animation = self:AnimationMainFactory(aura.anim1, aura, frame);
			--self:ShowText("Create main animation for primary aura");
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (secondaryAura) then
0				local secondaryAuraFrame = self.SecondaryFrames[aura.id];
0				if (secondaryAuraFrame) then
					--self:ShowText("Create main animation for secondary aura");
0					secondaryAura.animation = self:AnimationMainFactory(aura.anim2, secondaryAura, secondaryAuraFrame);
					--self:ShowText("animation=", secondaryAura.animation);
				end
			end
0			return;
		end
		
0		if (aura.animation.IsEnd) then
0			aura:Hide();
		end
	
	end
	
4	function PowaAuras:OnUpdate(elapsed)
0		self:UnitTestInfo("OnUpdate", elapsed);
	
0		if (self.Initialising) then return; end 
			
0		self.ChecksTimer = self.ChecksTimer + elapsed;
0		self.TimerUpdateThrottleTimer = self.TimerUpdateThrottleTimer + elapsed;	
0		self.ThrottleTimer = self.ThrottleTimer + elapsed;
			
0		self.DebugTimer = self.DebugTimer + elapsed;
0		self.DebugCycle = false;
0		if (self.NextDebugCheck>0 and self.DebugTimer > self.NextDebugCheck) then
0			self.DebugTimer = 0;
0			PowaAuras:Message("========DebugCycle========"); --OK
0			self.DebugCycle = true;
		end
		
0		local checkAura = false;
0		if (PowaMisc.OnUpdateLimit == 0 or self.ThrottleTimer >= PowaMisc.OnUpdateLimit) then
0			checkAura = true;
0			self.ThrottleTimer = 0;
		end
				
0		if (not self.ModTest and (checkAura or self.DebugCycle)) then
	
		    --self:Message("OnUpdate ",elapsedCheck, " ", self.ChecksTimer);
0			self:UnitTestInfo("ChecksTimer", self.ChecksTimer, self.NextCheck);
0			if ((self.ChecksTimer > (self.NextCheck + PowaMisc.OnUpdateLimit))) then
0				self.ChecksTimer = 0;
0				local isMountedNow = (IsMounted()~=nil);
0				if (isMountedNow ~= self.WeAreMounted) then
0					self.DoCheck.All = true;
0					self.WeAreMounted = isMountedNow;
				end	
0				local isInVehicledNow = (UnitInVehicle("player")~=nil);
0				if (isInVehicledNow ~= self.WeAreInVehicle) then
0					self.DoCheck.All = true;
0					self.WeAreInVehicle = isInVehicledNow;
				end	
			end
	
0			if (self.PendingRescan and GetTime() >= self.PendingRescan) then
0				self:MemorizeActions();
0				self.DoCheck.All = true;
0				self.PendingRescan = nil;
			end
			
0			self:UnitTestInfo("Pending");
0			for id, cd in pairs(self.Pending) do	
				--self:ShowText("Pending check for ", id, " cd=", cd, " time=", GetTime());
0				if cd and cd >0 then
					--self:ShowText("Pending check for ", id, " cd=", cd, " time=", GetTime());
0					if (GetTime() >= cd) then
0						self.Pending[id] = nil;
						--self:ShowText("Pending TestThisEffect for ", id);
0						self:TestThisEffect(id);
					end
				else
0					self.Pending[id] = nil;
				end
			end
		
0			self:UnitTestInfo("DoCheck update");
0			for k ,v in pairs(self.DoCheck) do
				--self:Debug("DoCheck "..k.." = " .. tostring(v)  );
0				if (v) then
0					self:NewCheckBuffs();
0					break;
				end
			end
	
0			self:UnitTestInfo("Check Cascade auras");
0			for k in pairs(self.Cascade) do
				--self:ShowText("Checking Cascade aura."..k);
0				self:TestThisEffect(k, false, true);
			end
0			self.Cascade = {};		
		end
		
0		local skipTimerUpdate = false
0		local timerElapsed = 0;
0		if (PowaMisc.AnimationLimit > 0 and self.TimerUpdateThrottleTimer < PowaMisc.AnimationLimit) then
0			skipTimerUpdate = true and not self.DebugCycle;
		else
0			timerElapsed = self.TimerUpdateThrottleTimer;
0			self.TimerUpdateThrottleTimer = 0;
		end
	
		-- Update each aura (timers and stacks)
0		self:UnitTestInfo("Aura updates");
0		for _, aura in pairs(self.Auras) do
0			if (self:UpdateAura(aura, elapsed)) then
0				self:UpdateTimer(aura, timerElapsed, skipTimerUpdate);
			end
		end	
0		for _, aura in pairs(self.SecondaryAuras) do
0			self:UpdateAura(aura, elapsed);
		end	
		
0		self.ResetTargetTimers = false;
	
	end
	
4	function PowaAuras:SetupStaticPopups()
		
0		StaticPopupDialogs["POWERAURAS_IMPORT_AURA"] = {
0			text = self.Text.aideImport,
0			button1 = ACCEPT,
0			button2 = CANCEL,
0			hasEditBox = 1,
0			maxLetters = 2000,
0			hasWideEditBox = 1,
0			OnAccept = function(self)
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, self.wideEditBox:GetText());
0				self:Hide();
			end,
0			OnShow = function(self)
0				self.wideEditBox:SetFocus();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
0				PowaAuras:DisplayAura(PowaAuras.CurrentAuraId);
0				PowaAuras:UpdateMainOption();
			end,
0			EditBoxOnEnterPressed = function(self)
0				local parent = self:GetParent();
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, parent.wideEditBox:GetText());
0				parent:Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
		
0		StaticPopupDialogs["POWERAURAS_EXPORT_AURA"] = {
0			text = self.Text.aideExport,
0			button1 = OKAY,
0			button2 = EXIT,
0			hasEditBox = 1,
0			maxLetters = 2000,
0			hasWideEditBox = 1,
0			OnShow = function(self)
0				self.wideEditBox:SetText(PowaAuras.Auras[PowaAuras.CurrentAuraId]:CreateAuraString());
0				self.wideEditBox:SetFocus();
0				self.wideEditBox:HighlightText();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
			end,
0			EditBoxOnEnterPressed = function(self)
0				self:GetParent():Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};
	
		
0		StaticPopupDialogs["POWERAURAS_IMPORT_AURA_SET"] = {
0			text = self.Text.aideImportSet,
0			button1 = ACCEPT,
0			button2 = CANCEL,
0			hasEditBox = 1,
0			maxLetters =40000,
0			hasWideEditBox = 1,
0			OnAccept = function(self)
0				PowaAuras:CreateNewAuraSetFromImport(self.wideEditBox:GetText());
0				self:Hide();
			end,
0			OnShow = function(self)
0				self.wideEditBox:SetFocus();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
0				PowaAuras:DisplayAura(PowaAuras.CurrentAuraId);
0				PowaAuras:UpdateMainOption();
			end,
0			EditBoxOnEnterPressed = function(self)
0				local parent = self:GetParent();
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, parent.wideEditBox:GetText());
0				parent:Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
		
0		StaticPopupDialogs["POWERAURAS_EXPORT_AURA_SET"] = {
0			text = self.Text.aideExportSet,
0			button1 = OKAY,
0			button2 = EXIT,
0			hasEditBox = 1,
0			maxLetters = 40000,
0			hasWideEditBox = 1,
0			OnShow = function(self)
0				self.wideEditBox:SetText(PowaAuras:CreateAuraSetString());
0				self.wideEditBox:SetFocus();
0				self.wideEditBox:HighlightText();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
			end,
0			EditBoxOnEnterPressed = function(self)
0				self:GetParent():Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
	end
	
	--- ------------------------------------------------------------------------------------ GESTION DES OPTIONS
4	function PowaAuras:RedisplayAura(auraId) ---Re-show aura after options changed
	
0		if (self.Initialising) then return; end 
	
0		local aura = self.Auras[auraId];
0		if (not aura) then
0			return;
		end
		--self:ShowText("RedisplayAura auraId=", aura.id, " showing=", aura.Showing);
0		local showing = aura.Showing;
0		aura:Hide();
0		aura.BeginAnimation = nil;
0		aura.MainAnimation = nil;
0		aura.EndAnimation = nil;
0		aura:CreateFrames();
0		self.SecondaryAuras[aura.id] = nil; -- Force recreate
0		if (showing) then
0			self:DisplayAura(aura.id);
		end
	end
	
4	function PowaAuras:OptionTest()
	
		--self:Message("OptionTest for ", self.CurrentAuraId);
0		local aura = self.Auras[self.CurrentAuraId];
0		if (not aura or aura.buffname == "" or aura.buffname == " ") then
0			return;
		end
	
0		if (aura.Showing) then 
0			self:SetAuraHideRequest(aura);
0			aura.Active = false;
		else
0			aura.Active = true;
0			aura:CreateFrames();
0			self.SecondaryAuras[aura.id] = nil; -- Force recreate
0			self:DisplayAura(aura.id);
		end
	end
	
	
4	function PowaAuras:OptionHideAll(now) --- Hide all auras
		--self:ShowText("Hide All Frames now=", now);
0		for id, aura in pairs(self.Auras) do
0			aura.Active = false;
0			if now then
				--self:ShowText("Hide aura id=", id);
0				aura:Hide();
0				if (aura.Timer) then aura.Timer:Hide(); end -- Hide All
			else
0				self:SetAuraHideRequest(aura);
0				if (aura.Timer)  then aura.Timer.HideRequest  = true; end
			end
		end	
	
	end

==============================================================================
../PowerAurasAnimations.lua
==============================================================================
4	function PowaAuras:CalculateDuration(speed)
0		return 1.25 - speed / 2;
	end
	
4	function PowaAuras:AddBeginAnimation(aura, frame)
		--PowaAuras:ShowText("AddBeginAnimation begin=", aura.begin);
0		if (not aura.begin or aura.begin==PowaAuras.AnimationBeginTypes.None) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("Begin");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	local aura = self.aura;
		--	PowaAuras:ShowText("Begin OnPlay ", self:GetName(), " aura=", aura.id);
		--end);
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
0			local aura = self.aura;
			--PowaAuras:ShowText("Begin OnFinished ", self:GetName(), " forced=", forced, " aura=", aura.id);
0			if (aura and aura.MainAnimation) then
0				aura.MainAnimation:Play();
0				local secondaryAura = PowaAuras.SecondaryAuras[aura.id];
0				if (secondaryAura) then
0					local secondaryFrame = PowaAuras.SecondaryFrames[aura.id];
0					if (secondaryFrame) then
0						secondaryFrame:Show(); -- Show Secondary Aura Frame
0						if (secondaryAura.MainAnimation) then
0							secondaryAura.MainAnimation:Play();
						end
					end
				end
			end
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
		
		--PowaAuras:ShowText("AddBeginAnimation duration=", duration, " speed=", aura.speed);
0		if (aura.begin~=PowaAuras.AnimationBeginTypes.Bounce) then
0			self:AddJumpAlphaAndReturn(animationGroup, -math.min(aura.alpha,0.99), duration, PowaMisc.AnimationFps, 1);
		end
0		if (aura.begin==PowaAuras.AnimationBeginTypes.ZoomOut) then
0			self:AddJumpScaleAndReturn(animationGroup, 0.5, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.ZoomIn) then
0			self:AddJumpScaleAndReturn(animationGroup, 1.5, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.FadeIn) then
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -100, 0, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTopLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -75,75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTop) then
0			self:AddJumpTranslateAndReturn(animationGroup, 0, 100, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTopRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 75, 75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 100, 0, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottomRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 75, -75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottom) then
0			self:AddJumpTranslateAndReturn(animationGroup, 0, -100, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottomLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -75, -75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.Bounce) then
0			local u = 0;
0			local height = 100;
0			local efficiency = 0.6;
0			local a = 800 * aura.speed;
0			self:AddTranslation(animationGroup,  0,  height, 0, 0, 1);
0			local steps = 6;
0			local dT = math.sqrt(2*height/a);
0			local dt = dT / steps;
0			local ds = {};
0			for i = 1, steps do
0				ds[i] = (u*dt+a*dt*dt/2) / height;
0				u = u + a*dt;
				--self:ShowText(i, " ", ds[i]);
			end
			--self:ShowText("========");
0			local order = animationGroup:GetMaxOrder()+1;
0			while (height>2) do
0				if (height<100) then
					--self:ShowText("=UP=");
0					for i = 1, steps do
						--self:ShowText(order, " ", i, " ", ds[steps-i+1] * height);
0						self:AddTranslation(animationGroup, 0, ds[steps-i+1] * height, dt, PowaMisc.AnimationFps, order);
0						order = order + 1;
					end
				end
				--self:ShowText("=DOWN=");
0				for i = 1, steps do
					--self:ShowText(order, " ", i, " ", -ds[i] * height);
0					self:AddTranslation(animationGroup, 0, -ds[i] * height, dt, PowaMisc.AnimationFps, order);
0					order = order + 1;
				end
0				height = height * efficiency;
				--self:ShowText("\nHeight=", height);
			end
	
		end
	
0		if (aura.beginSpin) then
0			self:AddRotation(animationGroup, 360, math.max(duration/4, 0.25), PowaMisc.AnimationFps, animationGroup:GetMaxOrder()+1);
		end
		
0		return animationGroup;
	end
	
4	function PowaAuras:AddJumpTranslateAndReturn(animationGroup, dx, dy, duration, fps, order)
0		self:AddTranslation(animationGroup,  dx,  dy, 0, 0, order);
0		self:AddTranslation(animationGroup, -dx, -dy, duration, fps, order+1);
	end
	
4	function PowaAuras:AddJumpAlphaAndReturn(animationGroup, change, duration, fps, order)
0		self:AddAlpha(animationGroup,  change, 0, 0, order);
0		self:AddAlpha(animationGroup, -change, duration, fps, order+1);
	end
	
4	function PowaAuras:AddJumpScaleAndReturn(animationGroup, scale, duration, fps, order)
0		self:AddScale(animationGroup, scale, scale, 0, 0, order);
0		self:AddScale(animationGroup, 1/scale, 1/scale, duration, fps, order+1);
	end
	
4	function PowaAuras:AddMainAnimation(aura, frame)
0		if (not aura.anim1 or aura.anim1==PowaAuras.AnimationTypes.Static) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("Main");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("Main OnPlay ", self:GetName(), " aura=", self.aura.id);
		--end);
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
0			self:Play();
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
0		if (aura.isSecondary) then
0			duration = self:CalculateDuration(PowaAuras.Auras[aura.id].speed);
		end
0		if (aura.anim1==PowaAuras.AnimationTypes.Flashing) then
0			local deltaAlpha = math.min(aura.alpha * 0.5,0.99);
0			self:AddAlpha(animationGroup, -deltaAlpha, duration, PowaMisc.AnimationFps, 1);
0			self:AddAlpha(animationGroup,  deltaAlpha, duration, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Growing) then
0			self:AddScale(animationGroup, 1.2, 1.2, duration * 3, PowaMisc.AnimationFps, 1);
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration * 3, PowaMisc.AnimationFps, 1);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Pulse) then
0			self:AddScale(animationGroup, 1.1, 1.1, duration/2, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1/1.1, 1/1.1, duration/2, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 0.9, 0.9, duration/2, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 1/0.9, 1/0.9, duration/2, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Shrinking) then
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1.3, 1.3, 0, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 1/1.3, 1/1.3, duration * 3, PowaMisc.AnimationFps, 3);
0			self:AddAlpha(animationGroup, math.min(aura.alpha,0.99), duration * 3, PowaMisc.AnimationFps, 3);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.WaterDrop) then
0			self:AddMoveRandomLocation(animationGroup, 0, 20, -10, 0, 20, -10, 0, 0, false, aura.speed, 1);
0			self:AddScale(animationGroup, 0.85, 0.85, 0, 0, 1);
0			self:AddScale(animationGroup, 1.76, 1.76, duration * 4, PowaMisc.AnimationFps, 2);
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration * 4, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Electric) then
0			frame:SetAlpha(aura.alpha / 2); 
0			animationGroup.speed = aura.speed;
0			animationGroup:SetScript("OnPlay",
0			function(self)
0				self.Trigger = (random( 210 - self.speed * 100 ) < 4);
				--PowaAuras:ShowText("Electric OnPlay Trigger=", self.Trigger);
0			end);
0			self:AddMoveRandomLocation(animationGroup, 0, 10, -5, 0, 10, -5, 0.05, PowaMisc.AnimationFps, true, aura.speed, 1);
0			self:AddAlphaOnTrigger(animationGroup, 2, 0.05, PowaMisc.AnimationFps, 1);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Flame) then
0			local steps = 40;
0			local deltaAlpha = math.min(aura.alpha,0.99) / steps;
0			local stepDuration = duration * 4 / steps;
0			for i = 1, steps do
0				self:AddMoveRandomLocation(animationGroup, 1, 7, -4, 0, 2, 0, stepDuration, PowaMisc.AnimationFps, false, aura.speed, i);
0				self:AddAlpha(animationGroup, -deltaAlpha, stepDuration, PowaMisc.AnimationFps, i);
0				self:AddScale(animationGroup, 0.98, 0.98, stepDuration, PowaMisc.AnimationFps, i);
			end
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Bubble) then
0			local factor = 0.05;
0			local increase = 1 + factor;
0			local decrease = 1 - factor;
0			if (aura.isSecondary) then
0				increase = 1 - factor;
0				decrease = 1 + factor;
			end
0			self:AddScale(animationGroup, increase, decrease, duration/3, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1/increase,  1/decrease, duration/3, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, decrease, increase, duration/3, PowaMisc.AnimationFps, 3);
0			self:AddScale(animationGroup, 1/decrease,  1/increase, duration/3, PowaMisc.AnimationFps, 4);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Orbit) then
0			local maxWidth  = math.max(aura.x, -aura.x, 5);
0			local maxHeight = maxWidth * (1.6 - aura.torsion);
0			local i = 1;
0			local x = aura.x;
0			if (aura.isSecondary) then
0				x = -PowaAuras.Auras[aura.id].x;
0				frame:SetPoint("Center", x,  PowaAuras.Auras[aura.id].y);
			end
0			local y = aura.y;
0			local step = 9;
0			local angleOffset = 190;
0			if (x>0) then
0				angleOffset = 10;
			end
	
0			for angle = 0, 360-step, step do
0				local newx = maxWidth * cos(angle + angleOffset);
0				local newy = aura.y + maxHeight * sin(angle + angleOffset);
				--self:ShowText("Orbit ", i, " angle=", angle, " x=", string.format("%.2f", x), " y=", string.format("%.2f", y));
0				self:AddTranslation(animationGroup, newx-x, newy-y, duration * step / 30, PowaMisc.AnimationFps, i);
0				i = i + 1;
0				x = newx;
0				y = newy;
			end
		end
		
0		return animationGroup;
	end
	
4	function PowaAuras:AddMoveRandomLocation(animationGroup, xrangel, xrangeu, xoffset, yrangel, yrangeu, yoffset, duration, fps, useTrigger, speed, order)
0		local trans = animationGroup:CreateAnimation("Translation");
0		trans.speed = speed;
0		trans.xrangel = xrangel;
0		trans.xrangeu = xrangeu;
0		trans.yrangel = yrangel;
0		trans.yrangeu = yrangeu;
0		trans.xoffset = xoffset;
0		trans.yoffset = yoffset;
0		trans.useTrigger = useTrigger;
0		trans:SetOrder(order);
0		trans:SetDuration(duration);
0		trans:SetMaxFramerate(fps);
0		trans:SetScript("OnPlay",
0		function(self)
0			if (not self.useTrigger or self:GetParent().Trigger) then
0				self:SetOffset((random(self.xrangel,self.xrangeu) + self.xoffset) * self.speed, (random(self.yrangel,self.yrangeu) + self.yoffset) * self.speed);
			else
0				self:SetOffset(0,0);		
			end
0		end);
	end
	
4	function PowaAuras:AddAlphaOnTrigger(animationGroup, alphaTo, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha.alphaTo = alphaTo;
0		alpha:SetScript("OnPlay",
0		function(self)
0			if (self:GetParent().Trigger) then
0				self:SetChange(self.alphaTo);
			else
0				self:SetChange(0);
			end
0		end);
	end
	
4	function PowaAuras:AddTranslation(animationGroup, dx, dy, duration, fps, order)
0		local trans = animationGroup:CreateAnimation("Translation");
0		trans:SetOrder(order);
0		trans:SetDuration(duration);
		--trans:SetEndDelay(1);
0		trans:SetMaxFramerate(fps);
0		trans:SetOffset(dx, dy);
		--trans:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddTranslation OnPlay order=", self:GetOrder());
		--end);
	end
	
4	function PowaAuras:AddScale(animationGroup, xscaleTo, yscaleTo, duration, fps, order)
0		local scale = animationGroup:CreateAnimation("Scale");
0		scale:SetOrder(order);
0		scale:SetDuration(duration);
		--scale:SetEndDelay(5);
0		scale:SetMaxFramerate(fps);
0		scale:SetScale(xscaleTo, yscaleTo);
		--scale:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddScale OnPlay order=", self:GetOrder());
		--end);
		--scale:SetScript("OnFinished",
		--function(self)
		--	PowaAuras:ShowText("AddScale OnFinished order=", self:GetOrder());
		--end);
	end
	
4	function PowaAuras:AddAlpha(animationGroup, alphaTo, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetChange(alphaTo);
		--alpha:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddAlpha OnPlay order=", self:GetOrder());
		--end);
		--alpha:SetScript("OnFinished",
		--function(self)
		--	PowaAuras:ShowText("AddAlpha OnFinished order=", self:GetOrder());
		--end);
	end
	
4	function PowaAuras:AddFade(animationGroup, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			self:SetChange(-self:GetRegionParent():GetAlpha());
0		end);
	end
	
4	function PowaAuras:AddRelativeAlpha(animationGroup, change, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			local alpha = self:GetRegionParent():GetAlpha();
0			self:SetChange(math.min((alpha * change),0.99));
0		end);
	end
	
4	function PowaAuras:AddAbsoluteAlpha(animationGroup, targetAlpha, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			self:SetChange(math.min(targetAlpha,0.99) - self:GetRegionParent():GetAlpha());
0		end);
	end
	
4	function PowaAuras:AddBrightenAndReturn(animationGroup, change, targetAlpha, duration, fps, order)
0		self:AddRelativeAlpha(animationGroup,  change, 0, 0, order);
0		self:AddAbsoluteAlpha(animationGroup, targetAlpha, duration, fps, order+1);
	end
	
4	function PowaAuras:AddRotation(animationGroup, angle, duration, fps, order)
0		local rotation = animationGroup:CreateAnimation("Rotation");
0		rotation:SetOrder(order);
0		rotation:SetDuration(duration);
0		rotation:SetMaxFramerate(fps);
0		rotation:SetDegrees(angle);
	end
	
4	function PowaAuras:AddEndAnimation(aura, frame)
		--PowaAuras:ShowText("AddEndAnimation finish=", aura.finish);
0		if (not aura.finish or aura.finish==PowaAuras.AnimationEndTypes.None) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("End");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("EndAnimation OnPlay ", self:GetName(), " aura=", self.aura.id);
		--end);
		
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
			--PowaAuras:ShowText("EndAnimation OnFinished ", self:GetName(), " aura=", self.aura.id);
0			if (self.aura) then
0				self.aura:Hide(true);
			end
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
		--PowaAuras:ShowText("AddEndAnimation duration=", duration, " speed=", aura.speed);
0		if (aura.finish==PowaAuras.AnimationEndTypes.Fade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.GrowAndFade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0			self:AddScale(animationGroup, 2.0, 2.0, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.ShrinkAndFade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0			self:AddScale(animationGroup, 0.25, 0.25, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.SpinAndFade) then
0			self:AddFade(animationGroup, duration * 2, 20, 1);
0			self:AddRotation(animationGroup, 360 * 4, duration * 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.SpinShrinkAndFade) then
0			self:AddFade(animationGroup, duration * 2, 20, 1);
0			self:AddRotation(animationGroup, 360 * 4, duration * 2, 20, 1);
0			self:AddScale(animationGroup, 0.25, 0.25, duration * 2, 20, 1);		
		end
			
0		return animationGroup;				
	end

==============================================================================
../PowerAurasAuraClasses.lua
==============================================================================
	------------cPowaAura----------------
	--   cPowaAura is the base class and is not instanced directly, the other classes inherit properties and methods from it
	--===========================
	
4	cPowaAura = PowaClass(function(aura, id, base)
		--PowaAuras:ShowText("cPowaAura constructor id=", id, " base=", base);
34		aura.off = false;
		
34		aura.bufftype = PowaAuras.BuffTypes.Buff;
34		aura.buffname = "";
		
34		aura.texmode = 1;
34		aura.wowtex = false;
34		aura.customtex = false;
34		aura.textaura = false;
34		aura.owntex = false;
34		aura.realaura = 1;
34		aura.texture = 1;
34		aura.customname = "";
34		aura.aurastext = "";
34		aura.aurastextfont = 1;
34		aura.icon = "";
	
34		aura.timerduration = 0;
		
		-- Sound Settings
34		aura.sound = 0;
34		aura.soundfile = "";
34		aura.customsound = "";	
		
		-- Animation Settings
34		aura.begin = 0;
34		aura.anim1 = 1;
34		aura.anim2 = 0;
34		aura.speed = 1.00;
34		aura.finish = 1;
34		aura.isSecondary = false;
34		aura.beginSpin = false;
	
34		aura.duration = 0;
		
		-- Appearance Settings
34		aura.alpha = 0.75;
34		aura.size = 0.75;
34		aura.torsion = 1;
34		aura.symetrie = 0;
34		aura.x = 0;
34		aura.y = -30;
34		aura.randomcolor = false;
34		aura.r = 1.0;
34		aura.g = 1.0;
34		aura.b = 1.0;
		
34		aura.inverse = false;
34		aura.ignoremaj = true;
34		aura.exact = false;
	
34		aura.stacks = 0;
34		aura.stacksLower = 0;
34		aura.stacksOperator = PowaAuras.DefaultOperator;
	
34		aura.threshold = 50;
34		aura.thresholdinvert = false;
	
34		aura.mine = false;
	
34		aura.focus = false;
34		aura.target = false;
34		aura.targetfriend = false;
34		aura.raid = false;
34		aura.groupOrSelf = false;
34		aura.party = false;
	
34		aura.groupany = true;
34		aura.optunitn = false;
34		aura.unitn = "";
	
34		aura.inRaid = 0;
34		aura.inParty = 0;
34		aura.ismounted = false;
34		aura.isResting = false;
34		aura.inVehicle = false;	
34		aura.combat = 0;
34		aura.isAlive = true;
		
34		aura.spec1 = true;
34		aura.spec2 = true;
34		aura.gcd = false;
34		aura.stance = 10;
34		aura.multiids = "";
34		aura.tooltipCheck = "";
34		aura.UseOldAnimations = false;
	
34		if (base) then
2346			for k, v in pairs (aura) do
2312				local varType = type(v);
2312				if (varType == "string"
1972				 or varType == "boolean"
986				 or varType == "number"
0				 or k=="ShowOptions"
0				 or k=="CheckBoxes"
0				 or k=="OptionText"
0				 or k=="OptionTernary") then
2312					if (base[k] ~= nil) then
2168						aura[k] = base[k];
					end
				end
			end
		end
	
34		aura.Showing = false;
34		aura.Active = false;
34		aura.HideRequest = false;
34		aura.id = id;
		
34		if (aura.minDuration) then
0			aura.duration = math.max(aura.duration, aura.minDuration);
			--PowaAuras:ShowText("duration ", aura.duration, " minDuration ", aura.minDuration);
		end
		
		--PowaAuras:ShowText("base ", base);
	
34		if (base) then
34			local tempForSettings = PowaAuras.AuraClasses[base.bufftype];
			--PowaAuras:ShowText("base.Timer ", base.Timer, " isSecondary ", base.isSecondary, " TimerAllowed ", tempForSettings:TimerAllowed());
34			if (base.Timer and not aura.isSecondary and tempForSettings:TimerAllowed()) then
25				aura.Timer = cPowaTimer(aura, base.Timer);
			end				
			
34			if (base.Stacks and not base.isSecondary and tempForSettings:StacksAllowed()) then
8				aura.Stacks = cPowaStacks(aura, base.Stacks);
			end				
		end
		
		--if (not aura.Timer and not aura.isSecondary and base and (base.CanHaveTimerOnInverse or base.CanHaveTimer)) then
		--	aura.Timer = cPowaTimer(aura);
		--end
		
		--if (not aura.Stacks and not aura.isSecondary and base and base.CanHaveStacks) then
		--	aura.Stacks = cPowaStacks(aura);
		--end
		
38	end);
	
	
4	function cPowaAura:TimerShowing()
0		if (not self.Timer) then return false; end
0		return self.Timer.Showing;
	end
	
4	function cPowaAura:StacksShowing()
0		if (not self.Stacks) then return false; end
0		return self.Stacks.Showing;
	end
	
4	function cPowaAura:TimerAllowed()
		--PowaAuras:ShowText("TimerAllowed CanHaveTimer", self.CanHaveTimer, " inverse ", self.inverse, " CanHaveTimerOnInverse ", self.CanHaveTimerOnInverse);
29		return (self.CanHaveTimer and not self.inverse) or (self.CanHaveTimerOnInverse and self.inverse);
	end
	
4	function cPowaAura:StacksAllowed()
8		return (self.CanHaveStacks and not self.inverse);
	end
	
4	function cPowaAura:HideShowTabs()
0		if (self:TimerAllowed()) then 
0			PowaEditorTab3:Show();
0			if (not self.Timer) then
0				self.Timer = cPowaTimer(self);
			end
		else
0			PowaEditorTab3:Hide();
0			if (self.Timer) then
0				self.Timer.enabled = false;
			end
		end
0		if (self:StacksAllowed()) then 
0			PowaEditorTab5:Show();
0			if (not self.Stacks) then
0				self.Stacks = cPowaStacks(self);
			end
		else
0			PowaEditorTab5:Hide();
0			if (self.Stacks) then
0				self.Stacks.enabled = false;
			end
		end
	end
	
2	cPowaAura.TooltipOptions = {r=1.0, g=1.0, b=1.0};
4	function cPowaAura:AddExtraTooltipInfo(tooltip)
0		tooltip:SetText("|cffFFFFFF["..self.id.."] |r"..self.OptionText.typeText, self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
0		if (self.TooltipOptions.showBuffName and self.buffname ~= "???") then
0			tooltip:AddLine(self.buffname, nil, nil, nil, nil, 1);
		end
0		if (self.TooltipOptions.stacksColour) then
0			tooltip:AddLine(PowaAuras.Text.nomStacks..self.stacksOperator..self.stacks, self.TooltipOptions.stacksColour.r, self.TooltipOptions.stacksColour.g, self.TooltipOptions.stacksColour.b, 1);
		end
0		if (self.TooltipOptions.showThreshold) then
0			tooltip:AddLine(self.threshold, self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
		end
0		if (self.TooltipOptions.showStance) then
0			tooltip:AddLine(PowaAuras.PowaStance[self.stance], self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
		end
	end
	
4	function cPowaAura:CreateFrames()
0		local frame = self:GetFrame();
0		if (frame==nil) then
0			PowaAuras:UnitTestInfo("New Frames", self.id);
			--PowaAuras:UnitTestDebug("Creating frame for aura ", self.id);
			--- Frame --- 
0			frame = CreateFrame("Frame","Frame"..self.id, UIParent);
0			self:SetFrame(frame);
			
0			frame:SetFrameStrata("LOW");
0			frame:Hide();  
			
0			frame.baseL = 256;
0			frame.baseH = 256;
		end
		
0		local texture = self:GetTexture();
0		if (texture==nil) then
0			PowaAuras:UnitTestInfo("New Texture", self.id);
0			if self.textaura then
				--PowaAuras:UnitTestDebug("Creating new textstring texture for aura ", self.id);
0				texture = frame:CreateFontString(nil, "OVERLAY");
0				texture:ClearAllPoints();
0				texture:SetPoint("CENTER",frame);
0				texture:SetFont(STANDARD_TEXT_FONT, 20);
0				texture:SetTextColor(self.r,self.g,self.b);
0				texture:SetJustifyH("CENTER");
			else
0				texture = frame:CreateTexture(nil,"BACKGROUND");
0				texture:SetBlendMode("ADD");
0				texture:SetAllPoints(frame); --- attache la texture a la frame
0				frame.texture = texture;
			end
0			self:SetTexture(texture);
		else
0			if self.textaura then
				--PowaAuras:UnitTestDebug("textaura ", texture:GetObjectType());
0				if texture:GetObjectType() == "Texture" then
0					PowaAuras:UnitTestInfo("Converting to textstring texture for aura ", self.id);
					--PowaAuras:UnitTestDebug("Converting to textstring texture for aura ", self.id);
0					texture:SetTexture(nil);
0					texture = frame:CreateFontString(nil, "OVERLAY");
0					texture:ClearAllPoints();
0					texture:SetPoint("CENTER",frame);
0					texture:SetFont(STANDARD_TEXT_FONT, 20);
0					texture:SetTextColor(self.r,self.g,self.b);
0					texture:SetJustifyH("CENTER");
0					self:SetTexture(texture);
				end
			else
0				if texture:GetObjectType() == "FontString" then
0					PowaAuras:UnitTestInfo("Converting from textstring texture for aura ", self.id);
0					texture:SetText("");
0					texture = frame:CreateTexture(nil,"BACKGROUND");
0					texture:SetBlendMode("ADD");	
0					texture:SetAllPoints(frame); --- attache la texture a la frame
0					frame.texture = texture;
0					self:SetTexture(texture);
				end
			end
		end	
0		return frame, texture;
	end
	
	
4	function cPowaAura:Hide(skipEndAnimationStop)	
0		PowaAuras:UnitTestInfo("Aura.Hide ", self.id);
		--PowaAuras:ShowText("cPowaAura:Hide ", self.id);
		
0		if (self.BeginAnimation and self.BeginAnimation:IsPlaying()) then
0			self.BeginAnimation:Stop();
		end
0		if (self.MainAnimation and self.MainAnimation:IsPlaying()) then
0			self.MainAnimation:Stop();
		end
0		if (not skipEndAnimationStop and (self.EndAnimation and self.EndAnimation:IsPlaying())) then
0			self.EndAnimation:Stop();
		end
	
0		local frame = self:GetFrame();
	
0		if (frame) then
0			frame:Hide();
		end
	
0		if (not self.isSecondary) then
0			if (self.Timer and (PowaAuras.ModTest or self.off)) then self.Timer:Hide(); end -- Hide Aura
0			if (self.Stacks) then self.Stacks:Hide(); end
0			local frame = PowaAuras.Frames[self.id];
0			if (frame) then
0				frame:Hide();
			end
0			local secondaryAura = PowaAuras.SecondaryAuras[self.id];
0			if (secondaryAura) then
0				secondaryAura:Hide();
			end
		end
	
0		self.Showing = false;
	end
	
4	function cPowaAura:AddEffect(i)
3		table.insert(PowaAuras.AurasByType[self.AuraType], i);
	end
	
4	function cPowaAura:IsPlayerAura()
1		return 	(not self.target) 
1			and (not self.targetfriend)
1			and (not self.party)
1			and (not self.raid) 
1			and (not (self.groupOrSelf and (GetNumPartyMembers()>0 or GetNumRaidMembers()>0))) 
1			and (not self.focus)
1			and (not self.optunitn);
	end
	
4	function cPowaAura:ShowTimerDurationSlider()
0		return false;
	end
	
4	function cPowaAura:CheckState(giveReason)
		
		--- player aura but player is dead
1		if (self:IsPlayerAura() and ((PowaAuras.WeAreAlive == true and self.isAlive == false) or (PowaAuras.WeAreAlive == false and self.isAlive == true))) then
0			if (not giveReason) then return false; end
0			if (PowaAuras.WeAreAlive == false) then
0				return false, PowaAuras.Text.nomReasonPlayerDead;
			else
0				return false, PowaAuras.Text.nomReasonPlayerAlive;
			end
		end
		
		--- target checks
1		if (not self.targetfriend or self.AuraType~="SpellAlert") then
1			if (self.target or self.targetfriend) then
0				if (UnitName("target") == nil) then
0					if (not giveReason) then return false; end
0					return false, PowaAuras.Text.nomReasonNoTarget;
				end
0				if (UnitName("target") == UnitName("player")) then
0					if (not giveReason) then return false; end
0					return false, PowaAuras.Text.nomReasonTargetPlayer;
				end		
0				local targetIsDead = UnitIsDead("target");
0				if ((targetIsDead and self.isAlive == true) or (not PowaAuras.targetIsDead and self.isAlive == false)) then
0					if (not giveReason) then return false; end
0					if (targetIsDead) then
0						return false, PowaAuras.Text.nomReasonTargetDead;
					end
0					return false, PowaAuras.Text.nomReasonTargetAlive;
				end
			end
						
			--- regarde si la cible est ennemie
1			if (self.target and self.targetfriend == false and UnitIsFriend("player","target")) then --- cible amie alors que faut pas
0				if (not giveReason) then return false; end
0				return false, PowaAuras.Text.nomReasonTargetFriendly;
			end
				
			--- regarde si la cible est amie
1			if (self.target == false and self.targetfriend and not UnitIsFriend("player","target")) then --- cible ennemie
0				if (not giveReason) then return false; end
0				return false, PowaAuras.Text.nomReasonTargetNotFriendly;
			end
		end
		
		--- party
1		if (self.party and not ((GetNumPartyMembers() > 0) or (GetNumRaidMembers() > 0))) then --- partycheck yes, but not in party
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotInParty;
		end
	        
	    --- focus
1		if (self.focus and (UnitName("focus") == nil or UnitName("focus") == UnitName("player"))) then --- focuscheck
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNoFocus;
		end
	        
	    --- unit
1		if (self.optunitn and not ((GetNumPartyMembers() > 0) or (GetNumRaidMembers() > 0) or UnitExists("pet"))) then --- Unitn yes, but not in party/raid or with pet
0			if (not giveReason) then return false; end
0			return false, self:InsertText(self.Text.nomReasonNoCustomUnit, self.unitn);
		end
	        
	    --- raid
1		if (self.raid and numrm == 0) then --- raidcheck yes, but not in raid
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotInRaid;
		end
	
		--- dual spec check
1		if ((not self.spec2 and PowaAuras.ActiveTalentGroup == 2) or (not self.spec1 and PowaAuras.ActiveTalentGroup == 1)) then
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotForTalentSpec;
	    end
		
		--- mode combat
1		if ((PowaAuras.WeAreInCombat == true and self.combat == false) or (PowaAuras.WeAreInCombat == false and self.combat == true)) then
0			if (not giveReason) then return false; end
0			if (self.combat == true) then
0				return false, PowaAuras.Text.nomReasonNotInCombat;
			end
0			return false, PowaAuras.Text.nomReasonInCombat;		
		end
			
1		if ((PowaAuras.WeAreInRaid == true and self.inRaid == false) or (PowaAuras.WeAreInRaid == false and self.inRaid == true)) then
0			if (not giveReason) then return false; end
0			if (self.inRaid == true) then
0				return false, PowaAuras.Text.nomReasonNotInRaid;
			end
0			return false, PowaAuras.Text.nomReasonInRaid;		
		end
			
1		if ((PowaAuras.WeAreInParty == true and self.inParty == false) or (PowaAuras.WeAreInParty == false and self.inParty == true)) then
0			if (not giveReason) then return false; end
0			if (self.inParty == true) then
0				return false, PowaAuras.Text.nomReasonNotInParty;
			end
0			return false, PowaAuras.Text.nomReasonInParty;		
		end
			
1		if ((PowaAuras.WeAreMounted == true and self.ismounted == false) or (PowaAuras.WeAreMounted == false and self.ismounted == true)) then
0			if (not giveReason) then return false; end
0			if (self.ismounted == true) then
0				return false, PowaAuras.Text.nomReasonNotMounted;
			end
0			return false, PowaAuras.Text.nomReasonMounted;		
		end
			
1		if ((PowaAuras.WeAreInVehicle == true and self.inVehicle == false) or (PowaAuras.WeAreInVehicle == false and self.inVehicle == true)) then
0			if (not giveReason) then return false; end
0			if (self.inVehicle == true) then
0				return false, PowaAuras.Text.nomReasonNotInVehicle;
			end
0			return false, PowaAuras.Text.nomReasonInVehicle;		
		end
	
		-- It's not dead it's restin'
1		if ((self.isResting==false and IsResting()==1 and not PowaAuras.WeAreInCombat) or (self.isResting==true and (IsResting()~=1))) then	
0			if (not giveReason) then return false; end
0			if (self.isResting == true) then
0				return false, PowaAuras.Text.nomReasonNotResting;
			end
0			return false, PowaAuras.Text.nomReasonResting;		
		end	
		
1		if (not giveReason) then return true; end
1		return true, PowaAuras.Text.nomReasonStateOK;
	end
	
4	function cPowaAura:ShouldShow(giveReason, reverse)
1		PowaAuras:UnitTestInfo("ShouldShow", self.id);
1		if (PowaMisc.Disabled) then
0			return false,  PowaAuras.Text.nomReasonDisabled;
		end
1		local stateResult, reason = self:CheckState(giveReason);	
1		if (not stateResult) then
0			self.InactiveDueToState = true;
0			return stateResult, reason;
		end
1		self.InactiveDueToState = false;
1		local result, reason = self:CheckIfShouldShow(giveReason);
1		if (result~=nil and (self.inverse or reverse) and not (self.inverse and reverse)) then
0			result = not result;
0			if (giveReason) then
0				reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonInverted, reason);
			end
		end
1		return result, reason;
	end
	
4	function cPowaAura:Display()
0		PowaAuras:Message("Aura Display id=", self.id); --OK
0		for k,v in pairs (self) do
0			PowaAuras:Message("  "..tostring(k).." = "..tostring(v)); --OK
		end
	end
	
4	function cPowaAura:GetFrame()
0		if (self.isSecondary) then
0			return PowaAuras.SecondaryFrames[self.id];
		end
0		return PowaAuras.Frames[self.id];
	end
	
4	function cPowaAura:GetTexture()
0		if (self.isSecondary) then
0			return PowaAuras.SecondaryTextures[self.id];
		end
0		return PowaAuras.Textures[self.id];
	end
	
4	function cPowaAura:SetFrame(frame)
0		if (self.isSecondary) then
0			PowaAuras.SecondaryFrames[self.id] = frame;
0			return;
		end
0		PowaAuras.Frames[self.id] = frame;
	end
	
4	function cPowaAura:SetTexture(texture)
0		if (self.isSecondary) then
0			PowaAuras.SecondaryTextures[self.id] = texture;
0			return;
		end
0		PowaAuras.Textures[self.id] = texture;
	end
	
4	function cPowaAura:GetSpellNameFromMatch(spellMatch)
0		local _, _,spellId = string.find(spellMatch, "%[(%d+)%]")
0		if (spellId) then		
0			local spellName, rank, spellIcon = GetSpellInfo(tonumber(spellId));
0			return spellName, spellIcon;
		end
0		return spellMatch;
	end
	
4	function cPowaAura:SetStacks(text)
0		local _, _,curStacksLower, curOperator, curStacks = string.find(text, "(%d*)(%D+)(%d*)")
	
0		if (curStacks == nil or curStacks == "") then curStacks = "0"; end
0		local stacks = tonumber(curStacks);
		--PowaAuras:Debug(stacks);
			
0		if (stacks ~= self.stacks) then
0			if (stacks > 100) or (stacks < 0) then stacks = 0; end
0			self.stacks = stacks or 0;
		end
		
0		if (curStacksLower == nil or curStacksLower == "") then curStacksLower = "0"; end
0		local stacksLower = tonumber(curStacksLower);
		--PowaAuras:Debug(stacksLower);
		
0		if (stacksLower ~= self.stacksLower) then
0			if (stacksLower > 100) or (stacksLower < 0) or (stacksLower > stacks) then stacksLower = 0; end
0			self.stacksLower = stacksLower or 0;
		end
		
0		if (curOperator ~= self.stacksOperator) then
0			if (not PowaAuras.allowedOperators[curOperator]) then
0				curOperator = PowaAuras.DefaultOperator;
			end	
0			self.stacksOperator = curOperator;
		end	
	end
	
4	function cPowaAura:Trim(s)
0	    return (string.gsub(s, "^%s*(.-)%s*$", "%1"));
	end
	
4	function cPowaAura:MatchSpell(spellName, spellTexture, textToFind)
0		if (spellName==nil or textToFind==nil) then
0			return false;
		end
0		if (textToFind=="*") then
0			return true;
		end
		--PowaAuras:Debug("  MatchSpell spellName   =",spellName);
		--PowaAuras:Debug("             spellTexture=",spellTexture);
		--PowaAuras:Debug("             textToFind  =",textToFind);
0		for pword in string.gmatch(textToFind, "[^/]+") do
0			pword = self:Trim(pword);
0			if (string.len(pword)>0) then
0				local textToSearch;
0				local textureMatch;
0				if string.find(pword, "_") then
0					 _, _,textToSearch = string.find(spellTexture, "([%w_]*)$")
				else
0					textToSearch = spellName;
0					pword, textureMatch = self:GetSpellNameFromMatch(pword);
				end
				--PowaAuras:Debug("textureMatch=", textureMatch);
0				if (not textureMatch or textureMatch==spellTexture) then
0					if (textToSearch) then
0						if (self.ignoremaj) then
0							textToSearch = string.upper(textToSearch)
0							pword = string.upper(pword);
						end
						--PowaAuras:Debug("pword=", pword);
						--PowaAuras:Debug("search=", textToSearch);
0						if (self.exact) then
							--PowaAuras:Debug("exact=", (textToSearch == pword));
0							if (textToSearch == pword) then
0								return true;
							end
						else
							--PowaAuras:Debug("find=", string.find(textToSearch, pword, 1, true));
0							if (string.find(textToSearch, pword, 1, true)) then
0								return true;
							end
						end
					end
				end
			end
		end
	
0		return nil;
	end
	
4	function cPowaAura:MatchText(textToSearch, textToFind)
0		if (textToSearch==nil or textToFind==nil) then
0			return false;
		end
0		if (textToFind=="*") then
0			return true;
		end
		--PowaAuras:Debug("MatchText textToSearch=",textToSearch," textToFind=",textToFind);
0		if (self.ignoremaj) then
0			textToFind = string.upper(textToFind);
0			textToSearch = string.upper(textToSearch);
		end
		--PowaAuras:Debug("MatchText textToSearch=",textToSearch," textToFind=",textToFind, " ignoremaj=", self.ignoremaj, " exact=", self.exact);
0		if (self.exact) then
0			return (textToSearch == textToFind);
		end
0		for pword in string.gmatch(textToFind, "[^/]+") do	
			--PowaAuras:Debug("pword=", pword," find=",string.find(textToSearch, pword, 1, true));
0			if (string.find(textToSearch, pword, 1, true)) then
0				return true;
			end
		end
0		return nil;
	end
	
4	function cPowaAura:CreateAuraString(keepLink)
0		local tempstr, varpref= "", "";
0		for k, v in pairs (self) do
			--- multi condition checks not supported for export.
0			if (k == "multiids" and not keepLink) then
0				v = "";
			end
0			local varType = type(v);
0			if (varType == "string" or varType == "boolean" or varType == "number") then
0				tempstr = tempstr..k..":"..string.sub(varType,1,2)
0				if (varType == "string") then
0					tempstr = tempstr..v;
				else
0					tempstr = tempstr..tostring(v);
				end
0				tempstr = tempstr.."; ";
			end
		end
0		if (self.Timer and self.Timer.enabled) then
0			for k, v in pairs (self.Timer) do
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					tempstr = tempstr.."timer."..k..":"..string.sub(varType,1,2);
0					if (varType == "string") then
0						tempstr = tempstr..v;
					else
0						tempstr = tempstr..tostring(v);
					end
0					tempstr = tempstr.."; ";
				end
			end
		end
0		if (self.Stacks and self.Stacks.enabled) then
0			for k, v in pairs (self.Stacks) do
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					tempstr = tempstr.."stacks."..k..":"..string.sub(varType,1,2);
0					if (varType == "string") then
0						tempstr = tempstr..v;
					else
0						tempstr = tempstr..tostring(v);
					end
0					tempstr = tempstr.."; ";
				end
			end
		end
	
0		if tempstr and tempstr ~= "" then
0			tempstr = strtrim(tempstr);
0			tempstr = string.sub(tempstr, 1, string.len(tempstr)-1);
		end
		--PowaAuras:Debug("Aura-string length: "..tostring(string.len(tempstr)));
0		return tempstr;
	end
	
4	function cPowaAura:GetUnit()
0		if (self.target or self.targetfriend) then
0			return "target";
0		elseif (self.focus) then
0			return "focus";
0		elseif (self.party) then
0			return "party";
0		elseif (self.raid) then
0			return "raid";
0		elseif (self.groupOrSelf) then
0			return "groupOrSelf";
0		elseif (self.optunitn) then
0			return self.unitn;
		else 
0			return "player";
		end	
0		return nil;
	end
	
4	function cPowaAura:CheckAllUnits(giveReason)
0		local unit = self:GetUnit();		
		--PowaAuras:Debug("on unit "..unit);
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
	
0		if unit == "party" then
0			for pm = 1, numpm do
0				unit = "party"..pm;
0				if self:CheckUnit(unit) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
0		elseif unit == "raid" then
0			for rm = 1, numrm do
0				unit = "raid"..rm;
0				if self:CheckUnit(unit) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
0		elseif  unit == "groupOrSelf" then
0			if (numrm>0) then
0				for rm = 1, numrm do
0					unit = "raid"..rm;
0					if self:CheckUnit(unit) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
					end
				end
0			elseif (numpm>0) then
0				for pm = 1, numpm do
0					unit = "party"..pm;
0					if self:CheckUnit(unit) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
					end
				end
0				if self:CheckUnit("player") then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
		else
0			if self:CheckUnit(unit) then
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].NoMatchReason, unit);
	end
	
4	function cPowaAura:CheckStacks(count)
0		local operator = self.stacksOperator or PowaAuras.DefaultOperator;
0		local stacks = self.stacks or 0;
0		local stacksLower = self.stacksLower or 0;
		--PowaAuras:Debug("Stack op=",operator," stacks=",stacks,"Stack Count=",count);
0		return    ((operator == "="  and stacks == 0)
0				or (operator == ">=" and count >= stacks)
0				or (operator == "<=" and count <= stacks)
0				or (operator == ">"  and count > stacks)
0				or (operator == "<"  and count < stacks)
0				or (operator == "="  and count == stacks)
0				or (operator == "-"  and count >= stacksLower and count <= stacks)
0				or (operator == "!"  and count ~= stacks));
	end
	
4	function cPowaAura:StacksText()
0		local stacksText = self.stacksOperator..tostring(self.stacks);
0		if (self.stacksOperator=="-") then
0			stacksText =  tostring(self.stacksLower)..stacksText;
		end
0		return stacksText;
	end
	
4	function cPowaAura:CheckTimerInvert()
0		if (PowaAuras.ModTest or self.Timer.InvertAuraBelow==nil or self.Timer.InvertAuraBelow==0 or self.InvertTest) then
0			return;
		end
	
0		local timeValue = 0;
0		if (self.Timer.DurationInfo and self.Timer.DurationInfo > 0) then
0			timeValue = math.max(self.Timer.DurationInfo - GetTime(), 0);
		end
		
0		if (PowaAuras.DebugCycle) then
0			PowaAuras:DisplayText("=================");
0			PowaAuras:DisplayText("CheckTimerInvert");
0			PowaAuras:DisplayText("id=",self.id);
0			PowaAuras:DisplayText("timeValue=",timeValue);
0			PowaAuras:DisplayText("InvertAuraBelow=",self.Timer.InvertAuraBelow);
0			PowaAuras:DisplayText("ForceTimeInvert=",self.ForceTimeInvert);
0			PowaAuras:DisplayText("InvertTimeHides=",self.InvertTimeHides);
		end
		
0		local oldForceTimeInvert = self.ForceTimeInvert;
0		if (timeValue and timeValue > 0 and ((not self.InvertTimeHides and timeValue<=self.Timer.InvertAuraBelow))
0										or (self.InvertTimeHides and timeValue>=self.Timer.InvertAuraBelow) ) then
0			self.ForceTimeInvert = true;
		else
0			self.ForceTimeInvert = nil;
		end
0		if (oldForceTimeInvert ~= self.ForceTimeInvert) then
0			self.InvertTest = true; -- To prevent infinite loop
			--PowaAuras:ShowText("Change in ForceTimeInvert=", self.ForceTimeInvert);
0			PowaAuras:TestThisEffect(self.id);
0			self.InvertTest = nil;
		end
	end
					
2	cPowaBuffBase = PowaClass(cPowaAura, {CanHaveTimer=true, CanHaveStacks=true, CanHaveInvertTime=true, InvertTimeHides=true});
	
4	function cPowaBuffBase:AddEffect(i)
	
23		if not self.target 
23	   and not self.targetfriend 
16	   and not self.party
16	   and not self.raid 
16	   and not self.groupOrSelf
16	   and not self.focus
13	   and not self.optunitn then --- self-buff
13			table.insert(PowaAuras.AurasByType.Buffs, i);
		end
23		if self.party then --- partybuff cible
0			table.insert(PowaAuras.AurasByType.PartyBuffs, i);
		end
23		if self.focus then --- focus buffs
0			table.insert(PowaAuras.AurasByType.FocusBuffs, i);
		end
23		if self.raid then --- raid buffs
0			table.insert(PowaAuras.AurasByType.RaidBuffs, i);
		end
23		if self.groupOrSelf then --- groupOrSelf buffs
3			table.insert(PowaAuras.AurasByType.GroupOrSelfBuffs, i);
		end
23		if self.optunitn then --- unit buffs
0			table.insert(PowaAuras.AurasByType.UnitBuffs, i);
		end
23		if (self.target or self.targetfriend) then --- target buff
7			table.insert(PowaAuras.AurasByType.TargetBuffs, i);
		end			
	end
	
4	function cPowaBuffBase:IsPresent(unittarget, s, giveReason, textToCheck)
	
		--PowaAuras:Debug("IsPresent on ",unittarget,"  buffid ",s," type", self.buffAuraType);
	
0		local auraName, _, auraTexture, count, _, _, expirationTime, caster = UnitAura(unittarget, s, self.buffAuraType);
		
0		if (auraName == nil) then return nil; end
	
		--PowaAuras:Debug("Aura=",auraName," count=",count," expirationTime=", expirationTime," caster=",caster);
	
0		if (not self:CompareAura(unittarget, s, auraName, auraTexture, textToCheck)) then
			--PowaAuras:Debug("CompareAura not found");
0			return false;
		end
		
0		local isMine = (caster~=nil) and UnitExists(caster) and UnitIsUnit("player", caster);
0		local bemine = self.mine;
		--PowaAuras:ShowText("Bemine=",bemine," isMine=",isMine);
0		if (bemine and isMine) or (not bemine) then
0			if (self:CheckStacks(count)) then
				--PowaAuras:ShowText("Present!");
0				if (self.Stacks) then
0					self.Stacks:SetStackCount(count);
				end			
0				if (self.Timer) then
0					self.Timer:SetDurationInfo(expirationTime);
0					self:CheckTimerInvert();
0					if (self.ForceTimeInvert) then
0						if (not giveReason) then return false; end
0						return false, PowaAuras.Text.nomReasonBuffPresentTimerInvert;
					end
				end
0				if (giveReason) then return true, PowaAuras.Text.nomReasonBuffFound; end
0				return true;
			else
0				if (giveReason) then return nil, PowaAuras:InsertText(PowaAuras.Text.nomReasonStacksMismatch, count, self:StacksText()); end
0				return nil;
			end
		end
		
0		return false;
	end	
	
4	function cPowaBuffBase:CheckTooltip(text, target, index)
0		if (text==nil or string.len(text) == 0) then
0			return true;
		end
	
		--PowaAuras:Debug("Search in tooltip for ",text);
	
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0		PowaAuras_Tooltip:SetUnitAura(target, index, self.buffAuraType);
		
0		for z = 1, PowaAuras_Tooltip:NumLines() do
			--PowaAuras:UnitTestDebug("Check tooltip line ",z);
0			local textlinel = getglobal("PowaAuras_TooltipTextLeft"..z);
0			local textl = textlinel:GetText();
0			local tooltipText = "";
0			if textl then
0				tooltipText = tooltipText..textl;
			end
0			local textliner = getglobal("PowaAuras_TooltipTextRight"..z);
0			local textr = textliner:GetText();
0			if textr then
0				tooltipText = tooltipText..textr;
			end
0			if (tooltipText ~= "") then
				--PowaAuras:UnitTestDebug("| "..text.." |");		
0				if (string.find(tooltipText, text, 1, true)) then
0					PowaAuras_Tooltip:Hide();
0					return true;
				end
			end
		end	
0		PowaAuras_Tooltip:Hide();
0		return false;
	end
	
4	function cPowaBuffBase:CompareAura(target, z, auraName, auraTexture, textToCheck)
		
		--PowaAuras:Debug("CompareAura",z," ",auraName, auraTexture);
		
0		if self:MatchSpell(auraName, auraTexture, textToCheck) then
			--PowaAuras:UnitTestDebug("Aura match found! ", self.id);
0			if (not self:CheckTooltip(self.tooltipCheck, target, z)) then
				--PowaAuras:UnitTestDebug("Tooltip no match found!");
0				return false;
			end
0			local tempicon;
0			if (self.owntex == true) then
0				getglobal("PowaIconTexture"):SetTexture(auraTexture);
0				tempicon = getglobal("PowaIconTexture"):GetTexture();
0				if (self.icon ~= tempicon) then
0					self.icon = tempicon;
				end
			end
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture(auraTexture);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			 return true;	
		end
0		return false;
	end
	
4	function cPowaBuffBase:CheckAllAuraSlots(target, giveReason)
		--PowaAuras:UnitTestDebug("-------------");
		--PowaAuras:UnitTestDebug("CheckAllAuraSlots for ", target);
0		local present, reason;
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			for i = 1, 40 do
0				present, reason = self:IsPresent(target, i, giveReason, pword);
0				if (present) then
					--PowaAuras:UnitTestDebug("CheckAllAuraSlots Present!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffPresent, target, self.auraType, self.buffname);
				end	
			end
		end
0		if (present==nil) then
0			if (not giveReason) then return false; end
0			if (reason) then
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffFoundButIncomplete, target, self.auraType, self.buffname, reason);
			end
0			return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffMissing, target, self.auraType, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffMissing, target, self.auraType, self.buffname);
	end
	
4	function cPowaBuffBase:CheckGroup(group, count, giveReason)
0		for groupId = 1, count do
0			local present = self:CheckAllAuraSlots(group..groupId, false);
0			if (present) then
0				if (self.groupany == true) then
					--PowaAuras:UnitTestDebug("CheckGroup("..group..") Present!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonOneInGroupHasBuff, group..groupId, self.auraType, self.buffname);
				end
0			elseif (self.groupany==false) then
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNotAllInGroupHaveBuff, group, self.auraType, self.buffname);
			end
		end
0		if (self.groupany==false) then
			--PowaAuras:UnitTestDebug("CheckGroup("..group..") All Present!");
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonAllInGroupHaveBuff, group, self.auraType, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoOneInGroupHasBuff, group, self.auraType, self.buffname);
	end
	
4	function cPowaBuffBase:CheckIfShouldShow(giveReason)
0		PowaAuras:UnitTestInfo("CheckIfShouldShow ",self.buffAuraType," aura");
		--PowaAuras:Debug("Check " .. self.buffAuraType .. " aura");
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
		--- targets
0		if (self.target or self.targetfriend) then
			--PowaAuras:UnitTestDebug("on target or friendlytarget");
0			return self:CheckAllAuraSlots("target", giveReason);
		end	
		--- focus buff    
0		if self.focus then
			--PowaAuras:UnitTestDebug("on focus");
0			return self:CheckAllAuraSlots("focus", giveReason);
		end		
		--- unit buff    
0		if self.optunitn then
			--PowaAuras:UnitTestDebug("on unit "..self.unitn);
0			return self:CheckAllAuraSlots(self.unitn, giveReason);
		end		
		--- raid buff
0		if self.raid then
			--PowaAuras:UnitTestDebug("on raid size=", numrm);
0			return self:CheckGroup("raid", numrm, giveReason);
		end			
		--- partybuff    
0		if self.party then
			--PowaAuras:UnitTestDebug("on party size=", numpm);
0			return self:CheckGroup("party", numpm, giveReason);
		end
		
0		if (self.groupOrSelf) then --- Group or Self Buff
			--PowaAuras:UnitTestDebug("on Group or Self");
0			if (numrm>0) then
				--PowaAuras:UnitTestDebug("GoS on raidunit");
0				return self:CheckGroup("raid", numrm, giveReason); -- includes player
			end
0			if (numpm>0) then
				--PowaAuras:UnitTestDebug("GoS on partyunit or self");
0				local presentOnSelf, reason = self:CheckAllAuraSlots("player", giveReason);
0				if (presentOnSelf and self.groupany) then
0					if (not giveReason) then return true; end
0					return true, reason;
				end
0				if (not presentOnSelf and not self.groupany) then
0					if (not giveReason) then return false; end
0					return false, reason;
				end
0				return self:CheckGroup("party", numpm, giveReason);
			end
			--PowaAuras:UnitTestDebug("GoS on player");
0			return self:CheckAllAuraSlots("player", giveReason);
		end
				
		--- player buff    
	
		--PowaAuras:Debug("on player");
0		return self:CheckAllAuraSlots("player", giveReason);
	end
4	function cPowaBuffBase:ShowTimerDurationSlider()
0		return (self.target
0			 or self.targetfriend
0			 or self.party
0			 or self.focus
0			 or self.raid
0			 or self.optunitn);
	end
	
2	cPowaBuffBase.ShowOptions = {
2		["PowaBarBuffStacks"]=1,
2		["PowaGroupAnyButton"]=1,
2		["PowaBarTooltipCheck"]=1,
2	};
2	cPowaBuffBase.CheckBoxes = {
2		["PowaTargetButton"]=1,
2		["PowaPartyButton"]=1,
2		["PowaFocusButton"]=1,
2		["PowaRaidButton"]=1,
2		["PowaGroupOrSelfButton"]=1,
2		["PowaGroupAnyButton"]=1,
2		["PowaOptunitnButton"]=1,
2		["PowaInverseButton"]=1,
2		["PowaIngoreCaseButton"]=1,
2		["PowaOwntexButton"]=1,
2	};
	
2	cPowaBuff = PowaClass(cPowaBuffBase, {buffAuraType="HELPFUL", auraType="buff"});
2	cPowaBuff.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff, 
2						  exactTooltip=PowaAuras.Text.aideExact,
2						  typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Buff], 
2						  mineText=PowaAuras.Text.nomMine, mineTooltip=PowaAuras.Text.aideMine,
2						  targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,
2						};
	
2	cPowaBuff.TooltipOptions = {r=0.0, g=1.0, b=1.0, showBuffName=true, stacksColour={r=0.7,g=1.0,b=0.7}};
	
										  
2	cPowaDebuff = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="debuff"});
2	cPowaDebuff.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff2,
2							 exactTooltip=PowaAuras.Text.aideExact,
2							 typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Debuff],
2							 mineText=PowaAuras.Text.nomMine, mineTooltip=PowaAuras.Text.aideMine};
	
2	cPowaDebuff.TooltipOptions = {r=1.0, g=0.8, b=0.8, showBuffName=true, stacksColour={r=1.0,g=0.7,b=0.7}};						 
							 
2	cPowaTypeDebuff = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="debuff type"});
2	cPowaTypeDebuff.OptionText={
2							buffNameTooltip=PowaAuras.Text.aideBuff3,
2							exactTooltip=PowaAuras.Text.aideExact,
2							typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.TypeDebuff],
2							mineText=PowaAuras.Text.nomDispellable, mineTooltip=PowaAuras.Text.aideDispellable,
2							targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,
2							};
2	 cPowaTypeDebuff.ShowOptions = {["PowaGroupAnyButton"]=1,
2								   ["PowaBarTooltipCheck"]=1};						 
2	cPowaTypeDebuff.CheckBoxes = {["PowaTargetButton"]=1,
2								  ["PowaPartyButton"]=1,
2								  ["PowaFocusButton"]=1,
2								  ["PowaRaidButton"]=1,
2								  ["PowaGroupOrSelfButton"]=1,
2								  ["PowaGroupAnyButton"]=1,
2								  ["PowaOptunitnButton"]=1,
2								  ["PowaInverseButton"]=1,
2								  ["PowaIngoreCaseButton"]=1,
2								  };
2	cPowaTypeDebuff.TooltipOptions = {r=0.8, g=1.0, b=0.8, showBuffName=true};
	
4	function cPowaTypeDebuff:IsPresent(target, z)
0		local removeable;
0		if (self.mine) then
0			removeable = 1;
		end
0		local name, _, texture, count, typeDebuff, _, expirationTime = UnitDebuff(target, z, removeable);
0		if (not name) then
0			return false;
		end
		--PowaAuras:Debug("TypeDebuff IsPresent on ",target,"  buffid ",z,"  removeable ",removeable);
0		if (self.mine and typeDebuff==nil) then
0			return false;
		end
	
		--PowaAuras:UnitTestDebug("Debuff ",name," type ",typeDebuff);
			
0		local typeDebuffName;
0		if (typeDebuff ~= nil) then
0			typeDebuffName = PowaAuras.Text.DebuffType[typeDebuff];
		end
0		local typeDebuffCatName = PowaAuras.Text.DebuffCatType[PowaAuras.DebuffCatSpells[name]];
0		if (typeDebuffName == nil and typeDebuffCatName==nil) then
0			typeDebuffName = PowaAuras.Text.aucun;
		end
	
		--PowaAuras:UnitTestDebug("typeDebuffName ",typeDebuffName);
		--PowaAuras:UnitTestDebug("typeDebuffCatName ",typeDebuffCatName);
		--PowaAuras:UnitTestDebug("self.buffname ",self.buffname);
		
0		if self:MatchText(typeDebuffName, self.buffname)
0		or self:MatchText(typeDebuffCatName, self.buffname) then
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(count);
			end			
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture(texture);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(expirationTime);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
0					return false;
				end
			end
0			return true;
		end
	
0		return false;
	end
	
	
2	cPowaStealableSpell = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="stealable spell type", target=true, CanHaveTimer=true, CanHaveTimerOnInverse=false, CanHaveStacks=true, CanHaveInvertTime=true});
2	cPowaStealableSpell.OptionText={buffNameTooltip=PowaAuras.Text.aideStealableSpells, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.StealableSpell]};
2	cPowaStealableSpell.ShowOptions = {["PowaBarTooltipCheck"]=1};						 
2	cPowaStealableSpell.CheckBoxes={["PowaTargetButton"]=1,
2								["PowaFocusButton"]=1,
2								["PowaInverseButton"]=1,
2								["PowaIngoreCaseButton"]=1,
2								["PowaOwntexButton"]=1,
2								};
													  
2	cPowaStealableSpell.TooltipOptions = {r=0.8, g=0.8, b=0.2, showBuffName=true};
	
4	function cPowaStealableSpell:AddEffect(i)
0		if not self.target and not self.focus then --- any enemy casts
0			table.insert(PowaAuras.AurasByType.StealableSpells, i);
		end
0		if self.target then --- target casts
0			table.insert(PowaAuras.AurasByType.StealableTargetSpells, i);
		end
0		if self.focus then --- focus casts
0			table.insert(PowaAuras.AurasByType.StealableFocusSpells, i);
		end
	end
	
4	function cPowaStealableSpell:CheckUnit(unit)
0		if not UnitExists(unit) or UnitIsDead(unit) or not UnitCanAttack(unit, "player") then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit), " hostile=", UnitCanAttack(unit, "player"));
0			return false;
		end
		
0		for pword in string.gmatch(self.buffname, "[^/]+") do
	
0			for i = 1, 40 do
			
0				local auraName, _, auraTexture, count, typeDebuff, _, expirationTime, _, isStealable = UnitAura(unit, i);
				
0				if (auraName == nil) then return nil; end
	
				--PowaAuras:ShowText("Aura=",auraName," count=",count," expirationTime=", expirationTime," isStealable=",isStealable);
	
0				if (isStealable and self:CompareAura(unit, s, auraName, auraTexture, pword)) then
0					if (self.Stacks) then
0						self.Stacks:SetStackCount(count);
					end			
0					if (self.Timer) then
0						self.Timer:SetDurationInfo(expirationTime);
0						self:CheckTimerInvert();
0						if (self.ForceTimeInvert) then
0							return false;
						end
					end
0					return true;
				end	
			end
		end
		
		--PowaAuras:UnitTestDebug(unit, "  has stealable spell ", spellname, " no match");
0		return false;
	end	
	
4	function cPowaStealableSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check if target/focus is casting ", self.buffname);
		
		-- Check self target/focus first
0		if (self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStealablePresent, PowaAuras.Text.nomCheckTarget, self.buffname);
		end
0		if (self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStealablePresent, PowaAuras.Text.nomCheckFocus, self.buffname);
		end	
	
		--- Scan raid targets
0		local numrm = GetNumRaidMembers();
0		if numrm > 0 then
0			for i=1, numrm do
0				if (self:CheckUnit("raid"..i.."target")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetStealablePresent, i, self.buffname);
				end
			end
		else
		    -- Scan party targets
0			local numpm = GetNumPartyMembers();
0			if numpm > 0 then
0				for i=1, numpm do
0					if (self:CheckUnit("party"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetStealablePresent, i, self.buffname);
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoStealablePresent, self.buffname);
	end
	
2	cPowaPurgeableSpell = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="purgeable spell type", target=true, CanHaveTimer=true, CanHaveTimerOnInverse=false, CanHaveStacks=true, CanHaveInvertTime=true});
2	cPowaPurgeableSpell.OptionText={buffNameTooltip=PowaAuras.Text.aidePurgeableSpells, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.PurgeableSpell]};
2	cPowaPurgeableSpell.ShowOptions = {["PowaBarTooltipCheck"]=1};						 
2	cPowaPurgeableSpell.CheckBoxes={["PowaTargetButton"]=1,
2								["PowaFocusButton"]=1,
2								["PowaInverseButton"]=1,
2								["PowaIngoreCaseButton"]=1,
2								["PowaOwntexButton"]=1,
2								};
													  
2	cPowaPurgeableSpell.TooltipOptions = {r=0.2, g=0.8, b=0.2, showBuffName=true};
	
4	function cPowaPurgeableSpell:AddEffect(i)
0		if not self.target and not self.focus then --- any enemy casts
0			table.insert(PowaAuras.AurasByType.PurgeableSpells, i);
		end
0		if self.target then --- target casts
0			table.insert(PowaAuras.AurasByType.PurgeableTargetSpells, i);
		end
0		if self.focus then --- focus casts
0			table.insert(PowaAuras.AurasByType.PurgeableFocusSpells, i);
		end
	end
	
4	function cPowaPurgeableSpell:CheckUnit(unit)
0		if (not UnitExists(unit) or UnitIsDead(unit)) then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit));
0			return false;
		end
		
0		for pword in string.gmatch(self.buffname, "[^/]+") do
	
0			for i = 1, 40 do
			
0				local auraName, _, auraTexture, count, typeDebuff, _, expirationTime = UnitAura(unit, i, "CANCELABLE");
				
0				if (auraName == nil) then return nil; end
	
				--PowaAuras:ShowText(i," C Aura=",auraName," count=",count," expirationTime=", expirationTime);
	
0				if (auraName and self:CompareAura(unit, s, auraName, auraTexture, pword)) then
0					if (self.Stacks) then
0						self.Stacks:SetStackCount(count);
					end			
					--PowaAuras:Debug("CompareAura not found");
0					if (self.Timer) then
0						self.Timer:SetDurationInfo(expirationTime);
0						self:CheckTimerInvert();
0						if (self.ForceTimeInvert) then
0							return false;
						end
					end
0					return true;
				end	
			end
			
		end
			
		--PowaAuras:UnitTestDebug(unit, " has Purgeable spell ", spellname, " no match");
0		return false;
	end	
	
4	function cPowaPurgeableSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check if target/focus is casting ", self.buffname);
		
		-- Check self target/focus first
0		if (self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPurgeablePresent, PowaAuras.Text.nomCheckTarget, self.buffname);
		end
0		if (self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPurgeablePresent, PowaAuras.Text.nomCheckFocus, self.buffname);
		end	
	
		--- Scan raid targets
0		local numrm = GetNumRaidMembers();
0		if numrm > 0 then
0			for i=1, numrm do
0				if (self:CheckUnit("raid"..i.."target")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetPurgeablePresent, i, self.buffname);
				end
			end
		else
		    -- Scan party targets
0			local numpm = GetNumPartyMembers();
0			if numpm > 0 then
0				for i=1, numpm do
0					if (self:CheckUnit("party"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetPurgeablePresent, i, self.buffname);
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoPurgeablePresent, self.buffname);
	end
	
	-- This is not really AoE it is periodic damage, could be a DoT or a ground effect damage
2	cPowaAoE = PowaClass(cPowaAura, {AuraType = "Aoe"});
2	cPowaAoE.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff4, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.AoE]};
2	cPowaAoE.ShowOptions={["PowaBarTooltipCheck"]=1};				 
2	cPowaAoE.CheckBoxes={["PowaIngoreCaseButton"]=1};
2	cPowaAoE.TooltipOptions = {r=0.6, g=0.4, b=1.0, showBuffName=true};
4	function cPowaAoE:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check AoE");
	
0		for spellId, spell in pairs (PowaAuras.AoeAuraAdded) do
			--PowaAuras:ShowText("checking AoE "..spell.." ("..spellId..")");
0			if self:MatchSpell(spell, PowaAuras.AoeAuraTexture[spellId], self.buffname) then
				--PowaAuras:ShowText("Found! Showing=", self.Showing, " Active=", self.Active);
0				if (self.icon == "") then
0					PowaIconTexture:SetTexture("Interface\\icons\\Spell_fire_meteorstorm");
0					self.icon = PowaIconTexture:GetTexture();
				end
0				if (self.duration>0) then
0					self.TimeToHide = GetTime() + self.duration;
				end
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonAoETrigger, spell);
			end
		end
		
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonAoENoTrigger, self.buffname);
	end
	
2	cPowaEnchant = PowaClass(cPowaAura, {AuraType = "Enchants", CanHaveTimer=true, CanHaveTimerOnInverse=true, CanHaveStacks=true, CanHaveInvertTime=true, InvertTimeHides=true});
2	cPowaEnchant.OptionText = {buffNameTooltip=PowaAuras.Text.aideBuff5, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Enchant]};
2	cPowaEnchant.ShowOptions={["PowaBarBuffStacks"]=1};
2	cPowaEnchant.CheckBoxes={["PowaIngoreCaseButton"]=1,
2							 ["PowaInverseButton"]=1,
2							 ["PowaOwntexButton"]=1};
2	cPowaEnchant.TooltipOptions = {r=1.0, g=0.8, b=1.0, showBuffName=true};
	
4	function cPowaEnchant:CheckforEnchant(slot, enchantText, textToFind)
		--PowaAuras:Debug("Check enchant ("..enchantText..") active in slot",slot);
		--PowaAuras:ShowText("Check enchant ("..enchantText..") active in slot",slot);
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0		PowaAuras_Tooltip:SetInventoryItem("player", slot);
		--PowaAuras:UnitTestDebug("search in tooltip for ", textToFind);			
		--PowaAuras:ShowText("search in tooltip for ", textToFind);			
0		for z = 1, PowaAuras_Tooltip:NumLines() do
			--PowaAuras:UnitTestDebug("Check tooltip line ",z);
			--PowaAuras:ShowText("Check tooltip line ",z);
0			local textlinel = getglobal("PowaAuras_TooltipTextLeft"..z);
0			local textl = textlinel:GetText();
0			local text = "";
0			if textl then
0				text = text..textl;
			end
0			local textliner = getglobal("PowaAuras_TooltipTextRight"..z);
0			local textr = textliner:GetText();
0			if textr then
0				text = text..textr;
			end
0			if (text ~= "") then
				--PowaAuras:UnitTestDebug("| "..text.." |");
				--PowaAuras:ShowText("| "..text.." |");
0				if (self:MatchText(text, textToFind)) then
0					PowaAuras_Tooltip:Hide();
0					return true;
				end
			end
		end	
0		PowaAuras_Tooltip:Hide();
0		return false;		
	end
					
4	function cPowaEnchant:SetForEnchant(loc, slot, charges, index)
		--PowaAuras:Debug(loc,":found ",self.buffname," in the tooltip!");
0		if (self:CheckStacks(charges)) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture( GetInventoryItemTexture("player", slot) );
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end 
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(count);
			end			
0			return true;
		end
0		return false;
	end
			
4	function cPowaEnchant:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check weapon enchant");
		--PowaAuras:ShowText("Check weapon enchant");
0		local hasMainHandEnchant, mainHandExpiration, mainHandCharges, hasOffHandEnchant, offHandExpiration, offHandCharges = GetWeaponEnchantInfo();
		--PowaAuras:ShowText("mainHandExpiration=", mainHandExpiration);
	
0		local checkMain = true;
0		local checkOff = true;
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			if (pword==PowaAuras.Text.mainHand) then
0				checkMain = true;
0				checkOff = false;
0			elseif (pword==PowaAuras.Text.offHand) then
0				checkOff = true;
0				checkMain = false;
			else
0				if (hasMainHandEnchant and checkMain) then		
0					if (self:CheckforEnchant(16, PowaAuras.Text.mainHand, pword)) then
0						if (self:SetForEnchant("MH", 16, mainHandCharges, 1)) then
0							if (self.Stacks) then
0								self.Stacks:SetStackCount(mainHandCharges);
							end
0							PowaAuras.Pending[self.id] = GetTime() + mainHandExpiration / 1000;
0							if (self.Timer) then
0								self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0								self:CheckTimerInvert();
0								if (self.ForceTimeInvert) then
0									if (not giveReason) then return false; end
0									return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantMainInvert, self.buffname);
								end
							end
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantMain, self.buffname);
						end
					end
				end
0				if (hasOffHandEnchant and checkOff) then
0					if (self:CheckforEnchant(17, PowaAuras.Text.offHand, pword)) then
0						if (self:SetForEnchant("OH", 17, offHandCharges, 2)) then
0							if (self.Stacks) then
0								self.Stacks:SetStackCount(offHandCharges);
							end
0							PowaAuras.Pending[self.id] = GetTime() + offHandExpiration / 1000;
0							if (self.Timer) then
0								self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0								self:CheckTimerInvert();
0								if (self.ForceTimeInvert) then
0									if (not giveReason) then return false; end
0									return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantOffInvert, self.buffname);
								end
							end		
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantOff, self.buffname);
						end
					end	
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoEnchant, self.buffname);
	end
	
4	cPowaCombo = PowaClass(cPowaAura,
0	{
2		AuraType = "Combo", 
2		CanHaveStacks=true,
2		OptionText={buffNameTooltip=PowaAuras.Text.aideBuff6, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Combo]},
2		CheckBoxes={["PowaIngoreCaseButton"]=1,
2					},
2	});
	
								  					 
2	cPowaCombo.TooltipOptions = {r=1.0, g=1.0, b=0.0, showBuffName=true};
								  
	
4	function cPowaCombo:CheckIfShouldShow(giveReason)
0		if (not(PowaAuras.playerclass == "ROGUE" or (PowaAuras.playerclass=="DRUID" and GetShapeshiftForm()==3))) then
0			if (not giveReason) then return nil; end
0			return nil, PowaAuras.Text.nomReasonNoUseCombo;
		end
		--PowaAuras:Debug("Check Combos");
0		local nCombo = tostring(GetComboPoints("player"));
		--PowaAuras:UnitTestDebug("nCombo=", nCombo, " self.buffname=", self.buffname);
0		if self:MatchText(nCombo, self.buffname) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\inv_sword_48");
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(nCombo);
			end			
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonComboMatch, nCombo, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoComboMatch, nCombo, self.buffname);
	end
	
2	cPowaActionReady = PowaClass(cPowaAura, {AuraType = "Actions", CanHaveTimer=true, CanHaveTimerOnInverse=true, CooldownAura=true, CanHaveInvertTime=true});
2	cPowaActionReady.OptionText={
2								buffNameTooltip=PowaAuras.Text.aideBuff7,
2								exactTooltip=PowaAuras.Text.aideExact,
2								typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.ActionReady],
2								mineText=PowaAuras.Text.nomIgnoreUseable, mineTooltip=PowaAuras.Text.aideIgnoreUseable,
2								};
	
2	cPowaActionReady.CheckBoxes={["PowaIngoreCaseButton"]=1,
2								 ["PowaInverseButton"]=1,
2								 ["PowaOwntexButton"]=1,
2								};
					
								  					 
2	cPowaActionReady.TooltipOptions = {r=0.8, g=0.8, b=1.0, showBuffName=true};
								  
4	function cPowaActionReady:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Action / Button:", self.slot);
		--PowaAuras:ShowText("-----ACTION READY---------");
		--PowaAuras:ShowText("Slot=", self.slot);
1		if (not self.slot or self.slot == 0) then 
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonActionNotFound; 
		end 
	
1		local cdstart, cdduration, enabled = GetActionCooldown(self.slot);
		--PowaAuras:ShowText("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
1		if (not enabled) then
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(0);
			end
0			if (not giveReason) then return false; end
0			return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonActionlNotEnabled, spellName);
		end
	
		--PowaAuras:ShowText("self.mine= ",self.mine," usable= ",IsUsableAction(self.slot));
1		if (not self.mine) then
1			local usable, noMana = IsUsableAction(self.slot);
1			if (not usable) then
				--PowaAuras:ShowText("HIDE!!");
0				if (not giveReason) then return false; end
0				return true, PowaAuras.Text.nomReasonActionNotUsable;
			end
		end
		
		-- Ignore if this is just Global Cooldown
1		local globalCD = (cdduration > 0.2 and cdduration < 1.7);
		--PowaAuras:ShowText("globalCD=",globalCD);
1		if (globalCD) then
0			if (not giveReason) then return self.Showing; end
0			return self.Showing, PowaAuras:InsertText(PowaAuras.Text.nomReasonGlobalCooldown, spellName);
		end
		
1		if (cdstart == 0) then
			--PowaAuras:ShowText("SHOW!!");
1			if (not giveReason) then return true; end
1			return true, PowaAuras.Text.nomReasonActionReady;
		end
	
0		PowaAuras.Pending[self.id] = cdstart + cdduration;
	
0		local reason = PowaAuras.Text.nomReasonActionNotReady;
0		if (self.Timer) then
0			self.Timer:SetDurationInfo(cdstart + cdduration);
0			self:CheckTimerInvert();
0			if (self.ForceTimeInvert) then
0				if (not giveReason) then return true; end
0				return true, PowaAuras.Text.nomReasonActionNotReadyInvert;
			end
0			if (giveReason) then
0				reason = PowaAuras.Text.PowaAuras.Text.nomReasonActionNotUsable;
			end
		end		
		--PowaAuras:ShowText("HIDE!!");
0		if (not giveReason) then return false; end
0		return false, reason;
	end
	
4	function cPowaActionReady:ShowTimerDurationSlider()
0		return true;
	end
	
2	cPowaOwnSpell = PowaClass(cPowaAura, {AuraType = "OwnSpells", CanHaveTimer=true, CanHaveTimerOnInverse=true, CooldownAura=true, CanHaveInvertTime=true});
2	cPowaOwnSpell.OptionText={
2							buffNameTooltip=PowaAuras.Text.aideBuff8,
2							exactTooltip=PowaAuras.Text.aideExact,
2							typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.OwnSpell],
2							mineText=PowaAuras.Text.nomIgnoreUseable, mineTooltip=PowaAuras.Text.aideIgnoreUseable,
2							};
2	cPowaOwnSpell.ShowOptions={["PowaBarTooltipCheck"]=1};
2	cPowaOwnSpell.CheckBoxes={
2							  ["PowaInverseButton"]=1,
2							  ["PowaInverseButton"]=1,
2							  ["PowaIngoreCaseButton"]=1,
2							  ["PowaOwntexButton"]=1,
2							  };
							  
								  					 
2	cPowaOwnSpell.TooltipOptions = {r=1.0, g=0.6, b=0.2, showBuffName=true};
	
	
4	function cPowaOwnSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Spell:", self.buffname);
		--PowaAuras:ShowText("-----OWN SPELL---------");
		--PowaAuras:ShowText("Spell=", self.buffname);
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			local spellName, spellIcon = self:GetSpellNameFromMatch(pword);
0			if (self.icon == "") then
0				if (not spellIcon) then
0					_, _, spellIcon = GetSpellInfo(spellName);
				end
0				if (spellIcon) then
0					getglobal("PowaIconTexture"):SetTexture(spellIcon);
0					self.icon = getglobal("PowaIconTexture"):GetTexture();
				end
			end
0			local cdstart, cdduration, enabled = GetSpellCooldown(spellName);
			--PowaAuras:UnitTestDebug("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
			--PowaAuras:ShowText("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
0			if (not enabled) then
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotEnabled, spellName);
			end
			-- Ignore if this is just Global Cooldown
0			local globalCD = (cdduration > 0.2 and cdduration < 1.7);
			--PowaAuras:ShowText("globalCD= ",globalCD);
0			if (globalCD) then
0				if (PowaAuras.Pending[self.id]) then
					--PowaAuras:ShowText("Current Pending= ",PowaAuras.Pending[self.id]);
0					if (PowaAuras.Pending[self.id] < (cdstart + cdduration)) then
0						PowaAuras.Pending[self.id] = cdstart + cdduration;
						--PowaAuras:ShowText("Set GCD Pending= ",PowaAuras.Pending[self.id]);
					end
				end
0				if (not giveReason) then return self.Showing; end
0				return self.Showing, PowaAuras:InsertText(PowaAuras.Text.nomReasonGlobalCooldown, spellName);
			end
	
0			if (cdstart == 0) then
				--if (not self.mine) then
					--local usable, noPower = IsUsableSpell(spellName);
					--PowaAuras:ShowText("usable= ",usable," noPower= ",noPower);
					--if (usable and not noPower) then
					--	if (not giveReason) then return true; end
					--	return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellUsable, spellName);
					--else
					--	if (not giveReason) then return false; end
					--	return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotUsable, spellName);
					--end
				--end
				--PowaAuras:ShowText("SHOW!!");
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellUsable, spellName);
			end
			
0			PowaAuras.Pending[self.id] = cdstart + cdduration;
			--PowaAuras:ShowText("Set Pending= ",PowaAuras.Pending[self.id]);
	
0			if (giveReason) then
0				local reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotFound, self.buffname);
			end
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
					--PowaAuras:ShowText("SHOW2!!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotReady, spellName);
				end
				--PowaAuras:ShowText("Set DurationInfo= ",self.Timer.DurationInfo);
			end
0			if (giveReason) then
0				reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellOnCooldown, spellName);
			end
		end
		--PowaAuras:ShowText("HIDE!!");
0		if (not giveReason) then return false; end
0		return false, reason
	end
4	function cPowaOwnSpell:ShowTimerDurationSlider()
0		return true;
	end
	
2	cPowaAuraStats = PowaClass(cPowaAura);
2	cPowaAuraStats.OptionText={targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,};
	
2	cPowaAuraStats.ShowOptions={["PowaBarThresholdSlider"]=1,
2							    ["PowaThresholdInvertButton"]=1};					 
2	cPowaAuraStats.CheckBoxes={["PowaTargetButton"]=1,
2							   ["PowaPartyButton"]=1,
2							   ["PowaFocusButton"]=1,
2							   ["PowaRaidButton"]=1,
2							   ["PowaGroupOrSelfButton"]=1,
2							   ["PowaGroupAnyButton"]=1,
2							   ["PowaOptunitnButton"]=1,
2							   ["PowaInverseButton"]=1,};
	
								  
4	function cPowaAuraStats:AddEffect(i)
4	  if not self.target 
4	  and not self.targetfriend 
4	  and not self.party 
4	  and not self.raid 
4	  and not self.focus
4	  and not self.optunitn then
4			table.insert(PowaAuras.AurasByType[self.ValueName], i);
		end
4		if self.optunitn then
0			table.insert(PowaAuras.AurasByType["NamedUnit"..self.ValueName], i);
		end
4		if self.focus then     
0			table.insert(PowaAuras.AurasByType["Focus"..self.ValueName], i);
		end
4		if (self.target or self.targetfriend) then --- TargetHealth
0			table.insert(PowaAuras.AurasByType["Target"..self.ValueName], i);
		end
4		if self.party then
0			table.insert(PowaAuras.AurasByType["Party"..self.ValueName], i);
		end
4		if self.raid then
0			table.insert(PowaAuras.AurasByType["Raid"..self.ValueName], i);
		end
	end
4	function cPowaAuraStats:CheckUnit(unit)
		--PowaAuras:Debug("CheckUnit " .. unit);
0		if (not self:IsCorrectPowerType(unit)) then
			--PowaAuras:UnitTestDebug("Correct powertype " ,self:IsCorrectPowerType(unit));
0			return nil;
		end			
0		if (UnitIsDeadOrGhost(unit)) then
			--PowaAuras:UnitTestDebug("Correct powertype dead ", UnitIsDeadOrGhost(unit));
0			return false;
		end			
	
0		local curValue = self:UnitValue(unit);
0		local maxValue = self:UnitValueMax(unit);
		--PowaAuras:UnitTestDebug("curValue=", curValue, " maxValue=", maxValue);
0		if (curValue==nil or maxValue==nil) then return false; end
	
0		local curpercenthp = (curValue / maxValue) * 100;
0		if self.thresholdinvert then 
0			thresholdvalidate = (curpercenthp > self.threshold);
		else
0			thresholdvalidate = (curpercenthp < self.threshold)
		end	
0		if (thresholdvalidate) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\Spell_fire_meteorstorm");
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			return true;
		end
0		return false;
	end
	
4	function cPowaAuraStats:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Stat "..self.ValueName);
0		return self:CheckAllUnits(giveReason);
	end
	
	
2	cPowaHealth = PowaClass(cPowaAuraStats, {ValueName = "Health"});
2	cPowaHealth.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Health]};
2	cPowaHealth.TooltipOptions = {r=0.2, g=1.0, b=0.2, showThreshold=true};
4	function cPowaHealth:IsCorrectPowerType(unit)
0		return true;
	end
4	function cPowaHealth:UnitValue(unit)
0		return UnitHealth(unit);
	end
4	function cPowaHealth:UnitValueMax(unit)
0		return UnitHealthMax(unit);
	end
	
	
2	cPowaMana = PowaClass(cPowaAuraStats, {ValueName = "Mana"});
2	cPowaMana.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Mana]};
2	cPowaMana.TooltipOptions = {r=0.2, g=0.2, b=1.0, showThreshold=true};
4	function cPowaMana:IsCorrectPowerType(unit)
0		local powerType = UnitPowerType(unit);
0		return (powerType and powerType == 0);
	end
4	function cPowaMana:UnitValue(unit)
		--PowaAuras:Debug("Mana UnitValue for ", unit);
0		return UnitPower(unit);
	end
4	function cPowaMana:UnitValueMax(unit)
		--PowaAuras:Debug("Mana UnitValueMax for ", unit);
0		return UnitPowerMax(unit);
	end
	
2	cPowaEnergyRagePower = PowaClass(cPowaMana, {ValueName = "RageEnergy"});
2	cPowaEnergyRagePower.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.EnergyRagePower]};
2	cPowaEnergyRagePower.TooltipOptions = {r=1.0, g=0.4, b=0.0, showThreshold=true};
4	function cPowaEnergyRagePower:IsCorrectPowerType(unit)
0		local powerType = UnitPowerType(unit);
0		return (powerType and powerType > 0);
	end
	
2	cPowaAggro = PowaClass(cPowaAura, {ValueName = "Aggro"});
2	cPowaAggro.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Aggro]};
2	cPowaAggro.CheckBoxes={["PowaPartyButton"]=1,
2						   ["PowaRaidButton"]=1,
2						   ["PowaGroupOrSelfButton"]=1,
2						   ["PowaInverseButton"]=1};
2	cPowaAggro.TooltipOptions = {r=1.0, g=0.4, b=0.2};
4	function cPowaAggro:AddEffect(i)
	
0		if not self.target 
0	   and not self.targetfriend 
0	   and not self.party
0	   and not self.raid 
0	   and not self.focus
0	   and not self.optunitn then --- self Aggro
0		table.insert(PowaAuras.AurasByType.Aggro, i);
		end
0		if self.party then --- party Aggro
0			table.insert(PowaAuras.AurasByType.PartyAggro, i);
		end
0		if self.raid then --- raid Aggro
0			table.insert(PowaAuras.AurasByType.RaidAggro, i);
		end
	end
	
4	function cPowaAggro:CheckUnit(unit)
		--PowaAuras:Message(unit," UnitThreatSituation=", UnitThreatSituation(unit));
0		return (UnitThreatSituation(unit) or -1)> 0;
	end	
4	function cPowaAggro:CheckIfShouldShow(giveReason)
0		if (self.icon == "") then
0			getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\Ability_Warrior_EndlessRage");
0			self.icon = getglobal("PowaIconTexture"):GetTexture();
		end
		--PowaAuras:Debug("Check Aggro status");
0		return self:CheckAllUnits(giveReason);
	end
	
2	cPowaPvP = PowaClass(cPowaAura, {ValueName = "PvP"});
2	cPowaPvP.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.PvP],
2						 targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,};
2	cPowaPvP.CheckBoxes={["PowaTargetButton"]=1,
2						 ["PowaPartyButton"]=1,
2						 ["PowaGroupOrSelfButton"]=1,
2						 ["PowaRaidButton"]=1,};						
								  
2	cPowaPvP.TooltipOptions = {r=1.0, g=1.0, b=0.8};
	
4	function cPowaPvP:AddEffect(i)
0		if not self.target 
0	  and not self.targetfriend 
0	  and not self.party
0		and not self.raid 
0		and not self.focus
0	  and not self.optunitn then --- self pvp flag
0			table.insert(PowaAuras.AurasByType.PvP, i);
		end
0		if (self.target or self.targetfriend) then --- target flag
0			table.insert(PowaAuras.AurasByType.TargetPvP, i);
		end
0		if self.party then --- party pvp flagged
0			table.insert(PowaAuras.AurasByType.PartyPvP, i);
		end
0		if self.raid then --- raid pvp flagged
0			table.insert(PowaAuras.AurasByType.RaidPvP, i);
		end
	end
4	function cPowaPvP:CheckUnit(unit)
0		return UnitIsPVP(unit);
	end	
4	function cPowaPvP:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check PvP Flag");
0		return self:CheckAllUnits(giveReason);
	end
	
	
2	cPowaSpellAlert = PowaClass(cPowaAura, {AuraType = "SpellAlert", CanHaveInvertTime=true});
2	cPowaSpellAlert.OptionText={buffNameTooltip=PowaAuras.Text.aideSpells, 
2	                            exactTooltip=PowaAuras.Text.aideExact, 
2	                            typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.SpellAlert], 
2						        mineText=PowaAuras.Text.nomCanInterrupt, mineTooltip=PowaAuras.Text.aideCanInterrupt,
2						        targetFriendText=PowaAuras.Text.nomPlayerSpell, targetFriendTooltip=PowaAuras.Text.aidePlayerSpell,
2								};
2	cPowaSpellAlert.CheckBoxes={["PowaTargetButton"]=1,
2								["PowaFocusButton"]=1,
2								["PowaInverseButton"]=1,
2								["PowaIngoreCaseButton"]=1,
2								["PowaOwntexButton"]=1,
2								};
						
								  
2	cPowaSpellAlert.TooltipOptions = {r=0.4, g=0.4, b=1.0, showBuffName=true};
	
4	function cPowaSpellAlert:AddEffect(i)
0		if self.targetfriend then --- player
0			table.insert(PowaAuras.AurasByType.PlayerSpells, i);
		else
0			if not self.target and not self.focus then --- any enemy casts
0				table.insert(PowaAuras.AurasByType.Spells, i);
			end
0			if self.target then --- target casts
0				table.insert(PowaAuras.AurasByType.TargetSpells, i);
			end
0			if self.focus then --- focus casts
0				table.insert(PowaAuras.AurasByType.FocusSpells, i);
			end
		end
	end
	
4	function cPowaSpellAlert:CreateSpellFrame(endtime, spellicon)
0		local tempicon;
0		if (self.owntex == true) then
0			getglobal("PowaIconTexture"):SetTexture(spellicon);
0			tempicon = getglobal("PowaIconTexture"):GetTexture();
0			if (self.icon ~= tempicon) then
0				self.icon = tempicon;
			end
		end
0		if (self.icon == "") then
0		  getglobal("PowaIconTexture"):SetTexture(spellicon);
0		  self.icon = getglobal("PowaIconTexture"):GetTexture();
		end
	end
	
4	function cPowaSpellAlert:CheckUnit(unit)
0		if not UnitExists(unit) or UnitIsDead(unit) or (unit~="player" and not UnitCanAttack(unit, "player")) then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit), " hostile=", UnitCanAttack(unit, "player"));
0			return false;
		end
0		local spellname, _, _, spellicon, _, endtime 
0		local spellname, _, _, spellicon, _, endtime, _, _, interrupt = UnitCastingInfo(unit);
0		if not spellname then
0			spellname, _, _, spellicon, _, endtime, _, interrupt = UnitChannelInfo(unit);
		end
0		if not spellname then -- not casting
			--PowaAuras:UnitTestDebug(unit, " is not casting");
0			return false;
		end
		
0		if (self.mine and not interrupt) then
0			return false;
		end
			
0		if self:MatchSpell(spellname, spellicon, self.buffname, true) then
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(GetTime() + endtime/1000);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
0					return false;
				end
			end
0			self:CreateSpellFrame(endtime, spellicon);
0			return true;
		end
		
		--PowaAuras:UnitTestDebug(unit, " is casting ", spellname, " no match");
0		return false;
	end	
	
4	function cPowaSpellAlert:CheckIfShouldShow(giveReason)
		--PowaAuras:UnitTestDebug("Check for spell being cast ", self.buffname);
		--PowaAuras:ShowText("Check for spell being cast ", self.buffname);
		
		-- Check self target/focus first
0		if (self.target and self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonTargetCasting, self.buffname);
		end
0		if (self.focus and self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonFocusCasting, self.buffname);
		end	
	
0		if not self.target and not self.focus then
0			if (self.targetfriend) then
				--PowaAuras:ShowText("Check player");
0				if (self:CheckUnit("player")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonYouAreCasting, self.buffname);
				end	
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonYouAreNotCasting, self.buffname);
			end
			--- Scan raid targets
0			local numrm = GetNumRaidMembers();
0			if numrm > 0 then
0				for i=1, numrm do
0					if (self:CheckUnit("raid"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetCasting, i, self.buffname);
					end
				end
			else
				-- Scan party targets
0				local numpm = GetNumPartyMembers();
0				if numpm > 0 then
0					for i=1, numpm do
0						if (self:CheckUnit("party"..i.."target")) then
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetCasting, i, self.buffname);
						end
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoCasting, self.buffname);
	end
4	function cPowaSpellAlert:ShowTimerDurationSlider()
0		return true;
	end
	
2	cPowaStance = PowaClass(cPowaAura, {AuraType = "Stance"});
2	cPowaStance.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Stance]};
2	cPowaStance.ShowOptions={["PowaDropDownStance"]=1};
2	cPowaStance.CheckBoxes={["PowaInverseButton"]=1};
								  
2	cPowaStance.TooltipOptions = {r=1.0, g=0.6, b=0.2, showStance=true};
	
4	function cPowaStance:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Stance");
0		local nStance = GetShapeshiftForm(false);
		--PowaAuras:UnitTestDebug("nStance = "..tostring(nStance).." / self.stance = "..tostring(self.stance));
		--PowaAuras:ShowText("nStance = "..tostring(nStance).." / self.stance = "..tostring(self.stance));
0		if (nStance == self.stance)then
0			if (self.icon == "" and nStance>0) then
0				local icon = GetShapeshiftFormInfo(nStance);
0				getglobal("PowaIconTexture"):SetTexture(icon);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStance, nStance, self.stance);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoStance, nStance, self.stance);
	end
	
	-- Concrete Classes
2	PowaAuras.AuraClasses = {
2		[PowaAuras.BuffTypes.Buff]=cPowaBuff,
2		[PowaAuras.BuffTypes.Debuff]=cPowaDebuff,
2		[PowaAuras.BuffTypes.TypeDebuff]=cPowaTypeDebuff,
2		[PowaAuras.BuffTypes.AoE]=cPowaAoE,
2		[PowaAuras.BuffTypes.Enchant]=cPowaEnchant,
2		[PowaAuras.BuffTypes.Combo]=cPowaCombo,
2		[PowaAuras.BuffTypes.ActionReady]=cPowaActionReady,
2		[PowaAuras.BuffTypes.Health]=cPowaHealth,
2		[PowaAuras.BuffTypes.Mana]=cPowaMana,
2		[PowaAuras.BuffTypes.EnergyRagePower]=cPowaEnergyRagePower,
2		[PowaAuras.BuffTypes.Aggro]=cPowaAggro,
2		[PowaAuras.BuffTypes.PvP]=cPowaPvP,
2		[PowaAuras.BuffTypes.SpellAlert]=cPowaSpellAlert,
2		[PowaAuras.BuffTypes.Stance]=cPowaStance,
2		[PowaAuras.BuffTypes.OwnSpell]=cPowaOwnSpell,
2		[PowaAuras.BuffTypes.StealableSpell]=cPowaStealableSpell,
2		[PowaAuras.BuffTypes.PurgeableSpell]=cPowaPurgeableSpell,
2	}
	
	-- Instance concrete class based on type
4	function PowaAuras:AuraFactory(auraType, id, base)
34		local class = self.AuraClasses[auraType];
34		if (class) then
			--self:Message("AuraFactory "..tostring(auraType).." id="..tostring(id).." class="..tostring(class));
34			if (base == nil) then
0				base = {};
			end
34			base.bufftype = auraType;
34			return class(id, base);
		end
0		self:Message("AuraFactory unknown "..tostring(auraType).." id="..tostring(id)); --OK
0		return nil;
	end

==============================================================================
../PowerAurasBase.lua
==============================================================================
2	PowaAuras = {
2		Version = GetAddOnMetadata("PowerAuras", "Version");
		
2		CurrentAuraId = 1;
2		MaxAuras = 360;
2		NextCheck = 0.2; 
2		Tstep = 0.09765625;
2		NextDebugCheck = 0;
	
		-- Internal counters
2		DebugTimer = 0;
2		ChecksTimer = 0; 
2		ThrottleTimer = 0;
2		TimerUpdateThrottleTimer = 0;
	
2		VariablesLoaded = false;
2		SetupDone = false;
2		Initialising = true;
2		ModTest = false;
2		DebugCycle = false; 	
2		ResetTargetTimers = false;	
		
2		ActiveTalentGroup = GetActiveTalentGroup();
	
2		WeAreInCombat = false;
2		WeAreInRaid = false;
2		WeAreInParty = false;
2		WeAreMounted = false;
2		WeAreInVehicle = false;
2		WeAreAlive = true;
	
2		Pending = {}; --- Workaround for 'silent' cooldown end (no event fired)
2		Cascade = {}; -- Dependant auras that need checking
	
2		PowaStance = {[0] = "Humanoid"};
		
2		allowedOperators = {
2			["="] = true,
2			[">"] = true,
2			["<"] = true,
2			["!"] = true,
2			[">="] = true,
2			["<="] = true,
2			["-"] = true,
2		};
	
2		DefaultOperator = ">=";
	
2		MainOptionPage = 1;
2		CurrentAuraPage = 1;
		
2		maxtextures = 0;
	
2		MoveEffect = 0; -- 1 = copie / 2 = move
		
2		Auras = {};
2		SecondaryAuras = {};
2		Frames = {};
2		SecondaryFrames = {};
2		Textures = {};
2		SecondaryTextures = {};
2		TimerFrame = {};
2		StacksFrames = {};
		
2		Sound = {};
2		BeginAnimDisplay = {};
2		EndAnimDisplay = {};
2		Text = {};
2		Anim = {};
		
2		DebuffCatSpells = {};
		
2		AoeAuraAdded = {};
2		AoeAuraFaded = {};
2		AoeAuraTexture = {};
	
2		playerclass = "unknown",
		
2		Events = 
0		{
2			"ACTIONBAR_SLOT_CHANGED",
2			"ACTIONBAR_UPDATE_COOLDOWN",
2			"ACTIONBAR_UPDATE_USABLE",
2			"BAG_UPDATE_COOLDOWN",
2			"COMBAT_LOG_EVENT_UNFILTERED",
2			"PARTY_MEMBERS_CHANGED",
2			"PLAYER_ALIVE",
2			"PLAYER_DEAD",
2			"PLAYER_FOCUS_CHANGED",
2			"PLAYER_REGEN_DISABLED",
2			"PLAYER_REGEN_ENABLED",
2			"PLAYER_TALENT_UPDATE",
2			"PLAYER_TARGET_CHANGED",
2			"PLAYER_UNGHOST",
2			"PLAYER_UPDATE_RESTING",
2			"PLAYER_UPDATE_RESTING",
2			"RAID_ROSTER_UPDATE",
2			"SPELL_UPDATE_COOLDOWN",
2			"UNIT_AURA",
2			"UNIT_AURASTATE",
2			"UNIT_COMBO_POINTS",
2			"UNIT_ENERGY",
2			"UNIT_ENTERED_VEHICLE",
2			"UNIT_EXITED_VEHICLE",
2			"UNIT_FACTION",
2			"UNIT_HEALTH",
2			"UNIT_INVENTORY_CHANGED",
2			"UNIT_MANA",
2			"UNIT_MAXENERGY",
2			"UNIT_MAXHEALTH",
2			"UNIT_MAXMANA",
2			"UNIT_MAXRUNIC_POWER",
2			"UNIT_RAGE",
2			"UNIT_RUNIC_POWER",
2			"UNIT_SPELLCAST_CHANNEL_START",
2			"UNIT_SPELLCAST_CHANNEL_STOP",
2			"UNIT_SPELLCAST_CHANNEL_UPDATE",
2			"UNIT_SPELLCAST_DELAYED",
2			"UNIT_SPELLCAST_FAILED",
2			"UNIT_SPELLCAST_INTERRUPTED",
2			"UNIT_SPELLCAST_START",
2			"UNIT_SPELLCAST_STOP",
2			"UNIT_SPELLCAST_SUCCEEDED",
2			"UNIT_THREAT_SITUATION_UPDATE",
2			"UPDATE_SHAPESHIFT_FORM",
0			"UPDATE_SHAPESHIFT_FORMS";
2		};
		
2		DoCheck =
0		{
2			Buffs = false,
2			TargetBuffs = false,
2			PartyBuffs = false,
2			RaidBuffs = false,
2			GroupOrSelfBuffs = false,
2			UnitBuffs = false,
2			FocusBuffs = false,
	
2			Health = false,
2			TargetHealth = false,
2			PartyHealth = false,
2			RaidHealth = false,
2			FocusHealth = false,
2			NamedUnitHealth = false,
	
2			Mana = false,
2			TargetMana = false,
2			PartyMana = false,
2			RaidMana = false,
2			FocusMana = false,
2			NamedUnitMana = false,
	
2			RageEnergy = false,
2			TargetRageEnergy = false,
2			PartyRageEnergy = false,
2			RaidRageEnergy = false,
2			FocusRageEnergy = false,
2			UnitRageEnergy = false,
	
2			Others = false,
2			Combo = false,
2			Aoe = false,
	
2			Stance = false,
2			Actions = false,
2			Enchants = false,
	
2			All = false,
	
2			PvP = false,
2			PartyPvP = false,
2			RaidPvP = false,
2			TargetPvP = false,
	
2			Aggro = false,
2			PartyAggro = false,
2			RaidAggro = false,
	
2			Spells = false,
2			TargetSpells = false,
2			FocusSpells = false,
2			PlayerSpells = false,
			
2			OwnSpells = false,
2		};
	
2		BuffTypes =
0		{
2			Buff=1,
2			Debuff=2,
2			TypeDebuff=3,
2			AoE=4,
2			Enchant=5,
2			Combo=6,
2			ActionReady=7,
2			Health=8,
2			Mana=9,
2			EnergyRagePower=10,
2			Aggro=11,
2			PvP=12,
2			SpellAlert=13,
2			Stance=14,
2			OwnSpell=15,
2			StealableSpell=16,
2			PurgeableSpell=17,
2		};
	
		
2		AnimationBeginTypes =
0		{
2			None=0,
2			ZoomIn=1,
2			ZoomOut=2,
2			FadeIn=3,
2			TranslateLeft=4,
2			TranslateTopLeft=5,
2			TranslateTop=6,
2			TranslateTopRight=7,
2			TranslateRight=8,
2			TranslateBottomRight=9,
2			TranslateBottom=10,
2			TranslateBottomLeft=11,
2			Bounce=12,
2		};
		
2		AnimationEndTypes =
0		{
2			None=0,
2			GrowAndFade=1,
2			ShrinkAndFade=2,
2			Fade=3,
2			SpinAndFade=4,
2			SpinShrinkAndFade=5,
2		};
		
2		AnimationTypes =
0		{
2			Invisible=0,
2			Static=1,
2			Flashing=2,
2			Growing=3,
2			Pulse=4,
2			Bubble=5,
2			WaterDrop=6,
2			Electric=7,
2			Shrinking=8,
2			Flame=9,
2			Orbit=10,
2		};
		
			
2		AurasByType =
0		{
2			Buffs = {},
2			TargetBuffs = {},
2			PartyBuffs = {},
2			RaidBuffs = {},
2			GroupOrSelfBuffs = {},
2			UnitBuffs = {},
2			FocusBuffs = {},
			
2			Health = {},
2			TargetHealth = {},
2			FocusHealth = {},
2			PartyHealth = {},
2			RaidHealth = {},
2			NamedUnitHealth = {},
	
2			Mana = {},
2			TargetMana = {},
2			FocusMana = {},
2			PartyMana = {},
2			RaidMana = {},
2			NamedUnitMana = {},
	
2			RageEnergy = {},
2			TargetRageEnergy = {},
2			PartyRageEnergy = {},
2			RaidRageEnergy = {},
2			FocusRageEnergy = {},
2			UnitRageEnergy = {},
	
2			Combo = {},
2			Aoe = {},
	
2			Stance = {},
2			Actions = {},
2			Enchants = {},
	
2			PvP = {},
2			PartyPvP = {},
2			RaidPvP = {},
2			TargetPvP = {},
			
2			Aggro = {},
2			PartyAggro = {},
2			RaidAggro = {},
			
2			Spells = {},
2			TargetSpells = {},
2			FocusSpells = {},
2			PlayerSpells = {},
			
2			StealableSpells = {},
2			StealableTargetSpells = {},
2			StealableFocusSpells = {},
			
2			PurgeableSpells = {},
2			PurgeableTargetSpells = {},
2			PurgeableFocusSpells = {},
	
2			OwnSpells = {},
2		};
		
2		DebuffCatType =
0		{
2			CC = 1,
2			Silence = 2,
2			Snare = 3,
2			Root = 4,
2			Disarm = 5,
2			Stun = 6,
2			PvE = 10,
2		},
	
2		WowTextures = {
	
			-- auras types
2			[1] = "Spells\\AuraRune_B",
2			[2] = "Spells\\AuraRune256b",
2			[3] = "Spells\\Circle",
2			[4] = "Spells\\GENERICGLOW2B",
2			[5] = "Spells\\GenericGlow2b1",
2			[6] = "Spells\\ShockRingCrescent256",
2			[7] = "SPELLS\\AuraRune1",
2			[8] = "SPELLS\\AuraRune5Green",
2			[9] = "SPELLS\\AuraRune7",
2			[10] = "SPELLS\\AuraRune8",
2			[11] = "SPELLS\\AuraRune9",
2			[12] = "SPELLS\\AuraRune11",
2			[13] = "SPELLS\\AuraRune_A",
2			[14] = "SPELLS\\AuraRune_C",
2			[15] = "SPELLS\\AuraRune_D",
2			[16] = "SPELLS\\Holy_Rune1",
2			[17] = "SPELLS\\Rune1d_GLOWless",
2			[18] = "SPELLS\\Rune4blue",
2			[19] = "SPELLS\\RuneBC1",
2			[20] = "SPELLS\\RuneBC2",
2			[21] = "SPELLS\\RUNEFROST",
2			[22] = "Spells\\Holy_Rune_128",
2			[23] = "Spells\\Nature_Rune_128",
2			[24] = "SPELLS\\Death_Rune",
2			[25] = "SPELLS\\DemonRune6",
2			[26] = "SPELLS\\DemonRune7",
2			[27] = "Spells\\DemonRune5backup",
			-- icones types
2			[28] = "Particles\\Intellect128_outline",
2			[29] = "Spells\\Intellect_128",
2			[30] = "SPELLS\\GHOST1",
2			[31] = "Spells\\Aspect_Beast",
2			[32] = "Spells\\Aspect_Hawk",
2			[33] = "Spells\\Aspect_Wolf",
2			[34] = "Spells\\Aspect_Snake",
2			[35] = "Spells\\Aspect_Cheetah",
2			[36] = "Spells\\Aspect_Monkey",
2			[37] = "Spells\\Blobs",
2			[38] = "Spells\\Blobs2",
2			[39] = "Spells\\GradientCrescent2",
2			[40] = "Spells\\InnerFire_Rune_128",
2			[41] = "Spells\\RapidFire_Rune_128",
2			[42] = "Spells\\Protect_128",
2			[43] = "Spells\\Reticle_128",
2			[44] = "Spells\\Star2A",
2			[45] = "Spells\\Star4",
2			[46] = "Spells\\Strength_128",
2			[47] = "Particles\\STUNWHIRL",
2			[48] = "SPELLS\\BloodSplash1",
2			[49] = "SPELLS\\DarkSummon",
2			[50] = "SPELLS\\EndlessRage",
2			[51] = "SPELLS\\Rampage",
2			[52] = "SPELLS\\Eye",
2			[53] = "SPELLS\\Eyes",
2			[54] = "SPELLS\\Zap1b",
2		};
	
2		Fonts = {
			--- wow fonts
2			[1] = STANDARD_TEXT_FONT, --- "Fonts\\FRIZQT__.TTF"
2			[2] = "Fonts\\ARIALN.TTF",
2			[3] = "Fonts\\skurri.ttf",
2			[4] = "Fonts\\MORPHEUS.ttf",
			--- external fonts (free use or gpl'd, author in font file)
2			[5] = "Interface\\Addons\\PowerAuras\\Fonts\\All_Star_Resort.ttf",
2			[6] = "Interface\\Addons\\PowerAuras\\Fonts\\Army.ttf",
2			[7] = "Interface\\Addons\\PowerAuras\\Fonts\\Army_Condensed.ttf",
2			[8] = "Interface\\Addons\\PowerAuras\\Fonts\\Army_Expanded.ttf",
2			[9] = "Interface\\Addons\\PowerAuras\\Fonts\\Blazed.ttf",
2			[10] = "Interface\\Addons\\PowerAuras\\Fonts\\Blox2.ttf",
2			[11] = "Interface\\Addons\\PowerAuras\\Fonts\\CloisterBlack.ttf",
2			[12] = "Interface\\Addons\\PowerAuras\\Fonts\\Moonstar.ttf",
2			[13] = "Interface\\Addons\\PowerAuras\\Fonts\\Neon.ttf",
2			[14] = "Interface\\Addons\\PowerAuras\\Fonts\\Pulse_virgin.ttf",
2			[15] = "Interface\\Addons\\PowerAuras\\Fonts\\Punk_s_not_dead.ttf",
2			[16] = "Interface\\Addons\\PowerAuras\\Fonts\\whoa!.ttf",
2			[17] = "Interface\\Addons\\PowerAuras\\Fonts\\Hexagon.ttf",
2			[18] = "Interface\\Addons\\PowerAuras\\Fonts\\Starcraft_Normal.ttf",
2		};
		
2		TimerTextures = {
2			"Original",
2			"AccidentalPresidency",
2			"Crystal",
2			"Digital",
2			"Monofonto",
2			"OCR",
0			"WhiteRabbit",
2		};
	
		-- Colors used in messages
		--------------------------
2		Colors = {
2			["Blue"] = "|cff6666ff",
2			["Grey"] = "|cff999999",
2			["Green"] = "|cff66cc33",
2			["Red"] = "|cffff2020",
2			["Yellow"] = "|cffffff40",
2			["BGrey"] = "|c00D0D0D0",
2			["White"] = "|c00FFFFFF",
2			["Orange"] = "|cffff9930",
2			["Purple"] = "|cffB0A0ff",
2			["Gold"] = "|cffffff00",
2		};
		
2		SetColours = {
2			["PowaTargetButton"]       = {r=1.0, g=0.2, b=0.2},
2			["PowaTargetFriendButton"] = {r=0.2, g=1.0, b=0.2},
2			["PowaPartyButton"]        = {r=0.2, g=1.0, b=0.2},
2			["PowaGroupOrSelfButton"]  = {r=0.2, g=1.0, b=0.2},
2			["PowaFocusButton"]        = {r=0.2, g=1.0, b=0.2},
2			["PowaRaidButton"]         = {r=0.2, g=1.0, b=0.2},
2			["PowaOptunitnButton"]     = {r=0.2, g=1.0, b=0.2},
2		};
		
2		OptionCheckBoxes = {
2			"PowaTargetButton",
2			"PowaPartyButton",
2			"PowaGroupOrSelfButton",
2			"PowaRaidButton",
2			"PowaIngoreCaseButton",
2			"PowaOwntexButton",
2			"PowaInverseButton",
2			"PowaFocusButton",
2			"PowaOptunitnButton",
0			"PowaGroupAnyButton",
2		};
		
2		OptionTernary = {};
								  
2		OptionHideables = {
2			"PowaGroupAnyButton",
2			"PowaBarTooltipCheck",
2			"PowaBarThresholdSlider",
2			"PowaThresholdInvertButton",
2			"PowaBarBuffStacks",
0			"PowaDropDownStance",
2		};
	
2	};
	
2	PowaAuras.DebuffTypeSpellIds={
		-- Death Knight
2		[47481] = PowaAuras.DebuffCatType.Stun,		-- Gnaw (Ghoul)
2		[51209] = PowaAuras.DebuffCatType.CC,		-- Hungering Cold
2		[47476] = PowaAuras.DebuffCatType.Silence,	-- Strangulate
2		[45524] = PowaAuras.DebuffCatType.Snare,	-- Chains of Ice
2		[55666] = PowaAuras.DebuffCatType.Snare,	-- Desecration (no duration, lasts as long as you stand in it)
2		[58617] = PowaAuras.DebuffCatType.Snare,	-- Glyph of Heart Strike
2		[50436] = PowaAuras.DebuffCatType.Snare,	-- Icy Clutch (Chilblains)
		-- Druid
2		[5211]  = PowaAuras.DebuffCatType.Stun,		-- Bash (also Shaman Spirit Wolf ability)
2		[33786] = PowaAuras.DebuffCatType.CC,		-- Cyclone
2		[2637]  = PowaAuras.DebuffCatType.CC,		-- Hibernate (works against Druids in most forms and Shamans using Ghost Wolf)
2		[22570] = PowaAuras.DebuffCatType.Stun,		-- Maim
2		[9005]  = PowaAuras.DebuffCatType.Stun,		-- Pounce
2		[339]   = PowaAuras.DebuffCatType.Root,		-- Entangling Roots
2		[19675] = PowaAuras.DebuffCatType.Root,		-- Feral Charge Effect (immobilize with interrupt [spell lockout, not silence])
2		[58179] = PowaAuras.DebuffCatType.Snare,	-- Infected Wounds
2		[61391] = PowaAuras.DebuffCatType.Snare,	-- Typhoon
		-- Hunter
2		[3355]  = PowaAuras.DebuffCatType.CC,		-- Freezing Trap Effect
2		[24394] = PowaAuras.DebuffCatType.Stun,		-- Intimidation
2		[1513]  = PowaAuras.DebuffCatType.CC,		-- Scare Beast (works against Druids in most forms and Shamans using Ghost Wolf)
2		[19503] = PowaAuras.DebuffCatType.CC,		-- Scatter Shot
2		[19386] = PowaAuras.DebuffCatType.CC,		-- Wyvern Sting
2		[34490] = PowaAuras.DebuffCatType.Silence,	-- Silencing Shot
2		[53359] = PowaAuras.DebuffCatType.Disarm,	-- Chimera Shot - Scorpid
2		[19306] = PowaAuras.DebuffCatType.Root,		-- Counterattack
2		[19185] = PowaAuras.DebuffCatType.Root,		-- Entrapment
2		[35101] = PowaAuras.DebuffCatType.Snare,	-- Concussive Barrage
2		[5116]  = PowaAuras.DebuffCatType.Snare,	-- Concussive Shot
2		[13810] = PowaAuras.DebuffCatType.Snare,	-- Frost Trap Aura (no duration, lasts as long as you stand in it)
2		[61394] = PowaAuras.DebuffCatType.Snare,	-- Glyph of Freezing Trap
2		[2974]  = PowaAuras.DebuffCatType.Snare,	-- Wing Clip
		-- Hunter Pets
2		[50519] = PowaAuras.DebuffCatType.Stun,		-- Sonic Blast (Bat)
2		[50541] = PowaAuras.DebuffCatType.Disarm,	-- Snatch (Bird of Prey)
2		[54644] = PowaAuras.DebuffCatType.Snare,	-- Froststorm Breath (Chimera)
2		[50245] = PowaAuras.DebuffCatType.Root,		-- Pin (Crab)
2		[50271] = PowaAuras.DebuffCatType.Snare,	-- Tendon Rip (Hyena)
2		[50518] = PowaAuras.DebuffCatType.Stun,		-- Ravage (Ravager)
2		[54706] = PowaAuras.DebuffCatType.Root,		-- Venom Web Spray (Silithid)
2		[4167]  = PowaAuras.DebuffCatType.Root,		-- Web (Spider)
		-- Mage
2		[44572] = PowaAuras.DebuffCatType.Stun,		-- Deep Freeze
2		[31661] = PowaAuras.DebuffCatType.CC,		-- Dragon's Breath
2		[12355] = PowaAuras.DebuffCatType.Stun,		-- Impact
2		[118]   = PowaAuras.DebuffCatType.CC,		-- Polymorph
2		[18469] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Improved Counterspell
2		[64346] = PowaAuras.DebuffCatType.Disarm,	-- Fiery Payback
2		[33395] = PowaAuras.DebuffCatType.Root,		-- Freeze (Water Elemental)
2		[122]   = PowaAuras.DebuffCatType.Root,		-- Frost Nova
2		[11071] = PowaAuras.DebuffCatType.Root,		-- Frostbite
2		[55080] = PowaAuras.DebuffCatType.Root,		-- Shattered Barrier
2		[11113] = PowaAuras.DebuffCatType.Snare,	-- Blast Wave
2		[6136]  = PowaAuras.DebuffCatType.Snare,	-- Chilled (generic effect, used by lots of spells [looks weird on Improved Blizzard, might want to comment out])
2		[120]   = PowaAuras.DebuffCatType.Snare,	-- Cone of Cold
2		[116]   = PowaAuras.DebuffCatType.Snare,	-- Frostbolt
2		[47610] = PowaAuras.DebuffCatType.Snare,	-- Frostfire Bolt
2		[31589] = PowaAuras.DebuffCatType.Snare,	-- Slow
		-- Paladin
2		[853]   = PowaAuras.DebuffCatType.Stun,		-- Hammer of Justice
2		[2812]  = PowaAuras.DebuffCatType.Stun,		-- Holy Wrath (works against Warlocks using Metamorphasis and Death Knights using Lichborne)
2		[20066] = PowaAuras.DebuffCatType.CC,		-- Repentance
2		[20170] = PowaAuras.DebuffCatType.Stun,		-- Stun (Seal of Justice proc)
2		[10326] = PowaAuras.DebuffCatType.CC,		-- Turn Evil (works against Warlocks using Metamorphasis and Death Knights using Lichborne)
2		[63529] = PowaAuras.DebuffCatType.Silence,	-- Shield of the Templar
2		[20184] = PowaAuras.DebuffCatType.Snare,	-- Judgement of Justice (not really a snare, druids might want this though)
		-- Priest
2		[605]   = PowaAuras.DebuffCatType.CC,		-- Mind Control
2		[64044] = PowaAuras.DebuffCatType.CC,		-- Psychic Horror
2		[8122]  = PowaAuras.DebuffCatType.CC,		-- Psychic Scream
2		[9484]  = PowaAuras.DebuffCatType.CC,		-- Shackle Undead (works against Death Knights using Lichborne)
2		[15487] = PowaAuras.DebuffCatType.Silence,	-- Silence
		--[64058] = Disarm,	-- Psychic Horror (duplicate debuff names not allowed atm, need to figure out how to support this later)
2		[15407] = PowaAuras.DebuffCatType.Snare,	-- Mind Flay
		-- Rogue
2		[2094]  = PowaAuras.DebuffCatType.CC,		-- Blind
2		[1833]  = PowaAuras.DebuffCatType.Stun,		-- Cheap Shot
2		[1776]  = PowaAuras.DebuffCatType.CC,		-- Gouge
2		[408]   = PowaAuras.DebuffCatType.Stun,		-- Kidney Shot
2		[6770]  = PowaAuras.DebuffCatType.CC,		-- Sap
2		[1330]  = PowaAuras.DebuffCatType.Silence,	-- Garrote - Silence
2		[18425] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Improved Kick
2		[51722] = PowaAuras.DebuffCatType.Disarm,	-- Dismantle
2		[31125] = PowaAuras.DebuffCatType.Snare,	-- Blade Twisting
2		[3409]  = PowaAuras.DebuffCatType.Snare,	-- Crippling Poison
2		[26679] = PowaAuras.DebuffCatType.Snare,	-- Deadly Throw
		-- Shaman
2		[51880] = PowaAuras.DebuffCatType.Stun,		-- Improved Fire Nova Totem
2		[39796] = PowaAuras.DebuffCatType.Stun,		-- Stoneclaw Stun
2		[51514] = PowaAuras.DebuffCatType.CC,		-- Hex (although effectively a silence+disarm effect, it is conventionally thought of as a CC, plus you can trinket out of it)
2		[64695] = PowaAuras.DebuffCatType.Root,		-- Earthgrab (Storm, Earth and Fire)
2		[63685] = PowaAuras.DebuffCatType.Root,		-- Freeze (Frozen Power)
2		[3600]  = PowaAuras.DebuffCatType.Snare,	-- Earthbind (5 second duration per pulse, but will keep re-applying the debuff as long as you stand within the pulse radius)
2		[8056]  = PowaAuras.DebuffCatType.Snare,	-- Frost Shock
2		[8034]  = PowaAuras.DebuffCatType.Snare,	-- Frostbrand Attack
		-- Warlock
2		[710]   = PowaAuras.DebuffCatType.CC,		-- Banish (works against Warlocks using Metamorphasis and Druids using Tree Form)
2		[6789]  = PowaAuras.DebuffCatType.CC,		-- Death Coil
2		[5782]  = PowaAuras.DebuffCatType.CC,		-- Fear
2		[5484]  = PowaAuras.DebuffCatType.CC,		-- Howl of Terror
2		[6358]  = PowaAuras.DebuffCatType.CC,		-- Seduction (Succubus)
2		[30283] = PowaAuras.DebuffCatType.Stun,		-- Shadowfury
2		[24259] = PowaAuras.DebuffCatType.Silence,	-- Spell Lock (Felhunter)
2		[18118] = PowaAuras.DebuffCatType.Snare,	-- Aftermath
2		[18223] = PowaAuras.DebuffCatType.Snare,	-- Curse of Exhaustion
		-- Warrior
2		[7922]  = PowaAuras.DebuffCatType.Stun,		-- Charge Stun
2		[12809] = PowaAuras.DebuffCatType.Stun,		-- Concussion Blow
2		[20253] = PowaAuras.DebuffCatType.Stun,		-- Intercept (also Warlock Felguard ability)
2		[5246]  = PowaAuras.DebuffCatType.CC,		-- Intimidating Shout
2		[12798] = PowaAuras.DebuffCatType.Stun,		-- Revenge Stun
2		[46968] = PowaAuras.DebuffCatType.Stun,		-- Shockwave
2		[18498] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Gag Order
2		[676]   = PowaAuras.DebuffCatType.Disarm,	-- Disarm
2		[58373] = PowaAuras.DebuffCatType.Root,		-- Glyph of Hamstring
2		[23694] = PowaAuras.DebuffCatType.Root,		-- Improved Hamstring
2		[1715]  = PowaAuras.DebuffCatType.Snare,	-- Hamstring
2		[12323] = PowaAuras.DebuffCatType.Snare,	-- Piercing Howl
		-- Other
2		[30217] = PowaAuras.DebuffCatType.Stun,		-- Adamantite Grenade
2		[30216] = PowaAuras.DebuffCatType.Stun,		-- Fel Iron Bomb
2		[20549] = PowaAuras.DebuffCatType.Stun,		-- War Stomp
2		[25046] = PowaAuras.DebuffCatType.Silence,	-- Arcane Torrent
2		[39965] = PowaAuras.DebuffCatType.Root,		-- Frost Grenade
2		[55536] = PowaAuras.DebuffCatType.Root,		-- Frostweave Net
2		[13099] = PowaAuras.DebuffCatType.Root,		-- Net-o-Matic
2		[29703] = PowaAuras.DebuffCatType.Snare,	-- Dazed
		-- PvE
2		[28169] = PowaAuras.DebuffCatType.PvE,		-- Mutating Injection (Grobbulus)
2		[28059] = PowaAuras.DebuffCatType.PvE,		-- Positive Charge (Thaddius)
2		[28084] = PowaAuras.DebuffCatType.PvE,		-- Negative Charge (Thaddius)
2		[27819] = PowaAuras.DebuffCatType.PvE,		-- Detonate Mana (Kel'Thuzad)
2		[63024] = PowaAuras.DebuffCatType.PvE,		-- Gravity Bomb (XT-002 Deconstructor)
2		[63018] = PowaAuras.DebuffCatType.PvE,		-- Light Bomb (XT-002 Deconstructor)
2		[62589] = PowaAuras.DebuffCatType.PvE,		-- Nature's Fury (Freya, via Ancient Conservator)
2		[63276] = PowaAuras.DebuffCatType.PvE,		-- Mark of the Faceless (General Vezax)
2	};
	
2	PowaAuras.Text = {};
	
4	function PowaAuras:UnitTestDebug(...)
	end
	
4	function PowaAuras:UnitTestInfo(...)
	end
	
4	function PowaAuras:Debug(...)
0		if (PowaMisc.debug == true) then
0			self:Message(...) --OK
		end
		--self:UnitTestDebug(...);
	end
	
4	function PowaAuras:Message(...)
1		args={...};
1		if (args==nil or #args==0) then
0			return;
		end
1		local Message = "";
2		for i=1, #args do
1			Message = Message..tostring(args[i]);
		end
1		DEFAULT_CHAT_FRAME:AddMessage(Message);
	end
	
	-- Use this for temp debug messages
4	function PowaAuras:ShowText(...)
0		self:Message(...); -- OK
	end
	
	-- Use this for real messages instead of ShowText
4	function PowaAuras:DisplayText(...)
1		self:Message(...);
	end
	
	----------------------------------------------------------------------------------------
	-- This function will print a Message to the GUI screen (not the chat window) then fade.
	----------------------------------------------------------------------------------------
4	function PowaAuras:Error( msg, holdtime )
0		if (holdtime==nil) then
0			holdtime = UIERRORS_HOLD_TIME;
		end
0		UIErrorsFrame:AddMessage(msg, 0.75, 0.75, 1.0, 1.0, holdtime);
	end
	
	
4	function PowaAuras:ReverseTable(t)
1		if (type(t)~="table") then return nil; end
1		local newTable = {};
18		for k,v in pairs(t) do
17			newTable[v] = k;
		end
1		return newTable;
	end
	
4	function PowaAuras:CopyTable(t, lookup_table, original)
2		if (type(t)~="table") then
0			return t;
		end
		
2		local copy;
2		if (original==nil) then
2			copy = {};
		else
0			copy = original;
		end
22		for i,v in pairs(t) do
20			if (type(v)~="function") then
20				if (type(v)~="table") then
20					copy[i] = v;
				else
0					lookup_table = lookup_table or {};
0					lookup_table[t] = copy;
0					if lookup_table[v] then
0						copy[i] = lookup_table[v]; -- we already copied this table. reuse the copy.
					else
0						copy[i] = self:CopyTable(v, lookup_table); -- not yet copied. copy it.
					end
				end
			end
		end
2		return copy
	
	end
	
4	function PowaAuras:MergeTables(desTable, sourceTable)
28		if (not sourceTable or type(sourceTable)~="table") then
0			return;
		end
28		if (not desTable or type(desTable)~="table") then
0			desTable = sourceTable;
0			return;
		end
		
710		for i,v in pairs(sourceTable) do
682			if (type(v)~="function") then
682				if (type(v)~="table") then
656					desTable[i] = v;
				else
26					desTable[i] = {};
26					self:MergeTables(desTable[i], v);
				end
			end
		end
	
	end
	
4	function PowaAuras:InsertText(text, ...)
0		args={...};
0		if (args==nil or #args==0) then
0			return text;
		end
0		for k, v in pairs(args) do
0			text = string.gsub(text, "$"..k, tostring(v));
		end
0		return text;
	end
	
4	function PowaAuras:MatchString(textToSearch, textToFind, ingoreCase)
0		if (textToSearch==nil) then
0			return textToFind==nil;
		end
0		if (ingoreCase) then
0			textToFind = string.upper(textToFind);
0			textToSearch = string.upper(textToSearch);
		end
0		return string.find(textToSearch, textToFind, 1, true)
	end
		
	-- PowaAura Classes
	-- class.lua
	-- Compatible with Lua 5.1 (not 5.0).
2	function PowaClass(base,ctor)
44		local c = {}     -- a new class instance
44		if not ctor and type(base) == 'function' then
6	      ctor = base;
6	      base = nil;
38		elseif type(base) == 'table' then
	   -- our new class is a shallow copy of the base class!
1466	      for i,v in pairs(base) do
1428	          c[i] = v;
	      end
38		  if (type(ctor)=="table") then
142			for i,v in pairs(ctor) do
106				c[i] = v;
			end
36			ctor = nil;
		  end
38	      c._base = base;
		end
		-- the class will be the metatable for all its objects,
		-- and they will look up their methods in it.
44		c.__index = c
	
		-- expose a ctor which can be called by <classname>(<args>)
44		local mt = {}
0		mt.__call = function(class_tbl,...)
67			local obj = {}
67			setmetatable(obj,c)
67			if ctor then
				--PowaAuras:ShowText("Call constructor "..tostring(ctor));
67				ctor(obj,...)
			end 
67			return obj
		end
	    
44	    if ctor then
6			c.init = ctor;
	    else 
38	 		if base and base.init then
38				c.init = base.init;
38				ctor = base.init;
			end
	    end
	 
0		c.is_a = function(self,klass)
0	      local m = getmetatable(self)
0	      while m do 
0	         if m == klass then return true end
0	         m = m._base
	      end
0	      return false
	    end
44	  setmetatable(c,mt)
44	  return c
	end
	

==============================================================================
../PowerAurasDecoratorClasses.lua
==============================================================================
	
4	cPowaStacks = PowaClass(function(stacker, aura, base)
8		stacker.enabled = false;
8		stacker.x = 0;
8		stacker.y = 0;
8		stacker.a = 1.0;
8		stacker.h = 1.0;
8		stacker.Transparent = false;
8		stacker.HideLeadingZeros = false;
8		stacker.UpdatePing = false;
8		stacker.Texture = "Default";
		--PowaAuras:ShowText("cPowaTimer");
8		if (base) then
80			for k, v in pairs (stacker) do
				--PowaAuras:ShowText("  base."..tostring(k).."="..tostring(base[k]));
72				local varType = type(v);
72				if (varType == "string" or varType == "boolean" or varType == "number") then
72					if (base[k] ~= nil) then
72						stacker[k] = base[k];
					end
				end
			end
		end
8		stacker.Showing = false;
8		stacker.id = aura.id;
12	end);
	
4	function cPowaStacks:GetTexture()
0		local texture = PowaMisc.DefaultStacksTexture;
0		if (self.Texture ~= "Default") then
0			texture = self.Texture;
		end
0		local postfix = "";
0		if (self.Transparent) then
0			postfix = "Transparent";
		end
0		return "Interface\\Addons\\PowerAuras\\TimerTextures\\"..texture.."\\Timers"..postfix..".tga";
	end
	
4	function cPowaStacks:ShowValue(aura, newvalue)
0		local frame = PowaAuras.StacksFrames[self.id];
0		if (aura.texmode == 1) then
0			frame.texture:SetBlendMode("ADD");
		else
0			frame.texture:SetBlendMode("DISABLE");
		end
0		local auraTexture = PowaAuras.Textures[self.id];
0		if (auraTexture) then
0			if auraTexture:GetObjectType() == "Texture" then
0				frame.texture:SetVertexColor(auraTexture:GetVertexColor());
0			elseif auraTexture:GetObjectType() == "FontString" then
0				frame.texture:SetVertexColor(auraTexture:GetTextColor());
			end
		else
0			frame.texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
	
		--PowaAuras:ShowText("newvalue=", newvalue);
		
0		local deci = math.floor(newvalue / 10);
0		local uni  = math.floor(newvalue - (deci*10));
		--PowaAuras:ShowText("Show stacks: ",deci, " ", uni);
0		local tStep = PowaAuras.Tstep;
0		if (deci==0) then
0			frame.texture:SetTexCoord(tStep , tStep * 1.5, tStep * uni, tStep * (uni+1));
		else
0			frame.texture:SetTexCoord(tStep * uni, tStep * (uni+1), tStep * deci, tStep * (deci+1));
		end
0		if (not frame:IsVisible()) then
			--PowaAuras:Message("Show Stacks Frame for ", self.id);
0			frame:Show(); 
		end
0		if (self.UpdatePing and frame.PingAnimationGroup) then
			--PowaAuras:ShowText("Stacks UpdatePing");
0			frame.PingAnimationGroup:Play();
		end
	
	end
	
4	function cPowaStacks:SetStackCount(count)
0		PowaAuras:UnitTestInfo("SetStackCount ",self.id);
0		local aura = PowaAuras.Auras[self.id];
0		if (aura == nil) then
0			PowaAuras:UnitTestInfo("Stacks aura missing");
0			return;
		end
0		if (self.enabled==false) then 
0			PowaAuras:UnitTestInfo("Stacks disabled");
0			return;
		end
0		if (not count or count==0) then
0			local frame = PowaAuras.StacksFrames[self.id];
0			if (frame and frame:IsVisible()) then
0				frame:Hide();
			end
0			self.Showing = false;
0			return;
		end
0		if (self.lastShownValue==count and self.Showing) then
0			return;
		end
0		self.lastShownValue=count;
0		PowaAuras:CreateStacksFrameIfMissing(self.id, self.UpdatePing);
0		self:ShowValue(aura, count);
0		self.Showing = true;
	end
	
4	function cPowaStacks:Hide()
		--PowaAuras:ShowText("Hide Stacks Frame for ", self.id, " ", self.Showing, " ", PowaAuras.StacksFrames[self.id]);
0		if (not self.Showing) then return; end
0		if (PowaAuras.StacksFrames[self.id]) then
0			PowaAuras.StacksFrames[self.id]:Hide();
		end
0		self.Showing = false;
	end
	
4	function cPowaStacks:Delete()
0		self:Hide();
0		if PowaAuras.StacksFrames[self.id] then
0			PowaAuras.StacksFrames[self.id] = nil;
		end
	end
	
	------- Timer -------
	
4	cPowaTimer = PowaClass(function(timer, aura, base)
25		timer.enabled = false;
25		timer.x = 0;
25		timer.y = 0;
25		timer.a = 1.0;
25		timer.h = 1.0;
25		timer.cents = true;
25		timer.dual = false;
25		timer.Transparent = false;
25		timer.HideLeadingZeros = false;
25		timer.UpdatePing = false;
25		timer.InvertAuraBelow = 0;
25		timer.Texture = "Default";
		--PowaAuras:ShowText("cPowaTimer");
25		if (base) then
325			for k, v in pairs (timer) do
				--PowaAuras:Message("  base."..tostring(k).."="..tostring(base[k]));
300				local varType = type(v);
300				if (varType == "string" or varType == "boolean" or varType == "number") then
300					if (base[k] ~= nil) then
230						timer[k] = base[k];
					end
				end
			end
		end
25		timer.Showing = false;
		--PowaAuras:Message("CTR Timer id=", aura.id);
		--PowaAuras:Message("CooldownAura=", aura.CooldownAura);
		--PowaAuras:Message("inverse=", aura.inverse);
		--PowaAuras:Message("CanHaveTimer=", aura.CanHaveTimer);
		--PowaAuras:Message("CanHaveTimerOnInverse=", aura.CanHaveTimerOnInverse);
25		timer.ShowOnAuraHide = ((aura.CooldownAura and (not aura.inverse and aura.CanHaveTimer)) or (not aura.CooldownAura and (aura.inverse and aura.CanHaveTimerOnInverse)));
		--PowaAuras:Message("ShowOnAuraHide=", timer.ShowOnAuraHide);
	 
25		timer.id = aura.id;
		--for k,v in pairs (timer) do
		--	PowaAuras:ShowText("  "..tostring(k).."="..tostring(v));
		--end
29	end);
	
4	function cPowaTimer:GetTexture()
0		local texture = PowaMisc.DefaultTimerTexture;
0		if (self.Texture ~= "Default") then
0			texture = self.Texture;
		end
0		local postfix = "";
0		if (self.Transparent) then
0			postfix = "Transparent";
		end
0	    texture = "Interface\\Addons\\PowerAuras\\TimerTextures\\"..texture.."\\Timers"..postfix..".tga";
		--PowaAuras:ShowText("Timer texture: ", texture);
0		return texture;
	end
	--- ------------------------------------------------------------------------------------------------- TIMERS
4	function cPowaTimer:Update(elapsed)
0		PowaAuras:UnitTestInfo("Timer.Update ",self.id);
		--PowaAuras:ShowText("Timer.Update ",self.id);
0		local aura = PowaAuras.Auras[self.id];
0		if (aura == nil) then
0			PowaAuras:UnitTestInfo("Timer aura missing");
			--PowaAuras:ShowText("Timer aura missing");
0			return;
		end
0		if (self.enabled==false and self.InvertAuraBelow==0) then
0			PowaAuras:UnitTestInfo("Timer disabled");
			--PowaAuras:ShowText("Timer disabled");
0			return;
		end
	
0		local newvalue = 0;
		--- Determine the value to display in the timer
0		if (PowaAuras.ModTest) then
0			newvalue = random(0,99) + (random(0, 99) / 100);
		
0		elseif (aura.timerduration > 0) then--- if a user defined timer is active for the aura override the rest
0			if (aura.target or aura.targetfriend) and (PowaAuras.ResetTargetTimers == true) then
0				self.CustomDuration = aura.timerduration;
			else
0				self.CustomDuration = math.max(self.CustomDuration - elapsed, 0);
			end	
0			newvalue = self.CustomDuration;
		else
0			if (self.DurationInfo and self.DurationInfo > 0) then
0				newvalue = math.max(self.DurationInfo - GetTime(), 0);
			end
0			aura:CheckTimerInvert();
		end
	
0		if (PowaAuras.DebugCycle) then
0			PowaAuras:Message("newvalue=",newvalue); --OK
		end
	
0		PowaAuras:UnitTestInfo("Timer newvalue", newvalue);
		--PowaAuras:ShowText("Timer newvalue=", newvalue, " elapsed=", elapsed);
	
		
0		if (self.enabled==false or (aura.ForceTimeInvert and aura.InvertTimeHides)) then
0			PowaAuras:UnitTestInfo("Timer disabled");
			--PowaAuras:ShowText("Timer disabled");
0			return;
		end
		
			
0		if (newvalue and newvalue > 0) then --- Time has value to display
	
0			PowaAuras:CreateTimerFrameIfMissing(self.id, self.UpdatePing);
		
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("cents=",self.cents); --OK
			end
0			local incLarge = 0;
0			if (self.cents) then
0				local small;
0				if (newvalue > 60.00) then 
0					small = math.fmod(newvalue,60); 
				else
0					small = (newvalue - math.floor(newvalue)) * 100;
				end
0				if (PowaMisc.TimerRoundUp) then
0					small = math.ceil(small);
				end
				
				--if (small==60) then
				--	incLarge=1;
				--	small = 0;
				--end
	
0				if (PowaAuras.DebugCycle) then
0					PowaAuras:Message("small=",small); --OK
				end
0				if (self.lastShownSmall~=small) then
0					self:ShowValue(aura, 2, small);
0					self.lastShownSmall=small;
				end
			end	
	
0			local large = newvalue;
0			if (newvalue > 60.00) then 
0				large = newvalue / 60;		
			end
0			large = math.min (99.00, large);
0			if ((not self.cents) and PowaMisc.TimerRoundUp) then
0				large = math.ceil(large);
			else
0				large = math.floor(large);		
			end
0			large = large + incLarge;
	
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("large=",large); --OK
			end
0			if (self.lastShownLarge~=large) then
0				self:ShowValue(aura, 1, large);
0				self.lastShownLarge=large;
			end
	
0			self.Showing = true;		
	
0		elseif (self.Showing) then
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("HideTimerFrames"); --OK
			end
0			self:Hide();
0			PowaAuras:TestThisEffect(self.id);
		end			
		
	end
	
4	function cPowaTimer:SetDurationInfo(endtime)
0		if (self.DurationInfo ~= endtime) then
0			self.DurationInfo = endtime;
			--PowaAuras:ShowText("Timer refresh ", self.id, " DurationInfo", self.DurationInfo, " time=", self.DurationInfo - GetTime());
0			if (PowaAuras.TimerFrame[self.id]) then
0				for frameIndex = 1,2 do
0					local timerFrame = PowaAuras.TimerFrame[self.id][frameIndex];
0					if (timerFrame and self.UpdatePing and timerFrame.PingAnimationGroup) then
						--PowaAuras:ShowText("Timer UpdatePing");
0						timerFrame.PingAnimationGroup:Play();
					end
				end
			end
		end
	end
	
4	function cPowaTimer:ExtractDigits(displayValue)
0		local deci = math.floor(displayValue / 10);
0		local uni = math.floor(displayValue - (deci*10))
0		return deci, uni;
	end
	
4	function cPowaTimer:ShowValue(aura, frameIndex, displayValue)
0		local timerFrame = PowaAuras.TimerFrame[self.id][frameIndex];
0		if (aura.texmode == 1) then
0			timerFrame.texture:SetBlendMode("ADD");
		else
0			timerFrame.texture:SetBlendMode("DISABLE");
		end
0		local auraTexture = PowaAuras.Textures[self.id];
0		if (auraTexture) then
0			if auraTexture:GetObjectType() == "Texture" then
0				timerFrame.texture:SetVertexColor(auraTexture:GetVertexColor());
0			elseif auraTexture:GetObjectType() == "FontString" then
0				timerFrame.texture:SetVertexColor(auraTexture:GetTextColor());
			end
		else
0			timerFrame.texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
		
0		local deci, uni = self:ExtractDigits(displayValue);
		--PowaAuras:ShowText("Show timer: ",deci, " ", uni, " ", PowaAuras.Auras[k].Timer.HideLeadingZeros);
0		local tStep = PowaAuras.Tstep;
0		if (deci==0 and self.HideLeadingZeros) then
0			timerFrame.texture:SetTexCoord(tStep , tStep * 1.5, tStep * uni, tStep * (uni+1));
		else
0			timerFrame.texture:SetTexCoord(tStep * uni, tStep * (uni+1), tStep * deci, tStep * (deci+1));
		end
0		if (not timerFrame:IsVisible()) then
			--PowaAuras:ShowText("Show timer frame id=",self.id, " index=", frameIndex);
0			timerFrame:Show(); -- Timer Frame
		end
		--PowaAuras:ShowText("Show #3 ", k, " ", i, " ", j, " ", seconds);
		
		--PowaAuras:ShowText("deci=", deci, " uni=", uni);
	end
	
	
4	function cPowaTimer:HideFrame(i)
0		if (PowaAuras.TimerFrame[self.id] and PowaAuras.TimerFrame[self.id][i]) then
			--PowaAuras:ShowText("Hide Timer Frame ", i," for ", self.id);
0			PowaAuras.TimerFrame[self.id][i]:Hide();
		end
	end
	
4	function cPowaTimer:Hide()
0		if (not self.Showing) then return; end
0		if PowaAuras.TimerFrame[self.id] then
0			self:HideFrame(1);
0			self:HideFrame(2);
		end
0		self.Showing = false;
		--PowaAuras:ShowText("Hide timer frame");
	end
	
4	function cPowaTimer:Delete()
0		self:Hide();
0		if PowaAuras.TimerFrame[self.id] then
0			PowaAuras.TimerFrame[self.id][1] = nil;
0			PowaAuras.TimerFrame[self.id][2] = nil;
0			PowaAuras.TimerFrame[self.id] = nil;
		end
	end

==============================================================================
../PowerAurasDump.lua
==============================================================================
	--[[
	
0	powa_dump.lua
0	Power Auras debug dump function
	
	--]]
	
	----------------------------------------------
	-- Dump eveything we can think of into PowaState
	----------------------------------------------
4	function PowaAuras:Dump()
	
		--self:Dump_Safe();
		
0		local Status, Err = pcall(PowaAuras.Dump_Safe, self);
	
0		if (not Status) then
0			self:Message(Err); -- OK
0			self:DisplayText(self.Colors.Red, "Error in dump protected call: ", Err);
		else
0			self:DisplayText(self.Colors.Green, "Dump OK");	
		end
	end
	
4	function PowaAuras:Dump_Safe()
0		PowaState = {};
		-- Build
0		if (GetBuildInfo~=nil) then
0			local version, buildnum, builddate = GetBuildInfo();
0			PowaState["BuildInfo"] = {Version=version, BuildNum=buildnum, BuildDate=builddate};
		end
		-- Time
0		PowaState["Time"] = GetTime();
		-- Locale
0		PowaState["Locale"] = GetLocale();
		-- Zone
0		PowaState["Zone"] = GetRealZoneText();
		-- Realm
0		PowaState["Realm"] = GetRealmName();
		-- CurrentMapZone
0		PowaState["CurrentMapZone"] = GetCurrentMapZone();
		-- CurrentMapContinent
0		PowaState["CurrentMapContinent"] = GetCurrentMapContinent();
		--ActiveTalentGroup
0		PowaState["ActiveTalentGroup"] = GetActiveTalentGroup()
		-- IsInInstance
0		PowaState["IsInInstance"] = IsInInstance();
		-- IsMounted
0		PowaState["IsMounted"] = IsMounted();
		-- IsFlying
0		PowaState["IsFlying"] = IsFlying();
		-- IsResting
0		PowaState["IsResting"] = IsResting();
		-- Player
0		PowaState["player"] = self:GetUnitInfo("player");
		-- PlayerPet
0		PowaState["playerpet"] = self:GetUnitInfo("playerpet");
		-- Target
0		PowaState["target"] = self:GetUnitInfo("target");
		-- TargetPet
0		PowaState["targetpet"] = self:GetUnitInfo("targetpet");
		-- TargetTarget
0		PowaState["targettarget"] = self:GetUnitInfo("targettarget");
		--ComboPoints
0		PowaState["ComboPoints"] = {player=GetComboPoints("player"), vehicle=GetComboPoints("vehicle")};
		-- Weapon Enchant
0		local hasMainHandEnchant, mainHandExpiration, mainHandCharges, hasOffHandEnchant, offHandExpiration, offHandCharges = GetWeaponEnchantInfo();
0		PowaState.WeaponEnchant = {hasMainHandEnchant=hasMainHandEnchant, mainHandExpiration=mainHandExpiration, mainHandCharges=mainHandCharges, hasOffHandEnchant=hasOffHandEnchant, offHandExpiration=offHandExpiration, offHandCharges=offHandCharges};
		-- Stances
0		local numforms = GetNumShapeshiftForms();
0		PowaState["NumShapeshiftForms"] =  numforms;
0		if (numforms>0) then
0			PowaState["ShapeshiftFormInfo"] = {};
0			for iForm=1, numforms do
0				local icon, name, active, castable = GetShapeshiftFormInfo(iForm);
0				PowaState["ShapeshiftFormInfo"][iForm] = {Icon=icon, Name=name, Active=active, Castable=castable};
			end
		end
0		PowaState["ShapeshiftForm"] =  GetShapeshiftForm(false);
	
		
		-- CTRA MainTanks
0		if (CT_RA_MainTanks~=nil) then
0			PowaState.CT_RA_MainTanks = {};
0			for Index, MTName in pairs(CT_RA_MainTanks) do
0				PowaState.CT_RA_MainTanks[Index] = MTName;
			end
		end
		-- RDX MainTanks
0		if (RDX~=nil and RDXM.Assists~=nil and RDXM.Assists.cfg~=nil and RDXM.Assists.cfg.mtarray~=nil) then
0			PowaState.RDX_MainTanks = {};
0			for Index, MTName in pairs(RDXM.Assists.cfg.mtarray) do
0				PowaState.RDX_MainTanks[Index] = MTName;
			end
		end
		-- oRA MainTanks
0		if (oRA_MainTank~=nil and oRA_MainTank.MainTankTable~=nil) then
0			PowaState.oRA_MainTanks = {};
0			for Index, MTName in pairs(oRA_MainTank.MainTankTable) do
0				PowaState.oRA_MainTanks[Index] = MTName;
			end
		end	
	
		-- Slots
0		PowaState["Inventory"] = {};
0		PowaState.Inventory["Slot"] = {};
0		PowaState.Inventory["ItemLink"] = {};
0		PowaState.Inventory["ItemCooldown"] = {};
0		self:GetSlotInfo("HeadSlot");
0		self:GetSlotInfo("NeckSlot");
0		self:GetSlotInfo("ShoulderSlot");
0		self:GetSlotInfo("BackSlot");
0		self:GetSlotInfo("ChestSlot");
0		self:GetSlotInfo("ShirtSlot");
0		self:GetSlotInfo("TabardSlot");
0		self:GetSlotInfo("WristSlot");
0		self:GetSlotInfo("HandsSlot");
0		self:GetSlotInfo("WaistSlot");
0		self:GetSlotInfo("LegsSlot");
0		self:GetSlotInfo("FeetSlot");
0		self:GetSlotInfo("Finger0Slot");
0		self:GetSlotInfo("Finger1Slot");
0		self:GetSlotInfo("Trinket0Slot");
0		self:GetSlotInfo("Trinket1Slot");
0		self:GetSlotInfo("MainHandSlot");
0		self:GetSlotInfo("SecondaryHandSlot");
0		self:GetSlotInfo("RangedSlot");
0		self:GetSlotInfo("AmmoSlot");
0		self:GetSlotInfo("Bag0Slot");
0		self:GetSlotInfo("Bag1Slot");
0		self:GetSlotInfo("Bag2Slot");
0		self:GetSlotInfo("Bag3Slot");
	
		-- SpellTabs
0		PowaState.SpellTabs = {};
0		for i = 1, MAX_SKILLLINE_TABS do
0			local Name, Texture, Offset, Count = GetSpellTabInfo(i);
0			PowaState.SpellTabs[i] = {Name=Name, Texture=Texture, Offset=Offset, Count=Count};
		end
		-- Spells
0		PowaState.SpellBook = {};
0		local i = 1;
0		while (true) do
0			local spellName, spellRank = GetSpellName(i, BOOKTYPE_SPELL);
0			local Texture = GetSpellTexture(i, BOOKTYPE_SPELL);
0			if (spellName==nil or Texture==nil) then
0				do break end
			end
0			PowaState.SpellBook[i] = {Name=spellName, Rank=spellRank, Texture=Texture};
0			local StartTime, Duration, Enabled = GetSpellCooldown(i, BOOKTYPE_SPELL);
0			PowaState.SpellBook[i]["Cooldown"] = {StartTime=StartTime, Duration=Duration, Enabled=Enabled};
0			PowaState.SpellBook[i]["UsableSpell"] = IsUsableSpell(spellName);
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetSpell(i, BOOKTYPE_SPELL);
0			self:CaptureTooltip(PowaState.SpellBook[i]);
0			PowaState.SpellBook[spellName] = PowaState.SpellBook[i];
0			i = i + 1;
		end
		-- Debuff Spells
0		PowaState.SpellInfo = {}
0		for k in pairs(PowaAuras.DebuffTypeSpellIds) do
0			local name, rank, icon, cost, isFunnel, powerType, castTime, minRange, maxRange = GetSpellInfo(k);
0			if spellName then
0				PowaState.SpellInfo[k] = {Name=name, Rank=rank, Icon=icon, Cost=cost, IsFunnel=isFunnel, PowerType=powerType, CastTime=castTime, MinRange=minRange, MaxRange=maxRange};
			end
		end
		-- SpellIds used in auras
0		for _, aura in pairs(PowaAuras.Auras) do
0			for pword in string.gmatch(aura.buffname, "[^/]+") do
0				local _, _,spellId = string.find(aura.buffname, "%[(%d+)%]")
0				if (spellId) then		
0					local name, rank, icon, cost, isFunnel, powerType, castTime, minRange, maxRange = GetSpellInfo(tonumber(spellId));
0					if spellName then
0						PowaState.SpellInfo[k] = {Name=name, Rank=rank, Icon=icon, Cost=cost, IsFunnel=isFunnel, PowerType=powerType, CastTime=castTime, MinRange=minRange, MaxRange=maxRange};
					end
				end
			end
		end
	
	
		-- BonusScan
0		if (BonusScanner~=nil and
0			BonusScanner.active==1 and
0			BonusScanner.bonuses~=nil and
0			BonusScanner.bonuses.HEAL~=nil) then
0			PowaState.BonusScanner = {Active=BonusScanner.active, Heal=BonusScanner.bonuses.HEAL};
		end
		-- ActionSlots
0		PowaState.ActionSlots = {};
0		for Id = 1, 120 do
0			local Text = GetActionText(Id);
0			local cdStart, cdDuration, cdEnabled = GetActionCooldown(Id);
0			PowaState.ActionSlots[Id] = {HasAction=HasAction(Id),
0										ActionText=Text,
0										InRange=IsActionInRange(Id),
0										HasRange=ActionHasRange(Id),
0										CurrentAction=IsCurrentAction(Id),
0										AutoRepeatAction=IsAutoRepeatAction(Id),
0										UsableAction=IsUsableAction(Id),
0										AttackAction=IsAttackAction(Id),
0										Texture=GetActionTexture(Id),
0										Count=GetActionCount(Id),
0										Cooldown={Start=cdStart, Duration=cdDuration, Enabled=cdEnabled},
0										};
0			if (Text==nil and HasAction(Id)) then
0				self:ResetTooltip();
0				PowaAuras_Tooltip:SetAction(Id);
0				self:CaptureTooltip(PowaState.ActionSlots[Id]);
			end
		end
		--Bags
0		PowaState.Bags = {};
0		for bag = 0, NUM_BAG_FRAMES do
0			PowaState.Bags[bag] = {Slots=GetContainerNumSlots(bag)};
0			for slot = 1, GetContainerNumSlots(bag) do
0				local itemName = GetContainerItemLink(bag, slot);
0				if itemName then
0					local texture, count = GetContainerItemInfo(bag, slot);
0					PowaState.Bags[bag][slot] = {Name=itemName, Texture=texture, Count=count};
				end
			end
		end
		--Macros
0		PowaState.Macros = {};
0		for Id = 1, 36 do
0			local Name, IconTexture, Body = GetMacroInfo(Id);
0			PowaState.Macros[Id] = {Name=Name, Texture=IconTexture, Body=self:Escape(Body)};
		end
		--Groups
0		PowaState["RaidLeader"] = IsRaidLeader();
0		PowaState["PartyLeader"] = IsPartyLeader();
0		PowaState["PartyLeaderIndex"] = GetPartyLeaderIndex();
		
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
		--Raid
0		if (numrm>0) then
0			PowaState.Raid = {Count=numrm};
0			PowaState.Raid.Roster = {};
0			for Id = 1, 40 do
0				local unit = "raid"..Id;
0				if (UnitExists(unit)) then
0					PowaState.Raid[unit] = self:GetUnitInfo(unit);
0					PowaState.Raid["raidpet"..Id] = self:GetUnitInfo("raidpet"..Id);
0					PowaState.Raid[unit.."Target"] = self:GetUnitInfo(unit.."Target");
0					PowaState.Raid[unit.."TargetTarget"] = self:GetUnitInfo(unit.."TargetTarget");
				end
0				local name, rank, subgroup, level, classloc, class, zone, online, isDead = GetRaidRosterInfo(Id);
0				PowaState.Raid.Roster[Id] = {Name=name, Rank=rank, Subgroup=subgroup, Level=level, ClassLoc=classloc, Class=class, Zone=zone, Online=online, IsDead=isDead};
			end
		end
		--Party
0		if (numpm>0) then
0			PowaState.Party = {Count=numpm};
0			for Id = 1, 4 do
0				local unit = "party"..Id;
0				if (UnitExists(unit)) then
0					PowaState.Party[unit] = self:GetUnitInfo(unit);
0					PowaState.Party["partypet"..Id] = self:GetUnitInfo("partypet"..Id);
0					PowaState.Party[unit.."Target"] = self:GetUnitInfo(unit.."Target");
0					PowaState.Party[unit.."TargetTarget"] = self:GetUnitInfo(unit.."TargetTarget");
				end
			end
		end
		
		--Battlefields
0		PowaState.Battlefields = {};
0		for Id=1, MAX_BATTLEFIELD_QUEUES do
0			local bgstatus, BGName, instanceID = GetBattlefieldStatus(Id);
0			PowaState.Battlefields[Id] = {Status=bgstatus, Name=BGName, Id=instanceID};
		end
		
		-- Powa
0		PowaState.Powa = self:CopyTable(PowaAuras);
0		PowaState.PowaGlobalListe = self:CopyTable(PowaGlobalListe);
0		PowaState.PowaPlayerListe = self:CopyTable(PowaPlayerListe);
	
	end
	
	-- Extract details for specified unit
4	function PowaAuras:GetUnitInfo(unit)
0		if (not UnitExists(unit)) then
0			return nil;
		end
	
		--self:Message("GetUnitInfo for " .. tostring(unit));
	
0		local UnitInfo = {Unit=unit}
0		local Name, Realm = UnitName(unit)
0		UnitInfo["Name"] = Name;
0		UnitInfo["Realm"] = Realm;
0		UnitInfo["Level"] = UnitLevel(unit);
0		local LocClass, Class= UnitClass(unit);
0		UnitInfo["LocClass"] = LocClass;
0		UnitInfo["Class"] = Class;
0		UnitInfo["Sex"] = UnitSex(unit);
0		UnitInfo["Connected"] = UnitIsConnected(unit);
0		UnitInfo["Dead"] = UnitIsDead(unit);
0		UnitInfo["Ghost"] = UnitIsGhost(unit);
0		UnitInfo["DeadOrGhost"] = UnitIsDeadOrGhost(unit);
0		UnitInfo["Corpse"] = UnitIsCorpse(unit);
0		UnitInfo["Player"] = UnitIsUnit(unit, "player");
0		UnitInfo["Visible"] = UnitIsVisible(unit);
0		UnitInfo["Enemy"] = UnitIsEnemy(unit, "player");
0		UnitInfo["Friend"] = UnitIsFriend(unit, "player");
0		UnitInfo["PVP"] = UnitIsPVP(unit);
0		UnitInfo["ThreatSituation"] = UnitThreatSituation(unit);
0		UnitInfo["CanAttack"] = UnitCanAttack(unit, "player");
0		UnitInfo["CanBeAttacked"] = UnitCanAttack("player", unit);
0		UnitInfo["CanCooperate"] = UnitCanCooperate("player", unit);
0		local X, Y = GetPlayerMapPosition(unit);
0		UnitInfo["Pos"]= {X=X, Y=Y};
0		UnitInfo["InteractDistance"] = {[1]=CheckInteractDistance(unit, 1);
0										[2]=CheckInteractDistance(unit, 2),
0										[3]=CheckInteractDistance(unit, 3),
0										[4]=CheckInteractDistance(unit, 4)};
0		UnitInfo["InParty"] = UnitInParty(unit);
0		UnitInfo["UnitInRaid"] = UnitInRaid(unit);
0		UnitInfo["PlayerOrPetInParty"] = UnitPlayerOrPetInParty(unit);
0		UnitInfo["PlayerOrPetInRaid"] = UnitPlayerOrPetInRaid(unit);
	
0		self:ResetTooltip();
0		PowaAuras_Tooltip:SetUnit(unit);
0		self:CaptureTooltip(UnitInfo)
	
0		UnitInfo["InCombat"] = UnitAffectingCombat(unit);
0		UnitInfo["TargetInCombat"] = UnitAffectingCombat(unit, "target");
	
0		UnitInfo.Buffs = {};
0		local Index = 1;
0		local Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitBuff(unit, Index);
0		while (Name~=nil) do
0			UnitInfo.Buffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitBuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["Buffs"][Index])
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitBuff(unit, Index);
		end
	
0		UnitInfo.Debuffs = {};
0		Index = 1;
0		Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index);
0		while (Name~=nil) do
0			UnitInfo.Debuffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitDebuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["Debuffs"][Index]);
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index);
		end
	
0		UnitInfo.RemoveableDebuffs = {};
0		Index = 1;
0		Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index, 1);
0		while (Name~=nil) do
0			UnitInfo.RemoveableDebuffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitDebuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["RemoveableDebuffs"][Index]);
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index, 1);
		end
	
0		local StatIndex = {[1]="Strength", [2]="Agility", [3]="Stamina", [4]="Intellect", [5]="Spirit"};
0		UnitInfo["Stats"] = {};
0	    for Index = 1, 5 do
0			local base, stat, posBuff, negBuff = UnitStat(unit, Index);
0			UnitInfo.Stats[Index] = {Type=StatIndex[Index], Base=base, Stat=stat, PosBuff=posBuff, NegBuff=negBuff};
		end
	
0		local ResIndex = {[0]="Physical", [1]="Holy", [2]="Fire", [3]="Nature", [4]="Frost", [5]="Shadow", [6]="Arcane"};
0		UnitInfo.Resistances = {};
0	    for Index = 0, 6 do
0			local base, total, bonus, malus = UnitResistance(unit, Index)
0			UnitInfo["Resistances"][Index] = {Type=ResIndex[Index], Base=base, Total=total, Bonus=bonus, Malus=malus};
		end
	
0	    UnitInfo["Armor"] = UnitArmor(unit);
0	    UnitInfo["AttackBothHands"] = UnitAttackBothHands(unit);
0	    UnitInfo["AttackPower"] = UnitAttackPower(unit);
0	    UnitInfo["AttackSpeed"] = UnitAttackSpeed(unit);
0	    UnitInfo["Classification"] = UnitClassification(unit);
0	    UnitInfo["CreatureFamily"] = UnitCreatureFamily(unit);
0	    UnitInfo["CreatureType"] = UnitCreatureType(unit) ;
0	    UnitInfo["Damage"] = UnitDamage(unit);
0	    UnitInfo["Defense"] = UnitDefense(unit);
0	    UnitInfo["FactionGroup"] = UnitFactionGroup(unit);
0	    UnitInfo["Health"] = UnitHealth(unit);
0	    UnitInfo["HealthMax"] = UnitHealthMax(unit) ;
0	    UnitInfo["IsCharmed"] = UnitIsCharmed(unit);
	    --UnitInfo["IsCivilian"] = UnitIsCivilian(unit);
0	    UnitInfo["IsPartyLeader"] = UnitIsPartyLeader(unit);
0	    UnitInfo["IsPlayer"] = UnitIsPlayer(unit);
	   -- UnitInfo["IsPlusMob"] = UnitIsPlusMob(unit);
0	    UnitInfo["IsTapped"] = UnitIsTapped(unit);
0	    UnitInfo["IsTappedByPlayer"] = UnitIsTappedByPlayer(unit);
0	    UnitInfo["IsTrivial"] = UnitIsTrivial(unit);
		
0	    UnitInfo["InVehicle"] = UnitInVehicle(unit);
		
0	    UnitInfo["Mana"] = UnitMana(unit);
0	    UnitInfo["ManaMax"] = UnitManaMax(unit);
0	    UnitInfo["Power"] = {};
0	    UnitInfo["PowerMax"] = {};
0	    UnitInfo.Power.Default = UnitPower(unit);
0	    UnitInfo.PowerMax.Default = UnitPowerMax(unit);
0		for powerType=0,6 do
0			UnitInfo.Power[powerType] = UnitPower(unit, powerType);
0			UnitInfo.PowerMax[powerType] = UnitPowerMax(unit, powerType);
		end
0		local powerType, powerTypeString = UnitPowerType(unit);
0	    UnitInfo["PowerType"] = powerType;
0	    UnitInfo["PowerTypeString"] = powerTypeString;
0		UnitInfo.RuneCooldown  = {};
0		UnitInfo.RuneType  = {};
0		for runeId=1,6 do
0			local runeStart, runeDuration, runeReady = GetRuneCooldown(runeId)
0			UnitInfo.RuneCooldown[runeId] = {Start=runeStart, Duration=runeDuration, RuneReady=runeReady};
0			UnitInfo.RuneType[runeId] = GetRuneType(runeId);
		end
0	    UnitInfo["OnTaxi"] = UnitOnTaxi(unit);
0	    UnitInfo["PVPName"] = UnitPVPName(unit) ;
0	    UnitInfo["PVPRank"] = UnitPVPRank(unit);
0	    UnitInfo["Race"] = UnitRace(unit);
0	    UnitInfo["RangedAttack"] = UnitRangedAttack(unit);
0	    UnitInfo["RangedAttackPower"] = UnitRangedAttackPower(unit);
0	    UnitInfo["RangedDamage"] = UnitRangedDamage(unit);
0		Name, Realm = UnitName(unit.."Target")
0	    UnitInfo["Target"] = Name;
0	    UnitInfo["TargetRealm"] = Realm;
0		Name, Realm = UnitName(unit.."TargetTarget")
0	    UnitInfo["TargetTarget"] = Name;
0	    UnitInfo["TargetTargetRealm"] = Realm;
0	    UnitInfo["XP"] = UnitXP(unit);
0	    UnitInfo["XPMax"] = UnitXPMax(unit);
0		UnitInfo["UnitHasVehicleUI"] = UnitHasVehicleUI(unit);
0		local spell, rank, displayName, icon, startTime, endTime, isTradeSkill = UnitCastingInfo(unit);
0		UnitInfo["CastingInfo"] = {Spell=spell, Rank=rank, DisplayName=displayName, Icon=icon, StartTime=startTime, EndTime=endTime, IsTradeSkill=isTradeSkill};
0		spell, rank, displayName, icon, startTime, endTime, isTradeSkill = UnitChannelInfo(unit);
0		UnitInfo["ChannelInfo"] = {Spell=spell, Rank=rank, DisplayName=displayName, Icon=icon, StartTime=startTime, EndTime=endTime, IsTradeSkill=isTradeSkill};
	
0		return UnitInfo;
	end
	
	-- Extract details for specified slot
4	function PowaAuras:GetSlotInfo(slot)
0		local Id, Texture = GetInventorySlotInfo(slot);
0		if (Id~=nil) then
0			PowaState.Inventory.Slot[slot] = {Id=Id, Texture=Texture, Slot=slot};
0			PowaState.Inventory.ItemLink[Id] = GetInventoryItemLink("player", Id);
0			PowaState.Inventory.ItemCooldown[Id] = GetInventoryItemCooldown("player", Id);
0			PowaState.Inventory.Slot[Id] = PowaState.Inventory.Slot[slot]
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetInventoryItem("player", Id);
0			self:CaptureTooltip(PowaState.Inventory.Slot[Id]);
		end
	end
	
4	function PowaAuras:Escape(text)
0		if (text==nil) then
0			return nil;
		end
0		return string.gsub(string.gsub(text, "\n", "<LF>"), "\r", "<CR>");
	end
	
4	function PowaAuras:ResetTooltip()
0		for z = 1, 9 do
0			local line = getglobal("PowaAuras_TooltipTextLeft"..z);
0			if (line~=nil) then line:SetText(nil); end
0			line = getglobal("PowaAuras_TooltipTextRight"..z);
0			if (line~=nil) then line:SetText(nil); end
		end
0		PowaAuras_Tooltip:ClearLines();
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
	end
	
4	function PowaAuras:CaptureTooltip(store)
0		store["Tooltip"] = {};
0		store.Tooltip.NumLines = PowaAuras_Tooltip:NumLines();
0		for z = 1, PowaAuras_Tooltip:NumLines() do
0			local line = getglobal("PowaAuras_TooltipTextLeft"..z);
0			store.Tooltip["Left"..z]  = self:Escape(line:GetText());
0			line = getglobal("PowaAuras_TooltipTextRight"..z);
0			store.Tooltip["Right"..z] = self:Escape(line:GetText());
		end
	end
	

==============================================================================
../PowerAurasEvents.lua
==============================================================================
	
4	function PowaAuras:VARIABLES_LOADED(...)
2		self:UnitTestDebug("VARIABLES_LOADED");
2		PowaMisc.disabled = nil;
	
		-- Ensure PowaMisc gets any new values
22		for k, v in pairs(PowaAuras.PowaMiscDefault) do
20			if (PowaMisc[k]==nil) then PowaMisc[k] = v; end
		end
		-- Remove redundant settings
30		for k in pairs(PowaMisc) do
28			if (PowaAuras.PowaMiscDefault[k]==nil) then PowaMisc[k] = nil; end
		end
	
2		if (self.Version~=PowaMisc.Version) then
1			self:DisplayText(self.Colors.Purple.."<Power Auras Classic>|r "..self.Colors.Gold..self.Version.."|r - "..self.Text.welcome);
1			PowaMisc.Version = self.Version;
		end
		
2		PowaOptionsCpuFrame2_OnShow();
	
2		if (not PowaMisc.Disabled) then
2			self:RegisterEvents(PowaAuras_Frame);
		end
	
2		if (TestPA==nil) then
0			PowaState = {};
		end
		
2		_, self.playerclass = UnitClass("player");
	
2		self:LoadAuras();
	
12		for i = 1, 5 do
10			getglobal("PowaOptionsList"..i):SetText(PowaPlayerListe[i]);
		end
22		for i = 1, 10 do
20			getglobal("PowaOptionsList"..i+5):SetText(PowaGlobalListe[i]);
		end
		
2		local texi = 1;
2		while ( AuraTexture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..texi..".tga") == 1 ) do 
0			texi = texi+1;
		end
2		self.maxtextures = texi - 1;
		
2		PowaBarAuraTextureSlider:SetMinMaxValues(1, self.maxtextures);
2		PowaBarAuraTextureSliderHigh:SetText(self.maxtextures);
	
		
2		self:FindAllChildren();
			
		
36		for k, v in pairs(self.Auras) do
34			self:UnitTestDebug("Loaded Auras ",k, " ", v.buffname);
		end
		
2		self:CreateEffectLists();
		
2		if (self.SetupDone) then
1			self.Initialising = false;
		end
2		self.VariablesLoaded = true;
	end
	
4	function PowaAuras:Setup()
2		self:UnitTestDebug("Setup");
2		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
	
		-- Look-up spells by spellId for debuff types
2		self.DebuffCatSpells = {}
248		for k, v in pairs(self.DebuffTypeSpellIds) do
246			local spellName = GetSpellInfo(k);
246			if spellName then
0				self.DebuffCatSpells[spellName] = v
			else
				--self:Debug("Unknown spellId: ", k)
			end
		end	
		
2		if UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = false;
		end
	
2		self.WeAreInRaid = (GetNumRaidMembers() > 0);
2		self.WeAreInParty = (GetNumPartyMembers() > 0);
	
2		self.WeAreMounted = (IsMounted()~=nil);
2		self.WeAreInVehicle = (UnitInVehicle("player")~=nil);
	
2		self.ActiveTalentGroup = GetActiveTalentGroup();
		
2		self:GetStances();
		
2		self:MemorizeActions();
		
2		self.DoCheck.All = true;
			
2		if (self.VariablesLoaded) then
2			self.Initialising = false;
		end
2		self.SetupDone = true;
		
2		self.PendingRescan = GetTime() + 6;
	end
	
4	function PowaAuras:PLAYER_ENTERING_WORLD(...)
2		self:Setup();
	end
	
4	function PowaAuras:GetStances()
14		for iForm=1, GetNumShapeshiftForms() do
12			self.PowaStance[iForm] = select(2,GetShapeshiftFormInfo(iForm));
		end
	end
			
4	function PowaAuras:PLAYER_TALENT_UPDATE(...)
0		self.ActiveTalentGroup = GetActiveTalentGroup();
0		if (self.ModTest == false) then
			--self:ShowText("PLAYER_TALENT_UPDATE ");
0			self.PendingRescan = GetTime() + 1;
		end
	end
			
4	function PowaAuras:PLAYER_UPDATE_RESTING(...)
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end
	end
	
4	function PowaAuras:PARTY_MEMBERS_CHANGED(...)	  
0		if (self.ModTest == false) then
0			self.DoCheck.PartyBuffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.PartyHealth = true;
0			self.DoCheck.PartyMana = true;
		end
0		self.WeAreInParty = (GetNumPartyMembers() > 0);
	end
			
4	function PowaAuras:RAID_ROSTER_UPDATE(...)
0		if (self.ModTest == false) then
0			self.DoCheck.RaidBuffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.RaidHealth = true;
0			self.DoCheck.RaidMana = true;	
		end
0		self.WeAreInRaid = (GetNumRaidMembers() > 0);
	end
					
4	function PowaAuras:UNIT_HEALTH(...)
0		local unit = ...;
0		self:SetCheckResource("Health", unit);
	end
			
4	function PowaAuras:UNIT_MAXHEALTH(...)
0		local unit = ...;
0		self:SetCheckResource("Health", unit);
	end
			
4	function PowaAuras:UNIT_MANA(...)
0		local unit = ...;
0		self:SetCheckResource("Mana", unit);
	end
			
4	function PowaAuras:UNIT_MAXMANA(...)
0		local unit = ...;
0		self:SetCheckResource("Mana", unit);
	end
	
4	function PowaAuras:UNIT_RAGE(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
4	function PowaAuras:UNIT_ENERGY(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
4	function PowaAuras:UNIT_MAXENERGY(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
4	function PowaAuras:UNIT_RUNIC_POWER(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
4	function PowaAuras:SetCheckResource(resourceType, unitType)
0		if (self.ModTest == false) then
0			if (unitType == "target") then
0				self.DoCheck["Target"..resourceType] = true;				
0			elseif (unitType == "focus") then             
0				self.DoCheck["Focus"..resourceType] = true;				
0			elseif ("party" == string.sub(unitType, 1, 5)) then 
0				self.DoCheck["Party"..resourceType] = true;  	
0				self.DoCheck["NamedUnit"..resourceType] = true;			
0			elseif ("raid" == string.sub(unitType, 1, 4)) then              
0				self.DoCheck["Raid"..resourceType] = true;		
0				self.DoCheck["NamedUnit"..resourceType] = true;		
0			elseif (unitType == "pet") then
0				self.DoCheck["NamedUnit"..resourceType] = true;
0			elseif (unitType == "player") then
0				self.DoCheck[resourceType] = true;	
			end
		end
	end
	
4	function PowaAuras:UNIT_MAXRUNIC_POWER(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
4	function PowaAuras:SpellcastEvent(unit)
0		if (self.ModTest == false) then
			--- spell alert handling
0			if unit and not UnitIsDead(unit) then
0				if UnitIsUnit(unit, "player") then
0					self.DoCheck.PlayerSpells = true;
0				elseif (UnitCanAttack(unit, "player")) then
0					if UnitIsUnit(unit, "target") then
0						self.DoCheck.TargetSpells = true;
					end
0					if UnitIsUnit(unit, "focus") then
0						self.DoCheck.FocusSpells = true;
					end
0					self.DoCheck.Spells = true; --- party/raidscan for casting units in this case
				end
			end
		end
	end
	
4	function PowaAuras:UNIT_SPELLCAST_SUCCEEDED(...)	  
0		if (self.ModTest == false) then
0			local unit, spell = ...;
			--self:ShowText("UNIT_SPELLCAST_SUCCEEDED ",unit, " ", spell);
			--- druid shapeshift special case
0			if (unit and unit == "player") then
0				if ( (spell == GetSpellInfo(768)) or (spell == GetSpellInfo(5487)) or (spell == GetSpellInfo(9634)) ) then
0					self.DoCheck.Mana = true;
0					self.DoCheck.RageEnergy = true;
				end			
0				for _, auraId in pairs(self.AurasByType.OwnSpells) do	
					--self:ShowText("Pending set for OwnSpells ", auraId);
0					self.DoCheck.OwnSpells = true;
0					self.Pending[auraId] = GetTime() + 0.5; -- Allow 0.5 sec for client to update or time may be wrong
				end
			else
0				PowaAuras:SpellcastEvent(unit);
			end
		end
	end
	
4	function PowaAuras:UNIT_SPELLCAST_START(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_CHANNEL_START(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_DELAYED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_CHANNEL_UPDATE(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_STOP(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_FAILED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_INTERRUPTED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
4	function PowaAuras:UNIT_SPELLCAST_CHANNEL_STOP(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
			
4	function PowaAuras:PLAYER_FOCUS_CHANGED(...)	  
0		if (self.ModTest == false) then
0			self.DoCheck.FocusBuffs = true;
0			self.DoCheck.FocusHealth = true;
0			self.DoCheck.FocusMana = true;
0			self.DoCheck.FocusRageEnergy = true;
0			self.DoCheck.FocusSpells = true;
0			self.DoCheck.StealableFocusSpells = true;
0			self.DoCheck.PurgeableFocusSpells = true;
		end
	end
	
4	function PowaAuras:BuffsChanged(unit)
0		if (not self.ModTest) then
			--self:ShowText("BuffsChanged ", unit);
0			if (arg1 == "target") then
0				self.DoCheck.TargetBuffs = true;
0				self.DoCheck.StealableTargetSpells = true;
0				self.DoCheck.PurgeableTargetSpells = true;
0			elseif ("party" == string.sub(arg1, 1, 5)) then 
0				self.DoCheck.PartyBuffs = true;
0				self.DoCheck.GroupOrSelfBuffs = true;
0			elseif (arg1 == "focus") then
0				self.DoCheck.FocusBuffs = true;
0				self.DoCheck.StealableFocusSpells = true;
0				self.DoCheck.PurgeableFocusSpells = true;
0			elseif (string.sub(arg1, 1, 4) == "raid") then
0				self.DoCheck.RaidBuffs = true;       
0				self.DoCheck.GroupOrSelfBuffs = true;
0			elseif (arg1 == "player") then
				--- active les checks
0				self.DoCheck.Buffs = true;
0				self.DoCheck.GroupOrSelfBuffs = true;
			else
0				self.DoCheck.UnitBuffs = true;
0				self.DoCheck.StealableSpells = true;
0				self.DoCheck.PurgeableSpells = true;
			end
		end
	end
	
4	function PowaAuras:UNIT_AURA(...)
0		local unit = ...;
0		self:BuffsChanged(unit);
	end
	
4	function PowaAuras:UNIT_AURASTATE(...)
0		local unit = ...;
0		self:BuffsChanged(unit);
	end
	
4	function PowaAuras:PLAYER_DEAD(...)
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end
0		self.WeAreMounted = false;
0		self.WeAreInVehicle = false;
0		self.WeAreAlive = false;
	end
		
4	function PowaAuras:PLAYER_ALIVE(...)
0		if not UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = true;
0			if (self.ModTest == false) then
0				self.DoCheck.All = true;
			end
		end
	end
		
4	function PowaAuras:PLAYER_UNGHOST(...)
0		if not UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = true;
0			if (self.ModTest == false) then
0				self.DoCheck.All = true;
			end
		end
	end
	 
4	function PowaAuras:PLAYER_TARGET_CHANGED(...)
0		if (self.ModTest == false) then
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.TargetHealth = true;
0			self.DoCheck.TargetMana = true;
0			self.DoCheck.TargetRageEnergy = true;
0			self.ResetTargetTimers = true;
0			self.DoCheck.Actions = true;
0			self.DoCheck.TargetSpells = true;
0			self.DoCheck.Combo = true;
0			self.DoCheck.StealableTargetSpells = true;
0			self.DoCheck.PurgeableTargetSpells = true;
		end
	end
		 
4	function PowaAuras:PLAYER_REGEN_DISABLED(...)
0		if (self.ModTest == false) then
0			self.WeAreInCombat = true;
0			self.DoCheck.Others = true;
0			self.DoCheck.Enchants = true;
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.Buffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.Actions = true;
		end	   
	end
		   
4	function PowaAuras:PLAYER_REGEN_ENABLED(...)
0		if (self.ModTest == false) then
0			self.WeAreInCombat = false;
0			self.DoCheck.Others = true;
0			self.DoCheck.Enchants = true;
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.Buffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.Actions = true;
		end
	end   
		
4	function PowaAuras:UNIT_COMBO_POINTS(...)
0		local unit = ...;
0		if unit ~= "player" then return; end
0		if (self.ModTest == false) then
0			self.DoCheck.Combo = true;
		end
	end
	
4	function PowaAuras:VehicleCheck(unit, entered)
0		if unit ~= "player" then return; end
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end	
0		self.WeAreInVehicle = entered;
	end
			
4	function PowaAuras:UNIT_ENTERED_VEHICLE(...)
0		local unit = ...;
0		self:VehicleCheck(unit, true)
	end
	
4	function PowaAuras:UNIT_EXITED_VEHICLE(...)
0		local unit = ...;
0		self:VehicleCheck(unit, false)
	end
		
4	function PowaAuras:UNIT_FACTION(...) --- GetPVPTimer() returns the time until unflag in ms
0		local unit = ...;
0		if (self.ModTest == false) then
0			if unit == "player" then
0				self.DoCheck.PvP = true;
0			elseif unit == "target" then
0				self.DoCheck.TargetPvP = true;
			end
	
0			for i=1,GetNumPartyMembers() do
0				if unit == "party"..i then
0					self.DoCheck.PartyPvP = true;
0					break;
				end
			end
0			for i=1, GetNumRaidMembers() do
0				if unit == "raid"..i then
0					self.DoCheck.RaidPvP = true;
0					break;
				end
			end
		end
	end
		
		
4	function PowaAuras:COMBAT_LOG_EVENT_UNFILTERED(...)
0		local timestamp,event,sourceGUID,sourceName,sourceFlags,destGUID,destName,destFlags, spellId, spellName, _, spellType = ...;
		--self:ShowText("COMBAT_LOG_EVENT_UNFILTERED ", event);
0		if (not self.ModTest) then
0			if (destGUID and destGUID==UnitGUID("player") and spellName) then
0				if (event == "ENVIRONMENTAL_DAMAGE") then
					--self:ShowText("ENVIRONMENTAL_DAMAGE type=", spellId, " size=", spellName);					
0					if  (spellId ~= "FALLING") then
0						self.AoeAuraAdded[0] = spellId;
0						self.DoCheck.Aoe = true;
					end
0				elseif ((event=="SPELL_PERIODIC_DAMAGE"
0					  or event=="SPELL_DAMAGE"
0					  or ((event=="SPELL_AURA_APPLIED" or event=="SPELL_AURA_APPLIED_DOSE") and spellType=="DEBUFF"))) then
0					local matchFound = false;
					--self:ShowText("SPELL_PERIODIC_DAMAGE ", spellId, " ", spellName);
0					if (PowaMisc.UseGTFO) then
0						if (GTFO.SpellID[spellId]) then
							--self:ShowText(spellId.." - ID Match Found "..spellName);
0							matchFound = ((not GTFO.SpellID[spellId].applicationOnly)
0											 or (GTFO.SpellID[spellId].applicationOnly
0											 and (event == "SPELL_AURA_APPLIED"
0											   or event == "SPELL_AURA_APPLIED_DOSE")));
0						elseif (GTFO.SpellName[spellName]) then
							--self:ShowText(spellName.." - Name Match Found");
0							matchFound = ((not GTFO.SpellName[spellName].applicationOnly)
0											 or (GTFO.SpellName[spellName].applicationOnly
0											 and (event == "SPELL_AURA_APPLIED"
0											   or event == "SPELL_AURA_APPLIED_DOSE")));
0						elseif (PowaGTFOPvP[spellId]) then
							--self:ShowText(spellName.." - PvP Match Found");
0							matchFound = true;
						end
					else
0						matchFound = true;
					end
0					if (matchFound) then
0						self.AoeAuraAdded[spellId] = spellName;
0						if (not self.AoeAuraTexture[spellName]) then
0							self.AoeAuraTexture[spellId] = select(3, GetSpellInfo(spellId));
						end
0						self.DoCheck.Aoe = true;
					end
				end
			end
		end
	end
	
4	function PowaAuras:ACTIONBAR_SLOT_CHANGED(...)
0		local arg1 = ...;
0		self:MemorizeActions(arg1);
	end
		
4	function PowaAuras:UPDATE_SHAPESHIFT_FORMS(...)
0		self:GetStances();
0		if (self.ModTest) then return; end
		
0		self.DoCheck.Stance = true;
	end
		
4	function PowaAuras:ACTIONBAR_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("ACTIONBAR_UPDATE_COOLDOWN");
0			self.DoCheck.Actions = true;
0			self.DoCheck.Stance = true;
		end	
	end
			
4	function PowaAuras:ACTIONBAR_UPDATE_USABLE(...)
0		if (self.ModTest == false) then
			--self:ShowText("ACTIONBAR_UPDATE_USABLE");
0			self.DoCheck.Actions = true;
0			self.DoCheck.Stance = true;
		end
	end
		
4	function PowaAuras:SPELL_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("SPELL_UPDATE_COOLDOWN");
0			self.DoCheck.OwnSpells = true;
		end	
	end
			
4	function PowaAuras:UPDATE_SHAPESHIFT_FORM(...)
0		if (self.ModTest == false) then
			--self:ShowText("UPDATE_SHAPESHIFT_FORM");
0			self.DoCheck.Stance = true;
0			self.DoCheck.Actions = true;
		end  
	end
	
4	function PowaAuras:BAG_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("BAG_UPDATE_COOLDOWN");
		end  
	end
	
4	function PowaAuras:UNIT_INVENTORY_CHANGED(...)
0		if (self.ModTest == false) then
0			local unit = ...;
			--self:ShowText("UNIT_INVENTORY_CHANGED ", unit);
0			if (unit=="player") then
0				for _, auraId in pairs(self.AurasByType.Enchants) do
					--self:ShowText("Pending set for Enchants ", auraId);
0					self.Pending[auraId] = GetTime() + 0.25; -- Allow time for client to update or timer will be wrong
				end
			end			
		end  
	end
	
4	function PowaAuras:UNIT_THREAT_SITUATION_UPDATE(...)
0		local unit = ...;
0		if (self.ModTest == false) then
			--self:ShowText("UNIT_THREAT_SITUATION_UPDATE ", unit);
0			if unit == "player" then
0				self.DoCheck.Aggro = true;
0				return;
			end
	
0			for i=1,GetNumPartyMembers() do
0				if unit == "party"..i then
0					self.DoCheck.PartyAggro = true;
0					break;
				end
			end
0			for i=1, GetNumRaidMembers() do
0				if unit == "raid"..i then
0					self.DoCheck.RaidAggro = true;
0					break;
				end
			end
		end
	end

==============================================================================
../PowerOptions.lua
==============================================================================
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< MAIN OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
	-- ---------------------------------------------------------------------------------------------------------------------
	
4	function PowaAuras:ResetPositions()
0		PowaBarConfigFrame:ClearAllPoints();
0		PowaBarConfigFrame:SetPoint("CENTER", "UIParent", "CENTER", 0, 50);
0		PowaOptionsFrame:ClearAllPoints();
0		PowaOptionsFrame:SetPoint("CENTER", "UIParent", "CENTER", 0, 50);
	end
	
	-- ---------------------------------------------------------------------------------------------------------------------
4	function PowaAuras:UpdateMainOption()
		-- traductions
0		getglobal("PowaOptionsHeader"):SetText("POWER AURAS "..self.Version);
0		getglobal("PowaMainHideAllButton"):SetText(self.Text.nomHide);
0		getglobal("PowaMainTestButton"):SetText(self.Text.nomTest);
0		getglobal("PowaEditButton"):SetText(self.Text.nomEdit);
0		getglobal("PowaOptionsRename"):SetText(self.Text.nomRename);
0		if (PowaMisc.Disabled) then
0			getglobal("PowaEnableButton"):SetChecked(false);
		else
0			getglobal("PowaEnableButton"):SetChecked(true);
		end
0		if (PowaMisc.debug) then
0			getglobal("PowaDebugButton"):SetChecked(true);
		else
0			getglobal("PowaDebugButton"):SetChecked(false);
		end
0		if (PowaMisc.TimerRoundUp) then
0			PowaTimerRoundingButton:SetChecked(true);
		else
0			PowaTimerRoundingButton:SetChecked(false);
		end
0		if (PowaMisc.UseGTFO) then
0			PowaGTFOButton:SetChecked(true);
		else
0			PowaGTFOButton:SetChecked(false);
		end
	
		-- affiche les icones
0		for i = 1, 24 do
0			local k = ((self.MainOptionPage-1)*24) + i;
			--self:Message("icon ", k);
0			local aura = self.Auras[k];
			-- icone
0			if (aura == nil) then
0				getglobal("PowaIcone"..i):SetNormalTexture("Interface\\PaperDoll\\UI-Backpack-EmptySlot");
0				getglobal("PowaIcone"..i):SetText("");
0				getglobal("PowaIcone"..i):SetAlpha(0.33);
			else
				--self:Message("buffname ", aura.buffname, "icon", aura.icon);
0				if (aura.buffname == "" or aura.buffname == " ") then -- pas de nom -> desactive
0					getglobal("PowaIcone"..i):SetNormalTexture("Interface\\PaperDoll\\UI-Backpack-EmptySlot");
0				elseif (aura.icon == "") then -- active mais pas d'icone
0					getglobal("PowaIcone"..i):SetNormalTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
				else
0					getglobal("PowaIcone"..i):SetNormalTexture(aura.icon);	
				end	
				-- off ou ON
0				if (aura.buffname ~= "" and aura.buffname ~= " " and aura.off) then
0					getglobal("PowaIcone"..i):SetText("OFF");
				else
0					getglobal("PowaIcone"..i):SetText("");
				end
				-- surbrillance de l'effet en cours
0				if (self.CurrentAuraId == k) then -- le bouton en cours
0					if (aura == nil or aura.buffname == "" or aura.buffname == " ") then -- nulle
0						getglobal("PowaSelected"):Hide();
					else
0						getglobal("PowaSelected"):SetPoint("CENTER", "PowaIcone"..i, "CENTER");
0						getglobal("PowaSelected"):Show();
					end
				end
				-- grisage des effets non visibles
0				if (not aura.Showing) then
0					getglobal("PowaIcone"..i):SetAlpha(0.33);
				else
0					getglobal("PowaIcone"..i):SetAlpha(1.0);
				end
			end
		end
		-- choisi la liste en cours
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetHighlightTexture("Interface\\Buttons\\UI-Panel-Button-Highlight");
0		getglobal("PowaOptionsList"..self.MainOptionPage):LockHighlight();
	end
	
	-- ---------------------------------------------------------------------------------------------------------------------
4	function PowaAuras:IconeClick(owner, button)
0		local iconeID = owner:GetID();
0		local auraId = ((self.MainOptionPage-1)*24) + iconeID;
	
0		if (self.MoveEffect > 0) then -- mode move, annule
0			return;
		end
0		if (ColorPickerFrame:IsVisible()) then -- color picker visible, ca deconne
0			return;
		end
0		local aura = self.Auras[auraId];
0		if (self.Auras[auraId] == nil or aura.buffname == "" or aura.buffname == " ") then -- ne fait rien si bouton vide
0			return;
		end
0		if IsShiftKeyDown() then -- Toggle ON ou OFF
0			if (aura.off) then
0				aura.off = false;
0				getglobal("PowaIcone"..iconeID):SetText("");
			else
0				aura.off = true;
0				getglobal("PowaIcone"..iconeID):SetText("OFF");
			end
0		elseif IsControlKeyDown() then
0			local show, reason = self:TestThisEffect(auraId, true);
0			if (show) then
0				self:Message(self:InsertText(self.Text.nomReasonShouldShow, reason)); --OK
			else	
0				self:Message(self:InsertText(self.Text.nomReasonWontShow, reason)); --OK
			end
0		elseif (self.CurrentAuraId == auraId) then
0			if (button == "RightButton") then
0				self:EditorShow();
0				return;
			else
0				if (aura.Showing) then 
0					getglobal("PowaIcone"..iconeID):SetAlpha(0.33);
				else
0					getglobal("PowaIcone"..iconeID):SetAlpha(1.0);
				end
0				PowaAuras:OptionTest();
			end
0		elseif (self.CurrentAuraId ~= auraId) then -- clicked a different button
0			self.CurrentAuraId = auraId;
0			self.CurrentAuraPage = self.MainOptionPage;
0			getglobal("PowaSelected"):SetPoint("CENTER", owner, "CENTER");
0			getglobal("PowaSelected"):Show();
0			self:InitPage(); -- change de page dans l'editeur d'effet
		end
	end
	
4	function PowaAuras:IconeEntered(owner)
0		local iconeID = owner:GetID();
0		local k = ((self.MainOptionPage-1)*24) + iconeID;
0		local aura = self.Auras[k];
0		if (self.MoveEffect > 0) then -- mode move, annule
0			return;
0		elseif (aura == nil) then
			-- rien si pas actif
0		elseif (aura.buffname == "" or aura.buffname == " ") then
			-- rien si pas de nom
		else
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			aura:AddExtraTooltipInfo(GameTooltip);
			
0			if (aura.party) then
0				GameTooltip:AddLine("("..self.Text.nomCheckParty..")", 1.0, 0.2, 0.2, 1);
			end		
0			if (aura.exact) then
0				GameTooltip:AddLine("("..self.Text.nomExact..")", 1.0, 0.2, 0.2, 1);
			end	
0			if (aura.mine) then
0				GameTooltip:AddLine("("..self.Text.nomMine..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.focus) then
0				GameTooltip:AddLine("("..self.Text.nomCheckFocus..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.raid) then
0				GameTooltip:AddLine("("..self.Text.nomCheckRaid..")", 1.0, 0.2, 0.2, 1);
		    end
0			if (aura.groupOrSelf) then
0				GameTooltip:AddLine("("..self.Text.nomCheckGroupOrSelf..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.optunitn) then
0				GameTooltip:AddLine("("..self.Text.nomCheckOptunitn..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.target) then
0				GameTooltip:AddLine("("..self.Text.nomCheckTarget..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.targetfriend) then
0				GameTooltip:AddLine("("..self.Text.nomCheckFriend..")", 0.2, 1.0, 0.2, 1);
			end
0			GameTooltip:AddLine(self.Text.aideEffectTooltip,1.0,1.0,1.0,1);
	
0			GameTooltip:Show();
		end
	end
	
4	function PowaAuras:MainListClick(owner)
0		local listeID = owner:GetID();
	
0		if (self.MoveEffect == 1) then
			-- deplace l'effet
0			self:BeginCopyEffect( self.CurrentAuraId, listeID)
0			return;
0		elseif (self.MoveEffect == 2) then
			-- deplace l'effet
0			self:BeginMoveEffect( self.CurrentAuraId, listeID)
0			return;
		end
	
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetHighlightTexture("");
0		getglobal("PowaOptionsList"..self.MainOptionPage):UnlockHighlight();
0		getglobal("PowaSelected"):Hide();
0		self.MainOptionPage = listeID;
	
		-- selectionne le premier effet de la page
0		self.CurrentAuraId = ((self.MainOptionPage-1)*24)+1;
0		self.CurrentAuraPage = self.MainOptionPage;
		-- change de page dans l'editeur d'effet ou cache l'editeur
0		if (self.Auras[auraId] ~= nil and self.Auras[ self.CurrentAuraId].buffname ~= "" and self.Auras[ self.CurrentAuraId].buffname ~= " ") then
0			self:InitPage(); 
		else
0			self:EditorClose();
		end
	
		-- en cas d'edition de renommage :)
0		getglobal("PowaOptionsRenameEditBox"):SetText( getglobal("PowaOptionsList"..self.MainOptionPage):GetText() );
	
0		self:UpdateMainOption();
	end
	
4	function PowaAuras:MainListEntered(owner)
0		local listeID = owner:GetID();
	
0		if (self.MainOptionPage ~= listeID) then
0			if (self.MoveEffect > 0) then
0				getglobal("PowaOptionsList"..listeID):SetHighlightTexture("Interface\\Buttons\\UI-Panel-Button-Highlight"); 
			else
0				getglobal("PowaOptionsList"..listeID):SetHighlightTexture("");
0				getglobal("PowaOptionsList"..listeID):UnlockHighlight();
			end
		end
0		if (self.MoveEffect == 1) then
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			GameTooltip:SetText(self.Text.aideCopy, nil, nil, nil, nil, 1);
0			GameTooltip:Show();
0		elseif (self.MoveEffect == 2) then
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			GameTooltip:SetText(self.Text.aideMove, nil, nil, nil, nil, 1);
0			GameTooltip:Show();
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
4	function PowaAuras:OptionRename()
0		getglobal("PowaOptionsRename"):Hide();
0		getglobal("PowaOptionsRenameEditBox"):Show();
	
0		getglobal("PowaOptionsRenameEditBox"):SetText( getglobal("PowaOptionsList"..self.MainOptionPage):GetText() );
	end
	
4	function PowaAuras:OptionRenameEdited()
0		getglobal("PowaOptionsRename"):Show();
0		getglobal("PowaOptionsRenameEditBox"):Hide();
	
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetText( getglobal("PowaOptionsRenameEditBox"):GetText() );
0		if (self.MainOptionPage > 5) then
0			PowaGlobalListe[self.MainOptionPage-5] = getglobal("PowaOptionsRenameEditBox"):GetText();
		else
0			PowaPlayerListe[self.MainOptionPage] = getglobal("PowaOptionsRenameEditBox"):GetText();
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
4	function PowaAuras:TriageIcones(nPage)
0		  local min = ((nPage-1)*24) + 1;
0		  local max = min + 23;
	
0		  local a = min;
	
		-- masque les effets de la page
0		for i = min, max do
0			local aura = self.Auras[i];
0			if (aura) then
0				aura:Hide();
			end
0			self.SecondaryAuras[i] = nil;
		end
	
0		for i = min, max do
0			if (self.Auras[i]) then
0				self.Auras[a] = self.Auras[i];
0				self.Auras[a].id = a;
0				if (self.Auras[a].Timer) then
0					self.Auras[a].Timer.id = a;
				end
0				if (i>a) then
0					self.Auras[i] = nil;
				end
0				a = a+1;
			end
		end
		-- gere les liens vers les effets globaux
0		for i = 121, 360 do
0			if (self.Auras[i]) then 
0				PowaGlobalSet[i] = self.Auras[i]; 
			else
0				PowaGlobalSet[i] = nil;
			end
		end
	end
	
4	function PowaAuras:DeleteAura(aura)
0		if (aura.Timer) then aura.Timer:Delete(); end
0		if (aura.Stacks) then aura.Stacks:Delete(); end
		
0		self.Frames[aura.id] = nil;
0		self.Textures[aura.id] = nil;
0		self.SecondaryAuras[aura.id] = nil;
0		self.SecondaryFrames[aura.id] = nil;
0		self.SecondaryTextures[aura.id] = nil;
	
0		self.Auras[aura.id] = nil;
0		if (aura.id > 120) then
0			PowaGlobalSet[aura.id] = nil;
		end
	end
	
4	function PowaAuras:OptionDeleteEffect(auraId)
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		if (not IsControlKeyDown()) then return; end
	
0		local aura = self.Auras[auraId];
0		if (not aura) then return; end
		
0		aura:Hide();
0		self:DeleteAura(aura);
	
0		getglobal("PowaSelected"):Hide();
	
0		if (getglobal("PowaBarConfigFrame"):IsVisible()) then
0			getglobal("PowaBarConfigFrame"):Hide();
		end
	
0		self:TriageIcones(self.MainOptionPage); -- trie les trous
0		self:UpdateMainOption();
	end
	
4	function PowaAuras:GetNextFreeSlot()
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- Found a free slot		
0				return i;
			end
		end
0		return nil;
	end
	
4	function PowaAuras:OptionNewEffect()
	
0		local i = self:GetNextFreeSlot();
0		if (not i) then
0			self:Message("All aura slots filled"); --OK
0			return;
		end
	                   
		--self:Message("New Effect slot=", i)
0		self.CurrentAuraId = i;
0		self.CurrentAuraPage = self.MainOptionPage;
0		local aura = self:AuraFactory(PowaAuras.BuffTypes.Buff, i, {buffname = "???", off = false});
		--self:Message("Timer.enabled=", aura.Timer.enabled)
0		self.Auras[i] = aura;
0		self.Showing = true;
		-- effet global ?
0		if (i > 120) then
0			PowaGlobalSet[i] = aura;
		end
0		self:DisplayAura(i);
0		self:UpdateMainOption();
0		self:InitPage();
0		self:UpdateTimerOptions();
0		if (not getglobal("PowaBarConfigFrame"):IsVisible()) then
0			getglobal("PowaBarConfigFrame"):Show();
0			PlaySound("TalentScreenOpen");
		end
		--self:Debug("New aura ", i);
		--aura:Display();
	
	end
	
	
4	function PowaAuras:ExtractImportValue(valueType, value)
0		if valueType == "st" then
0			return value;
0		elseif valueType == "bo" then
0			if value == "false" then
0				return false;
0			elseif value == "true" then
0				return true;
			end
0		elseif valueType == "nu" then
0			return tonumber(value);
		end
0		return nil;
	end
	
4	function PowaAuras:ImportAura(aurastring, auraId, offset)
	
		--self:Message("Import ", auraId);
		--self:Message(aurastring);
	
0		local aura = cPowaAura(auraId);
	
0		local aurastring = string.gsub(aurastring,";%s*",";");
0		local temptbl = {strsplit(";", aurastring)};
0		local importAuraSettings = {};
0		local importTimerSettings = {};
0		local importStacksSettings = {};
0		local hasTimerSettings = false;
0		local hasStacksSettings = false;
	
0		for i, val in ipairs(temptbl) do
			--self:Message(i, "  ", val);
0			local key, var = strsplit(":", val);
0			local varpref = string.sub(var,1,2);
0			var = string.sub(var,3);
0			if (string.sub(key,1,6)  == "timer.") then
0				importTimerSettings[key] = self:ExtractImportValue(varpref, var);
0				hasTimerSettings = true;
0			elseif (string.sub(key,1,7)  == "stacks.") then
0				importStacksSettings[key] = self:ExtractImportValue(varpref, var);
0				hasStacksSettings = true;
			else
0			    importAuraSettings[key] = self:ExtractImportValue(varpref, var);
			end
	 	end
		
0		for k, v in pairs(aura) do
0			local varType = type(v);
			--self:Message(k, "  ", v, "  ", varType, "  ", importAuraSettings[k]);
0			if (k=="combat") then
0				if (importAuraSettings.combat==0) then
0					aura.combat = 0;
0				elseif (importAuraSettings.combat==1) then
0					aura.combat = true;
0				elseif (importAuraSettings.combat==2) then
0					aura.combat = false;
				end
0			elseif (k=="isResting") then
0				if (importAuraSettings.ignoreResting) then
0					aura.isResting = true;
				else
0					aura.isResting = 0;
				end
0			elseif (k=="inRaid") then
0				if (importAuraSettings.isinraid==true) then
0					aura.inRaid = true;
				else
0					aura.inRaid = 0;
				end	
0			elseif (k=="multiids" and offset) then
0				local newMultiids = "";
0				local sep = "";
0				for multiId in string.gmatch(importAuraSettings[k], "[^/]+") do
0					newMultiids = newMultiids .. sep .. tostring(offset + multiId);
0					sep = "/";
				end
0				aura[k] = newMultiids;
0			elseif (varType == "string" or varType == "boolean" or varType == "number" and k~="id") then
0				aura[k] = importAuraSettings[k];
			end
		end	
		
0		if (aura.bufftype==self.BuffTypes.Combo) then --backwards compatability
0			if (string.len(aura.buffname)>1 and string.find(aura.buffname, "/", 1, true)==nil) then
0				local newBuffName=string.sub(aura.buffname, 1, 1);
0				for i=2, string.len(aura.buffname) do
0					newBuffName = newBuffName.."/"..string.sub(aura.buffname, i, i);
				end
0				aura.buffname = newBuffName
			end
		end
		
0		if (importAuraSettings.timer) then --backwards compatability
0			aura.Timer = cPowaTimer(aura);
		end
		
		--self:Message("hasTimerSettings=", hasTimerSettings);
0		if (hasTimerSettings) then
			--self:CreateTimerFrameIfMissing(aura.id)
0			if (aura.Timer==nil) then
0				aura.Timer = cPowaTimer(aura);
			end
0			for k in pairs(aura.Timer) do
0				aura.Timer[k] = importTimerSettings["timer."..k];
			end
		end
0		if (hasStacksSettings) then
			--self:CreateTimerFrameIfMissing(aura.id)
0			if (aura.Stacks==nil) then
0				aura.Stacks = cPowaStacks(aura);
			end
0			for k in pairs(aura.Stacks) do
0				aura.Stacks[k] = importStacksSettings["stacks."..k];
			end
		end
		--self:Message("new Aura created from import");
		--aura:Display();
0		return self:AuraFactory(aura.bufftype, auraId, aura);
	end
	
	
4	function PowaAuras:CreateNewAuraFromImport(auraId, importString, updateLink)
0		if importString==nil or importString == "" then
0			return;
		end
0		self.Auras[auraId] = self:ImportAura(importString, auraId, updateLink);
0		if (auraId > 120) then
0			PowaGlobalSet[auraId] = self.Auras[auraId];
		end				
	end
	
4	function PowaAuras:CreateNewAuraSetFromImport(importString)
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
0			if (self.Auras[i] ~= nil) then	
0				PowaAuras:DeleteAura(self.Auras[i]);
			end
		end
	
0		local auraId = min;
0		local offset;
0		for k, v in string.gmatch(importString, "([^\n=@]+)=([^@]+)@") do
			--self:ShowText("k=", k, " len=", string.len(v));
0			if (k=="Set") then
0				if (not string.find(v, PowaAuras.Text.ListePlayer)) then
0					PowaPlayerListe[self.MainOptionPage] = v;
				end
			else
0				if (not offset) then
0					local _, _, oldAuraId = string.find(k, "(%d+)");
					--self:ShowText("oldAuraId=", oldAuraId);
0					offset = min - oldAuraId;
					--self:ShowText(" offset=", offset);
				end
0				self.Auras[auraId] = self:ImportAura(v, auraId, offset);
0				auraId = auraId + 1;
			end
	    end
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetText( PowaPlayerListe[self.MainOptionPage] );
0		if (self.MainOptionPage > 5) then
0			PowaGlobalListe[self.MainOptionPage-5] = getglobal("PowaOptionsRenameEditBox"):GetText();
		else
0			PowaPlayerListe[self.MainOptionPage] = getglobal("PowaOptionsRenameEditBox"):GetText();
		end
	
0		self:UpdateMainOption();
	end
	
4	function PowaAuras:OptionImportEffect()
	
0		local i = self:GetNextFreeSlot();
0		if (not i) then
0			self:Message("All aura slots filled"); -- OK
0			return;
		end
	                       
0		self.ImportAuraId = i;
0		self.CurrentAuraPage = self.MainOptionPage;
	
0		StaticPopup_Show("POWERAURAS_IMPORT_AURA");
				
	end
	
4	function PowaAuras:OptionExportEffect()
0		if self.Auras[self.CurrentAuraId] then
0			StaticPopup_Show("POWERAURAS_EXPORT_AURA");
		end
	end
	
4	function PowaAuras:CreateAuraSetString()
0		local setString = "Set=" .. PowaPlayerListe[self.MainOptionPage].."@";
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
			--self:ShowText(i);
0			if (self.Auras[i] ~= nil and self.Auras[i].buffname ~= "" and self.Auras[i].buffname ~= " ") then	
0				setString = setString .. "\nAura[" .. tostring(i) .. "]=" .. self.Auras[i]:CreateAuraString(true).."@";
				--self:ShowText("Aura[" .. tostring(i) .. "]");
			end
		end
0		return setString;
	end
	
4	function PowaAuras:OptionImportSet()
0		StaticPopup_Show("POWERAURAS_IMPORT_AURA_SET");		
	end
	
4	function PowaAuras:OptionExportSet()
0		StaticPopup_Show("POWERAURAS_EXPORT_AURA_SET");
	end
	
4	function PowaAuras:DisableMoveMode()
0		getglobal("PowaOptionsMove"):UnlockHighlight();
0		getglobal("PowaOptionsCopy"):UnlockHighlight();
0		self.MoveEffect = 0;
0		for i = 1, 15 do
0			getglobal("PowaOptionsList"..i.."Glow"):Hide();
		end
		-- reactive les boutons
0		getglobal("PowaOptionsMove"):Enable();
0		getglobal("PowaOptionsCopy"):Enable();
0		getglobal("PowaOptionsRename"):Enable();
0		getglobal("PowaEditButton"):Enable();
0		getglobal("PowaMainTestButton"):Enable();
0		getglobal("PowaMainHideAllButton"):Enable();
0		getglobal("PowaOptionsSelectorNew"):Enable();
0		getglobal("PowaOptionsSelectorDelete"):Enable();
	end
	
4	function PowaAuras:OptionMoveEffect(isMove)
	
0		if (self.Auras[self.CurrentAuraId] == nil or self.Auras[self.CurrentAuraId].buffname == "" or self.Auras[self.CurrentAuraId].buffname == " ") then
0			return; -- on essaye de deplacer un effet vide !!
		end
	
		-- illumine le bouton pour dire que c'est actif
0		if (self.MoveEffect == 0) then
0			if (isMove) then
0				self.MoveEffect = 2;
0				getglobal("PowaOptionsMove"):LockHighlight();
0				getglobal("PowaOptionsCopy"):Disable();
			else
0				self.MoveEffect = 1;
0				getglobal("PowaOptionsCopy"):LockHighlight();
0				getglobal("PowaOptionsMove"):Disable();
			end
0			for i = 1, 15 do
0				getglobal("PowaOptionsList"..i.."Glow"):SetVertexColor(0.5,0.5,0.5);
0				getglobal("PowaOptionsList"..i.."Glow"):Show();
			end
			-- annule tous les boutons
0			getglobal("PowaOptionsRename"):Disable();
0			getglobal("PowaEditButton"):Disable();
0			getglobal("PowaMainTestButton"):Disable();
0			getglobal("PowaMainHideAllButton"):Disable();
0			getglobal("PowaOptionsSelectorNew"):Disable();
0			getglobal("PowaOptionsSelectorDelete"):Disable();
		else
0			self:DisableMoveMode();
		end
	end
	
4	function PowaAuras:BeginMoveEffect(Pfrom, ToPage)
0	  local min = ((ToPage-1)*24) + 1;
0	  local max = min + 23;
		-- trouve un endroit dispo dans la page choisie
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- on a trouve une place dispo
0				self:DoCopyEffect(Pfrom, i, true); -- copie et efface effet actuel
0				self:TriageIcones(self.CurrentAuraPage); -- trie les pages pour eviter les trous
0				self.CurrentAuraId = ((self.MainOptionPage-1)*24)+1; -- nouvelle aura en cours sera le premier effet de cette page
				-- gere les visus
0				self:DisableMoveMode();
				-- met a jour la page
0				self:UpdateMainOption();
0				return;
			end
		end
	end
	
4	function PowaAuras:BeginCopyEffect(Pfrom, ToPage)
0	  local min = ((ToPage-1)*24) + 1;
0	  local max = min + 23;
		-- trouve un endroit dispo dans la page choisie
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- on a trouve une place dispo
0				self:DoCopyEffect(Pfrom, i, false); -- copie et efface effet actuel
0				self.CurrentAuraId = i; -- nouvelle aura en cours sera l'effet cree
				-- gere les visus
0				self:DisableMoveMode();
				-- met a jour la page
0				self:UpdateMainOption();
0				return;
			end
		end
	end
	
4	function PowaAuras:DoCopyEffect(idFrom, idTo, isMove)
0		self.Auras[idTo] = self:AuraFactory(self.Auras[idFrom].bufftype, idTo, self.Auras[idFrom]);
		
0		if (self.Auras[idFrom].Timer) then
0			self.Auras[idTo].Timer = cPowaTimer(self.Auras[idTo], self.Auras[idFrom].Timer);
		end
		
0		if (self.Auras[idFrom].Stacks) then
0			self.Auras[idTo].Stacks = cPowaStacks(self.Auras[idTo], self.Auras[idFrom].Stacks);
		end
	
0		if (idTo > 120) then -- on entre dans la zone des effets globaux
0			PowaGlobalSet[idTo] = self.Auras[idTo];
		end
	
0		if (isMove) then
0			self:DeleteAura(self.Auras[idFrom]);
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
4	function PowaAuras:MainOptionShow()
		--self:ShowText("MainOptionShow");
0		if (PowaOptionsFrame:IsVisible()) then
0			self:MainOptionClose();
		else
0			self:OptionHideAll();
0			self.ModTest = true;
0			self:UpdateMainOption();
0			getglobal("PowaOptionsFrame"):Show();
0			PlaySound("TalentScreenOpen");
0			if (PowaMisc.Disabled) then
0				self:DisplayText("Power Auras "..self.Colors.Red..ADDON_DISABLED.."|r");
			end
		end
	end
	
4	function PowaAuras:MainOptionClose()
		--self:ShowText("MainOptionClose");
0		self:DisableMoveMode();
0		self.ModTest = false;
0		if ColorPickerFrame:IsVisible() then
0			self.CancelColor();
0			ColorPickerFrame:Hide();
		end
0		getglobal("FontSelectorFrame"):Hide();
0		getglobal("PowaBarConfigFrame"):Hide();
0		getglobal("PowaOptionsFrame"):Hide();
0		PlaySound("TalentScreenClose");
	
0		PowaAuras:OptionHideAll();
	    
0		self:FindAllChildren();
0		self:CreateEffectLists();	
0		self.DoCheck.All = true;
0		self:NewCheckBuffs();
0	 	self:MemorizeActions();
	end
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< MAIN OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
4	function PowaAuras:UpdateTimerOptions()
	
0		local timer = self.Auras[self.CurrentAuraId].Timer;
0		if (timer) then
			
0			getglobal("PowaShowTimerButton"):SetChecked(timer.enabled);
	
0			getglobal("PowaTimerAlphaSlider"):SetValue(timer.a);
0			getglobal("PowaTimerSizeSlider"):SetValue(timer.h);
			-- ajuste slider Y
0			getglobal("PowaTimerCoordSlider"):SetMinMaxValues(timer.y-5000,timer.y+5000);
0			getglobal("PowaTimerCoordSliderLow"):SetText(timer.y-100);
0			getglobal("PowaTimerCoordSliderHigh"):SetText(timer.y+100);
0			getglobal("PowaTimerCoordSlider"):SetValue(timer.y);
0			getglobal("PowaTimerCoordSlider"):SetMinMaxValues(timer.y-100,timer.y+100);
			-- ajuste slider X
0			getglobal("PowaTimerCoordXSlider"):SetMinMaxValues(timer.x-5000,timer.x+5000);
0			getglobal("PowaTimerCoordXSliderLow"):SetText(timer.x-100);
0			getglobal("PowaTimerCoordXSliderHigh"):SetText(timer.x+100);
0			getglobal("PowaTimerCoordXSlider"):SetValue(timer.x);
0			getglobal("PowaTimerCoordXSlider"):SetMinMaxValues(timer.x-100,timer.x+100);
	
0			getglobal("PowaBuffTimerCentsButton"):SetChecked(timer.cents);
0			getglobal("PowaBuffTimerDualButton"):SetChecked(timer.dual);
0			getglobal("PowaBuffTimerLeadingZerosButton"):SetChecked(timer.HideLeadingZeros);
0			getglobal("PowaBuffTimerUpdatePingButton"):SetChecked(timer.UpdatePing);
0			getglobal("PowaBuffTimerTransparentButton"):SetChecked(timer.Transparent);
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownTimerTexture, timer.Texture);
			
0			PowaTimerInvertAuraSlider:SetValue(timer.InvertAuraBelow);
	
	
		end
	end
	
4	function PowaAuras:UpdateStacksOptions()
	
0		local stacks = self.Auras[self.CurrentAuraId].Stacks;
0		if (stacks) then
			
0			getglobal("PowaShowStacksButton"):SetChecked(stacks.enabled);
	
0			getglobal("PowaStacksAlphaSlider"):SetValue(stacks.a);
0			getglobal("PowaStacksSizeSlider"):SetValue(stacks.h);
			-- ajuste slider Y
0			getglobal("PowaStacksCoordSlider"):SetMinMaxValues(stacks.y-5000,stacks.y+5000);
0			getglobal("PowaStacksCoordSliderLow"):SetText(stacks.y-100);
0			getglobal("PowaStacksCoordSliderHigh"):SetText(stacks.y+100);
0			getglobal("PowaStacksCoordSlider"):SetValue(stacks.y);
0			getglobal("PowaStacksCoordSlider"):SetMinMaxValues(stacks.y-100,stacks.y+100);
			-- ajuste slider X
0			getglobal("PowaStacksCoordXSlider"):SetMinMaxValues(stacks.x-5000,stacks.x+5000);
0			getglobal("PowaStacksCoordXSliderLow"):SetText(stacks.x-100);
0			getglobal("PowaStacksCoordXSliderHigh"):SetText(stacks.x+100);
0			getglobal("PowaStacksCoordXSlider"):SetValue(stacks.x);
0			getglobal("PowaStacksCoordXSlider"):SetMinMaxValues(stacks.x-100,stacks.x+100);
	
0			getglobal("PowaBuffStacksTransparentButton"):SetChecked(stacks.Transparent);
0			getglobal("PowaBuffStacksUpdatePingButton"):SetChecked(stacks.UpdatePing);
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownStacksTexture, stacks.Texture);
	
		end
	end
	
	
4	function PowaAuras:SetOptionText(optionsText)
		--self:ShowText("typeText=", optionsText.typeText);
0		PowaDropDownBuffTypeText:SetText(optionsText.typeText);
0		if (optionsText.buffNameTooltip) then
0			PowaBarBuffName:Show();
0			PowaBarBuffName.aide = optionsText.buffNameTooltip;
		else
0			self:DisableTextfield("PowaBarBuffName");
		end
0		if (optionsText.exactTooltip) then
0			self:EnableCheckBox("PowaExactButton");
0			PowaExactButton.aide = optionsText.exactTooltip;
		else
0			self:DisableCheckBox("PowaExactButton");
		end
0		if (optionsText.mineText) then
0			self:EnableCheckBox("PowaMineButton");
0			PowaMineButtonText:SetText(optionsText.mineText);
0			PowaMineButton.tooltipText = optionsText.mineTooltip; 
		else
0			PowaMineButton:SetChecked(false);
0			self:DisableCheckBox("PowaMineButton");
		end
0		if (optionsText.targetFriendText) then
0			self:EnableCheckBox("PowaTargetFriendButton");
0			PowaTargetFriendButtonText:SetText(optionsText.targetFriendText);
0			PowaTargetFriendButton.tooltipText = optionsText.targetFriendTooltip; 
		else
0			PowaTargetFriendButton:SetChecked(false);
0			self:DisableCheckBox("PowaTargetFriendButton");
		end
		
	end
	
4	function PowaAuras:ShowOptions(optionsToShow)
0		for k,v in pairs(self.OptionHideables) do
0			if (optionsToShow and optionsToShow[v]) then
0				getglobal(v):Show();
			else
0				getglobal(v):Hide();
			end
		end
	end
	
4	function PowaAuras:EnableCheckBoxes(checkBoxesToEnable)
		--self:ShowText("EnableCheckBoxes");
0		for k,v in pairs(self.OptionCheckBoxes) do
			--self:ShowText(v, " checkBoxesToEnable=", checkBoxesToEnable[v]);
0			if (checkBoxesToEnable and checkBoxesToEnable[v]) then
				--self:ShowText(v, " Colours=", self.SetColours[v]);
0				self:EnableCheckBox(v, self.SetColours[v]);
			else
0				getglobal(v):SetChecked(false);
0				self:DisableCheckBox(v);	
			end
		end
	end
	
4	function PowaAuras:EnableTernary(ternariesToEnable)
		--self:ShowText("EnableTernary");
0		for k,v in pairs(self.OptionTernary) do
			--self:ShowText(v, " ternariesToEnable=", ternariesToEnable[v]);
0			if (not ternariesToEnable or not ternariesToEnable[v]) then
				--self:ShowText("Disable Ternary ",v);
				--self:Ternary_Set(getglobal(v));
0				self:DisableTernary(getglobal(v));
			end
		end
	end
	
	
4	function PowaAuras:SetupOptionsForAuraType(aura)
		--self:ShowText("aura=", aura);
	
0		self:SetOptionText(aura.OptionText);
0		self:ShowOptions(aura.ShowOptions);
0		self:EnableCheckBoxes(aura.CheckBoxes);
0		self:EnableTernary(aura.Ternary);
	
0		if (aura:ShowTimerDurationSlider()) then
0			PowaTimerDurationSlider:Show();
		else
0			PowaTimerDurationSlider:Hide();
		end
		
0		if (aura.CanHaveInvertTime) then
0			PowaTimerInvertAuraSlider:Show();
		else
0			PowaTimerInvertAuraSlider:Hide();
		end
	end
	
4	function PowaAuras:InitPage()
	
		--self:ShowText("InitPage ", self.CurrentAuraId);
	
0		local CheckTexture = 0;
0	    local aura = self.Auras[self.CurrentAuraId];
		--self:Message("aura ", aura);
0		self:UpdateTimerOptions();
	
0		getglobal("PowaDropDownAnim1Text"):SetText(self.Anim[aura.anim1]);
0		getglobal("PowaDropDownAnim2Text"):SetText(self.Anim[aura.anim2]);
0		getglobal("PowaDropDownAnimBeginText"):SetText(self.BeginAnimDisplay[aura.begin]);
0		getglobal("PowaDropDownAnimEndText"):SetText(self.EndAnimDisplay[aura.finish]);
0		getglobal("PowaDropDownSoundText"):SetText(self.Sound[aura.sound]);
0		getglobal("PowaDropDownStanceText"):SetText(self.PowaStance[aura.stance]);
0		getglobal("PowaBarCustomSound").aide = self.Text.aideCustomSound;
0		getglobal("PowaBarBuffStacks").aide = self.Text.aideStacks;
		-- ---------------
0		getglobal("PowaOwntexButton"):SetChecked(aura.owntex);
0		getglobal("PowaWowTextureButton"):SetChecked(aura.wowtex);
0		getglobal("PowaCustomTextureButton"):SetChecked(aura.customtex);
0		getglobal("PowaTextAuraButton"):SetChecked(aura.textaura);
0		getglobal("PowaRandomColorButton"):SetChecked(aura.randomcolor);
0		getglobal("PowaShowSpinAtBeginning"):SetChecked(aura.beginSpin);
0		getglobal("PowaOldAnimation"):SetChecked(aura.UseOldAnimations);
0		getglobal("PowaIngoreCaseButton"):SetChecked(aura.ignoremaj);
0		getglobal("PowaInverseButton"):SetChecked(aura.inverse);
0		getglobal("PowaTargetButton"):SetChecked(aura.target);
0		getglobal("PowaTargetFriendButton"):SetChecked(aura.targetfriend);
0		getglobal("PowaPartyButton"):SetChecked(aura.party);
0		getglobal("PowaFocusButton"):SetChecked(aura.focus);
0		getglobal("PowaRaidButton"):SetChecked(aura.raid);
0		getglobal("PowaGroupOrSelfButton"):SetChecked(aura.groupOrSelf);
0		getglobal("PowaGroupAnyButton"):SetChecked(aura.groupany);
0		getglobal("PowaOptunitnButton"):SetChecked(aura.optunitn);
0		getglobal("PowaExactButton"):SetChecked(aura.exact);
0		getglobal("PowaMineButton"):SetChecked(aura.mine);
0		getglobal("PowaThresholdInvertButton"):SetChecked(aura.thresholdinvert);
		-- ----------------
0		getglobal("PowaTexModeButton"):SetChecked(aura.texmode == 1);
	
		-- Ternary Logic
0		self:TernarySetState(getglobal("PowaInCombatButton"), aura.combat);
0		self:TernarySetState(getglobal("PowaIsInRaidButton"), aura.inRaid);
0		self:TernarySetState(getglobal("PowaIsInPartyButton"), aura.inParty);
0		self:TernarySetState(getglobal("PowaRestingButton"), aura.isResting);
0		self:TernarySetState(getglobal("PowaIsMountedButton"), aura.ismounted);
0		self:TernarySetState(getglobal("PowaInVehicleButton"), aura.inVehicle);
0		self:TernarySetState(getglobal("PowaIsAliveButton"), aura.isAlive);
	
0		getglobal("PowaTimerDurationSlider"):SetValue(aura.timerduration);
0		getglobal("PowaBarThresholdSlider"):SetValue(aura.threshold);
		----------------
		-- dual specs
0		self:EnableCheckBox("PowaTalentGroup1Button");
0		self:EnableCheckBox("PowaTalentGroup2Button");
0		getglobal("PowaTalentGroup1Button"):SetChecked(aura.spec1);
0		getglobal("PowaTalentGroup2Button"):SetChecked(aura.spec2);
		
		
0		aura:HideShowTabs();
0		self:SetupOptionsForAuraType(aura);
	
		-- changement de page
0		if (getglobal("PowaBarConfigFrameEditor4"):IsVisible() and not PowaEditorTab3:IsVisible() ) then
0			PanelTemplates_SelectTab(PowaEditorTab2);
0			PanelTemplates_DeselectTab(PowaEditorTab1);
0			PanelTemplates_DeselectTab(PowaEditorTab3);
0			getglobal("PowaBarConfigFrameEditor2"):Show();
0			getglobal("PowaBarConfigFrameEditor3"):Hide();
0			getglobal("PowaBarConfigFrameEditor4"):Hide();
		end
		-- Visuels auras
0		getglobal("PowaBarAuraAlphaSlider"):SetValue(aura.alpha);
0		getglobal("PowaBarAuraSizeSlider"):SetValue(aura.size);
		-- ajuste slider Y
0		getglobal("PowaBarAuraCoordSlider"):SetMinMaxValues(aura.y-5000,aura.y+5000);
0		getglobal("PowaBarAuraCoordSliderLow"):SetText(aura.y-200);
0		getglobal("PowaBarAuraCoordSliderHigh"):SetText(aura.y+200);
0		getglobal("PowaBarAuraCoordSlider"):SetValue(aura.y);
0		getglobal("PowaBarAuraCoordSlider"):SetMinMaxValues(aura.y-200,aura.y+200);
0		getglobal("PowaBarAuraCoordYEdit"):SetText(aura.y);
		-- ajuste slider X
0		getglobal("PowaBarAuraCoordXSlider"):SetMinMaxValues(aura.x-5000,aura.x+5000);
0		getglobal("PowaBarAuraCoordXSliderLow"):SetText(aura.x-200);
0		getglobal("PowaBarAuraCoordXSliderHigh"):SetText(aura.x+200);
0		getglobal("PowaBarAuraCoordXSlider"):SetValue(aura.x);
0		getglobal("PowaBarAuraCoordXSlider"):SetMinMaxValues(aura.x-200,aura.x+200);
0		getglobal("PowaBarAuraCoordXEdit"):SetText(aura.x);
	
0		getglobal("PowaBarAuraAnimSpeedSlider"):SetValue(aura.speed);
		
0		getglobal("PowaBarAuraDurationSlider"):SetValue(aura.duration);
0		getglobal("PowaBarAuraDurationSlider"):SetMinMaxValues(aura.minDuration or 0,30);
0		if (not aura.minDuration or aura.minDuration==0) then
0			getglobal("PowaBarAuraDurationSliderLow"):SetText(PowaAuras.Text.aucune);
		else
0			getglobal("PowaBarAuraDurationSliderLow"):SetText(aura.minDuration);
		end
		
0		getglobal("PowaBarAuraSymSlider"):SetValue(aura.symetrie);
0		getglobal("PowaBarAuraDeformSlider"):SetValue(aura.torsion);
0		getglobal("PowaBarBuffName"):SetText(aura.buffname);
0		getglobal("PowaBarMultiID"):SetText(aura.multiids);
0		getglobal("PowaBarTooltipCheck"):SetText(aura.tooltipCheck);
	
0		getglobal("PowaBarCustomSound"):SetText(aura.customsound);
0		getglobal("PowaBarUnitn"):SetText(aura.unitn);
		
0		getglobal("PowaBarBuffStacks"):SetText(aura:StacksText());	
		
0		if (aura.icon == "") then
0			getglobal("PowaIconTexture"):SetTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
		else
0			getglobal("PowaIconTexture"):SetTexture(aura.icon);
		end
	    
0		if (aura.optunitn == true) then
0			self:EnableTextfield("PowaBarUnitn");
0		elseif (aura.optunitn == false) then
0			self:DisableTextfield("PowaBarUnitn");
		end
	
0		if (aura.owntex) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(aura.icon);
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
			
0		elseif (aura.wowtex) then
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			if (#self.WowTextures > self.maxtextures) then
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
			else
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
			end
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(#self.WowTextures);
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.WowTextures[aura.texture]);
	
0		elseif (aura.customtex) then
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			getglobal("PowaBarCustomTexName"):Show();
0			getglobal("PowaBarCustomTexName"):SetText(aura.customname);
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura) then
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Show();
0			getglobal("PowaFontsButton"):Show();
0			getglobal("PowaBarAurasText"):SetText(aura.aurastext);
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Icons\\INV_Scroll_02");  --- Driizt: check if need to test as well
		else
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			if (#self.WowTextures < self.maxtextures) then
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
			else
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
			end
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(self.maxtextures);
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
0		if (CheckTexture ~= 1) then
0			getglobal("AuraTexture"):SetTexture("Interface\\CharacterFrame\\TempPortrait.tga");
		end
	
0		getglobal("PowaColorNormalTexture"):SetVertexColor(aura.r,aura.g,aura.b);
0		getglobal("AuraTexture"):SetVertexColor(aura.r,aura.g,aura.b);
	
		-- affiche la symetrie
0		if (aura.symetrie == 1) then 
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 0, 1); -- inverse X
0		elseif (aura.symetrie == 2) then 
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 1, 0); -- inverse Y
0		elseif (aura.symetrie == 3) then 
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 1, 0); -- inverse XY
		else 
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 0, 1); 
		end
	
0		getglobal("PowaColor_SwatchBg").r = aura.r;
0		getglobal("PowaColor_SwatchBg").g = aura.g;
0		getglobal("PowaColor_SwatchBg").b = aura.b;
	
0		getglobal("PowaHeader"):SetText(self.Text.nomEffectEditor);
	end
	-----------------------------------------------------------------------------------------------------------------------
	-- Sliders Changed
	-----------------------------------------------------------------------------------------------------------------------
	
4	function PowaAuras:BarAuraTextureSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraTextureSlider"):GetValue();
0		local CheckTexture = 0;
0		local auraId = self.CurrentAuraId;
		
0		if (self.Auras[auraId].owntex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.Auras[auraId].icon);
	
0		elseif (self.Auras[auraId].wowtex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.WowTextures[SliderValue]);
	
0		elseif (self.Auras[auraId].customtex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self:CustomTexPath(self.Auras[auraId].customname));
		
0		elseif (self.Auras[auraId].textaura == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Icons\\INV_Scroll_02"); 
		
		else
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..SliderValue..".tga");
		end
		
0		if (CheckTexture ~= 1) then
0			getglobal("AuraTexture"):SetTexture("Interface\\CharacterFrame\\TempPortrait.tga");
		end
			
0		getglobal("PowaBarAuraTextureSliderText"):SetText(self.Text.nomTexture.." : "..SliderValue);
0		getglobal("AuraTexture"):SetVertexColor(self.Auras[auraId].r,self.Auras[auraId].g,self.Auras[auraId].b);
		
0		PowaBarAuraTextureEdit:SetText(SliderValue);
		
0		self.Auras[auraId].texture = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:TextAuraTextureChanged()
0		local thisText = getglobal("PowaBarAuraTextureEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		getglobal("PowaBarAuraTextureSlider"):SetValue(thisNumber or 0);
	end
	
	 
4	function PowaAuras:BarAuraAlphaSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraAlphaSlider"):GetValue();
	
0		getglobal("PowaBarAuraAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[self.CurrentAuraId].alpha = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraSizeSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraSizeSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[auraId].size = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraCoordSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraCoordSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
0		if (getglobal("PowaBarAuraCoordYEdit")) then
0			getglobal("PowaBarAuraCoordYEdit"):SetText(SliderValue);
		end
	
0		self.Auras[auraId].y = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraCoordXSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraCoordXSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
0		if (getglobal("PowaBarAuraCoordXEdit")) then
0			getglobal("PowaBarAuraCoordXEdit"):SetText(SliderValue);
		end
	
0		self.Auras[auraId].x = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraAnimSpeedSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraAnimSpeedSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
	
0		getglobal("PowaBarAuraAnimSpeedSliderText"):SetText(self.Text.nomSpeed.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[auraId].speed = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraAnimDurationSliderChanged(control)
0		if (self.Initialising) then return; end
0		local sliderValue = control:GetValue();
	
0		getglobal(control:GetName().."Text"):SetText(self.Text.nomDuration.." : "..sliderValue.." sec");
	
		--self:ShowText("Duration set to ", sliderValue);
0		self.Auras[self.CurrentAuraId].duration = sliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraSymSliderChanged()
0		if (self.Initialising) then return; end
	
0		local SliderValue = getglobal("PowaBarAuraSymSlider"):GetValue();
	
0		if (SliderValue == 0) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : "..self.Text.aucune);
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 0, 1);
0		elseif (SliderValue == 1) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : X");
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 0, 1);
0		elseif (SliderValue == 2) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : Y");
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 1, 0);
0		elseif (SliderValue == 3) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : XY");
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 1, 0);
		end
		
0		self.Auras[self.CurrentAuraId].symetrie = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarAuraDeformSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraDeformSlider"):GetValue();
	
0		getglobal("PowaBarAuraDeformSliderText"):SetText(self.Text.nomDeform.." : "..format("%.2f", SliderValue));
	
0		self.Auras[self.CurrentAuraId].torsion = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:BarThresholdSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarThresholdSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
	
0		getglobal("PowaBarThresholdSliderText"):SetText(self.Text.nomThreshold.." : "..SliderValue.."%");
	
0		self.Auras[auraId].threshold = SliderValue;
	end
	
	------------------------------------------------------------------
	-- Text Changed
	------------------------------------------------------------------
	
4	function PowaAuras:TextCoordXChanged()
0		local thisText = getglobal("PowaBarAuraCoordXEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		local auraId = self.CurrentAuraId;
	
0		if (thisNumber == nil) then
0			getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..0);
0			getglobal("PowaBarAuraCoordXSlider"):SetValue(0);
0			getglobal("PowaBarAuraCoordXEdit"):SetText(0);
0			self.Auras[auraId].x = 0;	
		else
0			if (thisNumber > 300 or thisNumber < -300) then
0				getglobal("PowaBarAuraCoordXEdit"):SetText(thisNumber);
0				self:DisableSlider("PowaBarAuraCoordXSlider");
			else
0				self:EnableSlider("PowaBarAuraCoordXSlider");
0				getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..thisNumber);
0				getglobal("PowaBarAuraCoordXSlider"):SetValue(thisNumber);
			end
0			self.Auras[auraId].x = thisNumber;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:TextCoordYChanged()
0		local thisText = getglobal("PowaBarAuraCoordYEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		local auraId = self.CurrentAuraId;
	
0		if (thisNumber == nil) then
0			getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..0);
0			getglobal("PowaBarAuraCoordSlider"):SetValue(0);
0			getglobal("PowaBarAuraCoordYEdit"):SetText(0);
0			self.Auras[auraId].y = 0;	
		else
0			if (thisNumber > 300 or thisNumber < -300) then
0				getglobal("PowaBarAuraCoordYEdit"):SetText(thisNumber);
0				self:DisableSlider("PowaBarAuraCoordSlider");
			else
0				self:EnableSlider("PowaBarAuraCoordSlider");
0				getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..thisNumber);
0				getglobal("PowaBarAuraCoordSlider"):SetValue(thisNumber);
			end
0			self.Auras[auraId].y = thisNumber;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:TextChanged()
0		local oldText = PowaBarBuffName:GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldText ~= self.Auras[auraId].buffname) then
0			self.Auras[auraId].buffname = PowaBarBuffName:GetText();
0			self.Auras[auraId].icon = "";
0			PowaIconTexture:SetTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
		end
	end
	
4	function PowaAuras:MultiIDChanged()
0		local oldText = getglobal("PowaBarMultiID"):GetText();
0		local auraId = self.CurrentAuraId;
0		if (oldText ~= self.Auras[auraId].multiids) then
0			self.Auras[auraId].multiids = getglobal("PowaBarMultiID"):GetText();
0			self:FindAllChildren();
		end
	end
	
4	function PowaAuras:TooltipCheckChanged()
0		local oldText = getglobal("PowaBarTooltipCheck"):GetText();
0		local auraId = self.CurrentAuraId;
0		if (oldText ~= self.Auras[auraId].tooltipCheck) then
0			self.Auras[auraId].tooltipCheck = getglobal("PowaBarTooltipCheck"):GetText();
		end
	end
	
4	function PowaAuras:StacksTextChanged()
0		local aura = self.Auras[self.CurrentAuraId];
0		aura:SetStacks(getglobal("PowaBarBuffStacks"):GetText());
	end
	
4	function PowaAuras:UnitnTextChanged()
0		local oldUnitnText = getglobal("PowaBarUnitn"):GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldUnitnText ~= self.Auras[auraId].unitn) then
0			self.Auras[auraId].unitn = getglobal("PowaBarUnitn"):GetText();
		end
	end
	
4	function PowaAuras:CustomTextChanged()
0		local auraId = self.CurrentAuraId;
0		self.Auras[auraId].customname = getglobal("PowaBarCustomTexName"):GetText();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:AurasTextCancel()
0		local auraId = self.CurrentAuraId;
0		getglobal("PowaBarAurasText"):SetText(self.Auras[auraId].aurastext);
	end
	
4	function PowaAuras:AurasTextChanged()
0		local auraId = self.CurrentAuraId;
0		self.Auras[auraId].aurastext = getglobal("PowaBarAurasText"):GetText();
		--self:Message("aura text changed to ", self.Auras[auraId].aurastext);
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:CustomSoundTextChanged()
0		local oldCustomSound = getglobal("PowaBarCustomSound"):GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldCustomSound ~= self.Auras[auraId].customsound) then -- meme texte
0			self.Auras[auraId].customsound = getglobal("PowaBarCustomSound"):GetText();
0			if not (self.Auras[auraId].customsound == "") then
0				PlaySoundFile("Interface\\AddOns\\PowerAuras\\Sounds\\"..self.Auras[auraId].customsound);
			end
		end	
	end
	
	---------------------------------
	-- Checkboxes changed
	---------------------------------
	
4	function PowaAuras:InverseChecked()
0		local aura = self.Auras[self.CurrentAuraId];
0		if (getglobal("PowaInverseButton"):GetChecked()) then
0			aura.inverse = true;
		else
0			aura.inverse = false;
		end
0		aura:HideShowTabs();
	end
	
4	function PowaAuras:IgnoreMajChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaIngoreCaseButton"):GetChecked()) then
0			self.Auras[auraId].ignoremaj = true;
		else
0			self.Auras[auraId].ignoremaj = false;
		end
	end
	
4	function PowaAuras:ExactChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaExactButton"):GetChecked()) then
0			self.Auras[auraId].exact = true;
		else
0			self.Auras[auraId].exact = false;
		end
	end
	
4	function PowaAuras:TalentGroup1Checked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTalentGroup1Button"):GetChecked()) then
0			self.Auras[auraId].spec1 = true;
	        else
0			self.Auras[auraId].spec1 = false;
		end
	end
	
4	function PowaAuras:TalentGroup2Checked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTalentGroup2Button"):GetChecked()) then
0			self.Auras[auraId].spec2 = true;
		else
0			self.Auras[auraId].spec2 = false;
		end
	end
	
4	function PowaAuras:MineChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaMineButton"):GetChecked()) then
0			self.Auras[auraId].mine = true;
		else
0			self.Auras[auraId].mine = false;
		end
	end
	
	
4	function PowaAuras:CheckedButtonOnClick(button, key)
0		self.Auras[self.CurrentAuraId][key] = (button:GetChecked()~=nil);
	end
	
4	function PowaAuras:RandomColorChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaRandomColorButton"):GetChecked()) then
0			self.Auras[auraId].randomcolor = true;
		else
0			self.Auras[auraId].randomcolor = false;
		end
	end
	
4	function PowaAuras:TexModeChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTexModeButton"):GetChecked()) then
0			self.Auras[auraId].texmode = 1;
		else
0			self.Auras[auraId].texmode = 2;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:ThresholdInvertChecked(owner)
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaThresholdInvertButton"):GetChecked()) then
0			self.Auras[auraId].thresholdinvert = true;
		else
0			self.Auras[auraId].thresholdinvert = false;
		end
	end
	
	------------------------------------
	
4	function PowaAuras:OwntexChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaOwntexButton"):GetChecked()) then
0			self.Auras[auraId].owntex = true;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].customtex = false;
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].owntex = false;
		end	
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:WowTexturesChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaWowTextureButton"):GetChecked()) then
0			self.Auras[auraId].wowtex = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].customtex = false;
0			self.Auras[auraId].textaura = false;
			
0			getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
0			getglobal("PowaBarAuraTextureSlider"):SetValue(1);
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(#self.WowTextures);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].wowtex = false;
0			getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
0			getglobal("PowaBarAuraTextureSlider"):SetValue(1);
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(self.maxtextures);
		end
0		PowaAuras:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:CustomTexturesChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaCustomTextureButton"):GetChecked()) then
0			self.Auras[auraId].customtex = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Show();
0			getglobal("PowaBarCustomTexName"):SetText(self.Auras[auraId].customname);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].customtex = false;
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
		end
0		PowaAuras:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:TextAuraChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTextAuraButton"):GetChecked()) then
0			self.Auras[auraId].textaura = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].customtex = false;
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarAurasText"):Show();
0			getglobal("PowaFontsButton"):Show();
0			getglobal("PowaBarAurasText"):SetText(self.Auras[auraId].aurastext);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaBarCustomTexName"):Hide();
		else
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		end
0		self:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
	-----------------------------------------------
	-- Targets, Party, Raid, ... Checkboxes
	-----------------------------------------------
	
4	function PowaAuras:TargetChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTargetButton"):GetChecked()) then
0			self.Auras[auraId].target = true;
		else
0			self.Auras[auraId].target = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:TargetFriendChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTargetFriendButton"):GetChecked()) then
0			self.Auras[auraId].targetfriend = true;
		else
0			self.Auras[auraId].targetfriend = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:PartyChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaPartyButton"):GetChecked()) then
0			self.Auras[auraId].party = true;
		else
0			self.Auras[auraId].party = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:GroupOrSelfChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaGroupOrSelfButton"):GetChecked()) then
0			self.Auras[auraId].groupOrSelf = true;
		else
0			self.Auras[auraId].groupOrSelf = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:FocusChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaFocusButton"):GetChecked()) then
0			self.Auras[auraId].focus = true;
		else
0			self.Auras[auraId].focus = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:RaidChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaRaidButton"):GetChecked()) then
0			self.Auras[auraId].raid = true;
		else
0			self.Auras[auraId].raid = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:GroupAnyChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaGroupAnyButton"):GetChecked()) then
0			self.Auras[auraId].groupany = true;
		else
0			self.Auras[auraId].groupany = false;
		end
0		self:InitPage();
	end
	
4	function PowaAuras:OptunitnChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaOptunitnButton"):GetChecked()) then
0			self.Auras[auraId].optunitn = true;		
0			getglobal("PowaBarUnitn"):Show();
0			getglobal("PowaBarUnitn"):SetText(self.Auras[auraId].unitn);
		else
0			self.Auras[auraId].optunitn = false;
0			getglobal("PowaBarUnitn"):Hide();
		end
	end
	
	------------------------------------------
	-- Dropdownmenus
	------------------------------------------
	
4	function PowaAuras.DropDownMenu_Initialize(owner)
0		local info;
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura == nil) then
0			aura = PowaAuras:AuraFactory(PowaAuras.BuffTypes.Buff, 0);
		end
		
0		if (owner:GetName() == "PowaDropDownAnim1Button" or owner:GetName() == "PowaDropDownAnim1") then
0			for i = 1, 10 do
0				info = {}; 
0				info.text = PowaAuras.Anim[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickAnim1;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnim1, PowaAuras.Anim[aura.anim1]);
0		elseif (owner:GetName() == "PowaDropDownAnim2Button" or owner:GetName() == "PowaDropDownAnim2") then
0			for i = 0, 10 do
0				info = {}; 
0				info.text = PowaAuras.Anim[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickAnim2;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnim2, PowaAuras.Anim[aura.anim2]);
0		elseif (owner:GetName() == "PowaDropDownStanceButton" or owner:GetName() == "PowaDropDownStance") then
0			info = {func = PowaAuras.DropDownMenu_OnClickStance, owner = owner};
0			for i = 0, #(PowaAuras.PowaStance) do
0				info.text = PowaAuras.PowaStance[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end				
0			UIDropDownMenu_SetSelectedValue(PowaDropDownStance, PowaAuras.PowaStance[aura.stance]);
0			UIDropDownMenu_SetWidth(PowaDropDownStance, 210, 1);
0		elseif (owner:GetName() == "PowaDropDownSoundButton" or owner:GetName() == "PowaDropDownSound") then
0			for i = 0, 15 do
0				info = {}; 
0				info.text = PowaAuras.Sound[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickSound;
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownSound, PowaAuras.Sound[aura.sound]);	
0			UIDropDownMenu_SetWidth(PowaDropDownSound, 220, 1);
0		elseif (owner:GetName() == "PowaDropDownAnimBeginButton" or owner:GetName() == "PowaDropDownAnimBegin") then
0			info = {func = PowaAuras.DropDownMenu_OnClickBegin, owner = owner}; 
0			for i = 0, #PowaAuras.BeginAnimDisplay do
0				info.text = PowaAuras.BeginAnimDisplay[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnimBegin, PowaAuras.BeginAnimDisplay[aura.begin]);
0		elseif (owner:GetName() == "PowaDropDownAnimEndButton" or owner:GetName() == "PowaDropDownAnimEnd") then
0			info = {func = PowaAuras.DropDownMenu_OnClickEnd, owner = owner}; 
0			for i = 0, #PowaAuras.EndAnimDisplay do
0				info.text = PowaAuras.EndAnimDisplay[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnimEnd, PowaAuras.EndAnimDisplay[aura.finish]);
0		elseif (owner:GetName() == "PowaDropDownBuffTypeButton" or owner:GetName() == "PowaDropDownBuffType") then
			--PowaAuras:Message("DropDownMenu_Initialize for buff type");
	
0			info = {func = PowaAuras.DropDownMenu_OnClickBuffType, owner = owner};
0			for _,v in pairs(PowaAuras.BuffTypes) do
0				info.text = PowaAuras.Text.AuraType[v];
0				info.value = v;
0				UIDropDownMenu_AddButton(info);
			end
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownBuffType, aura.bufftype);
		end
	end
	
4	function PowaAuras.DropDownMenu_OnClickBuffType()
		--PowaAuras:Message("DropDownMenu_OnClickBuffType bufftype ", this.value, " for aura ", PowaAuras.CurrentAuraId, " ", this.owner);
	
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
	
0		aura = PowaAuras:AuraFactory(this.value, PowaAuras.CurrentAuraId, PowaAuras.Auras[PowaAuras.CurrentAuraId]);
0		aura.icon= "";
0		PowaAuras.Auras[PowaAuras.CurrentAuraId] = aura
0		if (PowaAuras.CurrentAuraId > 120) then
0			PowaGlobalSet[PowaAuras.CurrentAuraId] = aura;
		end				
	
	
0		if (aura.bufftype == PowaAuras.BuffTypes.TypeDebuff
0		 or aura.bufftype == PowaAuras.BuffTypes.AoE
0		 or aura.bufftype == PowaAuras.BuffTypes.Enchant
0		 or aura.bufftype == PowaAuras.BuffTypes.Combo
0		 or aura.bufftype == PowaAuras.BuffTypes.Health
0		 or aura.bufftype == PowaAuras.BuffTypes.Mana
0		 or aura.bufftype == PowaAuras.BuffTypes.EnergyRagePower
0		 or aura.bufftype == PowaAuras.BuffTypes.Aggro
0		 or aura.bufftype == PowaAuras.BuffTypes.PvP
0		 or aura.bufftype == PowaAuras.BuffTypes.Stance) then
0			aura.owntex = false;
		end
	
0		PowaAuras:InitPage();
	end
	
	
4	function PowaAuras:ShowSpinAtBeginningChecked(control)
0		local aura = self.Auras[self.CurrentAuraId];
0		if (control:GetChecked()) then
0			aura.beginSpin = true;
		else
0			aura.beginSpin = false;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:OldAnimationChecked(control)
0		local aura = self.Auras[self.CurrentAuraId];
0		if (control:GetChecked()) then
0			aura.UseOldAnimations = true;
		else
0			aura.UseOldAnimations = false;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras.DropDownMenu_OnClickAnim1(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
		--PowaAuras:ShowText("DropDownMenu_OnClickAnim1 optionID=", optionID, " auraId=", auraId);
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnim1, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnim1); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnim1, optionName);
	
0		PowaAuras.Auras[auraId].anim1 = optionID;
0		PowaAuras:RedisplayAura(auraId);
	end
	
4	function PowaAuras.DropDownMenu_OnClickAnim2(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnim2, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnim2); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnim2, optionName);
	
0		PowaAuras.Auras[auraId].anim2 = optionID -1;
0		PowaAuras:RedisplayAura(auraId);
	end
	
4	function PowaAuras.DropDownMenu_OnClickSound(owner)
0		local optionID = owner:GetID();
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownSound, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownSound); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownSound, optionName);
	
0		aura.sound = optionID -1;
0		if (aura.sound == 1) then
0			aura.soundfile = "LEVELUP";
0		elseif (aura.sound == 2) then
0			aura.soundfile = "LOOTWINDOWCOINSOUND";
0		elseif (aura.sound == 3) then
0			aura.soundfile = "MapPing";
0		elseif (aura.sound == 4) then
0			aura.soundfile = "UndeadExploration";
0		elseif (aura.sound == 5) then
0			aura.soundfile = "QUESTADDED";
0		elseif (aura.sound == 6) then
0			aura.soundfile = "QUESTCOMPLETED";
0		elseif (aura.sound == 7) then
0			aura.soundfile = "WriteQuest";
0		elseif (aura.sound == 8) then
0			aura.soundfile = "Fishing Reel in";
0		elseif (aura.sound == 9) then
0			aura.soundfile = "igPVPUpdate";
0		elseif (aura.sound == 10) then
0			aura.soundfile = "ReadyCheck";
0		elseif (aura.sound == 11) then
0			aura.soundfile = "RaidWarning";
0		elseif (aura.sound == 12) then
0			aura.soundfile = "AuctionWindowOpen";
0		elseif (aura.sound == 13) then
0			aura.soundfile = "AuctionWindowClose";
0		elseif (aura.sound == 14) then
0			aura.soundfile = "TellMessage";
0		elseif (aura.sound == 15) then
0			aura.soundfile = "igBackPackOpen";
0		elseif (aura.sound == 0) then
0			aura.soundfile = "";	
		end	
0		if not(aura.soundfile == "") or not (aura.soundfile == nil)then
0			PlaySound(aura.soundfile);
		end	
	end
	
4	function PowaAuras.DropDownMenu_OnClickStance()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local auraId = PowaAuras.CurrentAuraId;
	
0		if (PowaAuras.Auras[auraId].stance ~= this.value) then
0			PowaAuras.Auras[auraId].stance = this.value;
0			PowaAuras.Auras[auraId].icon = "";
		end
0		PowaAuras:InitPage();
	end
	
4	function PowaAuras.DropDownMenu_OnClickBegin(owner)
0		UIDropDownMenu_SetSelectedID(this.owner, this.value + 1); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnimBegin); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnimBegin, optionName);
	
0		PowaAuras.Auras[PowaAuras.CurrentAuraId].begin = this.value;
0		PowaAuras:RedisplayAura(auraId);
	end
	
4	function PowaAuras.DropDownMenu_OnClickEnd(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnimEnd, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnimEnd); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnimEnd, optionName);
	
0		PowaAuras.Auras[auraId].finish = optionID - 1;
0		PowaAuras:RedisplayAura(auraId);
	end
	
	----------------------------------------------------------
	-- OPTIONS DEPLACEMENT
	
4	function PowaAuras:Bar_MouseDown(owner, button, frmFrame)
0		if( button == "LeftButton") then
0			getglobal( frmFrame ):StartMoving( );
		end
	end
	
4	function PowaAuras:Bar_MouseUp(owner, button, frmFrame)
0		getglobal( frmFrame ):StopMovingOrSizing( );
	end
	
	----------------------------------------------------------
	-- COLOR PICKER
	
4	function PowaAuras.SetColor()
0		PowaAuras:SetAuraColor(ColorPickerFrame:GetColorRGB());
	end
	
4	function PowaAuras.CancelColor()
0		PowaAuras:SetAuraColor(ColorPickerFrame.previousValues.r, ColorPickerFrame.previousValues.g, ColorPickerFrame.previousValues.b);
	end
	
4	function PowaAuras:SetAuraColor(r, g, b)
		--self:Message("SetColor r=", r, " g=",g, " b=", b);
0		local swatch = getglobal("PowaColorNormalTexture"); -- juste le visuel
0		local frame = getglobal("PowaColor_SwatchBg");      -- enregistre la couleur
0		swatch:SetVertexColor(r,g,b);
0		frame.r = r;
0		frame.g = g;
0		frame.b = b;
	
0		self.Auras[self.CurrentAuraId].r = r;
0		self.Auras[self.CurrentAuraId].g = g;
0		self.Auras[self.CurrentAuraId].b = b;
	
0		getglobal("AuraTexture"):SetVertexColor(r,g,b);
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
4	function PowaAuras:OpenColorPicker()
0		CloseMenus();
0		if ColorPickerFrame:IsVisible() then
0			PowaAuras.CancelColor();
0			ColorPickerFrame:Hide();
		else
0			button = getglobal("PowaColor_SwatchBg");
	
0			ColorPickerFrame.func = self.SetColor -- button.swatchFunc;
0			ColorPickerFrame:SetColorRGB(button.r, button.g, button.b);
0			ColorPickerFrame.previousValues = {r = button.r, g = button.g, b = button.b, opacity = button.opacity};
0			ColorPickerFrame.cancelFunc = self.CancelColor
		
0			ColorPickerFrame:SetPoint("TOPLEFT", "PowaBarConfigFrame", "TOPRIGHT", 0, 0)
		
0			ColorPickerFrame:Show();
		end
	end
	
	----------------------------------------------------------
	-- FONT SELECTOR
	
4	function PowaAuras:FontSelectorOnShow(owner)
0		owner:SetBackdropBorderColor(0.9, 1.0, 0.95); 
0		owner:SetBackdropColor(0.6, 0.6, 0.6);
	end
	
4	function PowaAuras:OpenFontSelector(owner)
0		CloseMenus();
		
0		if (FontSelectorFrame:IsVisible()) then
0			getglobal("FontSelectorFrame"):Hide();
		else
0			FontSelectorFrame.selectedFont = self.Auras[self.CurrentAuraId].aurastextfont;	
0			getglobal("FontSelectorFrame"):Show();
		end
		
	end
	
4	function PowaAuras:FontSelectorOkay(owner)
0		if FontSelectorFrame.selectedFont then
0			self.Auras[self.CurrentAuraId].aurastextfont = FontSelectorFrame.selectedFont;
		else
0			self.Auras[self.CurrentAuraId].aurastextfont = 1;
		end
0		self:RedisplayAura(self.CurrentAuraId);
0		self:FontSelectorClose(owner);
	end
	
4	function PowaAuras:FontSelectorCancel(owner)
0		self:FontSelectorClose(owner);
	end
	
4	function PowaAuras:FontSelectorClose(owner)
0		if (FontSelectorFrame:IsVisible()) then
0			getglobal("FontSelectorFrame"):Hide();
		end
	end
	
4	function PowaAuras:FontButton_OnClick(owner)
0		FontSelectorFrame.selectedFont = getglobal("FontSelectorEditorScrollButton"..owner:GetID()).font;
0		self:FontScrollBar_Update(owner);
	end
	
4	function PowaAuras.FontScrollBar_Update(owner)
0		local fontOffset = FauxScrollFrame_GetOffset(FontSelectorEditorScrollFrame); 
0		local fontIndex;
0		local fontName, namestart, nameend;
		
0		for i=1, 10, 1 do
0			fontIndex = fontOffset + i;
0			fontName = PowaAuras.Fonts[fontIndex];
0			fontText = getglobal("FontSelectorEditorScrollButton"..i.."Text");
0			fontButton = getglobal("FontSelectorEditorScrollButton"..i);
0			fontButton.font = fontIndex;
			
0			namestart = string.find(fontName, "\\", 1, true);
0			nameend = string.find(fontName, ".", 1, true);
0			if namestart and nameend and (nameend > namestart) then
0				fontName = string.sub(fontName, namestart+1, nameend-1);
0				while string.find(fontName, "\\", 1, true) do
0					namestart = string.find(fontName, "\\", 1, true)
0					fontName = string.sub(fontName, namestart+1);
				end
			end	
0			fontText:SetFont(PowaAuras.Fonts[fontIndex], 14, "OUTLINE, MONOCHROME");
0			fontText:SetText(fontName);
0			if FontSelectorFrame.selectedFont == fontIndex then
0				fontButton:LockHighlight();
			else
0				fontButton:UnlockHighlight();
			end	
		end
		
0		FauxScrollFrame_Update(FontSelectorEditorScrollFrame, #PowaAuras.Fonts, 10, 16 );
		
	end
	
	----------------------------------------------------------------------
4	function PowaAuras:EditorShow()
0		if (PowaBarConfigFrame:IsVisible()) then
0			self:EditorClose();
0			return;
		end
0		local aura = self.Auras[self.CurrentAuraId];
0		if (aura) then
			--if (aura.Timer and aura.Timer.enabled) then
			--	self:CreateTimerFrameIfMissing(aura.id);
			--end
0			self:InitPage();
0			getglobal("PowaBarConfigFrame"):Show();
0			PlaySound("TalentScreenOpen");
		end
	end
	
4	function PowaAuras:EditorClose() --- ferme la fenetre d'option
0		if (PowaBarConfigFrame:IsVisible()) then
0			if (FontSelectorFrame:IsVisible()) then
0				getglobal("FontSelectorFrame"):Hide();
			end
0			if (ColorPickerFrame:IsVisible()) then
0				self.CancelColor();
0				ColorPickerFrame:Hide();
			end
0			getglobal("PowaBarConfigFrame"):Hide();
0			PlaySound("TalentScreenClose");
		end
	end
	
	-- <<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<< ADV. OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
4	function PowaAuras:UpdateOptionsTimer(auraId)
	
0		if (self.Initialising) then return; end
		
0		local timerOpts = self.Auras[auraId].Timer;
		
0	    local frame1 = self.TimerFrame[auraId][1];	
0		frame1:SetAlpha(math.min(timerOpts.a,0.99));
0		frame1:SetWidth(20 * timerOpts.h);
0		frame1:SetHeight(20 * timerOpts.h);
0		frame1:SetPoint("Center", timerOpts.x, timerOpts.y);
	
0	    local frame2 = self.TimerFrame[auraId][2];
0		frame2:SetAlpha(timerOpts.a * 0.75);
0		frame2:SetWidth(14 * timerOpts.h);
0		frame2:SetHeight(14 * timerOpts.h);
0		frame2:SetPoint("LEFT", frame1, "RIGHT", 1, -1.5);
	
	end
	
	
4	function PowaAuras:UpdateOptionsStacks(auraId)
0		if (self.Initialising) then return; end  
		
0		local stackOpts = self.Auras[auraId].Stacks;
		
0	    local frame = self.StacksFrames[auraId];	
0		frame:SetAlpha(math.min(stackOpts.a, 0.99));
0		frame:SetWidth(20 * stackOpts.h);
0		frame:SetHeight(20 * stackOpts.h);
0		frame:SetPoint("Center", stackOpts.x, stackOpts.y);
	end
	
4	function PowaAuras:ShowTimerChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer.enabled = true;
			--self:CreateTimerFrameIfMissing(self.CurrentAuraId);	
		else
0			self.Auras[self.CurrentAuraId].Timer.enabled = false;
0			self.Auras[self.CurrentAuraId].Timer:Delete();
		end
	end
	
4	function PowaAuras:TimerAlphaSliderChanged()
0		local SliderValue = getglobal("PowaTimerAlphaSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
		
0		getglobal("PowaTimerAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Timer.a = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerSizeSliderChanged()
0		local SliderValue = getglobal("PowaTimerSizeSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Timer.h = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerCoordSliderChanged()
0		local SliderValue = getglobal("PowaTimerCoordSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Timer.y = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerCoordXSliderChanged()
0		local SliderValue = getglobal("PowaTimerCoordXSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Timer.x = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:PowaTimerInvertAuraSliderChanged(slider)
0		if (self.Initialising) then return; end
	
0		local text;
0		if (self.Auras[self.CurrentAuraId].InvertTimeHides) then
0			text = self.Text.nomTimerHideAura;
0			slider.aide = PowaAuras.Text.aidePowaTimerHideAuraSlider;
		else
0			text = self.Text.nomTimerInvertAura;
0			slider.aide = PowaAuras.Text.aidePowaTimerInvertAuraSlider;
		end
0		getglobal(slider:GetName().."Text"):SetText(text.." : "..slider:GetValue().." sec");
	
0		self.Auras[self.CurrentAuraId].Timer.InvertAuraBelow = slider:GetValue();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerDurationSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaTimerDurationSlider"):GetValue();
	
0		getglobal("PowaTimerDurationSliderText"):SetText(self.Text.nomTimerDuration.." : "..SliderValue.." sec");
	
0		self.Auras[self.CurrentAuraId].timerduration = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerChecked(control, setting)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer[setting] = true;
		else
0			self.Auras[self.CurrentAuraId].Timer[setting] = false;
		end
0		self.Auras[self.CurrentAuraId].Timer:Delete();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
4	function PowaAuras:TimerTransparentChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer.Transparent = true;
		else
0			self.Auras[self.CurrentAuraId].Timer.Transparent = false;
		end
0		self.Auras[self.CurrentAuraId].Timer:Delete();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
	------ Stacks ----
	
4	function PowaAuras:ShowStacksChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Stacks.enabled = true;
		else
0			self.Auras[self.CurrentAuraId].Stacks.enabled = false;
0			self.Auras[self.CurrentAuraId].Stacks:Delete();
		end
	end
	
4	function PowaAuras:StacksAlphaSliderChanged()
0		local SliderValue = getglobal("PowaStacksAlphaSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
		
0		getglobal("PowaStacksAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Stacks.a = SliderValue;
	end
	
4	function PowaAuras:StacksSizeSliderChanged()
0		local SliderValue = getglobal("PowaStacksSizeSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Stacks.h = SliderValue;
	end
	
4	function PowaAuras:StacksCoordSliderChanged()
0		local SliderValue = getglobal("PowaStacksCoordSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Stacks.y = SliderValue;
	end
	
4	function PowaAuras:StacksCoordXSliderChanged()
0		local SliderValue = getglobal("PowaStacksCoordXSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Stacks.x = SliderValue;
	end
	
	
4	function PowaAuras:StacksChecked(control, setting)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Stacks[setting] = true;
		else
0			self.Auras[self.CurrentAuraId].Stacks[setting] = false;
		end
0		self.Auras[self.CurrentAuraId].Stacks:Delete();
	end
	
	-- ----------------------------------------------------------- LIGNE DE COMMANDE
	
2	function PowaAuras_CommanLine(msg)
0		if (msg=="dump") then
0			PowaAuras:Dump();
0			PowaAuras:DisplayText("State dumped to"); -- OK
0			PowaAuras:DisplayText("WTF \\ Account \\ <ACCOUNT> \\ "..GetRealmName().." \\ "..UnitName("player").." \\ SavedVariables \\ PowerAuras.lua"); -- OK
0			PowaAuras:DisplayText("You must log-out to save the values to disk (at end of fight/raid is fine)"); -- OK
0		elseif (msg=="toggle" or msg=="tog") then
0			PowaAuras:Toggle();
		else
0			PowaAuras:MainOptionShow();
		end
	end
	
	------------------------------------
	-- Enable/Disable Options Functions
	------------------------------------
	
4	function PowaAuras:DisableSlider(slider)
0		getglobal(slider):EnableMouse(false);
0		getglobal(slider.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		getglobal(slider.."Low"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		getglobal(slider.."High"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
4	function PowaAuras:EnableSlider(slider)
0		getglobal(slider):EnableMouse(true);
0		getglobal(slider.."Text"):SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
0		getglobal(slider.."Low"):SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
0		getglobal(slider.."High"):SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
	end
	
4	function PowaAuras:DisableTextfield(textfield)
0		getglobal(textfield):Hide();
0		getglobal(textfield.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
4	function PowaAuras:EnableTextfield(textfield)
0		getglobal(textfield):Show();
0		getglobal(textfield.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
4	function PowaAuras:DisableCheckBox(checkBox)
0		getglobal(checkBox):Disable();
0		getglobal(checkBox.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
4	function PowaAuras:EnableCheckBox(checkBox, colour)
		--self:ShowText("EnableCheckBox ", checkBox); 
0		getglobal(checkBox):Enable();
0		if (not colour) then
0			colour = NORMAL_FONT_COLOR;
		end
		--self:ShowText("r=", color.r, " g=", color.g, " b=", color.b); 
0		getglobal(checkBox.."Text"):SetTextColor(colour.r, colour.g, colour.b);	
	end
	
	---- Blizzard Addon -----
	
4	function PowaAuras:EnableChecked()
		--PowaAuras:ShowText("EnableChecked");
0		if (PowaEnableButton:GetChecked()) then
0			self:Toggle(true);
		else
0			self:MainOptionClose();
0			self:Toggle(false);
		end
	end
	
4	function PowaAuras:DebugChecked()
0		if (PowaDebugButton:GetChecked()) then
0			PowaMisc.debug = true;
		else
0			PowaMisc.debug = false;
		end
	end
	
4	function PowaAuras:TimerRoundingChecked()
0		if (PowaTimerRoundingButton:GetChecked()) then
0			PowaMisc.TimerRoundUp = true;
		else
0			PowaMisc.TimerRoundUp = false;
		end
	end
	
4	function PowaAuras:GTFOChecked(control)
0		if (control:GetChecked()) then
0			PowaMisc.UseGTFO = true;
		else
0			PowaMisc.UseGTFO = false;
		end
	end
	
4	function PowaAuras.OptionsOK()
0		PowaMisc.OnUpdateLimit = (100 - PowaOptionsUpdateSlider2:GetValue()) / 200;
0		local newFps = PowaOptionsAnimationsSlider2:GetValue();
0		if (newFps~=PowaMisc.AnimationFps) then
0			PowaMisc.AnimationFps = newFps;
0			for auraId in pairs(PowaAuras.Auras) do
0				PowaAuras:RedisplayAura(auraId);
			end
		end
0		PowaMisc.AnimationLimit = (100 - PowaOptionsTimerUpdateSlider2:GetValue()) / 1000;
0		PowaAuras:EnableChecked();
0		PowaAuras:DebugChecked();
0		PowaAuras:TimerRoundingChecked();
	
0		local newDefaultTimerTexture = UIDropDownMenu_GetSelectedValue(PowaDropDownDefaultTimerTexture);
0		if (newDefaultTimerTexture~=PowaMisc.DefaultTimerTexture) then
0			PowaMisc.DefaultTimerTexture = newDefaultTimerTexture;
0			for auraId, aura in pairs(PowaAuras.Auras) do
0				if (aura.Timer and aura.Timer.Texture == "Default") then
0					aura.Timer:Hide(); -- Options Recreate
0					PowaAuras.TimerFrame[auraId] = {};
0					PowaAuras:CreateTimerFrame(auraId, 1);
0					PowaAuras:CreateTimerFrame(auraId, 2);
				end
			end
		end
0		local newDefaultStacksTexture = UIDropDownMenu_GetSelectedValue(PowaDropDownDefaultStacksTexture);
0		if (newDefaultStacksTexture~=PowaMisc.DefaultStacksTexture) then
0			PowaMisc.DefaultStacksTexture = newDefaultStacksTexture;
0			for auraId, aura in pairs(PowaAuras.Auras) do
0				if (aura.Stacks and aura.Stacks.Texture == "Default") then
0					aura.Stacks:Hide();
0					PowaAuras.StacksFrames[auraId].texture:SetTexture(aura.Stacks:GetTexture());
				end
			end
0			PowaAuras.StacksFrames = {};
		end
0		PowaAuras.ModTest = false;
0		PowaAuras.DoCheck.All = true;
	end
	
4	function PowaAuras.OptionsCancel(arg1, arg2)
		--PowaAuras:ShowText("OptionsCancel arg1=",arg1," arg2=",arg2);
0		PowaOptionsCpuFrame2_OnShow();
0		PowaAuras.ModTest = false;
0		PowaAuras.DoCheck.All = true;
	end
	
4	function PowaAuras:OptionsDefault()
0		PowaMisc.OnUpdateLimit = 0;
0		PowaMisc.AnimationLimit = 0;
0		PowaMisc.Disabled = false;
0		PowaMisc.debug = false;
0		PowaOptionsCpuFrame2_OnShow();
	end
	
2	function PowaOptionsCpuFrame2_OnLoad(panel)
0		panel.name = GetAddOnMetadata("PowerAuras", "Title");
0		panel.okay = function (self) PowaAuras.OptionsOK();  end;
0		panel.cancel = function (self) PowaAuras:OptionsCancel();  end;
0		panel.default = function (self) PowaAuras.OptionsDefault();  end;
0		InterfaceOptions_AddCategory(panel);
	end
	
2	function PowaOptionsCpuFrame2_OnShow(hide)
		--PowaAuras:ShowText("PowaOptionsCpuFrame2_OnShow");
		--PowaAuras:ShowText("OnUpdateLimit=", PowaMisc.OnUpdateLimit);
		--PowaAuras:ShowText("AnimationLimit=", PowaMisc.AnimationLimit);
		--PowaAuras:ShowText("Disabled=", PowaMisc.Disabled ~= false);
		--PowaAuras:ShowText("debug=", PowaMisc.debug);
2		PowaOptionsUpdateSlider2:SetValue(100-200*PowaMisc.OnUpdateLimit); 
2		PowaOptionsAnimationsSlider2:SetValue(PowaMisc.AnimationFps);
2		PowaOptionsTimerUpdateSlider2:SetValue(100-1000*PowaMisc.AnimationLimit);
2		PowaEnableButton:SetChecked(PowaMisc.Disabled ~= true);
2		PowaDebugButton:SetChecked(PowaMisc.debug);
2		PowaGTFOButton:SetChecked(PowaMisc.UseGTFO);
2		PowaTimerRoundingButton:SetChecked(PowaMisc.TimerRoundUp);
2		UIDropDownMenu_SetSelectedValue(PowaDropDownDefaultTimerTexture, PowaMisc.DefaultTimerTexture);
2		UIDropDownMenu_SetSelectedValue(PowaDropDownDefaultStacksTexture, PowaMisc.DefaultStacksTexture);
	end
	
4	function PowaAuras:PowaOptionsUpdateSliderChanged2(control)
0		PowaOptionsUpdateSlider2Text:SetText(self.Text.nomUpdateSpeed.." : "..control:GetValue().."%");
	end
	
4	function PowaAuras:PowaOptionsAnimationsSliderChanged2(control)
0		PowaOptionsAnimationsSlider2Text:SetText(self.Text.nomFPS.." : "..control:GetValue().." FPS");
	end
	
4	function PowaAuras:PowaOptionsTimerUpdateSliderChanged2(control)
0		PowaOptionsTimerUpdateSlider2Text:SetText(self.Text.nomTimerUpdate.." : "..control:GetValue().."%");
	end
	
4	function PowaAuras.DropDownDefaultTimerMenu_Initialize(owner)
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickDefault, PowaMisc.DefaultTimerTexture, false);
	end
	
4	function PowaAuras.DropDownDefaultStacksMenu_Initialize(owner)
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickDefault, PowaMisc.DefaultStacksTexture, false);
	end
	
4	function PowaAuras.DropDownMenu_OnClickDefault()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
	end
	
4	function PowaAuras:InitializeTextureDropdown(owner, onClick, currentValue, addDefaultOption)
		--self:ShowText("InitializeTextureDropdown currentValue=", currentValue, " addDefaultOption=", addDefaultOption);
0		local info = {func = onClick, owner = owner, text=PowaAuras.Text.Default};
0		if (addDefaultOption) then
0			UIDropDownMenu_AddButton(info);
		end
0		for k,v in pairs(PowaAuras.TimerTextures) do
0			info.text = v; 
0			UIDropDownMenu_AddButton(info);
		end
0		UIDropDownMenu_SetSelectedValue(owner, currentValue);
	end
	
	
4	function PowaAuras.DropDownTimerMenu_Initialize(owner)
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Timer==nil) then return; end
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickTimerTexture, aura.Timer.Texture, true);
	end
	
4	function PowaAuras.DropDownMenu_OnClickTimerTexture()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Timer==nil) then return; end
0		aura.Timer.Texture = this.value;
0		aura.Timer:Delete();
		--PowaAuras:CreateTimerFrameIfMissing(PowaAuras.CurrentAuraId);
	end
	
4	function PowaAuras.DropDownStacksMenu_Initialize(owner)
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Stacks==nil) then return; end
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickStacksTexture, aura.Stacks.Texture, true);
	end
	
4	function PowaAuras.DropDownMenu_OnClickStacksTexture()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Stacks==nil) then return; end
0		aura.Stacks.Texture = this.value;
0		aura.Stacks:Delete();
	end
	
	--- Ternary Logic ---
4	function PowaAuras:DisableTernary(control)
0		getglobal(control:GetName().."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		control:Disable();
	end
	
4	function PowaAuras:TernarySetState(button, value)
0		local label = getglobal(button:GetName().."Text")
0		button:Enable();
0		label:SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
	
0		if value==0 then
0			button:SetCheckedTexture("Interface\\Buttons\\UI-CheckBox-Check")
0			button:SetChecked(0)
0		elseif value==false then
0			button:SetCheckedTexture("Interface\\RAIDFRAME\\ReadyCheck-NotReady")
0			button:SetChecked(1)
0		elseif value==true then
0			button:SetCheckedTexture("Interface\\Buttons\\UI-CheckBox-Check")
0			button:SetChecked(1)
		end
	end
	
4	function PowaAuras.Ternary_OnClick()
	
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
		--PowaAuras:ShowText("Ternary_OnClick control=",this:GetName(), " Parameter=", this.Parameter);
0		if (aura[this.Parameter]==false) then
0			aura[this.Parameter] = true; -- Off => On
0		elseif (aura[this.Parameter]==true) then
0			aura[this.Parameter] = 0; -- On => Ingore
		else
0			aura[this.Parameter] = false; -- Ignore => Off
		end	
	
0		PowaAuras:TernarySetState(this, aura[this.Parameter]);
0		PowaAuras.Ternary_CheckTooltip(this)
	end
	
4	function PowaAuras.Ternary_CheckTooltip(button)
0		GameTooltip:SetOwner(button, "ANCHOR_RIGHT"); 
0		GameTooltip:SetText(PowaAuras.Text.TernaryAide[button.Parameter], nil, nil, nil, nil, 1); 
0		GameTooltip:AddLine(PowaAuras.Text.aideTernary.."\n\124TInterface\\Buttons\\UI-CheckBox-Up:22\124t = "..PowaAuras.Text.nomWhatever.."\n\124TInterface\\Buttons\\UI-CheckBox-Check:22\124t = "..PowaAuras.Text.TernaryYes[button.Parameter].."\n\124TInterface\\RAIDFRAME\\ReadyCheck-NotReady:22\124t = "..PowaAuras.Text.TernaryNo[button.Parameter], .8,.8,.8, 1) 
0		GameTooltip:Show()
	end

==============================================================================
../localisation.lua
==============================================================================
0	﻿--if (GetLocale() == "enEN") then
	
2	PowaAuras.Anim[0] = "[Invisible]";
2	PowaAuras.Anim[1] = "Static";
2	PowaAuras.Anim[2] = "Flashing";
2	PowaAuras.Anim[3] = "Growing";
2	PowaAuras.Anim[4] = "Pulse";
2	PowaAuras.Anim[5] = "Bubble";
2	PowaAuras.Anim[6] = "Water drop";
2	PowaAuras.Anim[7] = "Electric";
2	PowaAuras.Anim[8] = "Shrinking";
2	PowaAuras.Anim[9] = "Flame";
2	PowaAuras.Anim[10] = "Orbit";
	
2	PowaAuras.BeginAnimDisplay[0] = "[None]";
2	PowaAuras.BeginAnimDisplay[1] = "Zoom In";
2	PowaAuras.BeginAnimDisplay[2] = "Zoom Out";
2	PowaAuras.BeginAnimDisplay[3] = "Fade In";
2	PowaAuras.BeginAnimDisplay[4] = "Left";
2	PowaAuras.BeginAnimDisplay[5] = "Top-Left";
2	PowaAuras.BeginAnimDisplay[6] = "Top";
2	PowaAuras.BeginAnimDisplay[7] = "Top-Right";
2	PowaAuras.BeginAnimDisplay[8] = "Right";
2	PowaAuras.BeginAnimDisplay[9] = "Bottom-Right";
2	PowaAuras.BeginAnimDisplay[10] = "Bottom";
2	PowaAuras.BeginAnimDisplay[11] = "Bottom-Left";
2	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
2	PowaAuras.EndAnimDisplay[0] = "[None]";
2	PowaAuras.EndAnimDisplay[1] = "Grow";
2	PowaAuras.EndAnimDisplay[2] = "Shrink";
2	PowaAuras.EndAnimDisplay[3] = "Fade Out";
2	PowaAuras.EndAnimDisplay[4] = "Spin";
2	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
2	PowaAuras.Sound[0] = NONE;
2	PowaAuras.Sound[1] = "LEVELUP";
2	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
2	PowaAuras.Sound[3] = "MapPing";
2	PowaAuras.Sound[4] = "Exploration";
2	PowaAuras.Sound[5] = "QUESTADDED";
2	PowaAuras.Sound[6] = "QUESTCOMPLETED";
2	PowaAuras.Sound[7] = "WriteQuest";
2	PowaAuras.Sound[8] = "Fishing Reel in";
2	PowaAuras.Sound[9] = "igPVPUpdate";
2	PowaAuras.Sound[10] = "ReadyCheck";
2	PowaAuras.Sound[11] = "RaidWarning";
2	PowaAuras.Sound[12] = "AuctionWindowOpen";
2	PowaAuras.Sound[13] = "AuctionWindowClose";
2	PowaAuras.Sound[14] = "TellMessage";
2	PowaAuras.Sound[15] = "igBackPackOpen";
	
4	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
2		welcome = "Type /powa to view the options.",
	
2		aucune = "None",
2		aucun = "None",
2		largeur = "Width",
2		hauteur = "Height",
2		mainHand = "main",
2		offHand = "off",
2		bothHands = "both",
	
2		DebuffType =
0		{
2			Magic   = "Magic",
2			Disease = "Disease",
2			Curse   = "Curse",
2			Poison  = "Poison",
2		},
	
2		DebuffCatType =
0		{
2			[PowaAuras.DebuffCatType.CC] = "CC",
2			[PowaAuras.DebuffCatType.Silence] = "Silence",
2			[PowaAuras.DebuffCatType.Snare] = "Snare",
2			[PowaAuras.DebuffCatType.Stun] = "Stun",
2			[PowaAuras.DebuffCatType.Root] = "Root",
2			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
2			[PowaAuras.DebuffCatType.PvE] = "PvE",
2		},
		
2		AuraType =
0		{
2			[PowaAuras.BuffTypes.Buff] = "Buff",
2			[PowaAuras.BuffTypes.Debuff] = "Debuff",
2			[PowaAuras.BuffTypes.AoE] = "AOE Debuff",
2			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff type",
2			[PowaAuras.BuffTypes.Enchant] = "Weapon Enchant",
2			[PowaAuras.BuffTypes.Combo] = "Combo Points",
2			[PowaAuras.BuffTypes.ActionReady] = "Action Usable",
2			[PowaAuras.BuffTypes.Health] = "Health",
2			[PowaAuras.BuffTypes.Mana] = "Mana",
2			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
2			[PowaAuras.BuffTypes.Aggro] = "Aggro",
2			[PowaAuras.BuffTypes.PvP] = "PvP",
2			[PowaAuras.BuffTypes.Stance] = "Stance",
2			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
2			[PowaAuras.BuffTypes.OwnSpell] = "My Spell Cooldown", 
2			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
2			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
2		},
		
		-- main
2		nomEnable = "Activate Power Auras",
2		aideEnable = "Enable all Power Auras effects",
	
2		nomDebug = "Activate Debug Messages",
2		aideDebug = "Enable Debug Messages",
2		ListePlayer = "Page",
2		ListeGlobal = "Global",
2		aideMove = "Move the effect here.",
2		aideCopy = "Copy the effect here.",
2		nomRename = "Rename",
2		aideRename = "Rename the selected effect's page.",
2		nomTest = "Test",
2		nomHide = "Hide all",
2		nomEdit = "Edit",
2		nomNew = "New",
2		nomDel = "Delete",
2		nomImport = "Import", 
2		nomExport = "Export", 
2		nomImportSet = "Import Set", 
2		nomExportSet = "Export Set", 
2		aideImport = "Press Ctrl-V to paste the Aura-string and press \'Accept\'",
2		aideExport = "Press Ctrl-C to copy the Aura-string for sharing.",
2		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
2		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
2		aideDel = "Remove the selected effect (Hold CTRL to allow this button to work)",
2		nomMove = "Move",
2		nomCopy = "Copy",
2		nomPlayerEffects = "Character effects",
2		nomGlobalEffects = "Global\neffects",
2		aideEffectTooltip = "(Shift-click to toggle effect ON or OFF)",
	
		-- editor
2		nomSound = "Sound to play",
2		aideSound = "Plays a sound at the beginning.",
2		nomCustomSound = "OR soundfile:",
2		aideCustomSound = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
	
2		nomTexture = "Texture",
2		aideTexture = "The texture to be shown. You can easily replace textures by changing the files Aura#.tga in the Addon's directory.",
	
2		nomAnim1 = "Main Animation",
2		nomAnim2 = "Secondary Animation",
2		aideAnim1 = "Animate the texture or not, with various effects.",
2		aideAnim2 = "This animation will be shown with less opacity than the main animaton. Attention, to not overload the screen.",
	
2		nomDeform = "Deformation",
2		aideDeform = "Stretch the texture in height or in width.",
	
2		aideColor = "Click here to change the color of the texture.",
2		aideFont = "Click here to pick Font. Press OK to apply the selection.",
2		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", 
2		aideTooltipCheck = "Also check the tooltip contains this text",
	
2		aideBuff = "Enter here the name of the buff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Super Buff/Power)",
2		aideBuff2 = "Enter here the name of the debuff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Dark Disease/Plague)",
2		aideBuff3 = "Enter here the type of the debuff which must activate or deactivate the effect (Poison, Disease, Curse, Magic, CC, Silence, Stun, Snare, Root or None). You can enter several types (ex: Disease/Poison)",
2		aideBuff4 = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
2		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
2		aideBuff6 = "Enter here the number of combo points that must activate this effect (ex : 1 or 1/2/3 or 0/4/5 etc...) ",
2		aideBuff7 = "Enter here the name, or a part of the name, of an action in your action bars. The effect will be active when this action is usable.",
2		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
2		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.",
2		aideStacks = "Enter here the operator and the amount of stacks, required activate/deactivate the effect. Operator is required ex: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
2		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).", 
2		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).", 
	
2		aideUnitn = "Enter here the name of the unit, which must activate/deactivate the effect. You can enter only names, if they are in your raid or group.",
2		aideUnitn2 = "Only for raid/group.",
	
2		aideMaxTex = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
2		aideAddEffect = "Add an effect for edition.",
2		aideWowTextures = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
2		aideTextAura = "Check this to type text instead of texture.",
2		aideRealaura = "Real Aura",
2		aideCustomTextures = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
2		aideRandomColor = "Check this to tell this effect to use random color each time it will be activated.",
	
2		aideTexMode = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.",
		
2		nomActivationBy = "Activation by :",
	
2		nomOwnTex = "Use own Texture",
2		aideOwnTex = "Use the De/Buff or Ability Texture instead.",
2		nomStacks = "Stacks",
	
2		nomUpdateSpeed = "Update speed",
2		nomSpeed = "Animation speed",
2		nomFPS = "Global Animation FPS",
2		nomTimerUpdate = "Timer update speed",
2		nomBegin = "Begin Animation",
2		nomEnd = "End Animation",
2		nomSymetrie = "Symmetry",
2		nomAlpha = "Opacity",
2		nomPos = "Position",
2		nomTaille = "Size",
	
2		nomExact = "Exact Name",
2		nomThreshold = "Threshold",
2		aideThreshInv = "Check this to invert the threshold logic. Unchecked = Low Warning / Checked = High Warning.",
2		nomThreshInv = "</>",
2		nomStance = "Stance",
	
2		nomMine = "Cast by me",
2		aideMine = "Check this to test only buffs/debuffs cast by the player",
2		nomDispellable = "I can dispell",
2		aideDispellable = "Check to show only buffs that are dispellable",
2		nomCanInterrupt = "Can be Interrupted",
2		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
2		nomPlayerSpell = "Player Casting",
2		aidePlayerSpell = "Check if Player is casting a spell",
	
2		nomCheckTarget = "Enemy Target",
2		nomCheckFriend = "Friendly Target",
2		nomCheckParty = "Partymember",
2		nomCheckFocus = "Focus",
2		nomCheckRaid = "Raidmember",
2		nomCheckGroupOrSelf = "Raid/Party or self",
2		nomCheckGroupAny = "Any", 
2		nomCheckOptunitn = "Unitname",
	
2		aideTarget = "Check this to test an enemy target only.",
2		aideTargetFriend = "Check this to test a friendly target only.",
2		aideParty = "Check this to test a party member only.",
2		aideGroupOrSelf = "Check this to test a party or raid member or self.",
2		aideFocus = "Check this to test the focus only.",
2		aideRaid = "Check this to test a raid member only.",
2		aideGroupAny = "Check this to test buff on 'Any' party/raid member. Unchecked: Test that 'All' are buffed.",
2		aideOptunitn = "Check this to test a spezial char in raid/group only.",	
2		aideExact = "Check this to test the exact name of the buff/debuff/action.",
2		aideStance = "Select which Stance,Aura or Form trigger the event.",
	
2		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
2		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
2		nomCheckShowTimer = "Show",
2		nomTimerDuration = "Duration",
2		aideTimerDuration = "Show a timer to simulate buff/debuff duration on the target (0 to deactivate)",
2		aideShowTimer = "Check this to show the timer of this effect.",
2		aideSelectTimer = "Select which timer will show the duration",
2		aideSelectTimerBuff = "Select which timer will show the duration (this one is reserved for player's buffs)",
2		aideSelectTimerDebuff = "Select which timer will show the duration (this one is reserved for player's debuffs)",
	
2		nomCheckShowStacks = "Show",
	
2		nomCheckInverse = "Invert",
2		aideInverse = "Invert the logic to show this effect only when buff/debuff is not active.",	
	
2		nomCheckIgnoreMaj = "Ignore uppercase",	
2		aideIgnoreMaj = "Check this to ignore upper/lowercase of buff/debuff names.",
	
2		nomDuration = "Anim. duration",
2		aideDuration = "After this time, this effect will disapear (0 to deactivate)",
	
2		nomCentiemes = "Show hundredth",
2		nomDual = "Show two timers",
2		nomHideLeadingZeros = "Hide Leading Zeros",
2		nomTransparent = "Use transparent textures",
2		nomUpdatePing = "Animate on refresh",
2		nomClose = "Close",
2		nomEffectEditor = "Effect Editor",
2		nomAdvOptions = "Options",
2		nomMaxTex = "Maximum of textures available",
2		nomTabAnim = "Animation",
2		nomTabActiv = "Activation",
2		nomTabSound = "Sound",
2		nomTabTimer = "Timer",
2		nomTabStacks = "Stacks",
2		nomWowTextures = "WoW Textures",
2		nomCustomTextures = "Custom Textures",
2		nomTextAura = "Text Aura",
2		nomRealaura = "Real Aura",
2		nomRandomColor = "Random Colors",
2		nomTexMode = "Glow",
	
2		nomTalentGroup1 = "Spec 1",
2		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
2		nomTalentGroup2 = "Spec 2",
2		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
	
2		nomReset = "Reset Editor Positions",	
2		nomPowaShowAuraBrowser = "Show Aura Browser",
		
2		nomDefaultTimerTexture = "Default Timer Texture",
2		nomTimerTexture = "Timer Texture",
2		nomDefaultStacksTexture = "Default Stacks Texture",
2		nomStacksTexture = "Stacks Texture",
		
2		Enabled = "Enabled",
2		Default = "Default",
	
2		Ternary = {
2			combat = "In Combat",
2			inRaid = "In Raid",
2			inParty = "In Party",
2			isResting = "Resting",
2			ismounted = "Mounted",
2			inVehicle = "In Vehicle",
2			isAlive= "Alive",
2		},
	
2		nomWhatever = "Ignored",
2		aideTernary = "Sets how the status effects how this aura is shown.",
2		TernaryYes = {
2			combat = "Only When In Combat",
2			inRaid = "Only When In Raid",
2			inParty = "Only When In Party",
2			isResting = "Only When Resting",
2			ismounted = "Only When Mounted",
2			inVehicle = "Only When In Vehicle",
2			isAlive= "Only When Alive",
2		},
2		TernaryNo = {
2			combat = "Only When Not in Combat",
2			inRaid = "Only When Not in Raid",
2			inParty = "Only When Not in Party",
2			isResting = "Only When Not Resting",
2			ismounted = "Only When Not Mounted",
2			inVehicle = "Only When Not in Vehicle",
2			isAlive= "Only When Dead",
2		},
2		TernaryAide = {
2			combat = "Effect modified by Combat status.",
2			inRaid = "Effect modified by Raid status.",
2			inParty = "Effect modified by Party status.",
2			isResting = "Effect modified by Resting status.",
2			ismounted = "Effect modified by Mounted status.",
2			inVehicle = "Effect modified by Vehicle status.",
2			isAlive= "Effect modified by Alive status.",
2		},
	
2		nomTimerInvertAura = "Invert Aura When Time Below",
2		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
2		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
2		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
2		aideTimerRounding = "When checked will round the timer up",
2		nomTimerRounding = "Round Timer Up",
	
2		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
2		nomGTFO = "Use GTFO for AoE",
	
2		nomIgnoreUseable = "Display Only Depends on Cooldown",
2		aideIgnoreUseable = "Ignores if spell is usable (just uses cooldown)",
	
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
2		nomReasonShouldShow = "Should show because $1",
2		nomReasonWontShow   = "Won't show because $1",
		
2		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
2		nomReasonDisabled = "Power Auras Disabled",
2		nomReasonGlobalCooldown = "Ignore Global Cool-down",
		
2		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
2		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
2		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
2		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
2		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
2		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
2		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
2		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
2		nomReasonBuffFound              = "Buff present",
2		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
2		nomReasonAuraMissing = "Aura missing",
2		nomReasonAuraOff     = "Aura off",
2		nomReasonAuraBad     = "Aura bad",
		
2		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
2		nomReasonPlayerDead     = "Player is DEAD",
2		nomReasonPlayerAlive    = "Player is Alive",
2		nomReasonNoTarget       = "No Target",
2		nomReasonTargetPlayer   = "Target is you",
2		nomReasonTargetDead     = "Target is Dead",
2		nomReasonTargetAlive    = "Target is Alive",
2		nomReasonTargetFriendly = "Target is Friendly",
2		nomReasonTargetNotFriendly = "Target not Friendly",
		
2		nomReasonNotInCombat = "Not in combat",
2		nomReasonInCombat = "In combat",
		
2		nomReasonInParty = "In Party",
2		nomReasonInRaid = "In Raid",
2		nomReasonNotInParty = "Not in Party",
2		nomReasonNotInRaid = "Not in Raid",
2		nomReasonNoFocus = "No focus",	
2		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
2		nomReasonNotMounted = "Not Mounted",
2		nomReasonMounted = "Mounted",		
2		nomReasonNotInVehicle = "Not In Vehicle",
2		nomReasonInVehicle = "In Vehicle",		
2		nomReasonNotResting = "Not Resting",
2		nomReasonResting = "Resting",		
2		nomReasonStateOK = "State OK",
	
2		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
2		nomReasonSpellUsable     = "Spell $1 usable",
2		nomReasonSpellNotUsable  = "Spell $1 not usable",
2		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
2		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
2		nomReasonSpellNotFound   = "Spell $1 not found",
2		nomReasonSpellOnCooldown = "Spell $1 on Cooldown",
		
2		nomReasonStealablePresent = "$1 has Stealable spell $2", --$1=Target $2=SpellName (e.g. "Focus has Stealable spell Blessing of Wisdom")
2		nomReasonNoStealablePresent = "Nobody has Stealable spell $1", --$1=SpellName (e.g. "Nobody has Stealable spell Blessing of Wisdom")
2		nomReasonRaidTargetStealablePresent = "Raid$1Target has has Stealable spell $2", --$1=RaidId $2=SpellName (e.g. "Raid21Target has Stealable spell Blessing of Wisdom")
2		nomReasonPartyTargetStealablePresent = "Party$1Target has has Stealable spell $2", --$1=PartyId $2=SpellName (e.g. "Party4Target has Stealable spell Blessing of Wisdom")
		
2		nomReasonPurgeablePresent = "$1 has Purgeable spell $2", --$1=Target $2=SpellName (e.g. "Focus has Purgeable spell Blessing of Wisdom")
2		nomReasonNoPurgeablePresent = "Nobody has Purgeable spell $1", --$1=SpellName (e.g. "Nobody has Purgeable spell Blessing of Wisdom")
2		nomReasonRaidTargetPurgeablePresent = "Raid$1Target has has Purgeable spell $2", --$1=RaidId $2=SpellName (e.g. "Raid21Target has Purgeable spell Blessing of Wisdom")
2		nomReasonPartyTargetPurgeablePresent = "Party$1Target has has Purgeable spell $2", --$1=PartyId $2=SpellName (e.g. "Party4Target has Purgeable spell Blessing of Wisdom")
	
2		nomReasonAoETrigger = "AoE $1 triggered", -- $1=AoE spell name
2		nomReasonAoENoTrigger = "AoE no trigger for $1", -- $1=AoE spell match
		
2		nomReasonEnchantMainInvert = "Main Hand $1 enchant found, timer invert", -- $1=Enchant match
2		nomReasonEnchantMain = "Main Hand $1 enchant found", -- $1=Enchant match
2		nomReasonEnchantOffInvert = "Off Hand $1 enchant found, timer invert"; -- $1=Enchant match
2		nomReasonEnchantOff = "Off Hand $1 enchant found", -- $1=Enchant match
2		nomReasonNoEnchant = "No enchant found on weapons for $1", -- $1=Enchant match
	
2		nomReasonNoUseCombo = "You do not use combo points",
2		nomReasonComboMatch = "Combo points $1 match $2",-- $1=Combo Points, $2=Combo Match
2		nomReasonNoComboMatch = "Combo points $1 no match with $2",-- $1=Combo Points, $2=Combo Match
	
2		nomReasonActionNotFound = "not found on Action Bar",
2		nomReasonActionReady = "Action Ready",
2		nomReasonActionNotReadyInvert = "Action Not Ready (on cooldown), timer invert",
2		nomReasonActionNotReady = "Action Not Ready (on cooldown)",
2		nomReasonActionlNotEnabled = "Action not enabled",
2		nomReasonActionNotUsable = "Action not usable",
	
2		nomReasonYouAreCasting = "You are casting $1", -- $1=Casting match
2		nomReasonYouAreNotCasting = "You are not casting $1", -- $1=Casting match
2		nomReasonTargetCasting = "Target casting $1", -- $1=Casting match
2		nomReasonFocusCasting = "Focus casting $1", -- $1=Casting match
2		nomReasonRaidTargetCasting = "Raid$1Target casting $2", --$1=RaidId $2=Casting match
2		nomReasonPartyTargetCasting = "Party$1Target casting $2", --$1=PartyId $2=Casting match
2		nomReasonNoCasting = "Nobody's target casting $1", -- $1=Casting match
		
2		nomReasonStance = "Current Stance $1, matches $2", -- $1=Current Stance, $2=Match Stance
2		nomReasonNoStance = "Current Stance $1, does not match $2", -- $1=Current Stance, $2=Match Stance
	
2		ReasonStat = {
2			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
2			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
2			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
2			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
2			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
2		},
	
2	});
	
	

==============================================================================
../localisation_deDE.lua
==============================================================================
2	﻿if (GetLocale() == "deDE") then
	
0	PowaAuras.Anim[0] = "[Nichts]";
0	PowaAuras.Anim[1] = "Statisch";
0	PowaAuras.Anim[2] = "Blitzend";
0	PowaAuras.Anim[3] = "Wachsend";
0	PowaAuras.Anim[4] = "Pulsierend";
0	PowaAuras.Anim[5] = "Blase";
0	PowaAuras.Anim[6] = "Wassertropfen";
0	PowaAuras.Anim[7] = "Electrisch";
0	PowaAuras.Anim[8] = "Schrumpfend";
0	PowaAuras.Anim[9] = "Flamme";
0	PowaAuras.Anim[10] = "Orbit";
	
0	PowaAuras.BeginAnimDisplay[0] = "[None]";
0	PowaAuras.BeginAnimDisplay[1] = "Reinzoomend";
0	PowaAuras.BeginAnimDisplay[2] = "Rauszoomend";
0	PowaAuras.BeginAnimDisplay[3] = "Nur Alpha";
0	PowaAuras.BeginAnimDisplay[4] = "Links";
0	PowaAuras.BeginAnimDisplay[5] = "Obenlinks";
0	PowaAuras.BeginAnimDisplay[6] = "Oben";
0	PowaAuras.BeginAnimDisplay[7] = "Obenrechts";
0	PowaAuras.BeginAnimDisplay[8] = "Rechts";
0	PowaAuras.BeginAnimDisplay[9] = "Untenrechts";
0	PowaAuras.BeginAnimDisplay[10] = "Unten";
0	PowaAuras.BeginAnimDisplay[11] = "Untenlinks";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce"; --- untranslated
	
0	PowaAuras.EndAnimDisplay[0] = "[None]";
0	PowaAuras.EndAnimDisplay[1] = "Reinzoomend";
0	PowaAuras.EndAnimDisplay[2] = "Rauszoomend";
0	PowaAuras.EndAnimDisplay[3] = "Nur Alpha";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "Kein";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "Gib /powa ein, um die Optionen zu öffnen.",
	
0		aucune = "Nichts",
0		aucun = "Nichts",
0		largeur = "Breite",
0		hauteur = "Höhe",
0		mainHand = "Waffenhand",
0		offHand = "Schildhand",
0		bothHands = "beide",
	
0		DebuffType =
0		{
0			Magic = "Magie",
0			Disease = "Disease",
0			Curse = "Fluch",
0			Poison = "Gift",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "Silence",
0			[PowaAuras.DebuffCatType.Snare] = "Snare",
0			[PowaAuras.DebuffCatType.Stun] = "Stun",
0			[PowaAuras.DebuffCatType.Root] = "Root",
0			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE Debuff",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff Typ",
0			[PowaAuras.BuffTypes.Enchant] = "Waffenbuffs",
0			[PowaAuras.BuffTypes.Combo] = "Kombo Punkte",
0			[PowaAuras.BuffTypes.ActionReady] = "Aktion benutzbar",
0			[PowaAuras.BuffTypes.Health] = "Leben",
0			[PowaAuras.BuffTypes.Mana] = "Mana",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
0			[PowaAuras.BuffTypes.Aggro] = "Aggro",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Haltung",
0			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
0			[PowaAuras.BuffTypes.OwnSpell] = "My Spell", 
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell", 
0		},
		
		-- main
0		nomEnable = "Aktiviere Power Auras",
0		aideEnable = "Alle Power Auras Effekte einschalten",
0		nomDebug = "Aktiviere Debug Meldungen",
0		aideDebug = "Zeigt Debug Meldungen im Chatfenster",	
0		ListePlayer = "Char",
0		ListeGlobal = "Global",
0		aideMove = "Effekt hierher verschieben.",
0		aideCopy = "Effekt hierher kopieren.",
0		nomRename = "Umbenennen",
0		aideRename = "Seitentitel umbenennen.",
0		nomTest = "Test",
0		nomHide = "Alle ausblenden",
0		nomEdit = "Editieren",
0		nomNew = "Neu",
0		nomDel = "Löschen",
0		nomImport = "Import", --- untranslated
0		nomExport = "Export", --- untranslated
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set", 
0		aideImport = "Paste the Aura String to the editbox and press \'Accept\'", --- untranslated
0		aideExport = "Copy the Aura String from the editbox to share with others.", --- untranslated
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "Löscht den ausgewählten Effekt.(Halte CTRL gedrückt, um zu löschen)",
0		nomMove = "Verschieben",
0		nomCopy = "Kopieren",
0		nomPlayerEffects = "Charakter Effekte",
0		nomGlobalEffects = "Globale\nEffekte",
0		aideEffectTooltip = "(Shift-Klick um Effekt ein oder auszuschalten.)",
	
		-- editor
0		nomSound = "Sound abspielen:",
0		aideSound = "Spielt einen Sound am Anfang ab.",
0		nomCustomSound = "ODER Sounddatei:",
0		aideCustomSound = "Dateiname eingeben der Sounddatei, die VOR dem WoW Starten im Sounds Verzeichniss war. mp3 und wav werden unterstützt. Bsp.: 'cookie.mp3' ;)",
		
0		nomTexture = "Grafik",
0		aideTexture = "Die Aura die angezeigt werden soll.",
	
0		nomAnim1 = "Hauptanimation",
0		nomAnim2 = "Zweitanimation",
0		aideAnim1 = "Animiere die Aura oder nicht.",
0		aideAnim2 = "Diese Animation wird mit weniger Staerke angezeigt als die Hauptanimation. Wegen möglicher Überladung der Grafik.",
	
0		nomDeform = "Deformation",
0		aideDeform = "Strecke die Animation in Höhe und Breite.",
	
0		aideColor = "Klicken, um die Farbe zu ändern.",
0		aideFont = "Click here to pick Font. Press OK to apply the selection.", --- untranslated
0		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", --- untranslated
0		aideTooltipCheck = "Also check the tooltip contains this text",
	
0		aideBuff = "Gib hier den Namen oder einen Teil vom Namen des Buff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Namen getrennt werden. (Bsp.: Super Buff/Power)",
0		aideBuff2 = "Gib hier den Namen oder einen Teil vom Namen des Debuff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Namen getrennt werden. (Bsp: Dark Disease/Plague)",
0		aideBuff3 = "Gib hier den Typ(Gift, Disease, Fluch, Magie or Nichts) des Debuff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Typen getrennt werden.",
0		aideBuff4 = "Gib hier den Namen der Area of Effect(AoE) ein, der die Aura ein oder ausschalten soll. Der Name einer AoE steht im Kampflog.",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
0		aideBuff6 = "Gib hier die Anzahl Kombopunkte ein, um die Aura ein oder auszuschalten (Bsp.: 1 oder 1/2/3 oder 0/4/5 usw...) ",
0		aideBuff7 = "Gib hier einen Namen oder einen Teil davon einer Aktion auf deiner Aktionsleiste ein, um diese auf Benutzbarkeit zu überprüfen. (Bsp.: Hinrichten, Fass, Rache, Überwältigen,...",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].", --- untranslated
		
0		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.", --- untranslated
0		aideStacks = "Gib hier den Vergleicher und die Anzahl Stapel ein des De/Buffs. Oder einfach freilassen, wenn nicht stapelbar. Es geht nur MIT einem Vergleicher! Bsp: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",  --- untranslated
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",  --- untranslated
	
0		aideUnitn = "Gib hier den Namen des Spielers ein, welcher überwacht werden soll. Funktioniert nur mit Spieler innerhalb des Raids oder der Gruppe.",	
0		aideUnitn2 = "Only for raid/group.", --- untranslated
	
0		aideMaxTex = "Definiert die Texturanzahl die im Editor zur Verfügung stehen. Wenn Texturen im PowerAuras Verzeichniss hinzugefügt wurden (mit den Namen AURA1.tga bis AURA50.tga), muss hier die letzte Zahl eingetragen werden.",
0		aideAddEffect = "Fügt ein Effekt zum bearbeiten hinzu.",
0		aideWowTextures = "Aktivieren um die WoW-Grafiken anstatt die Grafiken im PowerAuras Verzeichniss zu verwenden.",
0		aideTextAura = "Check this to type text instead of texture.", -- untranslated
0		aideRealaura = "Reale Aura",
0		aideCustomTextures = "Aktivieren um die Grafiken im 'Custom' Verzeichniss zu verwenden. Du musst den Dateinamen der Grafik eintragen (Bsp.: myTexture.tga)",--- untraslated (needs update to match enGB string)
0		aideRandomColor = "Aktivieren um jedesmal wenn die Aura aktiviert wird eine zufällige Farbe zu erhalten.",
	
0		aideTexMode = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.", --- untranslated
	
0		nomActivationBy = "Aktiv wenn:",
	
0		nomOwnTex = "Use own Texture", --- untranslated
0		aideOwnTex = "Use the De/Buff or Ability Texture instead.", --- untranslated
0		nomStacks = "Stacks", --- untranslated
	
0		nomUpdateSpeed = "Update speed", --- untranslated
0		nomSpeed = "Animations Tempo",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "Animations Start",
0		nomEnd = "Animations Ende",
0		nomSymetrie = "Symetrie",
0		nomAlpha = "Alpha",
0		nomPos = "Position",
0		nomTaille = "Grösse",
	
0		nomExact = "Exakter Name",
0		nomGCD = "Global Cooldown",
0		nomThreshold = "Schwellwert",
0		aideThreshInv = "Check this to invert the threshold logic. Health/Mana: default = Low Warning / checked = High Warning. Energy/Rage/Power: default = High Warning / checked = Low Warning", --- untranslated
0		nomThreshInv = "</>",
0		nomStance = "Haltung",
	
0		nomMine = "Cast by me", --- untranslated
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
0		nomDispellable = "I can dispell", --- untranslated
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Can be Interrupted", --- untranslated
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "Feindliches Ziel",
0		nomCheckFriend = "Freundliches Ziel",
0		nomCheckParty = "Gruppenmitglied",
0		nomCheckFocus = "Focus",
0		nomCheckRaid = "Raidmitglied",
0		nomCheckGroupOrSelf = "Raid/Party or self", --- untranslated
0		nomCheckGroupAny = "Any", --- untranslated
0		nomCheckOptunitn = "Charname",
		
0		aideTarget = "Aktivieren um feindliches Ziel zu überwachen.",
0		aideTargetFriend = "Aktivieren um freundliches Ziel zu überwachen.",
0		aideParty = "Aktivieren um Gruppenmitglieder zu überwachen.",
0		aideGroupOrSelf = "Check this to test a party or raid member or self.", --- untranslated
0		aideFocus = "Aktivieren um das Focusziel zu überwachen.",
0		aideRaid = "Aktivieren um Raidmitglieder zu überwachen.",
0		aideGroupAny = "Checked: Test if 'Any' party/raid member is buffed. Default (unchecked): 'All' must be buffed.", --- untranslated
0		aideExact = "Aktivieren um den EXAKTEN Namen des Buffes zu überwachen.",
0		aideOptunitn = "Aktivieren um einen bestimmten Char in der Raid/Gruppe zu überwachen.",
0		aideGCD = "Aktivieren um den Globalen Cooldown mit einzubeziehen, wenn 'Aktion benutzbar' gewählt ist. Kann zu einem blinken der Aura führen, wenn die Aktion nur einen Globalen Cooldown hat.",
0		aideStance = "Kampfhaltung auswählen, die die Aura aktiviert.",	
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin", --- untranslated
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends", --- untranslated
	
0		nomCheckShowTimer = "Zeigen",
0		nomTimerDuration = "Dauer",
0		aideTimerDuration = "Zeigt eine Buff/Debuff Dauer. (0 um zu daktivieren)",
0		aideShowTimer = "Aktivieren um den Timer zu zeigen.",
0		aideSelectTimer = "Auswählen welcher Timer die Dauer anzeigen soll.",
0		aideSelectTimerBuff = "Auswählen welcher Timer die Dauer anzeigen soll (this one is reserved for player's buffs)",
0		aideSelectTimerDebuff = "Auswählen welcher Timer die Dauer anzeigen soll (this one is reserved for player's debuffs)",
	
0		nomCheckShowStacks = "Show", --- untranslated
	
0		nomCheckInverse = "Zeige wenn NICHT aktiv",
0		aideInverse = "Aktivieren um die Aura nur zu zeigen wenn der Buff/Debuff NICHT aktiv ist.",	
		
0		nomCheckIgnoreMaj = "Ignoriere Gross/Kleinschreibung",	
0		aideIgnoreMaj = "Aktivieren um die Gross/Kleinschreibung bei Buff/Debuff-Namen zu ignorieren.",
		
0		nomDuration = "Animationsdauer",
0		aideDuration = "Nach dieser Zeit wird die Aura verschwinden (0 um zu daktivieren)",
		
0		nomCentiemes = "Zeige hundertstel",
0		nomDual = "Zeige 2 Timer",
0		nomHideLeadingZeros = "Hide Leading Zeros", --- untranslated
0		nomTransparent = "Use transparent textures", --- untranslated
0		nomUpdatePing = "Animate on refresh", --- untranslated
0		nomClose = "Schliessen",
0		nomEffectEditor = "Effekt Editor",
0		nomAdvOptions = "Optionen",
0		nomMaxTex = "Maximum Texturen verfügbar",
0		nomTabAnim = "Animation",
0		nomTabActiv = "Aktivierung",
0		nomTabSound = "Sound", --- untranslated
0		nomTabTimer = "Timer", --- untranslated
0		nomTabStacks = "Stacks", --- untranslated
0		nomWowTextures = "WoW Texturen",
0		nomCustomTextures = "Custom Texturen", --- untranslated
0		nomTextAura = "Text Aura", --- untranslated
0		nomRealaura = "Reale Aura",
0		nomRandomColor = "Zufällige Farben",
0		nomTexMode = "Glühen",
	
0		nomTalentGroup1 = "Spec 1",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "Spec 2",
0		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
../localisation_frFR.lua
==============================================================================
2	﻿if (GetLocale() == "frFR") then
	
0	PowaAuras.Anim[0] = "[Invisible]";
0	PowaAuras.Anim[1] = "Statique";
0	PowaAuras.Anim[2] = "Clignotement";
0	PowaAuras.Anim[3] = "Agrandir";
0	PowaAuras.Anim[4] = "Pulsation";
0	PowaAuras.Anim[5] = "Effet bulle";
0	PowaAuras.Anim[6] = "Goutte d'eau";
0	PowaAuras.Anim[7] = "Electrique";
0	PowaAuras.Anim[8] = "R\195\169tr\195\169cir";
0	PowaAuras.Anim[9] = "Flamme";
0	PowaAuras.Anim[10] = "Orbite";
	
0	PowaAuras.BeginAnimDisplay[0] = "[Aucun]";
0	PowaAuras.BeginAnimDisplay[1] = "Zoom Avant";
0	PowaAuras.BeginAnimDisplay[2] = "Zoom Arriere";
0	PowaAuras.BeginAnimDisplay[3] = "Transparence seule";
0	PowaAuras.BeginAnimDisplay[4] = "Gauche";
0	PowaAuras.BeginAnimDisplay[5] = "Haut-Gauche";
0	PowaAuras.BeginAnimDisplay[6] = "Haut";
0	PowaAuras.BeginAnimDisplay[7] = "Haut-Droite";
0	PowaAuras.BeginAnimDisplay[8] = "Droite";
0	PowaAuras.BeginAnimDisplay[9] = "Bas-Droite";
0	PowaAuras.BeginAnimDisplay[10] = "Bas";
0	PowaAuras.BeginAnimDisplay[11] = "Bas-Gauche";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[Aucun]";
0	PowaAuras.EndAnimDisplay[1] = "Zoom Avant";
0	PowaAuras.EndAnimDisplay[2] = "Zoom Arriere";
0	PowaAuras.EndAnimDisplay[3] = "Transparence seule";
	
	-- untranslated--francais---------------------							--
0	PowaAuras.Sound[0] = "None";						--
0	PowaAuras.Sound[1] = "LEVELUP";					--
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";					--
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";				--
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";				--
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";				--		
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";				--
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";		--
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";			--
	
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
	
0		welcome = "Tapez /powa pour afficher les options.",
	
0		aucune = "Aucune",
0		aucun = "Aucun",
0		largeur = "Largeur",
0		hauteur = "Hauteur",
0		mainHand = "droite",
0		offHand = "gauche",
0		bothHands = "toutes",
	
0		DebuffType =
0		{
0			Magic = "Magie",
0			Disease = "Maladie",
0			Curse = "Mal\195\169diction",
0			Poison = "Poison",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "Silence",
0			[PowaAuras.DebuffCatType.Snare] = "Snare",
0			[PowaAuras.DebuffCatType.Stun] = "Stun",
0			[PowaAuras.DebuffCatType.Root] = "Root",
0			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "Debuff de zone",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Type du Debuff",
0			[PowaAuras.BuffTypes.Enchant] = "Enchant. d'arme",
0			[PowaAuras.BuffTypes.Combo] = "Combos",
0			[PowaAuras.BuffTypes.ActionReady] = "Action utilisable",
0			[PowaAuras.BuffTypes.Health] = "Health",
0			[PowaAuras.BuffTypes.Mana] = "Mana",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
0			[PowaAuras.BuffTypes.Aggro] = "Aggro",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Stance",
0			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
0			[PowaAuras.BuffTypes.OwnSpell] = "My Spell", 
0		},
	
		-- Main
0		nomEnable = "Activer Power Auras",
0		aideEnable = "Active tous les effets de Power Auras",
0		ListePlayer = "Page",
0		ListeGlobal = "Global",
0		aideMove = "D\195\169place l'effet s\195\169l\195\169ctionn\195\169 ici.",
0		aideCopy = "Copie l'effet s\195\169l\195\169ctionn\195\169 ici.",
0		nomRename = "Renommer",
0		aideRename = "Renomme la page d'effet en cours.",
0		nomTest = "Tester",
0		nomHide = "Tout masquer",
0		nomEdit = "Editer",
0		nomNew = "Nouveau",
0		nomDel = "Suppr.",
0		nomImport = "Import", --- untranslated
0		nomExport = "Export", --- untranslated
0		aideImport = "Paste the Aura String to the editbox and press \'Accept\'", --- untranslated
0		aideExport = "Copy the Aura String from the editbox to share with others.", --- untranslated
0		aideDel = "Supprime l'effet s\195\169l\195\169ctionn\195\169 (appuyez sur CTRL pour autoriser la suppression)",
0		nomMove = "D\195\169placer",
0		nomCopy = "Copier",
0		nomPlayerEffects = "Effets du personnage",
0		nomGlobalEffects = "Effets\nglobaux",
0		aideEffectTooltip = "(Maj-click pour mettre cet effet sur ON ou OFF)",
	
		-- untranslated --francais-------------------
0		nomDebug = "Activer Debug Messages",
0		aideDebug = "Shows Debug Messages in the chat",
		
0		nomSound = "Sound to play",
0		aideSound = "Plays a sound at the beginning.",
0		nomCustomSound = "OR soundfile:",
0		aideCustomSound = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
		
0		nomExact = "Exact Name",
0		nomThreshold = "Threshold",
0		nomGCD = "Global Cooldown",
0		aideThreshInv = "Check this to invert the threshold logic. Health/Mana: default = Low Warning / checked = High Warning. Energy/Rage/Power: default = High Warning / checked = Low Warning", --- untranslated
0		nomThreshInv = "</>", 
0		nomMine = "Cast by me", --- untranslated
0		nomDispellable = "I can dispell",
0		nomCanInterrupt = "Can be Interrupted",
		
0		aideGCD = "Check this and the Global Cooldown triggers with aura. May cause blinking the aura, when an action only has a Global Cooldown.",
0		aideStance = "Select which Stance,Aura or Form trigger the event.",
			
0		aideExact = "Check this to test the exact name of the buff/debuff.",
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
		
0		nomTabSound = "Sound",
0		nomTabTimer = "Timer",
		-- -------------------------------------------
		
0		nomTexture = "Texture",
0		aideTexture = "La texture \195\160 afficher. Vous pouvez facilement remplacer les textures en changeant les fichier Aura#.tga du dossier de l'AddOn.",
0		nomAnim1 = "Animation principale",
0		nomAnim2 = "Animation secondaire",
0		aideAnim1 = "Anime la texture ou pas, avec diff\195\169rents effets.",
0		aideAnim2 = "Cette animation sera affich\195\169e avec moins d'opacit\195\169 que la principale. Attention, afin de ne pas surcharger le tout.",
0		nomDeform = "D\195\169formation",
0		aideDeform = "Etire la texture vers le haut ou en largeur.",
0		aideColor = "Cliquez ici pour changer la couleur de la texture.",
0		aideFont = "Click here to pick Font. Press OK to apply the selection.", --- untranslated
0		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", --- untranslated
0		aideTooltipCheck = "Also check the tooltip starts with this text", --- untranslated
0		aideBuff = "Entrez ici le nom du buff, ou une partie du nom, qui doit activer/d\195\169sactiver l'effet. Vous pouvez entrer plusieurs noms s'ils sont s\195\169par\195\169 comme il convient (ex: Super Buff/Puissance)",
0		aideBuff2 = "Entrez ici le nom du d\195\169buff, ou une partie du nom, qui doit activer/d\195\169sactiver l'effet. Vous pouvez entrer plusieurs noms s'ils sont s\195\169par\195\169 comme il convient (ex: Maladie noire/Peste)",
0		aideBuff3 = "Entrez ici le type du d\195\169buff qui doit activer ou d\195\169sactiver l'effet (Poison, Maladie, Mal\195\169diction, Magie ou Aucun). Vous pouvez aussi entrer plusieurs types de d\195\169buffs \195\160 la fois.",
0		aideBuff4 = "Entrez ici le nom de l'effet de zone qui activera l'effet (comme une pluie de feu par exemple, g\195\169n\195\169ralement le nom de l'effet est disponible dans le journal de combat)",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)", --- untranslated
0		aideBuff6 = "Vous pouvez entrez ici le ou les chiffres des points de combos qui activeront l'effet (ex : 1 ou 1/2/3 ou 0/4/5 etc...) ",
0		aideBuff7 = "Indiquez ici le nom, ou une partie du nom, d'une des actions dans vos barres. L'effet sera actif si l'action est utilisable.",
		
0		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.", --- untranslated
0		aideStacks = "Enter here the operator and the amount of stacks, which must activate/deactivate the effect. It works only with an operator! ex: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", -- untranslated
		
0		aideUnitn = "Entrez ici le nom du unit, qui doit activer/d\195\169sactiver l'effet. Works only for raid/partymembers.",
0		aideUnitn2 = "Only for raid/group.",
0		aideMaxTex = "Defini le maximum de textures disponibles dans l'Editeur d'Effets. Si vous rajoutez des textures en les mettant dans le dossier de l'AddOn (nomm\195\169es de AURA1.tga \195\160 AURA50.tga) c'est ici qu'il faudra le signaler.",
0		aideAddEffect = "Ajoute une page d'effet.",
0		aideWowTextures = "Cochez cette case pour utiliser les textures internes du jeu plut\195\180t que le dossier de l'addon pour cet effet.",
0		aideRealaura = "Reale Aura",
0		aideTextAura = "Check this to type text instead of texture.", -- untranslated
0		aideCustomTextures = "Cochez cette case pour utiliser les textures pr\195\169sentes dans le sous-dossier 'Custom'. Vous devez connaitre le nom du fichier et indiquer son nom (ex : myTexture.tga)", --- untraslated (needs update to match enGB string)
0		aideRandomColor = "Cochez cette case pour que l'effet prenne des couleurs au hasard \195\160 chaque activation.",
0		aideTexMode = "Decochez cette case pour utiliser la transparence de la texture. Par defaut, les couleurs sombres seront plus transparentes.",
0		nomActivationBy = "Activation par :",
0		nomOwnTex = "Use own Texture", -- untranslated
0		aideOwnTex = "Use the De/Buff or Ability Texture instead.", -- untranslated
0		nomStacks = "Stacks", -- untranslated
		
0		nomUpdateSpeed = "Update speed",
0		nomSpeed = "Vitesse d'Anim.",
0		nomBegin = "Animation de d\195\169part",
0		nomEnd = "Animation de fin",
0		nomSymetrie = "Sym\195\169trie",
0		nomAlpha = "Transparence",
0		nomPos = "Position",
0		nomTaille = "Taille",
		
			
0		nomCheckTarget = "Cible ennemie",
0		nomCheckFriend = "Cible amie",
0		nomCheckParty = "Cible partie",
0		nomCheckFocus = "Cible focus",
0		nomCheckRaid = "Cible raid",
0		nomCheckGroupOrSelf = "Raid/Party or self",
0		nomCheckGroupAny = "Any", --- untranslated
0		nomCheckOptunitn = "Cible unit",
0		aideTarget = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible ennemie.",
0		aideTargetFriend = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible amie.",
0		aideParty = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible partie.",
0		aideGroupOrSelf = "Check this to test a party or raid member or self.",
0		aideFocus = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible focus.",
0		aideRaid = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible raid.",
0		aideGroupAny = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible unit de raid ou partie.",	
0		aideExact = "Check this to test the exact name of the buff/debuff.",
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
0		nomCheckShowTimer = "Afficher",
0		nomTimerDuration = "Chronometre",
		
0		aideTimerDuration = "Affiche un timer pour simuler la dur\195\169e d'un buff/debuff sur la cible (0 pour d\195\169sactiver)",
0		aideShowTimer = "Cochez cette case pour afficher la dur\195\169e de cet effet.",
0		aideSelectTimer = "Choisissez quel timer sera pris pour afficher la dur\195\169e",
0		aideSelectTimerBuff = "Choisissez quel timer sera pris pour afficher la dur\195\169e (celui-ci est reserv\195\169 aux buffs du joueur)",
0		aideSelectTimerDebuff = "Choisissez quel timer sera pris pour afficher la dur\195\169e (celui-ci est reserv\195\169 aux debuffs du joueur)",
		
0		nomCheckInverse = "Afficher si inactif",
0		aideInverse = "Cochez cette case pour afficher cet effet uniquement quand le buff/d\195\169buff n'est pas actif.",
		
0		nomCheckIgnoreMaj = "Ignorer les majuscules",
0		aideIgnoreMaj = "Cochez cette case pour ignorer les majuscules/minuscules du nom des buffs/d\195\169buffs.",
		
0		nomDuration = "Dur\195\169e de l'Anim.",
0		aideDuration = "Pass\195\169 ce d\195\169lai, l'animation sera masqu\195\169e (0 pour d\195\169sactiver)",
		
0		nomCentiemes = "Afficher centiemes",
0		nomDual = "Afficher 2 dur\195\169es",
0		nomHideLeadingZeros = "Hide Leading Zeros",
0		nomTransparent = "Use transparent textures",
0		nomClose = "Fermer",
0		nomEffectEditor = "Editeur d'Effet",
0		nomAdvOptions = "Options",
0		nomMaxTex = "Maximum de textures disponibles",
0		nomTabAnim = "Animation",
0		nomTabActiv = "Activation",
0		nomWowTextures = "Textures WoW",
0		nomCustomTextures = "Autres Textures",
0	    nomRealaura = "Reale Aura",
0		nomTextAura = "Text Aura", --- untranslated
0		nomRandomColor = "Couleurs al\195\169atoires",
0		nomTexMode = "Glow",
	
0		nomTalentGroup1 = "Spec 1",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "Spec 2",
0		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
../localisation_koKR.lua
==============================================================================
2	﻿if (GetLocale() == "koKR") then
	
0	PowaAuras.Anim[0] = "[보이지 않음]";
0	PowaAuras.Anim[1] = "공전";
0	PowaAuras.Anim[2] = "점멸";
0	PowaAuras.Anim[3] = "성장";
0	PowaAuras.Anim[4] = "파동";
0	PowaAuras.Anim[5] = "거품";
0	PowaAuras.Anim[6] = "낙수";
0	PowaAuras.Anim[7] = "전기장";
0	PowaAuras.Anim[8] = "꽁무니";
0	PowaAuras.Anim[9] = "화염";
0	PowaAuras.Anim[10] = "궤도";
	
0	PowaAuras.BeginAnimDisplay[0] = "[없음]";
0	PowaAuras.BeginAnimDisplay[1] = "확대";
0	PowaAuras.BeginAnimDisplay[2] = "축소";
0	PowaAuras.BeginAnimDisplay[3] = "불투명도만";
0	PowaAuras.BeginAnimDisplay[4] = "좌측";
0	PowaAuras.BeginAnimDisplay[5] = "상단-좌측";
0	PowaAuras.BeginAnimDisplay[6] = "상단";
0	PowaAuras.BeginAnimDisplay[7] = "상단-우측";
0	PowaAuras.BeginAnimDisplay[8] = "우측";
0	PowaAuras.BeginAnimDisplay[9] = "하단-우측";
0	PowaAuras.BeginAnimDisplay[10] = "하단";
0	PowaAuras.BeginAnimDisplay[11] = "하단-좌측";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[없음]";
0	PowaAuras.EndAnimDisplay[1] = "확대";
0	PowaAuras.EndAnimDisplay[2] = "축소";
0	PowaAuras.EndAnimDisplay[3] = "불투명도만";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "없음";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "옵션을 볼려면 /powa를 입력하십시오.",
	
0		aucune = "없음",
0		aucun = "없음",
0		largeur = "너비",
0		hauteur = "높이",
0		mainHand = "주무기",
0		offHand = "보조 무기",
0		bothHands = "둘다",
	
0		DebuffType =
0		{
0			Magic = "마법",
0			Disease = "질병",
0			Curse = "저주",
0			Poison = "독",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "군중제어",
0			[PowaAuras.DebuffCatType.Silence] = "침묵",
0			[PowaAuras.DebuffCatType.Snare] = "덫",
0			[PowaAuras.DebuffCatType.Stun] = "기절",
0			[PowaAuras.DebuffCatType.Root] = "올가미",
0			[PowaAuras.DebuffCatType.Disarm] = "무장해제",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "버프",
0			[PowaAuras.BuffTypes.Debuff] = "디버프",
0			[PowaAuras.BuffTypes.AoE] = "AOE 디버프",
0			[PowaAuras.BuffTypes.TypeDebuff] = "디버프의 유형",
0			[PowaAuras.BuffTypes.Enchant] = "무기 강화",
0			[PowaAuras.BuffTypes.Combo] = "연계 점수",
0			[PowaAuras.BuffTypes.ActionReady] = "사용 가능한 행동",
0			[PowaAuras.BuffTypes.Health] = "생명력",
0			[PowaAuras.BuffTypes.Mana] = "마나",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "분노/기력/룬",
0			[PowaAuras.BuffTypes.Aggro] = "어그로",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "태세",
0			[PowaAuras.BuffTypes.SpellAlert] = "주문 경고", 
0			[PowaAuras.BuffTypes.OwnSpell] = "나의 주문", 
0			[PowaAuras.BuffTypes.StealableSpell] = "훔치기 가능한 주문", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "제거가능한 주문",
0		},
	
		-- main
0		nomEnable = "Power Auras 활성화",
0		aideEnable = "모든 Power Auras 효과를 활성화합니다.",
0		nomDebug = "디버그 메시지 활성화",
0		aideDebug = "디버그 메시지를 활성화합니다.",
0		ListePlayer = "페이지",
0		ListeGlobal = "공통",
0		aideMove = "여기로 효과를 이동시킵니다.",
0		aideCopy = "여기로 효과를 복사합니다.",
0		nomRename = "이름 변경",
0		aideRename = "선택된 효과의 페이지의 이름을 변경합니다.",
0		nomTest = "테스트",
0		nomHide = "모두 숨기기",
0		nomEdit = "편집",
0		nomNew = "새로",
0		nomDel = "삭제",
0		nomImport = "들여오기",
0		nomExport = "내보내기",
0		nomImportSet = "설정 가져오기", 
0		nomExportSet = "설정 내보내기", 
0		aideImport = "오라 구문열을 붙여넣기 하려면 Ctrl-V를 누르고 \'승낙\'을 누르십시오.",
0		aideExport = "공유하기 위해 오라 구문열을 복사하려면 Ctrl-C를 누르십시오.",
0		aideImportSet = "오라 설정 구문열을 붙여넣기 하려면 Ctrl-V를 누르고 \'승낙\'을 누르십시오.",
0		aideExportSet = "공유하기 위해 모든 오라 구문열을 복사하려면 Ctrl-C를 누르십시오.",
0		aideDel = "선택된 효과를 제거합니다(이 버튼을 작동되게 하려면 CTRL을 누르십시오).",
0		nomMove = "이동",
0		nomCopy = "복사",
0		nomPlayerEffects = "캐릭터별 효과",
0		nomGlobalEffects = "공통 효과",
0		aideEffectTooltip = "(효과 켜기/끄기를 전환하려면 Shift-클릭하십시오)",
	
		-- editor
0		nomSound = "재생할 소리",
0		aideSound = "애니메이션 시작시 소리를 재생합니다.",
0		nomCustomSound = "혹은 소리 파일:",
0		aideCustomSound = "게임을 시작하기 전에, Sounds 폴더내의 소리 파일의 이름을 아래의 빈칸에 입력하십시오. mp3 및 wav 확장자를 지원합니다. (예: 'cookie.mp3' ;)",
	
0		nomTexture = "텍스쳐",
0		aideTexture = "보여지게 될 텍스쳐를 선택합니다. 애드온 폴더내의 Aura#.tga 파일의 변경을 통해 텍스쳐를 쉽게 바꿀 수 있습니다.",
	
0		nomAnim1 = "주 애니메이션",
0		nomAnim2 = "보조 애니메이션",
0		aideAnim1 = "다양한 효과와 더불어 텍스쳐에 움직임을 부여할 지 여부를 선택합니다.",
0		aideAnim2 = "이 애니메이션은 주 애니메이션보다는 덜 불투명하게 보여지게 됩니다. 화면의 과부하를 줄이기 위해 한개의 보조 애니메이션만이 동시에 보여지게 된다는 점에 주의 하십시오.",
	
0		nomDeform = "형태 변경",
0		aideDeform = "텍스쳐를 높이 혹은 너비로 늘립니다.",
	
0		aideColor = "텍스쳐의 색상을 변경하려면 여기를 클릭하십시오.",
0		aideFont = "글꼴을 선택하려면 여기를 클릭하십시오. 선택한 것을 적용하려면 '확인'을 누르십시오.",
0		aideMultiID = "체크한 것과 연결시키기 위해 다른 오라 ID를 여기에 입력합니다. 다중 ID는 '/'로 구별지워져야만 합니다. 오라 ID는 오라 툴팁의 첫번째 줄에서 [#]로 찾을 수 있습니다.",
0		aideTooltipCheck = "Also check the tooltip starts with this text",
	
0		aideBuff = "여기에 이 효과를 활성/비활성화해야만 하는 버프의 이름을, 혹은 이름의 일부분을 입력합니다. 구분되어 있어야 할 이름이라면 각각의 이름을 ('/'로 분리해) 입력할 수 있습니다(예: Super Buff/Power).",
0		aideBuff2 = "여기에 이 효과를 활성/비활성화해야만 하는 디버프의 이름을, 혹은 이름의 일부분을 입력합니다. 구분되어 있어야 할 이름이라면 각각의 이름을 ('/'로 분리해) 입력할 수 있습니다(예: Dark Disease/Plague).",
0		aideBuff3 = "여기에 이 효과를 활성/비활성화해야만 하는 디버프의 유형(독, 질병, 저주, 마법, 군중제어, 침묵, 기절, 덫, 올가미 혹은 없음)을 입력합니다. 디버프 각각의 유형을 ('/'로 분리해) 입력할 수도 있습니다(예: 질병/독).",
0		aideBuff4 = "여기에 이 효과에 적용해야만 하는 효과의 범위 이름(AOE)을 입력합니다(예를 들면 불의 비와 같은 경우입니다. 이 효과의 범위(AOE)의 이름을 전투 기록에서 찾을 수 있습니다).",
0		aideBuff5 = "여기에 이 효과를 활성화해야만 하는 일시적인 무기 강화를 입력합니다 : 선택적으로 주무기 혹은 보조무기 장착 칸을 지정하기 위해 '주무기', '보조 무기' 혹은 양 무기에 대해 '둘다'(예: 주무기/crippling).",
0		aideBuff6 = "여기에 이 효과를 활성화해야만 하는 연계 점수의 숫자를 입력합니다(예 : 1 혹은 1/2/3 혹은 0/4/5 등등...).",
0		aideBuff7 = "여기에 단축 행동바에 있는 행동의 이름을, 혹은 이름의 일부분을 입력합니다. 이 행동이 사용 가능한 경우에 효과는 활성화될 것입니다.",
0		aideBuff8 = "여기에 마법책에 있는 주문의 이름을, 혹은 이름의 일부분을 입력합니다. 주문의 ID를 입력하여도 됩니다(예: 12345).",
	
0		aideSpells = "여기에 주문 경고 오라를 적용할 주문의 이름을 입력합니다.",
0		aideStacks = "여기에 이 효과를 활성/비활성화하는데 요구되는 연산자와 중첩 횟수를 입력합니다. 연산자를 사용한 경우에만 작동합니다! 예: '<5' '>3' '=11' '!5' '>=0' '<=6' '2<>8'",
	
0		aideStealableSpells = "마법훔치기를 할 주문명을 여기에 입력하시요. (use * for any stealable spell).", 
0		aidePurgeableSpells = "정화할 주문명을 여기에 입력하시요. (use * for any purgeable spell).", 
	
0		aideUnitn = "여기에 이 효과를 활성/비활성화해야만 하는 유닛의 이름을 입력합니다. 공격대 혹은 그룹에 속해 있는 유닛의 이름만 입력할 수 있습니다.",
0		aideUnitn2 = "공격대/그룹에 한해",
	
0		aideMaxTex = "효과 편집기에 가능한 텍스쳐의 최대 갯수를 정의 합니다. 애드온 폴더에 텍스쳐를 추가하려면(AURA1.tga에서 AURA50.tga까지 이름과 함께), 여기에 올바른 갯수를 지시해야만 합니다.",
0		aideAddEffect = "편집을 위한 효과를 추가합니다.",
0		aideWowTextures = "이 효과에 대해 Power Auras 폴더내의 텍스쳐 대신에 WoW의 텍스쳐를 사용하려면 이 옵션에 체크하십시오.",
0		aideTextAura = "텍스쳐 대신에 문자를 입력하려면 이 옵션에 체크하십시오.",
0		aideRealaura = "활성 오오라",
0		aideCustomTextures = "하위 폴더 'Custom'에 있는 텍스쳐를 사용하려면 이 옵션에 체크하십시오. 아래에 텍스쳐의 이름을 기입해야만 합니다(예: myTexture.tga)",
0		aideRandomColor = "이 효과를 알리기 위해 활성화되는 매 시간마다 무작위 색상을 사용하려면 이 옵션에 체크하십시오.",
	
0		aideTexMode = "불투명한 텍스쳐를 사용하려면 이 옵션을 체크 해제하십시오. 기본적으로 가장 어두운 색상이 더욱 반투명합니다.",
	
0		nomActivationBy = "활성화:",
	
0		nomOwnTex = "자신의 텍스쳐 사용",
0		aideOwnTex = "기본 텍스쳐 대신에 자신의 디/버프 혹은 능력 텍스쳐를 사용합니다.",
0		nomStacks = "중첩",
	
0		nomUpdateSpeed = "Update speed",
0		nomSpeed = "애니메이션 속도",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "시작 애니메이션",
0		nomEnd = "종료 애니메이션",
0		nomSymetrie = "좌우 대칭",
0		nomAlpha = "불투명도",
0		nomPos = "위치",
0		nomTaille = "크기",
	
0		nomExact = "정확한 이름",
0		nomGCD = "전역 재사용 대기",
0		nomThreshold = "한계치",
0		aideThreshInv = "한계치 값을 뒤집으려면 이 옵션에 체크하십시오. 생명력/마나: 기본 = 낮음 경고/체크시 = 높음 경고. 기력/분노/마력: 기본 = 높음 경고/체크시 = 낮음 경고",
0		nomThreshInv = "</>",
0		nomStance = "태세",
	
0		nomMine = "나에 의해 시전된",
0		nomDispellable = "내가 해제할 수 있는",
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "적대적 대상",
0		nomCheckFriend = "우호적 대상",
0		nomCheckParty = "파티원",
0		nomCheckFocus = "주시 대상",
0		nomCheckRaid = "공격대원",
0		nomCheckGroupOrSelf = "공격대/파티원 혹은 자신",
0		nomCheckGroupAny = "특정",
0		nomCheckOptunitn = "유닛 이름",
	
0		aideTarget = "적대적 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideTargetFriend = "우호적 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideParty = "파티원에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideGroupOrSelf = "파티 혹은 공격대원 혹은 자신에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideFocus = "주시 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideRaid = "공격대원에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideGroupAny = "'특정' 파티/공격대원에 대해 버프를 테스트하려면 이곳에 체크하십시오. 비체크시: '모든' 파티/공격대원에 대해 버프가 테스트됩니다.",
0		aideOptunitn = "공격대/그룹에 속해 있는 특정 캐릭터에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideExact = "버프/디버프/행동의 정확한 이름을 테스트하려면 이곳에 체크하십시오.",
0		aideGCD = "'사용 가능한 행동'과 함께 GCD를 적용하려면 이곳에 체크하십시오. 행동이 GCD를 갖고 있는 경우에 오라가 번쩍이게 됩니다.",
0		aideStance = "이벤트에 적용할 태세, 오라 혹은 변신을 선택하십시오.",
0		aideMine = "플레이어에 의해 시전된 버프/디버프에 한해 테스트하려면 이곳에 체크하십시오.",
	
0		nomCheckShowTimer = "보이기",
0		nomTimerDuration = "지속시간",
0		aideTimerDuration = "대상에 대해 버프/디버프 지속시간을 시연하기 위해서 타이머를 보여줍니다(비활성화하려면 0)",
0		aideShowTimer = "이 효과의 타이머를 보여주려면 이곳에 체크하십시오.",
0		aideSelectTimer = "지속시간을 보여줄 타이머를 선택합니다.",
0		aideSelectTimerBuff = "지속시간을 보여줄 타이머를 선택합니다(이중 하나는 플레이어의 버프를 위해 남겨둔 상태입니다).",
0		aideSelectTimerDebuff = "지속시간을 보여줄 타이머를 선택합니다(이중 하나는 플레이어의 디버프를 위해 남겨둔 상태입니다).",
	
0		nomCheckShowStacks = "보이기",
	
0		nomCheckInverse = "비활성화시 보이기",
0		aideInverse = "버프/디버프가 비활성화되어 있는 경우에만 이 효과를 보여주려면 여기에 체크하십시오.",
	
0		nomCheckIgnoreMaj = "대문자 무시",
0		aideIgnoreMaj = "버프/디버프 이름의 대/소문자를 무시하려면 여기에 체크하십시오.",
	
0		nomDuration = "애니메이션 지속시간",
0		aideDuration = "이 시간 이후로 이 효과는 나타나지 않습니다(비활성화 하려면 0)",
	
0		nomCentiemes = "초 백단위 보이기",
0		nomDual = "타이머 두개 보이기",
0		nomHideLeadingZeros = "0일때 숨기기",
0		nomTransparent = "반투명한 텍스쳐 사용",
0		nomClose = "닫기",
0		nomEffectEditor = "효과 편집기",
0		nomAdvOptions = "확장 옵션",
0		nomMaxTex = "가능한 텍스쳐의 최대 갯수",
0		nomTabAnim = "애니메이션",
0		nomTabActiv = "활성화",
0		nomTabSound = "소리",
0		nomTabTimer = "타이머",
0		nomTabStacks = "중첩",
0		nomWowTextures = "WoW 텍스쳐",
0		nomCustomTextures = "사용자 텍스쳐",
0		nomTextAura = "문자 오라",
0		nomRealaura = "활성 오라",
0		nomRandomColor = "무작위 색상",
0		nomTexMode = "빛남",
0		nomTalentGroup1 = "특성 전문화 1",
0		aideTalentGroup1 = "첫번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup2 = "특성 전문화 2",
0		aideTalentGroup2 = "두번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup1 = "특성 전문화 1",
0		aideTalentGroup1 = "첫번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup2 = "특성 전문화 2",
0		aideTalentGroup2 = "두번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
		
0		nomReset = "편집창 위치 초기화",	
0		nomPowaShowAuraBrowser = "Aura Browser 보이기",
		
0		nomDefaultTimerTexture = "타이머 텍스쳐 기본값",
0		nomTimerTexture = "타이머 텍스쳐",
0		nomDefaultStacksTexture = "충첩 텍스쳐 기본값",
0		nomStacksTexture = "중첩 텍스쳐",
		
0		Enabled = "활성화",
0		Default = "기본값",
	
0		Ternary = {
0			combat = "전투 중",
0			inRaid = "공격대 중",
0			inParty = "파티 중",
0			isResting = "휴식 중",
0			ismounted = "탈것 중",
0			inVehicle = "운송수단 중",
0			isAlive= "살아 있을 때",
0		},
	
0		nomWhatever = "무시",
0		aideTernary = "오라표시 조건을 설정",
0		TernaryYes = {
0			combat = "오직 전투중일 때",
0			inRaid = "오직 공격대에 속해 있을 때",
0			inParty = "오직 5인 파티에 속해 있을 때",
0			isResting = "오직 휴식상태일 때",
0			ismounted = "오직 탈것 상태일 때",
0			inVehicle = "오직 운송수단 타고 있을 때",
0			isAlive= "오직 살아 있을 때만",
0		},
0		TernaryNo = {
0			combat = "전투중이 아닐 때",
0			inRaid = "공격대가 아닐 때",
0			inParty = "파티가 아닐 때",
0			isResting = "휴식 상태가 아닐 때",
0			ismounted = "탈것을 탄 상태가 아닐 때",
0			inVehicle = "운송수단을 타고 있지 않을 때",
0			isAlive= "죽었을 때",
0		},
0		TernaryAide = {
0			combat = "전투 상황에 의한 효능 상태.",
0			inRaid = "공격대 상황에 의한 효능 상태.",
0			inParty = "파티 상황에 의한 효능 상태.",
0			isResting = "휴식상황에 의한 효능 상태.",
0			ismounted = "탈것 상황에 의한 효능 상태.",
0			inVehicle = "운송수단 상황에 의한 효능 상태.",
0			isAlive= "살아 있는 상황에 의한 효능 상태.",
0		},
	
0		nomTimerInvertAura = "시간 이하일 때 오라 반전",
0		aidePowaTimerInvertAuraSlider = "제한시간보다 지속시간이 적을 때 오라 반전(0일 때 비활성화)",
0		nomTimerHideAura = "오라 숨김 & 상기 시간까지",
0		aidePowaTimerHideAuraSlider = "제한 시간보다 지속시간이 더 중요할 때 오라와 시간 숨김 (0일 때 비활성화)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
../localisation_ruRU.lua
==============================================================================
2	﻿if (GetLocale() == "ruRU") then 
	
0	PowaAuras.Anim[0] = "[Cкрытый]";
0	PowaAuras.Anim[1] = "Статический";
0	PowaAuras.Anim[2] = "Мигание";
0	PowaAuras.Anim[3] = "Увеличение";
0	PowaAuras.Anim[4] = "Пульсация";
0	PowaAuras.Anim[5] = "Пузыриться";
0	PowaAuras.Anim[6] = "Капанье воды";
0	PowaAuras.Anim[7] = "Электрический";
0	PowaAuras.Anim[8] = "Стягивание";
0	PowaAuras.Anim[9] = "Огонь";
0	PowaAuras.Anim[10] = "Вращаться";
	
0	PowaAuras.BeginAnimDisplay[0] = "[Нету]";
0	PowaAuras.BeginAnimDisplay[1] = "Увеличить масштаб";
0	PowaAuras.BeginAnimDisplay[2] = "Уменьшить масштаб";
0	PowaAuras.BeginAnimDisplay[3] = "Только матовость";
0	PowaAuras.BeginAnimDisplay[4] = "Слева";
0	PowaAuras.BeginAnimDisplay[5] = "Вверху-слева";
0	PowaAuras.BeginAnimDisplay[6] = "Вверху";
0	PowaAuras.BeginAnimDisplay[7] = "Вверху-справа";
0	PowaAuras.BeginAnimDisplay[8] = "Справа";
0	PowaAuras.BeginAnimDisplay[9] = "Внизу-справа";
0	PowaAuras.BeginAnimDisplay[10] = "Внизу";
0	PowaAuras.BeginAnimDisplay[11] = "Внизу-слева";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[Нету]";
0	PowaAuras.EndAnimDisplay[1] = "Увеличить масштаб";
0	PowaAuras.EndAnimDisplay[2] = "Уменьшить масштаб";
0	PowaAuras.EndAnimDisplay[3] = "Только матовость";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "Нету";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "Для просмотра настроек введите /powa.",
	
0		aucune = "Нету",
0		aucun = "Нету",
0		largeur = "Ширина",
0		hauteur = "Высота",
0		mainHand = "правая",
0		offHand = "левая",
0		bothHands = "Обе",
	
0		DebuffType =
0		{
0			Magic = "Магия",
0			Disease = "Болезнь",
0			Curse = "Проклятие",
0			Poison = "Яд",
0		},
		
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "Контроль",
0			[PowaAuras.DebuffCatType.Silence] = "Молчание",
0			[PowaAuras.DebuffCatType.Snare] = "Ловушка",
0			[PowaAuras.DebuffCatType.Stun] = "Оглушение",
0			[PowaAuras.DebuffCatType.Root] = "Корни",
0			[PowaAuras.DebuffCatType.Disarm] = "Разоружение",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Бафф",
0			[PowaAuras.BuffTypes.Debuff] = "Дебафф",
0			[PowaAuras.BuffTypes.AoE] = "Масс дебафф",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Тип дебаффов",
0			[PowaAuras.BuffTypes.Enchant] = "Усиление оружия",
0			[PowaAuras.BuffTypes.Combo] = "Приёмы в серии",
0			[PowaAuras.BuffTypes.ActionReady] = "Применимое действие",
0			[PowaAuras.BuffTypes.Health] = "Здоровье",
0			[PowaAuras.BuffTypes.Mana] = "Мана",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Ярость/Энергия/Руны",
0			[PowaAuras.BuffTypes.Aggro] = "Угроза",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Стойка",
0			[PowaAuras.BuffTypes.SpellAlert] = "Оповещение о заклинаниях", 
0			[PowaAuras.BuffTypes.OwnSpell] = "Моё заклинание",
0			[PowaAuras.BuffTypes.StealableSpell] = "Крадущее заклинание", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Очищающее заклинание", 
0		},
		
		-- main
0		nomEnable = "Активировать Power Auras",
0		aideEnable = "Включить все эффекты Power Auras",
0		nomDebug = "Активировать сообщения отладки",
0		aideDebug = "Включить сообщения отладки",
0		ListePlayer = "Страница",
0		ListeGlobal = "Глобальное",
0		aideMove = "Переместить эффект сюда.",
0		aideCopy = "Копировать эффект сюда.",
0		nomRename = "Переименовать",
0		aideRename = "Переименовать выбранную страницу эффектов.",
0		nomTest = "Тест",
0		nomHide = "Скрыть все",
0		nomEdit = "Править",
0		nomNew = "Новое",
0		nomDel = "Удалить",
0		nomImport = "Импорт", 
0		nomExport = "Экспорт",
0		nomImportSet = "Имп. набора", 
0		nomExportSet = "Эксп. набора", 
0		aideImport = "Нажмите Ctrl-V чтобы вставить строку-ауры и нажмите \'Принять\'.",
0		aideExport = "Нажмите Ctrl-C чтобы скопировать строку-ауры.",
0		aideImportSet = "Нажмите Ctrl-V чтобы вставить строку-набора-аур и нажмите \'Принять\', это сотрёт все ауры на этой странице.",
0		aideExportSet = "Нажмите Ctrl-C чтобы скопировать все ауры на этой странице.",
0		aideDel = "Удалить выбранный эффект (Чтобы кнопка заработала, удерживайте CTRL)",
0		nomMove = "Переместить",
0		nomCopy = "Копировать",
0		nomPlayerEffects = "Эффекты персонажа",
0		nomGlobalEffects = "Глобальные\nэффекты",
0		aideEffectTooltip = "([Shift-клик] - вкл/выкл эффект)",
	
		-- editor
0		nomSound = "Проигрываемый звук",
0		aideSound = "Проиграть звук при начале.",
0		nomCustomSound = "или звуковой файл:",
0		aideCustomSound = "Введите название звукового файла, который поместили в папку Sounds, ПРЕЖДЕ чем запустили игру. Поддерживаются mp3 и WAV. Например: 'cookie.mp3' ;)",
		
0		nomTexture = "Текстура",
0		aideTexture = "Выбор отображаемой текстуры. Вы можете легко заменить текстуры путем изменения файлов Aura#.tga в директории модификации.",
	
0		nomAnim1 = "Главная анимация",
0		nomAnim2 = "Вторичная анимация",
0		aideAnim1 = "Оживить текстуры или нет, с различными эффектами.",
0		aideAnim2 = "Эта анимация будет показана с меньшей прозрачностью, чем основная анимация. Внимание, чтобы не перегружать экран, в одно и то же время будет показана только одна вторичная анимация.",
	
0		nomDeform = "Деформация",
0		aideDeform = "Вытягивание текстуры по ширине или по высоте.",
	
0		aideColor = "Кликните тут, чтобы изменить цвет текстуры.",
0		aideFont = "Нажмите сюда, чтобы выбрать шрифт. Нажмите OK, чтобы применить выбранное.",
0		aideMultiID = "Здесь введите идентификаторы (ID) других аур для объединения проверки. Несколько ID должны разделяться с помощью '/'. ID аура можно найти в виде [#], в первой строке подсказки ауры. А лучше на http://ru.wowhead.com", 
0		aideTooltipCheck = "Also check the tooltip starts with this text",
	
0		aideBuff = "Здесь введите название баффа, или часть названия, который должен активировать/дезактивировать эффект. Вы можете ввести несколько названий, если они порядочно разделены (К примеру: Супер бафф/Сила)",
0		aideBuff2 = "Здесь введите название дебаффа, или часть названия, который должен активировать/дезактивировать эффект. Вы можете ввести несколько названий, если они порядочно разделены (К примеру: Тёмная болезнь/Чума)",
0		aideBuff3 = "Здесь введите тип дебаффа, который должен активировать/дезактивировать эффект (Яд, Болезнь, Проклятие, Магия или отсутствует). Вы также можете ввести несколько типов дебаффов.",
0		aideBuff4 = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
0		aideBuff6 = "Вы можете ввести количество приёмов в серии, которое активирует данный эффект (пример : 1 или 1/2/3 или 0/4/5 и т.д...) ",
0		aideBuff7 = "Здесь введите название или часть названия, какого-либо действия с ваших понелей команд. Эффект активируется при использовании этого действия.",
0		aideBuff8 = "Здесь введите название, или часть названия заклинания из вашей книги заклинаний. Вы можете ввести идентификатор(id) заклинания [12345].",
		
0		aideSpells = "Здесь введите название способности, которое вызовет оповещение.",
0		aideStacks = "Здесь введите оператор и значение стопки, которые должны активировать/дезактивировать эффект. Это работает только с оператором! К примеру: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
0		aideStealableSpells = "Здесь введите название крадущего заклинания, которое вызовет оповещение (используйте * для любого крадущего заклинания).", 
0		aidePurgeableSpells = "Здесь введите название очищающего заклинания, которое вызовет оповещение (используйте * для любого очищающего заклинания).", 
	
0		aideUnitn = "Здесь введите название существа/игрока, который должен активировать/дезактивировать эффект. Можно ввести только имена, если они находятся в вашей группе или рейде.",
0		aideUnitn2 = "Только в группе/рейде.",    
	
0		aideMaxTex = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
0		aideAddEffect = "Добавить эффект в редактор.",
0		aideWowTextures = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
0		aideTextAura = "Отметив тут, вы можете ввести используемый текст вместо текстуры.",
0		aideRealaura = "Реальная аура",
0		aideCustomTextures = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
0		aideRandomColor = "Отметив это, вы устанавливаете использование случайного цвета каждый раз при активации эффекта.",
	
0		aideTexMode = "Снимите этот флажок, чтобы использовать полупрозрачность текстур. По умолчанию, темные цвета будут более прозрачными.",
	
0		nomActivationBy = "Активация :",
	
0		nomOwnTex = "Своя текстуру",
0		aideOwnTex = "Используйте де/бафф или способность вместо текстур.",
0		nomStacks = "Стопка",
	
0		nomUpdateSpeed = "Скорость обновления",
0		nomSpeed = "Скорость анимации",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "Начало анимации",
0		nomEnd = "Конец анимации",
0		nomSymetrie = "Симметрия",
0		nomAlpha = "Прозрачность",
0		nomPos = "Позиция",
0		nomTaille = "Размер",
	
0		nomExact = "Точное название",
0		nomGCD = "Глоб. восстанов.",
0		nomThreshold = "Порог",
0		aideThreshInv = "Инверсия логики порога значений. Здоровье/Мана: по умолчанию = сообщать при малом количестве / отмечено = сообщать при большем количестве. Энергия/Ярость/Сила: по умолчанию = сообщать при большем количестве / отмечено = сообщать при малом количестве",
0		nomThreshInv = "</>",
0		nomStance = "Стойка",
	
0		nomMine = "Применяемое мною",
0		aideMine = "Отметив это, будет происходить проверка только баффов/дебаффав применяемых игроком.",
0		nomDispellable = "Могу рассеять",
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Может быть прерван",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "Враждебная цель",
0		nomCheckFriend = "Дружелюбная цель",
0		nomCheckParty = "Участник группы",
0		nomCheckFocus = "Фокус",
0		nomCheckRaid = "Участник рейда",
0		nomCheckGroupOrSelf = "Рейд/Группу или себя",
0		nomCheckGroupAny = "Любой", 
0		nomCheckOptunitn = "Название юнита",
		
0		aideTarget = "Отметив это, будет происходить проверка только враждебной цели.",
0		aideTargetFriend = "Отметив это, будет происходить проверка только дружеской цели.",
0		aideParty = "Отметив это, будет происходить проверка только участников группы.",
0		aideGroupOrSelf = "Отметив это, будет происходить проверка группы или рейда или вас.",
0		aideFocus = "Отметив это, будет происходить проверка только фокуса.",
0		aideRaid = "Отметив это, будет происходить проверка только участника рейда.",
0		aideGroupAny = "Отметив это, будет происходить проверка баффов у 'любого' участника группы/рейда. Без отметки: Будет подразумеваться что 'Все' участники с баффами.",
0		aideExact = "Отметив это, будет происходить проверка точного названия баффа/дебаффа/действия.",
0		aideOptunitn = "Отметив это, будет происходить проверка только определённого персонажа у группе/рейде.",	
0		aideGCD = "Отметив это, аура будет мигать при активном глобальном восстановлении.",
0		aideStance = "Выберите в какая стойка, форма или аура вызовет событие.",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin", --- untranslated
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends", --- untranslated
	
0		nomCheckShowTimer = "Показать",
0		nomTimerDuration = "Длительность",
0		aideTimerDuration = "Отображать таймер симулирующий длительность баффа/дебаффа на цели (0 - дезактивировать)",
0		aideShowTimer = "Отображение таймера для этого эффекта.",
0		aideSelectTimer = "Выберите, который таймер будет отображать длительность.",
0		aideSelectTimerBuff = "Выберите, который таймер будет отображать длительность (this one is reserved for player's buffs)",
0		aideSelectTimerDebuff = "Выберите, который таймер будет отображать длительность (this one is reserved for player's debuffs)",
	
0		nomCheckShowStacks = "Показать",
	
0		nomCheckInverse = "Инвертировать",
0		aideInverse = "Инвертировать логику отображение этого эффекта только когда бафф/дебафф неактивен.",	
		
0		nomCheckIgnoreMaj = "Игнор верхнего регистра",	
0		aideIgnoreMaj = "Если отметите это, будет игнорироваться верхний/нижний регистр строчных букв в названиях баффов/дебаффов.",
		
0		nomDuration = "Длина анимации:",
0		aideDuration = "После истечения этого времени, данный эффект исчезнет (0 - дезактивировать)",
		
0		nomCentiemes = "Показывать сотую часть",
0		nomDual = "Показывать 2 таймера",
0		nomHideLeadingZeros = "Убрать нули",
0		nomTransparent = "Исп. прозрачные текстуры",
0		nomUpdatePing = "Animate on refresh", --- untranslated
0		nomClose = "Закрыть",
0		nomEffectEditor = "Редактор эффектов",
0		nomAdvOptions = "Опции",
0		nomMaxTex = "Доступно максимум текстур",
0		nomTabAnim = "Анимация",
0		nomTabActiv = "Активация",
0		nomTabSound = "Звук",
0		nomTabTimer = "Таймер",
0		nomTabStacks = "Стопки",
0		nomWowTextures = "Текстуры WoW",
0		nomCustomTextures = "Свои текстуры",
0		nomTextAura = "Текст ауры",
0		nomRealaura = "Реальные ауры",
0		nomRandomColor = "Случайные цвета",
0		nomTexMode = "Сияние",
	
0		nomTalentGroup1 = "Спек 1",
0		aideTalentGroup1 = "Отображать данный эффект только когда у вас активирован основной набор талантов.",
0		nomTalentGroup2 = "Спек 2",
0		aideTalentGroup2 = "Отображать данный эффект только когда у вас активирован второстепенный набор талантов.",
		
0		nomReset = "Сброс позиции редактора",	
0		nomPowaShowAuraBrowser = "Показать окно просмотра аур",
		
0		nomDefaultTimerTexture = "Стандартная текстура таймера",
0		nomTimerTexture = "Текстура таймера",
0		nomDefaultStacksTexture = "Стандартная текстура стопки",
0		nomStacksTexture = "Текстура стопки",
		
0		Enabled = "Включено",
0		Default = "По умолчанию",
	
0		Ternary = {
0			combat = "В бою",
0			inRaid = "В рейде",
0			inParty = "В группе",
0			isResting = "Отдых",
0			ismounted = "Верхом",
0			inVehicle = "В транспорте",
0			isAlive= "Живой",
0		},
	
0		nomWhatever = "Игнорировать",
0		aideTernary = "Установите в каком состоянии, будет отображаться эта ауры.",
0		TernaryYes = {
0			combat = "Только когда в бою",
0			inRaid = "Только когда в рейде",
0			inParty = "Только когда в группе",
0			isResting = "Только когда вы отдыхаете",
0			ismounted = "Только когда на средстве передвижения",
0			inVehicle = "Только когда в транспорте",
0			isAlive= "Только когда жив",
0		},
0		TernaryNo = {
0			combat = "Только когда НЕ в бою",
0			inRaid = "Только когда НЕ в рейде",
0			inParty = "Только когда НЕ в группе",
0			isResting = "Только когда НЕ на отдыхе",
0			ismounted = "Только когда НЕ на средстве передвижения",
0			inVehicle = "Только когда НЕ в транспорте",
0			isAlive= "Только когда мёртв",
0		},
0		TernaryAide = {
0			combat = "Эффект изменен статусом боя.",
0			inRaid = "Эффект изменен статусом участия в рейде.",
0			inParty = "Эффект изменен статусом участия в группе.",
0			isResting = "Эффект изменен статусом отдыха.",
0			ismounted = "Эффект изменен статусом - на средстве передвижения.",
0			inVehicle = "Эффект изменен статусом - в транспорте.",
0			isAlive= "Эффект изменен статусом - живой.",
0		},
	
0		nomTimerInvertAura = "Инвертировать ауру когда время ниже",
0		aidePowaTimerInvertAuraSlider = "Инвертировать ауру когда длительность меньше чем этот предел (0 - дезактивировать)",
0		nomTimerHideAura = "Скрыть ауру и таймер если время выше",
0		aidePowaTimerHideAuraSlider = "Скрыть ауру и таймер когда длительность больше чем этот предел (0 - дезактивировать)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
../localisation_zhCN.lua
==============================================================================
2	﻿if (GetLocale() == "zhCN") then
	
0	PowaAuras.Anim[0] = "[无]";
0	PowaAuras.Anim[1] = "静止";
0	PowaAuras.Anim[2] = "闪光效果";
0	PowaAuras.Anim[3] = "生长效果";
0	PowaAuras.Anim[4] = "脉搏效果";
0	PowaAuras.Anim[5] = "气泡效果";
0	PowaAuras.Anim[6] = "水滴效果";
0	PowaAuras.Anim[7] = "漏电效果";
0	PowaAuras.Anim[8] = "收缩效果";
0	PowaAuras.Anim[9] = "火焰效果";
0	PowaAuras.Anim[10] = "盘旋效果";
	
0	PowaAuras.BeginAnimDisplay[0] = "[无]";
0	PowaAuras.BeginAnimDisplay[1] = "由小放大";
0	PowaAuras.BeginAnimDisplay[2] = "由大渐小";
0	PowaAuras.BeginAnimDisplay[3] = "逐渐清晰";
0	PowaAuras.BeginAnimDisplay[4] = "左边进入";
0	PowaAuras.BeginAnimDisplay[5] = "左上进入";
0	PowaAuras.BeginAnimDisplay[6] = "上部进入";
0	PowaAuras.BeginAnimDisplay[7] = "右上进入";
0	PowaAuras.BeginAnimDisplay[8] = "右边进入";
0	PowaAuras.BeginAnimDisplay[9] = "右下进入";
0	PowaAuras.BeginAnimDisplay[10] = "下部进入";
0	PowaAuras.BeginAnimDisplay[11] = "左下进入";
0	PowaAuras.BeginAnimDisplay[12] = "弹跳进入";
	
0	PowaAuras.EndAnimDisplay[0] = "[无]";
0	PowaAuras.EndAnimDisplay[1] = "放大消失";
0	PowaAuras.EndAnimDisplay[2] = "缩小消失";
0	PowaAuras.EndAnimDisplay[3] = "淡化消失";
0	PowaAuras.EndAnimDisplay[4] = "Spin";
0	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
0	PowaAuras.Sound[0] = "[无]";
0	PowaAuras.Sound[1] = "升级";
0	PowaAuras.Sound[2] = "抬取金币";
0	PowaAuras.Sound[3] = "点击小地图";
0	PowaAuras.Sound[4] = "发现新区域";
0	PowaAuras.Sound[5] = "接到任务";
0	PowaAuras.Sound[6] = "任务完成";
0	PowaAuras.Sound[7] = "写任务";
0	PowaAuras.Sound[8] = "钓鱼";
0	PowaAuras.Sound[9] = "PVP事件";
0	PowaAuras.Sound[10] = "团队检查";
0	PowaAuras.Sound[11] = "团队警告";
0	PowaAuras.Sound[12] = "打开拍卖行";
0	PowaAuras.Sound[13] = "关闭拍卖行";
0	PowaAuras.Sound[14] = "消消话";
0	PowaAuras.Sound[15] = "打开背包";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "输入 /powa 打开特效编辑器.",
	
0		aucune = "无",
0		aucun = "无",
0		largeur = "宽度",
0		hauteur = "高度",
0		mainHand = "主手",
0		offHand = "副手",
0		bothHands = "双手",
	
0		DebuffType =
0		{
0			Magic   = "魔法",
0			Disease = "疾病",
0			Curse   = "诅咒",
0			Poison  = "中毒",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC", --- need confirm this translation. by doomiris
0			[PowaAuras.DebuffCatType.Silence] = "沉默",
0			[PowaAuras.DebuffCatType.Snare] = "诱捕",
0			[PowaAuras.DebuffCatType.Stun] = "昏迷",
0			[PowaAuras.DebuffCatType.Root] = "无法行动",
0			[PowaAuras.DebuffCatType.Disarm] = "缴械",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE法术",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff类型",
0			[PowaAuras.BuffTypes.Enchant] = "武器强化",
0			[PowaAuras.BuffTypes.Combo] = "连击点数",
0			[PowaAuras.BuffTypes.ActionReady] = "技能冷却",
0			[PowaAuras.BuffTypes.Health] = "生命值",
0			[PowaAuras.BuffTypes.Mana] = "魔法值",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "怒气/能量/符文能量", 
0			[PowaAuras.BuffTypes.Aggro] = "获得仇恨",
0			[PowaAuras.BuffTypes.PvP] = "PvP标志",
0			[PowaAuras.BuffTypes.Stance] = "姿态",
0			[PowaAuras.BuffTypes.SpellAlert] = "法术预警",  
0			[PowaAuras.BuffTypes.OwnSpell] = "自己技能书内的法术",  
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
0		},
		
		-- main
0		nomEnable = "启用",
0		aideEnable = "启用/禁用所有PowerAuras特效",
	
0		nomDebug = "调试模式",
0		aideDebug = "打开调试模式后,将在聊天窗口显示特效的触发条件等信息",
0		ListePlayer = "分类",
0		ListeGlobal = "全局",
0		aideMove = "移动特效",
0		aideCopy = "复制特效",
0		nomRename = "重命名",
0		aideRename = "重命名我的特效分类名",
0		nomTest = "测试",
0		nomHide = "全部隐藏",
0		nomEdit = "编辑",
0		nomNew = "新建",
0		nomDel = "删除",
0		nomImport = "导入", 
0		nomExport = "导出", 
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set", 
0		aideImport = "把特效字串粘贴(Ctrl+v)在此编辑框内,然后点击\'接受\'按钮",
0		aideExport = "复制(Ctrl+c)此编辑框内的特效字串,与其它人分享你的特效", 
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "删除所选特效(必须按住Ctrl键才能使用此功能)",
0		nomMove = "移动",
0		nomCopy = "复制",
0		nomPlayerEffects = "我的特效",
0		nomGlobalEffects = "通用特效",
0		aideEffectTooltip = "按住Shift键点击图标以启用/禁用该特效",
	
		-- editor
0		nomSound = "播放声音",
0		aideSound = "特效触发时播放声音",
0		nomCustomSound = "自定义声音文件:",
0		aideCustomSound = "输入声音文件名称,如cookie.mp3 注意:你需要在游戏启动前把声音文件放入Sounds文件夹下,目前仅支持mp3和wav格式.",
	
0		nomTexture = "当前材质",
0		aideTexture = "显示特效使用的材质.你可以修改相应文件夹内的.tga 文件来增加特效",
	
0		nomAnim1 = "动画效果",
0		nomAnim2 = "辅助效果",
0		aideAnim1 = "是否为所选材质使用动画效果",
0		aideAnim2 = "此动画效果以较低不透明度显示,为了不过多占用屏幕同一时间只显示一个辅助效果",
	
0		nomDeform = "拉伸",
0		aideDeform = "在高度或宽度方向拉伸材质",
	
0		aideColor = "点击此处修改材质颜色",
0		aideFont = "点击此处来选择字体,点击OK按钮使你的选择生效", 
0		aideMultiID = "此处输入其它特效的ID,以执行联合检查.多个ID号须用'/'分隔. 特效ID可以在某个特效的鼠标提示中第一行找到,如:[2],2就是此特效ID", 
0		aideTooltipCheck = "此处输入用于激活特效的某个状态的鼠标提示文字",
	
0		aideBuff = "此处输入用于激活特效的buff的名字,或名字中的几个连续文字.如果使用分隔符,也可以输入多个buff的名字.例如输入: 能量灌注/奥术能量",
0		aideBuff2 = "此处输入用于激活特效的debuff的名字,或名字中的几个连续文字.如果使用分隔符,也可以输入多个debuff的名字.例如输入: 堕落治疗/燃烧刺激",
0		aideBuff3 = "此处输入用于激活特效的debuff的类型名称,或名称中的几个连续文字.如果使用分隔符,也可以输入多个debuff类型的名称.例如输入: 魔法/诅咒/中毒/疾病",
0		aideBuff4 = "此处输入用于激活特效的AOE法术的名字,AOE法术名字可以在战斗记录中找到.例如输入:邪恶光环/火焰之雨/暴风雪",
0		aideBuff5 = "此处输入用于激活特效的武器临时附魔效果.另外你可以通过前置'main/'或者'off/'来指明主副手位置(例如: main/致残毒药,表示检测主手上的这种毒药)", 
0		aideBuff6 = "此处输入用于激活特效的连击点数.例如输入: 1或者1/2/3或者0/4/5等等自由组合",
0		aideBuff7 = "此处输入激活特效的动作条上的动作名,或名字中的几个连续文字,当此动作完全冷却时此效果触发.例如输入:赞达拉英雄护符/法力之潮图腾/心灵专注",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
0		aideSpells = "此处输入用于激活法术预警特效的法术名称", 
0		aideStacks = "输入用于激活特效的操作符及叠加数量，只能输入一个操作符，例如：'<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", 
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
	
0		aideUnitn = "此处输入用于激活特效的特定成员名称,必须处于同一团队",
0		aideUnitn2 = "仅用于团队/队伍模式",    
	
0		aideMaxTex = "定义特效编辑器使用的材质数量,如果你增加了自定义材质请修改此值.",
0		aideAddEffect = "新增加一个特效",
0		aideWowTextures = "使用游戏内置材质",
0		aideTextAura = "使用文字做为特效材质(图形材质将被禁用)", 
0		aideRealaura = "清晰光环",
0		aideCustomTextures = "使用自定义材质,例如: Flamme.tga(自定义材质需保存在custom文件夹下)",--- untraslated (needs update to match enGB string) --- no error found by doomiris
0		aideRandomColor = "每次激活时使用随机颜色",
	
0		aideTexMode = "材质透明度反向显示",
		
0		nomActivationBy = "激活条件",
	
0		nomOwnTex = "使用技能图标", 
0		aideOwnTex = "使用buff/debuff或技能的默认图标做为材质", 
0		nomStacks = "叠加", --no longer used?
	
0		nomUpdateSpeed = "更新速度",
0		nomSpeed = "运动速度",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "进场效果",
0		nomEnd = "结束效果",
0		nomSymetrie = "对称性",
0		nomAlpha = "不透明度",
0		nomPos = "位置",
0		nomTaille = "大小",
	
0		nomExact = "精确匹配名称",
0		nomGCD = "公共冷却",
0		nomThreshold = "触发极限",
0		aideThreshInv = "选中此项可反转触发逻辑. 生命值/法力值: 默认=低于指定值时触发特效 / 选中此项后=高于指定值时触发特效. 能量/怒气/符文能量: 默认=高于指定值时触发特效 / 选中此项后=低于指定值时触发特效",
0		nomThreshInv = "</>", 
0		nomStance = "姿态",
	
0		nomMine = "由自己施放的", 
0		aideMine = "选中此项则仅检测由玩家施放的buff/debuff", 
0		nomDispellable = "自己可以驱散的",
0		aideDispellable = "Check to show only buffs that are dispellable",
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
0		nomPlayerSpell = "Player Casting",
0		aidePlayerSpell = "Check if Player is casting a spell",
	
0		nomCheckTarget = "敌方目标",
0		nomCheckFriend = "友方目标",
0		nomCheckParty = "团队目标",
0		nomCheckFocus = "焦点目标",
0		nomCheckRaid = "团队成员",
0		nomCheckGroupOrSelf = "团队/小队或自己",
0		nomCheckGroupAny = "任何人", 
0		nomCheckOptunitn = "特定成员",
	
0		aideTarget = "此buff/debuff仅存在于敌方目标上",
0		aideTargetFriend = "此buff/debuff仅存在于友方目标上",
0		aideParty = "此buff/debuff仅存在于小队中",
0		aideGroupOrSelf = "选中此项后将仅对团队或小队成员(包括自己)进行检测",
0		aideFocus = "此buff/debuff仅存在焦点目标上",
0		aideRaid = "此buff/debuff仅存在于团队中",
0		aideGroupAny = "选中此项后,当任何一个小队/团队成员有此buff/debuff就触发特效. 不选中此项(默认状态),则检查到所有人都有此buff/debuff才触发特效", 
0		aideOptunitn = "此buff/debuff仅存在于团队/小队中的特定成员身上",
0		aideExact = "选中此项将精确匹配buff/debuff名称",
0		aideGCD = "选中此项后'动作冷却'功能将检测公共冷却.需要注意的是,如果一个技能只有公共冷却,则会触发特效",
0		aideStance = "选择用于触发特效的姿态",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
0		nomCheckShowTimer = "显示",
0		nomTimerDuration = "延迟消失",
0		aideTimerDuration = "目标上的buff/debuff计时器延迟到此时间结束后再消失(0为禁用)",
0		aideShowTimer = "为此效果显示计时器",
0		aideSelectTimer = "选择使用何种计时器来显示持续时间",
0		aideSelectTimerBuff = "选择使用何种计时器来显示持续时间(仅用于玩家buff)",
0		aideSelectTimerDebuff = "选择使用何种计时器来显示持续时间(仅用于玩家debuff)",
	
0		nomCheckShowStacks = "Show",
	
0		nomCheckInverse = "不存在时激活",
0		aideInverse = "选中此项后,仅当buff/debuff不存在时显示此特效",	
	
0		nomCheckIgnoreMaj = "忽略大小写",	
0		aideIgnoreMaj = "选中此项将忽略buff/debuff名字的大小写字母(供英文玩家使用,中国玩家不需要修改此项)",
	
0		nomDuration = "延迟消失",
0		aideDuration = "特效延迟到此时间结束后再消失(0为禁用)",
	
0		nomCentiemes = "显示百分位",
0		nomDual = "显示两个计时器",
0		nomHideLeadingZeros = "隐藏前置零位,如:08秒显示为8秒",
0		nomTransparent = "使用透明材质",
0		nomUpdatePing = "Animate on refresh",
0		nomClose = "关闭",
0		nomEffectEditor = "特效编辑器",
0		nomAdvOptions = "选项",
0		nomMaxTex = "最大可用材质",
0		nomTabAnim = "动画",
0		nomTabActiv = "条件",
0		nomTabSound = "声音",
0		nomTabTimer = "计时器",
0		nomTabStacks = "层数", --add this line according to EN loc by doomiris
0		nomWowTextures = "使用内置材质",
0		nomCustomTextures = "使用自定义材质",
0		nomTextAura = "文字材质", 
0		nomRealaura = "清晰光环",
0		nomRandomColor = "随机颜色",
0		nomTexMode = "光晕效果",
	
0		nomTalentGroup1 = "主天赋",
0		aideTalentGroup1 = "选中此项后,仅当你处于主天赋状态下才触发此特效",
0		nomTalentGroup2 = "副天赋",
0		aideTalentGroup2 = "选中此项后,仅当你处于副天赋状态下才触发此特效",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
../localisation_zhTW.lua
==============================================================================
2	﻿if (GetLocale() == "zhTW") then
	
0	PowaAuras.Anim[0] = "[無]";
0	PowaAuras.Anim[1] = "靜止";
0	PowaAuras.Anim[2] = "閃光效果";
0	PowaAuras.Anim[3] = "生長效果";
0	PowaAuras.Anim[4] = "脈搏效果";
0	PowaAuras.Anim[5] = "氣泡效果";
0	PowaAuras.Anim[6] = "水滴效果";
0	PowaAuras.Anim[7] = "漏電效果";
0	PowaAuras.Anim[8] = "收縮效果";
0	PowaAuras.Anim[9] = "火焰效果";
0	PowaAuras.Anim[10] = "盤旋效果";
	
0	PowaAuras.BeginAnimDisplay[0] = "[無]";
0	PowaAuras.BeginAnimDisplay[1] = "由小放大";
0	PowaAuras.BeginAnimDisplay[2] = "由大漸小";
0	PowaAuras.BeginAnimDisplay[3] = "逐漸清晰";
0	PowaAuras.BeginAnimDisplay[4] = "左邊進入";
0	PowaAuras.BeginAnimDisplay[5] = "左上進入";
0	PowaAuras.BeginAnimDisplay[6] = "上部進入";
0	PowaAuras.BeginAnimDisplay[7] = "右上進入";
0	PowaAuras.BeginAnimDisplay[8] = "右邊進入";
0	PowaAuras.BeginAnimDisplay[9] = "右下進入";
0	PowaAuras.BeginAnimDisplay[10] = "下部進入";
0	PowaAuras.BeginAnimDisplay[11] = "左下進入";
0	PowaAuras.BeginAnimDisplay[12] = "彈跳進入";
	
0	PowaAuras.EndAnimDisplay[0] = "[無]";
0	PowaAuras.EndAnimDisplay[1] = "放大消失";
0	PowaAuras.EndAnimDisplay[2] = "縮小消失";
0	PowaAuras.EndAnimDisplay[3] = "淡化消失";
0	PowaAuras.EndAnimDisplay[4] = "Spin";
0	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
0	PowaAuras.Sound[0] = "[無]";
0	PowaAuras.Sound[1] = "升級";
0	PowaAuras.Sound[2] = "擡取金幣";
0	PowaAuras.Sound[3] = "點擊小地圖";
0	PowaAuras.Sound[4] = "發現新區域";
0	PowaAuras.Sound[5] = "接到任務";
0	PowaAuras.Sound[6] = "任務完成";
0	PowaAuras.Sound[7] = "寫任務";
0	PowaAuras.Sound[8] = "釣魚";
0	PowaAuras.Sound[9] = "PVP事件";
0	PowaAuras.Sound[10] = "團隊檢查";
0	PowaAuras.Sound[11] = "團隊警告";
0	PowaAuras.Sound[12] = "打開拍賣行";
0	PowaAuras.Sound[13] = "關閉拍賣行";
0	PowaAuras.Sound[14] = "消消話";
0	PowaAuras.Sound[15] = "打開背包";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "輸入 /powa 打開特效編輯器.",			
	
0		aucune = "無",
0		aucun = "無",
0		largeur = "寬度",
0		hauteur = "高度",
0		mainHand = "主手",
0		offHand = "副手",
0		bothHands = "雙手",
	
0		DebuffType =
0		{
0			Magic = "魔法",
0			Disease = "疾病",
0			Curse = "詛咒",
0			Poison = "中毒",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "沈默",
0			[PowaAuras.DebuffCatType.Snare] = "誘捕",
0			[PowaAuras.DebuffCatType.Stun] = "昏迷",
0			[PowaAuras.DebuffCatType.Root] = "無法行動",
0			[PowaAuras.DebuffCatType.Disarm] = "繳械",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE法術",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff類型",
0			[PowaAuras.BuffTypes.Enchant] = "武器強化",
0			[PowaAuras.BuffTypes.Combo] = "連擊點數",
0			[PowaAuras.BuffTypes.ActionReady] = "技能冷卻",
0			[PowaAuras.BuffTypes.Health] = "生命值",
0			[PowaAuras.BuffTypes.Mana] = "魔法值",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "怒氣/能量/符文能量",
0			[PowaAuras.BuffTypes.Aggro] = "獲得仇恨",
0			[PowaAuras.BuffTypes.PvP] = "PvP標誌",
0			[PowaAuras.BuffTypes.Stance] = "姿態",
0			[PowaAuras.BuffTypes.SpellAlert] = "法術預警",
0			[PowaAuras.BuffTypes.OwnSpell] = "來自自己技能書內的法術", 
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
0		},
		
		-- main
0		nomEnable = "啟用",
0		aideEnable = "啟用/禁用所有PowerAuras特效",
	
0		nomDebug = "調試模式",
0		aideDebug = "打開調試模式後,將在聊天窗口顯示特效的觸發條件等信息",
0		ListePlayer = "分類",
0		ListeGlobal = "全局",
0		aideMove = "移動特效",
0		aideCopy = "復制特效",
0		nomRename = "重命名",
0		aideRename = "重命名我的特效分類名",
0		nomTest = "測試",
0		nomHide = "全部隱藏",
0		nomEdit = "編輯",
0		nomNew = "新建",
0		nomDel = "刪除",
0		nomImport = "導入", 
0		nomExport = "導出", 
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set",
0		aideImport = "把特效字串粘貼(Ctrl+v)在此編輯框內,然後點擊\'接受\'按鈕",
0		aideExport = "復制(Ctrl+c)此編輯框內的特效字串,與其它人分享你的特效", 
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "刪除所選特效(必須按住Ctrl鍵才能使用此功能)",
0		nomMove = "移動",
0		nomCopy = "復制",
0		nomPlayerEffects = "我的特效",
0		nomGlobalEffects = "通用特效",
0		aideEffectTooltip = "按住Shift鍵點擊圖標以啟用/禁用該特效",
	
		-- editor
0		nomSound = "播放聲音",
0		aideSound = "特效觸發時播放聲音",
0		nomCustomSound = "自定義聲音文件:",	
0		aideCustomSound = "輸入聲音文件名稱,如cookie.mp3 註意:你需要在遊戲啟動前把聲音文件放入Sounds文件夾下,目前僅支持mp3和wav格式.",
	
0		nomTexture = "當前材質",
0		aideTexture = "顯示特效使用的材質.你可以修改相應文件夾內的.tga 文件來增加特效",
	
0		nomAnim1 = "動畫效果",
0		nomAnim2 = "輔助效果",
0		aideAnim1 = "是否為所選材質使用動畫效果",
0		aideAnim2 = "此動畫效果以較低不透明度顯示,為了不過多占用屏幕同一時間只顯示一個輔助效果",
	
0		nomDeform = "拉伸",
0		aideDeform = "在高度或寬度方向拉伸材質",
	
0		aideColor = "點擊此處修改材質顏色",
0		aideFont = "點擊此處來選擇字體,點擊OK按鈕使你的選擇生效", 
0		aideMultiID = "此處輸入其它特效的ID,以執行聯合檢查.多個ID號須用'/'分隔. 特效ID可以在某個特效的鼠標提示中第一行找到,如:[2],2就是此特效ID", 
0		aideTooltipCheck = "此處輸入用於激活特效的某個狀態的鼠標提示文字",
	
0		aideBuff = "此處輸入用於激活特效的buff的名字,或名字中的幾個連續文字.如果使用分隔符,也可以輸入多個buff的名字.例如輸入: 能量灌註/奧術能量",
0		aideBuff2 = "此處輸入用於激活特效的debuff的名字,或名字中的幾個連續文字.如果使用分隔符,也可以輸入多個debuff的名字.例如輸入: 墮落治療/燃燒刺激",
0		aideBuff3 = "此處輸入用於激活特效的debuff的類型名稱,或名稱中的幾個連續文字.如果使用分隔符,也可以輸入多個debuff類型的名稱.例如輸入: 魔法/詛咒/中毒/疾病",
0		aideBuff4 = "此處輸入用於激活特效的AOE法術的名字,AOE法術名字可以在戰鬥記錄中找到.例如輸入:邪惡光環/火焰之雨/暴風雪",
0		aideBuff5 = "此處輸入用於激活特效的武器臨時附魔效果.另外你可以通過前置'main/'或者'off/'來指明主副手位置(例如: main/致殘毒藥,表示檢測主手上的這種毒藥)", 
0		aideBuff6 = "此處輸入用於激活特效的連擊點數.例如輸入: 1或者1/2/3或者0/4/5等等自由組合",
0		aideBuff7 = "此處輸入激活特效的動作條上的動作名,或名字中的幾個連續文字,當此動作完全冷卻時此效果觸發.例如輸入:贊達拉英雄護符/法力之潮圖騰/心靈專註",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
0		aideSpells = "此處輸入用於激活法術預警特效的法術名稱", 
0		aideStacks = "輸入用於激活特效的操作符及疊加數量，只能輸入一個操作符，例如：'<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", 
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
	
0		aideUnitn = "此處輸入用於激活特效的特定成員名稱,必須處於同一團隊",
0		aideUnitn2 = "僅用於團隊/隊伍模式",    
	
0		aideMaxTex = "定義特效編輯器使用的材質數量,如果你增加了自定義材質請修改此值.",
0		aideAddEffect = "新增加一個特效",
0		aideWowTextures = "使用遊戲內置材質",
0		aideTextAura = "使用文字做為特效材質(圖形材質將被禁用)", 
0		aideRealaura = "清晰光環",
0		aideCustomTextures = "使用自定義材質,例如: Flamme.tga(自定義材質需保存在custom文件夾下)",--- untraslated (needs update to match enGB string) --- no error found by doomiris
0		aideRandomColor = "每次激活時使用隨機顏色",
	
0		aideTexMode = "材質透明度反向顯示",
		
0		nomActivationBy = "激活條件",
	
0		nomOwnTex = "使用技能圖標", 
0		aideOwnTex = "使用buff/debuff或技能的默認圖標做為材質", 
0		nomStacks = "疊加", --no longer used?
	
0		nomUpdateSpeed = "更新速度",
0		nomSpeed = "運動速度",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "進場效果",
0		nomEnd = "結束效果",
0		nomSymetrie = "對稱性",
0		nomAlpha = "不透明度",
0		nomPos = "位置",
0		nomTaille = "大小",
	
0		nomExact = "精確匹配名稱",
0		nomGCD = "公共冷卻",
0		nomThreshold = "觸發極限",
0		aideThreshInv = "選中此項可反轉觸發邏輯. 生命值/法力值: 默認=低於指定值時觸發特效 / 選中此項後=高於指定值時觸發特效. 能量/怒氣/符文能量: 默認=高於指定值時觸發特效 / 選中此項後=低於指定值時觸發特效",
0		nomThreshInv = "</>", 
0		nomStance = "姿態",
	
0		nomMine = "由自己施放的", 
0		aideMine = "選中此項則僅檢測由玩家施放的buff/debuff", 
0		nomDispellable = "自己可以驅散的",
0		aideDispellable = "Check to show only buffs that are dispellable",
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
0		nomPlayerSpell = "Player Casting",
0		aidePlayerSpell = "Check if Player is casting a spell",
	
0		nomCheckTarget = "敵方目標",
0		nomCheckFriend = "友方目標",
0		nomCheckParty = "團隊目標",
0		nomCheckFocus = "焦點目標",
0		nomCheckRaid = "團隊成員",
0		nomCheckGroupOrSelf = "團隊/小隊或自己",
0		nomCheckGroupAny = "任何人", 
0		nomCheckOptunitn = "特定成員",
	
0		aideTarget = "此buff/debuff僅存在於敵方目標上",
0		aideTargetFriend = "此buff/debuff僅存在於友方目標上",
0		aideParty = "此buff/debuff僅存在於小隊中",
0		aideGroupOrSelf = "選中此項後將僅對團隊或小隊成員(包括自己)進行檢測",
0		aideFocus = "此buff/debuff僅存在焦點目標上",
0		aideRaid = "此buff/debuff僅存在於團隊中",
0		aideGroupAny = "選中此項後,當任何一個小隊/團隊成員有此buff/debuff就觸發特效. 不選中此項(默認狀態),則檢查到所有人都有此buff/debuff才觸發特效", 
0		aideOptunitn = "此buff/debuff僅存在於團隊/小隊中的特定成員身上",
0		aideExact = "選中此項將精確匹配buff/debuff名稱",
0		aideGCD = "選中此項後'動作冷卻'功能將檢測公共冷卻.需要註意的是,如果一個技能只有公共冷卻,則會觸發特效",
0		aideStance = "選擇用於觸發特效的姿態",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
0		nomCheckShowTimer = "顯示",
0		nomTimerDuration = "延遲消失",
0		aideTimerDuration = "目標上的buff/debuff計時器延遲到此時間結束後再消失(0為禁用)",
0		aideShowTimer = "為此效果顯示計時器",
0		aideSelectTimer = "選擇使用何種計時器來顯示持續時間",
0		aideSelectTimerBuff = "選擇使用何種計時器來顯示持續時間(僅用於玩家buff)",
0		aideSelectTimerDebuff = "選擇使用何種計時器來顯示持續時間(僅用於玩家debuff)",
	
0		nomCheckShowStacks = "Show",
	
0		nomCheckInverse = "不存在時激活",
0		aideInverse = "選中此項後,僅當buff/debuff不存在時顯示此特效",	
	
0		nomCheckIgnoreMaj = "忽略大小寫",	
0		aideIgnoreMaj = "選中此項將忽略buff/debuff名字的大小寫字母(供英文玩家使用,中國玩家不需要修改此項)",
	
0		nomDuration = "延遲消失",
0		aideDuration = "特效延遲到此時間結束後再消失(0為禁用)",
	
0		nomCentiemes = "顯示百分位",
0		nomDual = "顯示兩個計時器",
0		nomHideLeadingZeros = "隱藏前置零位,如:08秒顯示為8秒",
0		nomTransparent = "使用透明材質",
0		nomUpdatePing = "Animate on refresh",
0		nomClose = "關閉",
0		nomEffectEditor = "特效編輯器",
0		nomAdvOptions = "選項",
0		nomMaxTex = "最大可用材質",
0		nomTabAnim = "動畫",
0		nomTabActiv = "條件",
0		nomTabSound = "聲音",
0		nomTabTimer = "計時器",
0		nomTabStacks = "層數", --add this line according to EN loc by doomiris
0		nomWowTextures = "使用內置材質",
0		nomCustomTextures = "使用自定義材質",
0		nomTextAura = "文字材質", 
0		nomRealaura = "清晰光環",
0		nomRandomColor = "隨機顏色",
0		nomTexMode = "光暈效果",
	
0		aideTalentGroup1 = "選中此項後,僅當你處於主天賦狀態下才觸發此特效",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "副天賦",
0		aideTalentGroup2 = "選中此項後,僅當你處於副天賦狀態下才觸發此特效",
	
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
..\GTFO_Spells.lua
==============================================================================
	--------------------------------------------------------------------------
	-- GTFO_Spells.lua 
	--------------------------------------------------------------------------
	--[[
0	GTFO Spell List
0	Author: Lyta of Malygos
	
0	Change Log:
0		v0.2
0			- Added Spells
0		v0.3
0			- Wrath spells
0		v0.3.1
0			- Naxx spells
0		v0.3.2
0			- Naxx, Archavon
0		v0.3.3
0			- Ulduar
0		v1.0
0			- Trial of the Crusader
0		v1.0.1
0			- Added Koralon's Flaming Cinder, Ulduar spells
0			- Replaced some spell names with spell IDs
0		v1.1
0			- Replaced some spell names with spell IDs
0			- Added Ground Fissure (Freya trash)
0		v1.1.1
0			- Fixed Lord Jaraxxus's Legion Flame
0			- Added Lord Jaraxxus's Fel Inferno
0			- Fixed Northrend Beast's Slime Pool
0			- Fixed Northrend Beast's Fire Bomb
0		v1.1.2
0			- Added Deathstalker Visceri's Poison Bottle
0			- Added Anub'arak's Scarabs' Acid-Drenched Mandibles
0			- Added Mimiron's Flames
0			- Added Freya Trash's Hurricane
0		v1.1.3
0			- Added Runemaster Molgeim's Rune of Death
0			- Added Stormcaller Brundir's Lightning Tendrils
0		v1.1.4
0			- Added Drakuru's Blight Crystal Explosion
0			- Added Toxic Waste (Pit of Saron)
0			- Added Scourgelord Tyrannus's Icy Blast
0			- Added Onyxia's Deep Breath
0	]]--
	
1	if (not GTFO) then -- Add only if not already present
	
1	GTFO = {SpellID = {}, SpellName = {}};
	
1	GTFO.SpellID["40611"] = {
1		desc = "Blaze (Illidan)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["41482"] = {
1		desc = "Blizzard (Illidari Council)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["41481"] = {
1		desc = "Flamestrike (Illidari Council)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["41541"] = {
1		desc = "Consecration (Illidari Council)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["28865"] = {
1		desc = "Consumption (Netherspite)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["31944"] = {
1		desc = "Doomfire (Archimonde)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["30129"] = {
1		desc = "Charred Earth (Nightbane)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["50746"] = {
1		desc = "Burn (Illidan)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62548"] = {
1		desc = "Scorch (Ignis-10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62549"] = {
1		desc = "Scorch (Ignis-10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63475"] = {
1		desc = "Scorch (Ignis-25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63476"] = {
1		desc = "Scorch (Ignis-25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["29371"] = {
1		desc = "Eruption (Heigan the Unclean)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["47579"] = {
1		desc = "Freezing Cloud (Skadi)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["60020"] = {
1		desc = "Freezing Cloud (Skadi)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["51103"] = {
1		desc = "Frostbomb (Mage-Lord Urom)";
1		sound = 2;
1	};
	
1	GTFO.SpellID["56926"] = {
1		desc = "Thundershock (Jedoga Shadowseeker)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["60029"] = {
1		desc = "Thundershock (Jedoga Shadowseeker - Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["58965"] = {
1		desc = "Choking Cloud (Archavon 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["61672"] = {
1		desc = "Choking Cloud (Archavon 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["28547"] = {
1		desc = "Chill (Sapphron 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["55699"] = {
1		desc = "Chill (Sapphron 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["60919"] = {
1		desc = "Rock Shower (Archavon Warder 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["60923"] = {
1		desc = "Rock Shower (Archavon Warder 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["54362"] = {
1		desc = "Poison (Grobbulus)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["28158"] = {
1		desc = "Poison (Grobbulus)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["28241"] = {
1		desc = "Poison (Grobbulus)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["54363"] = {
1		desc = "Poison (Grobbulus)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["53400"] = {
1		desc = "Acid Cloud (Hadronox)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["59419"] = {
1		desc = "Acid Cloud (Hadronox - Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["64851"] = {
1		desc = "Flaming Rune (Ulduar trash)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["64989"] = {
1		desc = "Flaming Rune (Ulduar trash)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["50752"] = {
1		desc = "Storm of Grief (Maiden of Grief)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["59772"] = {
1		desc = "Storm of Grief (Maiden of Grief - Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["59451"] = {
1		desc = "Mojo Puddle";
1		sound = 1;
1	};
	
1	GTFO.SpellID["58994"] = {
1		desc = "Mojo Puddle - Heroic";
1		sound = 1;
1	};
	
1	GTFO.SpellID["55627"] = {
1		desc = "Mojo Puddle";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62466"] = {
1		desc = "Lightning Charge (Thorim)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62451"] = {
1		desc = "Unstable Energy (Freya 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62865"] = {
1		desc = "Unstable Energy (Freya 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["66881"] = {
1		desc = "Slime Pool (Northrend Beasts 10 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67639"] = {
1		desc = "Slime Pool (Northrend Beasts 10 Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67638"] = {
1		desc = "Slime Pool (Northrend Beasts 25 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67640"] = {
1		desc = "Slime Pool (Northrend Beasts 25 Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["66320"] = {
1		desc = "Fire Bomb (Northrend Beasts 10 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67473"] = {
1		desc = "Fire Bomb (Northrend Beasts 10 Heroic)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["67472"] = {
1		desc = "Fire Bomb (Northrend Beasts 25 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67475"] = {
1		desc = "Fire Bomb (Northrend Beasts 25 Heroic)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["66877"] = {
1		desc = "Legion Flame (Lord Jaraxxus 10 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67071"] = {
1		desc = "Legion Flame (Lord Jaraxxus 10 Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67070"] = {
1		desc = "Legion Flame (Lord Jaraxxus 25 Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67072"] = {
1		desc = "Legion Flame (Lord Jaraxxus 25 Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["66496"] = {
1		desc = "Fel Inferno (Lord Jaraxxus 10 Normal)";
1		sound = 2;
1	};
	
1	GTFO.SpellID["68717"] = {
1		desc = "Fel Inferno (Lord Jaraxxus 10 Heroic)";
1		sound = 2;
1	};
	
1	GTFO.SpellID["68716"] = {
1		desc = "Fel Inferno (Lord Jaraxxus 25 Normal)";
1		sound = 2;
1	};
	
1	GTFO.SpellID["68718"] = {
1		desc = "Fel Inferno (Lord Jaraxxus 25 Heroic)";
1		sound = 2;
1	};
	
1	GTFO.SpellID["64704"] = {
1		desc = "Devouring Flame (Razorscale 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["64733"] = {
1		desc = "Devouring Flame (Razorscale 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["66684"] = {
1		desc = "Flaming Cinder (Koralon 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67332"] = {
1		desc = "Flaming Cinder (Koralon 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63346"] = {
1		desc = "Focused Eyebeam (Kologarn 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63976"] = {
1		desc = "Focused Eyebeam (Kologarn 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["64459"] = {
1		desc = "Seeping Feral Essence (Auriaya 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["64675"] = {
1		desc = "Seeping Feral Essence (Auriaya 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["66351"] = {
1		desc = "Mine Explosion (Mimiron 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63009"] = {
1		desc = "Mine Explosion (Mimiron 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63157"] = {
1		desc = "Ground Fissure (Freya Trash 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63548"] = {
1		desc = "Ground Fissure (Freya Trash 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["67594"] = {
1		desc = "Poison Bottle (Trials of the Champion Regular)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["68316"] = {
1		desc = "Poison Bottle (Trials of the Champion Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["65775"] = {
1		desc = "Acid-Drenched Mandibles (Anub'arak 10 Normal)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["67861"] = {
1		desc = "Acid-Drenched Mandibles (Anub'arak 10 Heroic)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["67862"] = {
1		desc = "Acid-Drenched Mandibles (Anub'arak 25 Normal)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["67863"] = {
1		desc = "Acid-Drenched Mandibles (Anub'arak 25 Heroic)";
1		sound = 1;
1		applicationOnly = true;
1	};
	
1	GTFO.SpellID["64566"] = {
1		desc = "Flames (Mimiron Hard Mode)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63272"] = {
1		desc = "Hurricane (Freya Trash)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["62269"] = {
1		desc = "Rune of Death (Runemaster Molgeim 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63490"] = {
1		desc = "Rune of Death (Runemaster Molgeim 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["61886"] = {
1		desc = "Lightning Tendrils (Stormcaller Brundir 10)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["63485"] = {
1		desc = "Lightning Tendrils (Stormcaller Brundir 25)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["54115"] = {
1		desc = "Blight Crystal Explosion (Drakuru)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["69024"] = {
1		desc = "Toxic Waste";
1		sound = 1;
1	};
	
1	GTFO.SpellID["70274"] = {
1		desc = "Toxic Waste";
1		sound = 1;
1	};
	
1	GTFO.SpellID["70436"] = {
1		desc = "Toxic Waste";
1		sound = 1;
1	};
	
1	GTFO.SpellID["69238"] = {
1		desc = "Icy Blast (Scourgelord Tyrannus - Normal)";
1		sound = 1;
1	};
	
1	GTFO.SpellID["69628"] = {
1		desc = "Icy Blast (Scourgelord Tyrannus - Heroic)";
1		sound = 1;
1	};
	
1	GTFO.SpellName["Shadow Void"] = {
1		desc = "Shadow Void";
1		sound = 1;
1	};
	
1	GTFO.SpellName["Poison Cloud"] = {
1		desc = "Poison Cloud";
1		sound = 1;
1	};
	
1	GTFO.SpellName["Void Zone"] = {
1		desc = "Void Zone";
1		sound = 1;
1	};
	
1	GTFO.SpellName["Spirit Fount"] = {
1		desc = "Spirit Fount";
1		sound = 1;
1	};
	
1	GTFO.SpellName["Flamestrike"] = {
1		desc = "Flamestrike (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Blizzard"] = {
1		desc = "Blizzard (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Death and Decay"] = {
1		desc = "Death and Decay (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Raging Consecration"] = {
1		desc = "Raging Consecration";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Rain of Fire"] = {
1		desc = "Rain of Fire (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Volley"] = {
1		desc = "Volley (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Hellfire"] = {
1		desc = "Hellfire (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Hurricane"] = {
1		desc = "Hurricane (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Magma Totem"] = {
1		desc = "Magma Totem (Generic)";
1		sound = 2;
1	};
	
1	GTFO.SpellName["Consumption"] = {
1		desc = "Consumption";
1		sound = 1;
1	};
	
	-- There are 92 different spell IDs for this one!  Going to stick with the name for now...
1	GTFO.SpellName["Breath"] = {
1		desc = "Breath (Onyxia)";
1		sound = 1;
1	};
	
	end
	
	--PvP
	
1	PowaGTFOPvP = {
	-- Paladin Consecration
1	["26573"] = true,
1	["20116"] = true,
1	["20922"] = true,
1	["20923"] = true,
1	["20924"] = true,
1	["48818"] = true,
1	["48819"] = true,
1	}

==============================================================================
..\PowerAuras.lua
==============================================================================
	--- ------------------------------------------------
	---            << Power Auras >>
	---              Par -Sinsthar-
	---    [Ziya/Tiven - serveur Fr - Kirin Tor] 
	---
	---     Effets visuels autour du personnage 
	---     en cas de buff, debuff et autres...
	--- ------------------------------------------------
	
	--- Author: Smacker(v2.6.2),Gameldar (v2.6.1), Driizt (v2.5+), Garstiger (Powa Continued), Sinsthar (original author/concept)
	--- Thanks: Kouri for debuff type detection code
	--- Thanks: StingerSoft for Russian translations
	--- Thanks: Doomiris for Chinese Translations
	--- Thanks: JD for new aura textures
	--- Thanks: Suicidalkatt for the number textures
	--- Changes:
	--- Version 2.6.3 (lolkat)
	--- Version 2.6.2 (WotLK Raid or Self or Party)
	---  Feature: Option to match buff/debuff on group (raid or party or self)
	---  Feature: Option to match on buff/debuff tool-tip text
	---  Feature: In Vehicle flag added
	---  Feature: Resting flag added (except when in combat)
	---  Feature: Stun/Silence/Root/CC/Snare detection added to DebuffType
	---  Feature: Can flag to trigger only dispellable DebuffTypes 
	---  Feature: Added >= and <= stack comparisons
	---  Feature: Copy/Import/Export now includes timer settings
	---  Feature: Ability to look-up buffs/debuffs/spellalerts by icon name (ensure at least one underscore is in the buff name)
	---  Feature: Ability to look-up spells by spellIds (use [12345])
	---  Feature: Russian localisation added (thanks to StingerSoft)
	---  Feature: Option to hide leading zeros on timers
	---  Feature: Option to use transparent timer textures
	---  Change: Use Blizzard threat values instead of Banzi
	---  Bugfix: PvP Trigger now works
	---  Bugfix: Timers on buffs/debuff on other players now show
	--- Version 2.6.1a (WotLK Dual-Specs)
	---  Bugfix: corrected typo in the index value for the dual spec conditional (j != k)
	--- Version 2.6.1 (WotLK Dual-Specs)
	---  Feature: WoW 3.1 verison match (no longer out of date)
	---  Feature: Basic integration of dual specs support
	--- Version 2.6.0 (WotLK)
	---  Feature: WoW 3.1 compatibility update.
	---  Feature: Deathknight Presences added to Stance Auras.
	---  Feature: Whitespace added to export strings to facilitate forum posting.
	---  Feature: Better granularity for Mana/Health/Rage/Energy/Power threshold (step 5 -> 2).
	---  Feature: Mounted option changed to toggle (checked: only when mounted, unchecked: only when dismounted)
	---  Feature: Texture glow option affects timer.
	---  Bugfix: Mana/Rage/Energy/RunicPower Party & Raid triggers.
	---  Bugfix: Mana/Rage/Energy/RunicPower Unit triggers.
	---  Bugfix: PvP Trigger.
	---  Bugfix: "Casted" -> "Cast" typo.
	--- Version 2.5.9a (WotLK)
	---  Bugfix: 'hundredth', 'dual' timers checkbox errors.
	--- Version 2.5.9 (WotLK)
	---  Feature: Option to monitor "my" buffs/debuffs.
	---  Feature: Unlimited timers. (1 per aura instead of 5 total)
	---  Feature: Dynamic Aura update when multiple matches and 'own texture' checked.
	---  Feature: Import and export Auras as strings.
	---  Feature: Any/All toggle for party, raid buff checks. (default = all)
	---  Bugfix: Action Usable aura when action linked to stance.
	---  Bugfix: Make "Activate Power Auras" checkbox actually do something and shutdown processing when unchecked. :P
	--- Version 2.5.8b (WotLK)
	---  Bugfix: gui bug threshold invert option.
	--- Version 2.5.8a (WotLK)
	---  Bugfix: combination triggers with "show when not active" checked.
	---  Various internal logic optimizations.
	--- Version 2.5.8 (WotLK)
	---  Bugfix: Various label fonts (template breakage by Blizzard in builds 8982->9014)
	---  Bugfix: Font Select button not visible on first editor open.
	---  Feature: Text shadow option for textauras.
	---  Feature: Ability to setup auras with combination of triggers.
	---  Feature: Spell Casting activation trigger added (target and focus).
	--- Version 2.5.7b (WotLK)
	---  Bugfix: Begin animation "replaying" on aura refresh.
	--- Version 2.5.7a (WotLK)
	---  Bugfix: Offhand temporary enchant detection/stacks
	---	 Feature: Weapon buff auras can be defined separately per temporary enchant 
	---           and optionally filtered by slot (main or offhand)
	--- Version 2.5.7 (WotLK)
	---  Feature: Text Aura Option added (thanks to Garstiger for initial code)
	---  Feature: Option to invert default threshold behavior added.
	---  Feature: Pet health/mana activation enabled (enter "pet" in UnitName editbox)
	---  Bugfix: Manual.html pictures (submitted by Garstiger)
	---  Bugfix: Aura Type checkboxes
	---  Bugfix: UnitName nil error
	---  Bugfix: Threshold when Rage/Energy/Power is zero.
	--- Version 2.5.6c (WotLK)
	---  Bugfix: Not in Combat initial state.
	--- Version 2.5.6b (WotLK)
	---  Bugfix: .TimerFrame checkboxes nil error
	---  Bugfix: Target buff/debuff timers
	--- Version 2.5.6a (WotLK)
	---  Bugfix: GetComboPoints() API change.
	--- Version 2.5.6 (WotLK)
	---  Feature: Runic Power threshold added.
	---  Bugfix: GetPlayerBuff/UnitBuff/Debuff API changes.
	---  Bugfix: UIDropMenu, PanelTemplates_TabResize, Font Widget, this->self changes. 
	--- Version 2.5.5b
	---  Bugfix: Health/Mana threshold for party/raid units (line 1297 error)
	--- Version 2.5.5a
	---  Bugfix: Custom duration timer for target buffs/debuffs (wasn't reseting on target change)
	---  Bugfix: Hide player auras when dead/ghost.
	--- Version 2.5.5
	---  Feature: Stance options for Druid and Rogue(stealth) added
	---  Bugfix: Stance detection is now dynamic so lower levels that don't have all forms/stances yet are supported.
	---  Feature: Custom timer enabled for action usable. It overrides the calculated timers if used.
	---  Feature: Rage/Energy trigger implemented with upper thresholds.
	--- Version 2.5.4a
	---  Bugfix: Buff and Debuff timers for non-player units.
	--- Version 2.5.4
	---  Bugfix: Buff and Debuff timers.
	---  Feature: Custom textures editbox now accepts spellname or spellid in addition to filename.tga
	--- Version 2.5.3
	---  Bugfix: Buff and Debuff stacks.
	---  Bugfix: Mana-threshold auras when shifting to bear/cat.
	---  Feature: New custom sounds.
	---  Feature: Updated zh-CN localization by <Doomiris>.
	--- Version 2.5.2
	---  Feature: 30 more wow textures added to available choices
	---  Feature: PvP flag added to triggers
	---  Feature: Aggro status added to triggers
	---  Feature: Option to use ability/spell texture instead of predetermined choice where available.
	--- Version 2.5.1a
	---  Feature: Hide Auras when hiding the interface (Alt+z)
	--- Version 2.5.1
	---  Feature: WoW 2.4 compatibility re-code (various changes related to the new combatlog)
	---  Feature: New textures can now be added to defaults as long as they're named Auraxx.tga
	---           The selection slider will accommodate automatically next time you start the game.
	---  Bugfix: Stance detection
	---  Bugfix: Mounted detection (flying included)
	---  Bugfix: Aura change
	---  Bugfix: Action Usable (workaround for the absense of cooldown complete events)
	---          If you want to get notification when a trinket or bag item is usable you have
	---					 drag it to an actionbar (doesn't have to be a visible one)	 
	
	-- Exposed for Saving
1	PowaMisc = 
0		{
1			Disabled = false,
1			debug = false,
1			OnUpdateLimit = 0,
1			AnimationLimit = 0,
1			Version = GetAddOnMetadata("PowerAuras", "Version"),
1			DefaultTimerTexture = "Original",
1			DefaultStacksTexture = "Original",
1			TimerRoundUp = true,
1			AnimationFps = 30,
1			UseGTFO = true,
1		};
	
		
1	PowaAuras.PowaMiscDefault = PowaAuras:CopyTable(PowaMisc);
	
1	PowaSet = {};
1	PowaTimer = {};
	
1	PowaGlobalSet = {};
1	PowaGlobalListe = {};
1	PowaPlayerListe = {};
	
	--Default page names
6	for i = 1, 5 do
5		PowaPlayerListe[i] = PowaAuras.Text.ListePlayer.." "..i;
	end
11	for i = 1, 10 do
10		PowaGlobalListe[i] = PowaAuras.Text.ListeGlobal.." "..i;
	end
	
	--- ---------------------------------------------------------------------------------------------------------
	
2	function PowaAuras:Toggle(enable)
0		if (self.Initialising) then return; end
		--self:ShowText("Toggle Frame=", PowaAuras_Frame);
0		if (enable==nil) then
0			enable = PowaMisc.Disabled;
		end
0		if enable then
0			if (not PowaMisc.Disabled) then
0				return;
			end
0			if PowaAuras_Frame and not PowaAuras_Frame:IsShown() then		
0				PowaAuras_Frame:Show(); -- Show Main Options Frame
0				self:RegisterEvents(PowaAuras_Frame);
			end
0			PowaMisc.Disabled = false;
0			self:Setup();
0			self:DisplayText("Power Auras "..self.Colors.Green..PowaAuras.Text.Enabled.."|r");
		else
0			if (PowaMisc.Disabled) then
0				return;
			end
0			if PowaAuras_Frame and PowaAuras_Frame:IsShown() then
0				PowaAuras_Frame:UnregisterAllEvents();
0				PowaAuras_Frame:Hide();
			end
0			self:OptionHideAll(true);
0			PowaMisc.Disabled = true;
0			self:DisplayText("Power Auras "..self.Colors.Red..ADDON_DISABLED.."|r");
		end
	end
	
2	function PowaAuras:OnLoad(frame)
		
		--- Setting up the Import/Export static popups
0		self:SetupStaticPopups();
	
0		frame:RegisterEvent("VARIABLES_LOADED");
0		frame:RegisterEvent("PLAYER_ENTERING_WORLD");
		
		--- options init
0		SlashCmdList["POWA"] = PowaAuras_CommanLine;
0		SLASH_POWA1 = "/powa"	
	end
	
2	function PowaAuras:RegisterEvents(frame)
		--- TODO: conditionally Register/unregister events according to options for improved performance
0		for _, event in ipairs(self.Events) do
0			if (self[event]) then
0				frame:RegisterEvent(event);
			else
0				self:DisplayText("Event has no method ", event); --OK
			end
		end
	end
	
2	function PowaAuras:LoadAuras()
		--self:Message("Saved varaible convertion: PowaSet");
	
0		self.Auras = {};
		
0		for k, v in pairs(PowaGlobalSet) do
0			self:UnitTestDebug("PowaGlobalSet",k,v.buffname);
0			if (k~=0 and v.is_a == nil or not v:is_a(cPowaAura)) then
0				self:UnitTestDebug(k,v.buffname);
0				self.Auras[k] = self:AuraFactory(v.bufftype, k, v);
			end
		end
	
0		for k, v in pairs(PowaSet) do
0			self:UnitTestDebug("PowaSet",k,v.buffname, self.Auras[k]);
0			if (k>0 and k <121 and not self.Auras[k]) then
0				self:UnitTestDebug("is_a=",v.is_a);
0				if (v.is_a == nil or not v:is_a(cPowaAura)) then
					--self:ShowText("load aura ", k, " isResting=", v.isResting);
0					self.Auras[k] = self:AuraFactory(v.bufftype, k, v);
0					self:UnitTestDebug("Out=",self.Auras[k].buffname);
				end
			end
		end
	
		--self:Message("backwards combatiblity");
		--self.Auras[0] = cPowaAura(0, {off=true});
	
		-- Update for backwards combatiblity
0		for i = 1, 360 do
			-- gere les rajouts
0			local aura = self.Auras[i];
0			local oldaura = PowaSet[i];
0			if (oldaura==nil) then
0				oldaura = PowaGlobalSet[i];
			end
0			if (aura) then
0				if (aura.combat==0) then
0					aura.combat = 0;
0				elseif (aura.combat==1) then
0					aura.combat = true;
0				elseif (aura.combat==2) then
0					aura.combat = false;
				end
0				if (aura.ignoreResting==true) then
0					aura.isResting = true;
0				elseif (aura.ignoreResting==true) then
0					aura.isResting = false;
				end
0				aura.ignoreResting = nil;
0				if (aura.isinraid==true) then
0					aura.inRaid = true;
0				elseif (aura.isinraid==false) then
0					aura.inRaid = 0;
				end
0				aura.isinraid = nil;
0				if (aura.isDead==true) then
0					aura.isAlive = false;
0				elseif (aura.isDead==false) then
0					aura.isAlive = true;
0				elseif (aura.isDead==0) then
0					aura.isAlive = 0;
				end
0				aura.isDead = nil;
0				if (aura.buffname == "") then
					--self:Message("Delete aura "..i);
0					self.Auras[i] = nil;
0				elseif (aura.bufftype == nil and oldaura~=nil) then
					--self:Message("Repair bufftype for #"..i);
					
0					if (oldaura.isdebuff) then
0						aura.bufftype = self.BuffTypes.Debuff;
0					elseif (oldaura.isdebufftype) then
0						aura.bufftype = self.BuffTypes.TypeDebuff;
0					elseif (oldaura.isenchant) then
0						aura.bufftype = self.BuffTypes.Enchant;
					else
0						aura.bufftype = self.BuffTypes.Buff;
					end
					
				-- Update old combo style 1235 => 1/2/3/5
0				elseif (aura.bufftype==self.BuffTypes.Combo) then
					--self:UnitTestDebug("Combo upgrade check ", aura.buffname, " for ", aura.id);
0					if (string.len(aura.buffname)>1 and string.find(aura.buffname, "/", 1, true)==nil) then
0						local newBuffName=string.sub(aura.buffname, 1, 1);
0						for i=2, string.len(aura.buffname) do
0							newBuffName = newBuffName.."/"..string.sub(aura.buffname, i, i);
						end
0						aura.buffname = newBuffName
					end
				end
	
			end
		end
		
		--self:Message("Saved varaible convertion: PowaTimer #", #PowaTimer);
		-- Copy old timer info (should be once only)
0		for k, v in pairs(PowaTimer) do
0			local aura = self.Auras[k];
0			if (aura) then
0				aura.Timer = cPowaTimer(aura, v);
0				if (PowaSet[k]~=nil and PowaSet[k].timer~=nil) then
0					aura.Timer.enabled = PowaSet[k].timer;
				end
0				if (PowaGlobalSet[k]~=nil and PowaGlobalSet[k].timer~=nil) then
0					aura.Timer.enabled = PowaGlobalSet[k].timer;
				end
			end
		end
		
		-- Copy to Saved Sets
0		PowaSet = self.Auras;
0		for i = 121, 360 do
0			PowaGlobalSet[i] = self.Auras[i];
		end
0		PowaTimer = {};
		
0		for k, v in pairs(self.Auras) do
0			self:UnitTestDebug("Loaded Auras ",k, " ", v.buffname);
		end
	
	end
	------------------------------------------------------------------------------------------------------- EVENTS
2	function PowaAuras:FindAllChildren()
0		self:UnitTestDebug("FindAllChildren");
0		for _, aura in pairs(self.Auras) do
0			aura.Children = nil;
		end
0		for _, aura in pairs(self.Auras) do
0			self:FindChildren(aura);
		end
		--for _, aura in pairs(self.Auras) do
		--	if (aura.Children) then
		--		self:ShowText("Aura "..aura.id.." Children:");
		--		for childId in pairs(aura.Children) do
		--			self:ShowText("  "..childId);
		--		end
		--	end
		--end
	end
	
2	function PowaAuras:FindChildren(aura)
0		if (not aura.multiids or aura.multiids=="") then return; end
		--self:ShowText(aura.id.." "..aura.multiids);
0		for pword in string.gmatch(aura.multiids, "[^/]+") do
0			if (string.sub(pword, 1, 1) == "!") then
0				pword = string.sub(pword, 2);
			end
0			local id = tonumber(pword);
			--self:ShowText(" >>"..id);
0			local dependant = self.Auras[id];
0			if (dependant) then
0				if (not dependant.Children) then
0					dependant.Children = {};
				end
0				dependant.Children[aura.id] = true;
			end
		end
	end
	
2	function PowaAuras:CustomTexPath(customname)
0		local texpath;
0		if string.find(customname,".", 1, true) then
0			texpath = "Interface\\Addons\\PowerAuras\\Custom\\"..customname;
		else
0			_, _, texpath = GetSpellInfo(customname);
		end
0		if not texpath then texpath = "" end
0		return texpath;
	end
	
	--- ------------------------------------------------------------------------------------
	
2	function PowaAuras:CreateTimerFrame(auraId, index, updatePing)
0		local frame = CreateFrame("Frame", "TimerFrame"..auraId.."_"..index);
0		self.TimerFrame[auraId][index] = frame;
		
0		frame:SetFrameStrata("LOW");
0		frame:Hide(); 
0		frame.TimerValue = 0;
		
0		frame.texture = frame:CreateTexture(nil,"BACKGROUND");
0		frame.texture:SetBlendMode("ADD");
0		frame.texture:SetAllPoints(frame);
0		frame.texture:SetTexture(self.Auras[auraId].Timer:GetTexture());
0		if (updatePing) then
			--self:ShowText("Creating Ping animation ", auraId, " ", index);
0			frame.PingAnimationGroup = frame:CreateAnimationGroup("Ping");
0			self:AddJumpScaleAndReturn(frame.PingAnimationGroup, 1.1, 1.1, 0.3, PowaMisc.AnimationFps, 1)
0			self:AddBrightenAndReturn(frame.PingAnimationGroup, 1.2, self.Auras[auraId].alpha, 0.3, PowaMisc.AnimationFps, 1);
		end
		
	end
	
2	function PowaAuras:CreateTimerFrameIfMissing(auraId, updatePing)
0		if (not self.TimerFrame[auraId]) then
			--self:Message("Creating missing TimerFrames for aura "..tostring(auraId));		
0			self.TimerFrame[auraId] = {};
0			self:CreateTimerFrame(auraId, 1, updatePing);
0			self:CreateTimerFrame(auraId, 2, updatePing);
		end
0		self:UpdateOptionsTimer(auraId);
0		return self.TimerFrame[auraId][1], self.TimerFrame[auraId][2];
	end
	
2	function PowaAuras:CreateStacksFrameIfMissing(auraId, updatePing)
0		if (not self.StacksFrames[auraId]) then
			--self:Message("Creating missing StacksFrame for aura "..tostring(auraId));		
0			local frame = CreateFrame("Frame", "StacksFrame"..auraId);
0			self.StacksFrames[auraId] = frame;
			
0			frame:SetFrameStrata("LOW");
0			frame:Hide(); 
			
0			frame.texture = frame:CreateTexture(nil,"BACKGROUND");
0			frame.texture:SetBlendMode("ADD");
0			frame.texture:SetAllPoints(frame);
0			frame.texture:SetTexture(self.Auras[auraId].Stacks:GetTexture());
0			if (updatePing) then
				--self:ShowText("Creating Ping animation ", auraId, " ", index);
0				frame.PingAnimationGroup = frame:CreateAnimationGroup("Ping");
0				self:AddJumpScaleAndReturn(frame.PingAnimationGroup, 1.1, 1.1, 0.3, PowaMisc.AnimationFps, 1)
0				self:AddBrightenAndReturn(frame.PingAnimationGroup, 1.2, self.Auras[auraId].alpha, 0.3, PowaMisc.AnimationFps, 1);
			end
		end
0		self:UpdateOptionsStacks(auraId);
0		return self.StacksFrames[auraId];
	end
	
	--- ----------------------------------------------------------------------------------------------- CREE LA LISTE DES CHECKS
	
2	function PowaAuras:CreateEffectLists()
0		self:UnitTestDebug("---CreateEffectLists---");
		
0		for k in pairs(self.AurasByType) do
0			self.AurasByType[k] = {};
		end
		
0		for auraId, aura in pairs(self.Auras) do
0			self:UnitTestDebug("AddEffect Aura=", aura.id, " off=", aura.off);
0			if (aura ~= nil and aura.off ~= true) then
				--print("Aura", aura.id);
0				self:UnitTestDebug("AddEffect Aura=", aura.id);
0				aura:AddEffect(auraId);
			end
		end 
	
0		if (PowaMisc.debug == true) then
0			for k in pairs(self.AurasByType) do
0				self:DisplayText(k .. " : " .. #self.AurasByType[k]);
			end
		end
	
	end
	
	
	--- ----------------------------------------------------------------------------------------------- Memorize les actions
2	function PowaAuras:MemorizeActions(actionIndex)
0		local imin, imax;
0		self:UnitTestDebug("---MemorizeActions---");
0		self:UnitTestDebug("ActionReady Auras=", #self.AurasByType.Actions);
0		if (#self.AurasByType.Actions == 0) then
0			return;
		end
		
		--- scan all the action buttons for slot changes
0		if (actionIndex == nil) then
0			self:UnitTestDebug("---Scan all Actionbuttons---");
0			imin = 1;
0			imax = 120;
			--- reset all action positions
0			for _, v in pairs(self.AurasByType.Actions) do
0				self.Auras[v].slot = nil;
			end
			
		else
0			imin = actionIndex;
0			imax = actionIndex;
		end
	
0		for i = imin, imax do
0			if (HasAction(i)) then
0				self:UnitTestDebug("---Button",i," Action Found---");
0				PowaAction_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0			 	PowaAction_Tooltip:SetAction(i);
0				local text = PowaAction_TooltipTextLeft1:GetText();				
0				self:UnitTestDebug("tooltip text=",text);
0				if text and text ~= "" then
0					self:UnitTestDebug("| "..text.." |");
				end	
0				if (text~=nil and PowaAction_TooltipTextLeft1:IsShown()) then
0					for _, v in pairs(self.AurasByType.Actions) do
0						local actionAura = self.Auras[v];
0						self:UnitTestDebug("actionAura",v,actionAura.buffname, actionAura.ignoremaj);
0						if((actionAura.ignoremaj == true  and string.find(string.upper(text), string.upper(actionAura.buffname), 1, true)) or
0						   (actionAura.ignoremaj == false and string.find(text, actionAura.buffname, 1, true)) ) then --- slot found
0							actionAura.slot = i; --- remember the slot
0							self:UnitTestDebug("---------------------------------------");
0							self:UnitTestDebug("Actionname="..actionAura.buffname.." / Search in Tooltipstring="..text);
							--- remember the texture
0							local tempicon;
0							if (actionAura.owntex == true) then
0								getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0								tempicon = getglobal("PowaIconTexture"):GetTexture();
0								if (actionAura.icon ~= tempicon) then
0									actionAura.icon = tempicon;
								end
							end
0							if (actionAura.icon == "") then
0								getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0								actionAura.icon = getglobal("PowaIconTexture"):GetTexture();
							end
						end
					end
				end
0				PowaAction_Tooltip:Hide();
			end
		end
	end
	
	--- ----------------------------------------------------------------------------------------------- Memorize les actions
2	function PowaAuras:MemorizeActions2(actionIndex)
0		local imin, imax;
		--self:Debug("---MemorizeActions---");
0		if (#self.AurasByType.Actions == 0) then
0			return;
		end
		
		--- scan tout ou uniquement le slot qui a change
0		if (actionIndex == nil) then
			--self:ShowText("---Scan all Actionbuttons---");
0			imin = 1;
0			imax = 120;
			--- reset all action positions
0			for _, v in pairs(self.AurasByType.Actions) do
0				self.Auras[v].slot = nil;
			end
			
		else
0			imin = actionIndex;
0			imax = actionIndex;
		end
	
0		for i = imin, imax do
0			if (HasAction(i)) then
0				local type, id, subType, spellID = GetActionInfo(i);
0				local name, text;
0				if (type=="macro") then
0					name = GetMacroInfo(id);
				end
0				PowaAction_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0				PowaAction_Tooltip:SetAction(i);
0				text = PowaAction_TooltipTextLeft1:GetText();
0				PowaAction_Tooltip:Hide();
	
				--self:ShowText("---Button",i," Action Found---");
				--self:ShowText("tooltip text=",text);
				--if text and text ~= "" then
				--	self:ShowText("| "..text.." |");
				--end	
0				if (text~=nil) then
0					for _, v in pairs(self.AurasByType.Actions) do
0						local actionAura = self.Auras[v];
0						if (not actionAura.slot) then
							--self:ShowText("actionAura",v,actionAura.buffname, actionAura.ignoremaj);
0							if (self:MatchString(name, actionAura.buffname, actionAura.ignoremaj)
0							 or self:MatchString(text, actionAura.buffname, actionAura.ignoremaj)) then
0								actionAura.slot = i; --- remember the slot
								--self:ShowText("---------------------------------------");
								--self:ShowText("Name=", name, "Tooltip=", text, " Match=", actionAura.buffname);
								--- remember the texture
0								local tempicon;
0								if (actionAura.owntex == true) then
0									getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0									tempicon = getglobal("PowaIconTexture"):GetTexture();
0									if (actionAura.icon ~= tempicon) then
0										actionAura.icon = tempicon;
									end
0								elseif (actionAura.icon == "") then
0									getglobal("PowaIconTexture"):SetTexture(GetActionTexture(i));
0									actionAura.icon = getglobal("PowaIconTexture"):GetTexture();
								end
							end
						end
					end
				end
			end
		end
	end
	
2	function PowaAuras:CheckMultiple(aura, reason, giveReason)
0		if (not aura.multiids or aura.multiids == "") then
0			if (not giveReason) then return true; end
0			return true, reason;
		end
0		if string.find(aura.multiids, "[^0-9/!]") then --- invalid input (only numbers and / allowed)
			--self:Debug("Multicheck. Invalid Input. Only numbers and '/' allowed.");
0			if (not giveReason) then return true; end
0			return true, reason;
		end
0		for pword in string.gmatch(aura.multiids, "[^/]+") do
0			local reverse;
0			if (string.sub(pword, 1, 1) == "!") then
0				pword = string.sub(pword, 2);
0				reverse = true;
			end
0			local k = tonumber(pword);
0			local linkedAura = self.Auras[k];
0			local state;
0			if linkedAura then
				--self:ShowText("Multicheck. Aura ",k);	
0				result, reason = linkedAura:ShouldShow(giveReason, reverse);
0				if (not result) then
0					if (not giveReason) then return false; end
0					return result, reason;
				end 				
			else
				--self:Debug("Multicheck. Non-existant Aura ID specified: "..pword);
			end
		end
0		if (not giveReason) then return true; end
0		return true, self:InsertText(self.Text.nomReasonMulti, aura.multiids);	
	end
	
2	function PowaAuras:TestThisEffect(auraId, giveReason, ignoreCascade)
0		self:UnitTestInfo("TestThisEffect", auraId);
		--self:ShowText("TestThisEffect", auraId);
	
0		local aura = self.Auras[auraId];
0		if (not aura) then
			--self:ShowText("Aura missing ", auraId);
0			return false, self.Text.nomReasonAuraMissing;
		end
0		if (aura.off) then
0			if (aura.Showing) then
				--self:ShowText("aura:Hide because off", auraId);
0				aura:Hide();
			end
0			if (not giveReason) then return false; end
0			return false, self.Text.nomReasonAuraOff;
		end
		
0		local debugEffectTest = PowaAuras.DebugCycle;
	
0		if (debugEffectTest) then
0			self:Message("----------------------------------");
0			self:Message("Test Aura for Hide or Show = ",auraId, " showing=",aura.Showing);
		end
		-- Prevent crash if class not set-up properly
0		if (not aura.ShouldShow) then
0			self:Message("ShouldShow nil! id= ",auraId)
0			if (not giveReason) then return false; end
0			return false, self.Text.nomReasonAuraBad;
		end
		
		--self:ShowText("Test Aura for Hide or Show = ",auraId, " showing=",aura.Showing);
0		aura.TimerInactiveDueToMulti = nil;
0		local shouldShow, reason = aura:ShouldShow(giveReason or debugEffectTest);
			
0		if (shouldShow) then
0			shouldShow, reason = self:CheckMultiple(aura, reason, giveReason or debugEffectTest);
0			if (not shouldShow) then
				--self:ShowText("TimerInactiveDueToMulti Aura ", aura.buffname, " (",auraId,")");
0				aura.TimerInactiveDueToMulti = true;
			end
0		elseif (aura.Timer and aura.CanHaveTimerOnInverse) then
0			local multiShouldShow = self:CheckMultiple(aura, reason, giveReason or debugEffectTest);
0			if (not multiShouldShow) then
				--self:ShowText("TimerInactiveDueToMulti Aura ", aura.buffname, " (",auraId,")");
0				aura.TimerInactiveDueToMulti = true;
			end
		end
0		if (debugEffectTest) then
0			self:Message("TestThisEffect ", aura.buffname, " (",auraId,") InactiveDueToState=", aura.InactiveDueToState, " ", reason);
		end
		
0		if shouldShow then
0			if (not aura.Active) then
0				if (debugEffectTest) then
0					self:Message("ShowAura ", aura.buffname, " (",auraId,") ", reason);
				end
				--self:ShowText("ShowAura ", aura.buffname, " (",auraId,")");
0				self:DisplayAura(auraId);
0				if (not ignoreCascade) then self:AddChildrenToCascade(aura); end
			end
0			aura.Active = true;
		else
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (aura.Showing) then
0				if (debugEffectTest) then
0					self:Message("HideAura ", aura.buffname, " (",auraId,") ", reason);
				end
				--self:ShowText("HideAura ", aura.buffname, " (",auraId,")");
0				self:SetAuraHideRequest(aura, secondaryAura);
			end
0			if (aura.Active and not ignoreCascade) then
0				self:AddChildrenToCascade(aura);
			end
0			aura.Active = false;
0			if (secondaryAura) then
0				secondaryAura.Active = false;
			end
		end
		
0		return shouldShow, reason;
	end
	
2	function PowaAuras:AddChildrenToCascade(aura, originalId)
0		if (not aura or not aura.Children) then return; end
0		for id in pairs(aura.Children) do
0			if (not self.Cascade[id] and id~=originalId) then
				--self:ShowText("Cascade adding aura."..id);
0				self.Cascade[id] = true;
0				self:AddChildrenToCascade(self.Auras[id], originalId or aura.id);
			end
		end
	end
	
2	function PowaAuras:SetAuraHideRequest(aura, secondaryAura)
		--self:ShowText("SetAuraHideRequest ", aura.buffname);
0		aura.HideRequest = true;
0		if (not aura.InvertTimeHides) then
0			aura.ForceTimeInvert = nil;
		end
0		if (secondaryAura and secondaryAura.Active) then
0			secondaryAura.HideRequest = true;
		end
	end
	
2	function PowaAuras:NewCheckBuffs()
0	   	self:UnitTestInfo("NewCheckBuffs");
	
		--if (self.DoCheck.All) then
		--	self:ShowText("self.DoCheck.All");
		--end
0		for auraType in pairs(self.AurasByType) do
0			if ((self.DoCheck[auraType] or self.DoCheck.All) and #self.AurasByType[auraType]>0) then
				--if (self.DoCheck.All) then
				--self:ShowText("TestAuraTypes ",auraType," DoCheck ", self.DoCheck[auraType], " All ", self.DoCheck.All, " #", #self.AurasByType[auraType]);
				--end
0				for _, v in pairs(self.AurasByType[auraType]) do
					--if (self.DoCheck.All) then
					--self:ShowText("TestThisEffect ",v);
					--end
0					self:TestThisEffect(v);
				end
0				self.DoCheck[auraType] = false;
			end
		end
	
0		self.DoCheck.All = false;
0		for spellId in pairs (PowaAuras.AoeAuraAdded) do
0			PowaAuras.AoeAuraAdded[spellId] = nil;
		end
	
	end
	
	--- -----------------------------------------------------------------------------------------------------------
2	function PowaAuras:ShowAuraForFirstTime(aura)
0		self:UnitTestInfo("ShowAuraForFirstTime", aura.id);
		--self:ShowText("ShowAuraForFirstTime ", aura.id);
0		local auraId = aura.id;
	
0		if (self.ModTest == false) then
0			if (aura.sound > 0) and (aura.customsound == "") then
0				PlaySound(aura.soundfile);
			end	
0			if not (aura.customsound == "") then
0				PlaySoundFile("Interface\\AddOns\\PowerAuras\\Sounds\\"..aura.customsound);
			end	
		end
		
0		local frame, texture = aura:CreateFrames();
	
0		if (aura.owntex == true) then
0			texture:SetTexture(aura.icon);
0		elseif (aura.wowtex == true) then
0			texture:SetTexture(self.WowTextures[aura.texture]);
0		elseif (aura.customtex == true) then
0			texture:SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura == true) then
0			texture:SetText(aura.aurastext);	  	
		else
0			texture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
	  
0		if (aura.randomcolor) then
0			texture:SetVertexColor(random(20,100)/100,random(20,100)/100,random(20,100)/100);	
		else
0			texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
	  
0		if (aura.texmode == 1) then
0			if (aura.textaura ~= true) then
0				texture:SetBlendMode("ADD");
			else
0				texture:SetShadowColor(0.0, 0.0, 0.0, 0.8);
0				texture:SetShadowOffset(2,-2);
			end
0			frame:SetFrameStrata("LOW");
		else
0			if (aura.textaura ~= true) then
0				texture:SetBlendMode("DISABLE");
			else
0				texture:SetShadowColor(0.0, 0.0, 0.0, 0.0);
0				texture:SetShadowOffset(0,0);
			end
0			frame:SetFrameStrata("BACKGROUND");
		end
	
0		if (aura.textaura ~= true) then
0		  if (aura.symetrie == 1) then 
0			texture:SetTexCoord(1, 0, 0, 1); --- inverse X
0		  elseif (aura.symetrie == 2) then 
0			texture:SetTexCoord(0, 1, 1, 0); --- inverse Y
0		  elseif (aura.symetrie == 3) then 
0			texture:SetTexCoord(1, 0, 1, 0); --- inverse XY
		  else 
0			texture:SetTexCoord(0, 1, 0, 1); 
		  end	
		end
	
0		frame.baseH = 256 * aura.size * (2-aura.torsion);
0		if (aura.textaura == true) then
0			local fontsize = math.min(33, math.max(10, math.floor(frame.baseH / 12.8)));
0			local checkfont = texture:SetFont(self.Fonts[aura.aurastextfont], fontsize, "OUTLINE, MONOCHROME");
0			if not checkfont then
0				texture:SetFont(STANDARD_TEXT_FONT, fontsize, "OUTLINE, MONOCHROME");
			end
0			frame.baseL = texture:GetStringWidth() + 5;
		else
0			frame.baseL = 256 * aura.size * aura.torsion;
		end
	
0		PowaAuras:InitialiseFrame(aura, frame);
	
0		if (aura.duration>0) then
0			aura.TimeToHide = GetTime() + aura.duration;
		else
0			aura.TimeToHide = nil;
		end
		
0		if (aura.InvertTimeHides) then
0			aura.ForceTimeInvert = nil;
		end
0		if (aura.Timer and aura.timerduration) then
0			aura.Timer.CustomDuration = aura.timerduration;
		end
	
0		if (aura.UseOldAnimations) then
		
0			frame.statut = 0;
		
0			if (aura.begin > 0) then 
0				frame.beginAnim = 1;
			else 
0				frame.beginAnim = 0; 
			end
	
0			if (aura.begin and aura.begin>0) then
0				aura.animation = self:AnimationBeginFactory(aura.begin, aura, frame);
			else
0				aura.animation = self:AnimationMainFactory(aura.anim1, aura, frame);
			end
		else
		
0			if (not aura.BeginAnimation) then aura.BeginAnimation = self:AddBeginAnimation(aura, frame); end
0			if (not aura.MainAnimation) then aura.MainAnimation = self:AddMainAnimation(aura, frame); end
0			if (not aura.EndAnimation) then aura.EndAnimation = self:AddEndAnimation(aura, frame); end
		
		end
	
0		self:UnitTestInfo("frame:Show()", aura.id);
		--self:ShowText("frame:Show()", aura.id, " ", frame);
	
0		frame:Show(); -- Show Aura Frame
		
0		if (not aura.UseOldAnimations) then
0			if (aura.BeginAnimation) then
0				aura.BeginAnimation:Play();
0			elseif (aura.MainAnimation) then
0				aura.MainAnimation:Play();
		
		
			end
		end
	
0		aura.Showing = true;
0		aura.HideRequest = false;
0		self:ShowSecondaryAuraForFirstTime(aura);	
	end
	
2	function PowaAuras:InitialiseFrame(aura, frame)
0		frame:SetAlpha(math.min(aura.alpha,0.99));
0		frame:SetPoint("CENTER",aura.x, aura.y);
0		frame:SetWidth(frame.baseL);
0		frame:SetHeight(frame.baseH);
	end
	
2	function PowaAuras:ShowSecondaryAuraForFirstTime(aura)
0		self:UnitTestInfo("ShowSecondaryAuraForFirstTime", aura.id);
	
0		if (aura.anim2 == 0) then --- no secondary aura
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (secondaryAura) then
0				secondaryAura:Hide();
			end
0			self.SecondaryAuras[aura.id] = nil;
0			self.SecondaryFrames[aura.id] = nil;
0			self.SecondaryTextures[aura.id] = nil;
0			return;
		end
	
		-- new secondary Aura
0		local secondaryAura = self:AuraFactory(aura.bufftype, aura.id, aura);
0		self.SecondaryAuras[aura.id] = secondaryAura;
		
0		secondaryAura.isSecondary = true;
0		secondaryAura.alpha = aura.alpha * 0.5;
0		secondaryAura.anim1 = aura.anim2;
0		secondaryAura.speed = aura.speed - 0.1; --- legerement plus lent
	
0		local auraId = aura.id;
0		local frame = self.Frames[auraId];
0		local texture = self.Textures[auraId];
	
0		local secondaryFrame, secondaryTexture = secondaryAura:CreateFrames();
		
0		if (aura.owntex == true) then
0			secondaryTexture:SetTexture(aura.icon);
0		elseif (aura.wowtex == true) then
0			secondaryTexture:SetTexture(self.WowTextures[aura.texture]);
0		elseif (aura.customtex == true) then
0			secondaryTexture:SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura == true) then
0			secondaryTexture:SetText(aura.aurastext);	  	
		else
0			secondaryTexture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
		
0		if (aura.randomcolor) then
0			if texture:GetObjectType() == "Texture" then
0				secondaryTexture:SetVertexColor( texture:GetVertexColor() );
0			elseif texture:GetObjectType() == "FontString" then
0				secondaryTexture:SetVertexColor(texture:GetTextColor());
			end
		else
0			secondaryTexture:SetVertexColor(aura.r,aura.g,aura.b);
		end
		
0		if (aura.texmode == 1) then
0			if (aura.textaura ~= true) then
0				secondaryTexture:SetBlendMode("ADD");
			end
0			secondaryFrame:SetFrameStrata("LOW");
		else
0			if (aura.textaura ~= true) then
0				secondaryTexture:SetBlendMode("DISABLE");
			end
0			secondaryFrame:SetFrameStrata("BACKGROUND");
		end
	
0		if not aura.textaura == true then
0			if (aura.symetrie == 1) then 
0				secondaryTexture:SetTexCoord(1, 0, 0, 1); --- inverse X
0			elseif (aura.symetrie == 2) then 
0				secondaryTexture:SetTexCoord(0, 1, 1, 0); --- inverse Y
0			elseif (aura.symetrie == 3) then 
0				secondaryTexture:SetTexCoord(1, 0, 1, 0); --- inverse XY
			else 
0				secondaryTexture:SetTexCoord(0, 1, 0, 1); 
			end
		end
	
0		secondaryFrame.baseL = frame.baseL;
0		secondaryFrame.baseH = frame.baseH;
0		secondaryFrame:SetPoint("CENTER",aura.x, aura.y);
0		secondaryFrame:SetWidth(secondaryFrame.baseL);
0		secondaryFrame:SetHeight(secondaryFrame.baseH);
	
	
	
0		if (aura.UseOldAnimations) then
	
0			secondaryFrame.statut = 1;
			
0			if (aura.begin > 0) then 
0				secondaryFrame.beginAnim = 2;
			else 
0				secondaryFrame.beginAnim = 0; 
			end
	
0			if (not aura.begin or aura.begin==0) then
0				secondaryAura.animation = self:AnimationMainFactory(aura.anim2, secondaryAura, secondaryFrame);
			else
0				secondaryFrame:SetAlpha(0.0); -- Hide secondary until primary begin animation finishes
			end
0			self:UnitTestInfo("secondaryFrame:Show()", aura.id);
0			secondaryFrame:Show(); -- Show Secondary Aura Frame
			--self:Message("Show #2");
		else	
0			if (not secondaryAura.MainAnimation) then secondaryAura.MainAnimation = self:AddMainAnimation(secondaryAura, secondaryFrame); end	
		
0			if (not aura.BeginAnimation) then
0				self:UnitTestInfo("secondaryFrame:Show()", aura.id);
0				secondaryFrame:Show(); -- Show Secondary Aura Frame
				--self:Message("Show #2");
0				if (secondaryAura.MainAnimation) then
0					secondaryAura.MainAnimation:Play();
				end
			end
	
		end
		
0		secondaryAura.Showing = true;
0		secondaryAura.HideRequest = false;
	end
	
2	function PowaAuras:DisplayAura(auraId)
0		self:UnitTestInfo("DisplayAura", auraId);
		--self:ShowText("DisplayAura aura ", auraId);
0		if (self.Initialising) then return; end   --- de-actived
	
0		local aura = self.Auras[auraId];
0		if (aura==nil or aura.off) then return; end
	
		--self:ShowText("DisplayAura aura ", aura.id);
		
0		self:ShowAuraForFirstTime(aura);
	end
	
	
2	function PowaAuras:UpdateAura(aura, elapsed)
		--self:ShowText("UpdateAura ", aura.id, " ", elapsed);
0		if (aura == nil) then
0			self:UnitTestInfo("UpdateAura: Don't show, aura missing");
			--self:ShowText("UpdateAura: Don't show, aura missing");
0			return false;
		end
0		if (aura.off) then
0			if (aura.Showing) then
0				aura:Hide();
			end
0			if (aura.Timer and aura.Timer.Showing) then
0				aura.Timer:Hide(); -- Aura off
			end
0			return false;
		end
		
0		if (PowaAuras.DebugCycle) then
0			self:DisplayText("------Aura"..aura.id.."------");
0			self:DisplayText("aura.HideRequest=",aura.HideRequest);
0			self:DisplayText("aura.Showing=",aura.Showing);
		end
	
		--self:ShowText("aura.Showing ", aura.Showing);
0		if (aura.Showing) then
0			local frame = aura:GetFrame();
0			if (frame == nil) then
0				self:UnitTestInfo("UpdateAura: Don't show, frame missing");
				--self:ShowText("UpdateAura: Don't show, frame missing");
0				return false;
			end
			--self:ShowText("UpdateAura ", aura, " ", elapsed);
			
0			if (not aura.HideRequest and not aura.isSecondary and not self.ModTest and aura.TimeToHide) then
0				if (GetTime() >= aura.TimeToHide) then --- If duration has expired then hide this aura
0					self:UnitTestInfo("UpdateAura: Hide, duration expired");
					--self:ShowText("UpdateAura: Hide, duration expired");
0					self:SetAuraHideRequest(aura);
0					aura.TimeToHide = nil;
0					aura.Active = false;
				end
			end
			
0			if (aura.HideRequest) then
	
0				if (aura.Stacks) then
0					aura.Stacks:Hide();
				end
				--self:ShowText("Hide Requested for ",aura.id);
				
0				if (aura.UseOldAnimations) then
0					aura.animation = self:AnimationEndFactory(aura.finish, aura, frame);
0					if (not aura.animation) then
0						aura:Hide();
					end
				else
0					if (not aura.EndAnimation) then
0						aura:Hide();
					else
						--self:ShowText("Stop current animations ",aura.id);
0						if (aura.BeginAnimation and aura.BeginAnimation:IsPlaying()) then
0							aura.BeginAnimation:Stop();	
						end
0						if (aura.MainAnimation and aura.MainAnimation:IsPlaying()) then
0							aura.MainAnimation:Stop();
						end
						--self:ShowText("Play end animation ",aura.id);
0						aura.EndAnimation:Play();
					end
				end
			end
	
0			if (aura.UseOldAnimations) then
0				self:UpdateAuraAnimation(aura, elapsed, frame);
			end
	
0			if (self.ModTest and aura.Stacks and aura.Active) then
0				if (aura.Stacks.SetStackCount) then
0					aura.Stacks:SetStackCount(random(1,12));
				else
0					self:Message("aura.Stacks:SetStackCount nil!! ",aura.id);			
				end
			end
	
		end
	
0		aura.HideRequest = false;
0		return true;
	end
	
2	function PowaAuras:UpdateTimer(aura, timerElapsed, skipTimerUpdate)
	
0		if (not aura.Timer or skipTimerUpdate) then
0			return;
		end
		
0		if (PowaAuras.DebugCycle) then
0			self:DisplayText("aura.Timer id=",aura.id);
0			self:DisplayText("ShowOnAuraHide=",aura.Timer.ShowOnAuraHide);
0			self:DisplayText("ForceTimeInvert=",aura.ForceTimeInvert);
0			self:DisplayText("InvertTimeHides=",aura.InvertTimeHides);
0			self:DisplayText("ModTest=",self.ModTest);
0			self:DisplayText("aura.Active=",aura.Active);
		end
0		local timerHide;
0		if (aura.Timer.ShowOnAuraHide and not self.ModTest and (not aura.ForceTimeInvert and not aura.InvertTimeHides)) then
0			timerHide = aura.Active;
		else
0			timerHide = not aura.Active;
		end
0		if (PowaAuras.DebugCycle) then
0			self:Message("timerHide=",timerHide);
0			self:Message("InactiveDueToState=",aura.InactiveDueToState);
		end
0		if (timerHide or (aura.InactiveDueToState and not aura.Active) or aura.TimerInactiveDueToMulti) then
0			aura.Timer:Hide(); -- Request or state
0			if (aura.ForceTimeInvert) then
0				aura.Timer:Update(timerElapsed);				
			end
		else
0			aura.Timer:Update(timerElapsed);
		end
		
	end
	
2	function PowaAuras:UpdateAuraAnimation(aura, elapsed, frame)
0		if (not aura.Showing) then return; end
0		if (not aura.animation or elapsed==0) then return; end
0		if (aura.isSecondary) then
			-- Secondary animation only shows during primary main animation
0			primaryAnimation = PowaAuras.Auras[aura.id].animation;
0			if (primaryAnimation.IsBegin or primaryAnimation.IsEnd) then
0				return;
			end
		end
				
0		local finished = aura.animation:Update(math.min(elapsed, 0.03));
		
0		if (not finished) then return end
		
0		if (aura.animation.IsBegin) then
			--self:ShowText("Create main animation for primary aura");
0			aura.animation = self:AnimationMainFactory(aura.anim1, aura, frame);
			--self:ShowText("Create main animation for primary aura");
0			local secondaryAura = self.SecondaryAuras[aura.id];
0			if (secondaryAura) then
0				local secondaryAuraFrame = self.SecondaryFrames[aura.id];
0				if (secondaryAuraFrame) then
					--self:ShowText("Create main animation for secondary aura");
0					secondaryAura.animation = self:AnimationMainFactory(aura.anim2, secondaryAura, secondaryAuraFrame);
					--self:ShowText("animation=", secondaryAura.animation);
				end
			end
0			return;
		end
		
0		if (aura.animation.IsEnd) then
0			aura:Hide();
		end
	
	end
	
2	function PowaAuras:OnUpdate(elapsed)
0		self:UnitTestInfo("OnUpdate", elapsed);
	
0		if (self.Initialising) then return; end 
			
0		self.ChecksTimer = self.ChecksTimer + elapsed;
0		self.TimerUpdateThrottleTimer = self.TimerUpdateThrottleTimer + elapsed;	
0		self.ThrottleTimer = self.ThrottleTimer + elapsed;
			
0		self.DebugTimer = self.DebugTimer + elapsed;
0		self.DebugCycle = false;
0		if (self.NextDebugCheck>0 and self.DebugTimer > self.NextDebugCheck) then
0			self.DebugTimer = 0;
0			PowaAuras:Message("========DebugCycle========"); --OK
0			self.DebugCycle = true;
		end
		
0		local checkAura = false;
0		if (PowaMisc.OnUpdateLimit == 0 or self.ThrottleTimer >= PowaMisc.OnUpdateLimit) then
0			checkAura = true;
0			self.ThrottleTimer = 0;
		end
				
0		if (not self.ModTest and (checkAura or self.DebugCycle)) then
	
		    --self:Message("OnUpdate ",elapsedCheck, " ", self.ChecksTimer);
0			self:UnitTestInfo("ChecksTimer", self.ChecksTimer, self.NextCheck);
0			if ((self.ChecksTimer > (self.NextCheck + PowaMisc.OnUpdateLimit))) then
0				self.ChecksTimer = 0;
0				local isMountedNow = (IsMounted()~=nil);
0				if (isMountedNow ~= self.WeAreMounted) then
0					self.DoCheck.All = true;
0					self.WeAreMounted = isMountedNow;
				end	
0				local isInVehicledNow = (UnitInVehicle("player")~=nil);
0				if (isInVehicledNow ~= self.WeAreInVehicle) then
0					self.DoCheck.All = true;
0					self.WeAreInVehicle = isInVehicledNow;
				end	
			end
	
0			if (self.PendingRescan and GetTime() >= self.PendingRescan) then
0				self:MemorizeActions();
0				self.DoCheck.All = true;
0				self.PendingRescan = nil;
			end
			
0			self:UnitTestInfo("Pending");
0			for id, cd in pairs(self.Pending) do	
				--self:ShowText("Pending check for ", id, " cd=", cd, " time=", GetTime());
0				if cd and cd >0 then
					--self:ShowText("Pending check for ", id, " cd=", cd, " time=", GetTime());
0					if (GetTime() >= cd) then
0						self.Pending[id] = nil;
						--self:ShowText("Pending TestThisEffect for ", id);
0						self:TestThisEffect(id);
					end
				else
0					self.Pending[id] = nil;
				end
			end
		
0			self:UnitTestInfo("DoCheck update");
0			for k ,v in pairs(self.DoCheck) do
				--self:Debug("DoCheck "..k.." = " .. tostring(v)  );
0				if (v) then
0					self:NewCheckBuffs();
0					break;
				end
			end
	
0			self:UnitTestInfo("Check Cascade auras");
0			for k in pairs(self.Cascade) do
				--self:ShowText("Checking Cascade aura."..k);
0				self:TestThisEffect(k, false, true);
			end
0			self.Cascade = {};		
		end
		
0		local skipTimerUpdate = false
0		local timerElapsed = 0;
0		if (PowaMisc.AnimationLimit > 0 and self.TimerUpdateThrottleTimer < PowaMisc.AnimationLimit) then
0			skipTimerUpdate = true and not self.DebugCycle;
		else
0			timerElapsed = self.TimerUpdateThrottleTimer;
0			self.TimerUpdateThrottleTimer = 0;
		end
	
		-- Update each aura (timers and stacks)
0		self:UnitTestInfo("Aura updates");
0		for _, aura in pairs(self.Auras) do
0			if (self:UpdateAura(aura, elapsed)) then
0				self:UpdateTimer(aura, timerElapsed, skipTimerUpdate);
			end
		end	
0		for _, aura in pairs(self.SecondaryAuras) do
0			self:UpdateAura(aura, elapsed);
		end	
		
0		self.ResetTargetTimers = false;
	
	end
	
2	function PowaAuras:SetupStaticPopups()
		
0		StaticPopupDialogs["POWERAURAS_IMPORT_AURA"] = {
0			text = self.Text.aideImport,
0			button1 = ACCEPT,
0			button2 = CANCEL,
0			hasEditBox = 1,
0			maxLetters = 2000,
0			hasWideEditBox = 1,
0			OnAccept = function(self)
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, self.wideEditBox:GetText());
0				self:Hide();
			end,
0			OnShow = function(self)
0				self.wideEditBox:SetFocus();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
0				PowaAuras:DisplayAura(PowaAuras.CurrentAuraId);
0				PowaAuras:UpdateMainOption();
			end,
0			EditBoxOnEnterPressed = function(self)
0				local parent = self:GetParent();
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, parent.wideEditBox:GetText());
0				parent:Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
		
0		StaticPopupDialogs["POWERAURAS_EXPORT_AURA"] = {
0			text = self.Text.aideExport,
0			button1 = OKAY,
0			button2 = EXIT,
0			hasEditBox = 1,
0			maxLetters = 2000,
0			hasWideEditBox = 1,
0			OnShow = function(self)
0				self.wideEditBox:SetText(PowaAuras.Auras[PowaAuras.CurrentAuraId]:CreateAuraString());
0				self.wideEditBox:SetFocus();
0				self.wideEditBox:HighlightText();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
			end,
0			EditBoxOnEnterPressed = function(self)
0				self:GetParent():Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};
	
		
0		StaticPopupDialogs["POWERAURAS_IMPORT_AURA_SET"] = {
0			text = self.Text.aideImportSet,
0			button1 = ACCEPT,
0			button2 = CANCEL,
0			hasEditBox = 1,
0			maxLetters =40000,
0			hasWideEditBox = 1,
0			OnAccept = function(self)
0				PowaAuras:CreateNewAuraSetFromImport(self.wideEditBox:GetText());
0				self:Hide();
			end,
0			OnShow = function(self)
0				self.wideEditBox:SetFocus();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
0				PowaAuras:DisplayAura(PowaAuras.CurrentAuraId);
0				PowaAuras:UpdateMainOption();
			end,
0			EditBoxOnEnterPressed = function(self)
0				local parent = self:GetParent();
0				PowaAuras:CreateNewAuraFromImport(PowaAuras.ImportAuraId, parent.wideEditBox:GetText());
0				parent:Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
		
0		StaticPopupDialogs["POWERAURAS_EXPORT_AURA_SET"] = {
0			text = self.Text.aideExportSet,
0			button1 = OKAY,
0			button2 = EXIT,
0			hasEditBox = 1,
0			maxLetters = 40000,
0			hasWideEditBox = 1,
0			OnShow = function(self)
0				self.wideEditBox:SetText(PowaAuras:CreateAuraSetString());
0				self.wideEditBox:SetFocus();
0				self.wideEditBox:HighlightText();
			end,
0			OnHide = function(self)
0				if ( ChatFrameEditBox:IsShown() ) then
0					ChatFrameEditBox:SetFocus();
				end
0				self.wideEditBox:SetText("");
			end,
0			EditBoxOnEnterPressed = function(self)
0				self:GetParent():Hide();
			end,
0			EditBoxOnEscapePressed = function(self)
0				self:GetParent():Hide();
			end,
0			timeout = 0,
0			exclusive = 1,
0			whileDead = 1,
0			hideOnEscape = 1
0		};	
	end
	
	--- ------------------------------------------------------------------------------------ GESTION DES OPTIONS
2	function PowaAuras:RedisplayAura(auraId) ---Re-show aura after options changed
	
0		if (self.Initialising) then return; end 
	
0		local aura = self.Auras[auraId];
0		if (not aura) then
0			return;
		end
		--self:ShowText("RedisplayAura auraId=", aura.id, " showing=", aura.Showing);
0		local showing = aura.Showing;
0		aura:Hide();
0		aura.BeginAnimation = nil;
0		aura.MainAnimation = nil;
0		aura.EndAnimation = nil;
0		aura:CreateFrames();
0		self.SecondaryAuras[aura.id] = nil; -- Force recreate
0		if (showing) then
0			self:DisplayAura(aura.id);
		end
	end
	
2	function PowaAuras:OptionTest()
	
		--self:Message("OptionTest for ", self.CurrentAuraId);
0		local aura = self.Auras[self.CurrentAuraId];
0		if (not aura or aura.buffname == "" or aura.buffname == " ") then
0			return;
		end
	
0		if (aura.Showing) then 
0			self:SetAuraHideRequest(aura);
0			aura.Active = false;
		else
0			aura.Active = true;
0			aura:CreateFrames();
0			self.SecondaryAuras[aura.id] = nil; -- Force recreate
0			self:DisplayAura(aura.id);
		end
	end
	
	
2	function PowaAuras:OptionHideAll(now) --- Hide all auras
		--self:ShowText("Hide All Frames now=", now);
0		for id, aura in pairs(self.Auras) do
0			aura.Active = false;
0			if now then
				--self:ShowText("Hide aura id=", id);
0				aura:Hide();
0				if (aura.Timer) then aura.Timer:Hide(); end -- Hide All
			else
0				self:SetAuraHideRequest(aura);
0				if (aura.Timer)  then aura.Timer.HideRequest  = true; end
			end
		end	
	
	end

==============================================================================
..\PowerAurasAnimations.lua
==============================================================================
2	function PowaAuras:CalculateDuration(speed)
0		return 1.25 - speed / 2;
	end
	
2	function PowaAuras:AddBeginAnimation(aura, frame)
		--PowaAuras:ShowText("AddBeginAnimation begin=", aura.begin);
0		if (not aura.begin or aura.begin==PowaAuras.AnimationBeginTypes.None) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("Begin");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	local aura = self.aura;
		--	PowaAuras:ShowText("Begin OnPlay ", self:GetName(), " aura=", aura.id);
		--end);
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
0			local aura = self.aura;
			--PowaAuras:ShowText("Begin OnFinished ", self:GetName(), " forced=", forced, " aura=", aura.id);
0			if (aura and aura.MainAnimation) then
0				aura.MainAnimation:Play();
0				local secondaryAura = PowaAuras.SecondaryAuras[aura.id];
0				if (secondaryAura) then
0					local secondaryFrame = PowaAuras.SecondaryFrames[aura.id];
0					if (secondaryFrame) then
0						secondaryFrame:Show(); -- Show Secondary Aura Frame
0						if (secondaryAura.MainAnimation) then
0							secondaryAura.MainAnimation:Play();
						end
					end
				end
			end
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
		
		--PowaAuras:ShowText("AddBeginAnimation duration=", duration, " speed=", aura.speed);
0		if (aura.begin~=PowaAuras.AnimationBeginTypes.Bounce) then
0			self:AddJumpAlphaAndReturn(animationGroup, -math.min(aura.alpha,0.99), duration, PowaMisc.AnimationFps, 1);
		end
0		if (aura.begin==PowaAuras.AnimationBeginTypes.ZoomOut) then
0			self:AddJumpScaleAndReturn(animationGroup, 0.5, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.ZoomIn) then
0			self:AddJumpScaleAndReturn(animationGroup, 1.5, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.FadeIn) then
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -100, 0, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTopLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -75,75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTop) then
0			self:AddJumpTranslateAndReturn(animationGroup, 0, 100, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateTopRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 75, 75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 100, 0, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottomRight) then
0			self:AddJumpTranslateAndReturn(animationGroup, 75, -75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottom) then
0			self:AddJumpTranslateAndReturn(animationGroup, 0, -100, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.TranslateBottomLeft) then
0			self:AddJumpTranslateAndReturn(animationGroup, -75, -75, duration, PowaMisc.AnimationFps, 1);
0		elseif (aura.begin==PowaAuras.AnimationBeginTypes.Bounce) then
0			local u = 0;
0			local height = 100;
0			local efficiency = 0.6;
0			local a = 800 * aura.speed;
0			self:AddTranslation(animationGroup,  0,  height, 0, 0, 1);
0			local steps = 6;
0			local dT = math.sqrt(2*height/a);
0			local dt = dT / steps;
0			local ds = {};
0			for i = 1, steps do
0				ds[i] = (u*dt+a*dt*dt/2) / height;
0				u = u + a*dt;
				--self:ShowText(i, " ", ds[i]);
			end
			--self:ShowText("========");
0			local order = animationGroup:GetMaxOrder()+1;
0			while (height>2) do
0				if (height<100) then
					--self:ShowText("=UP=");
0					for i = 1, steps do
						--self:ShowText(order, " ", i, " ", ds[steps-i+1] * height);
0						self:AddTranslation(animationGroup, 0, ds[steps-i+1] * height, dt, PowaMisc.AnimationFps, order);
0						order = order + 1;
					end
				end
				--self:ShowText("=DOWN=");
0				for i = 1, steps do
					--self:ShowText(order, " ", i, " ", -ds[i] * height);
0					self:AddTranslation(animationGroup, 0, -ds[i] * height, dt, PowaMisc.AnimationFps, order);
0					order = order + 1;
				end
0				height = height * efficiency;
				--self:ShowText("\nHeight=", height);
			end
	
		end
	
0		if (aura.beginSpin) then
0			self:AddRotation(animationGroup, 360, math.max(duration/4, 0.25), PowaMisc.AnimationFps, animationGroup:GetMaxOrder()+1);
		end
		
0		return animationGroup;
	end
	
2	function PowaAuras:AddJumpTranslateAndReturn(animationGroup, dx, dy, duration, fps, order)
0		self:AddTranslation(animationGroup,  dx,  dy, 0, 0, order);
0		self:AddTranslation(animationGroup, -dx, -dy, duration, fps, order+1);
	end
	
2	function PowaAuras:AddJumpAlphaAndReturn(animationGroup, change, duration, fps, order)
0		self:AddAlpha(animationGroup,  change, 0, 0, order);
0		self:AddAlpha(animationGroup, -change, duration, fps, order+1);
	end
	
2	function PowaAuras:AddJumpScaleAndReturn(animationGroup, scale, duration, fps, order)
0		self:AddScale(animationGroup, scale, scale, 0, 0, order);
0		self:AddScale(animationGroup, 1/scale, 1/scale, duration, fps, order+1);
	end
	
2	function PowaAuras:AddMainAnimation(aura, frame)
0		if (not aura.anim1 or aura.anim1==PowaAuras.AnimationTypes.Static) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("Main");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("Main OnPlay ", self:GetName(), " aura=", self.aura.id);
		--end);
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
0			self:Play();
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
0		if (aura.isSecondary) then
0			duration = self:CalculateDuration(PowaAuras.Auras[aura.id].speed);
		end
0		if (aura.anim1==PowaAuras.AnimationTypes.Flashing) then
0			local deltaAlpha = math.min(aura.alpha * 0.5,0.99);
0			self:AddAlpha(animationGroup, -deltaAlpha, duration, PowaMisc.AnimationFps, 1);
0			self:AddAlpha(animationGroup,  deltaAlpha, duration, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Growing) then
0			self:AddScale(animationGroup, 1.2, 1.2, duration * 3, PowaMisc.AnimationFps, 1);
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration * 3, PowaMisc.AnimationFps, 1);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Pulse) then
0			self:AddScale(animationGroup, 1.1, 1.1, duration/2, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1/1.1, 1/1.1, duration/2, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 0.9, 0.9, duration/2, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 1/0.9, 1/0.9, duration/2, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Shrinking) then
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1.3, 1.3, 0, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, 1/1.3, 1/1.3, duration * 3, PowaMisc.AnimationFps, 3);
0			self:AddAlpha(animationGroup, math.min(aura.alpha,0.99), duration * 3, PowaMisc.AnimationFps, 3);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.WaterDrop) then
0			self:AddMoveRandomLocation(animationGroup, 0, 20, -10, 0, 20, -10, 0, 0, false, aura.speed, 1);
0			self:AddScale(animationGroup, 0.85, 0.85, 0, 0, 1);
0			self:AddScale(animationGroup, 1.76, 1.76, duration * 4, PowaMisc.AnimationFps, 2);
0			self:AddAlpha(animationGroup, -math.min(aura.alpha,0.99), duration * 4, PowaMisc.AnimationFps, 2);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Electric) then
0			frame:SetAlpha(aura.alpha / 2); 
0			animationGroup.speed = aura.speed;
0			animationGroup:SetScript("OnPlay",
0			function(self)
0				self.Trigger = (random( 210 - self.speed * 100 ) < 4);
				--PowaAuras:ShowText("Electric OnPlay Trigger=", self.Trigger);
0			end);
0			self:AddMoveRandomLocation(animationGroup, 0, 10, -5, 0, 10, -5, 0.05, PowaMisc.AnimationFps, true, aura.speed, 1);
0			self:AddAlphaOnTrigger(animationGroup, 2, 0.05, PowaMisc.AnimationFps, 1);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Flame) then
0			local steps = 40;
0			local deltaAlpha = math.min(aura.alpha,0.99) / steps;
0			local stepDuration = duration * 4 / steps;
0			for i = 1, steps do
0				self:AddMoveRandomLocation(animationGroup, 1, 7, -4, 0, 2, 0, stepDuration, PowaMisc.AnimationFps, false, aura.speed, i);
0				self:AddAlpha(animationGroup, -deltaAlpha, stepDuration, PowaMisc.AnimationFps, i);
0				self:AddScale(animationGroup, 0.98, 0.98, stepDuration, PowaMisc.AnimationFps, i);
			end
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Bubble) then
0			local factor = 0.05;
0			local increase = 1 + factor;
0			local decrease = 1 - factor;
0			if (aura.isSecondary) then
0				increase = 1 - factor;
0				decrease = 1 + factor;
			end
0			self:AddScale(animationGroup, increase, decrease, duration/3, PowaMisc.AnimationFps, 1);
0			self:AddScale(animationGroup, 1/increase,  1/decrease, duration/3, PowaMisc.AnimationFps, 2);
0			self:AddScale(animationGroup, decrease, increase, duration/3, PowaMisc.AnimationFps, 3);
0			self:AddScale(animationGroup, 1/decrease,  1/increase, duration/3, PowaMisc.AnimationFps, 4);
0		elseif (aura.anim1==PowaAuras.AnimationTypes.Orbit) then
0			local maxWidth  = math.max(aura.x, -aura.x, 5);
0			local maxHeight = maxWidth * (1.6 - aura.torsion);
0			local i = 1;
0			local x = aura.x;
0			if (aura.isSecondary) then
0				x = -PowaAuras.Auras[aura.id].x;
0				frame:SetPoint("Center", x,  PowaAuras.Auras[aura.id].y);
			end
0			local y = aura.y;
0			local step = 9;
0			local angleOffset = 190;
0			if (x>0) then
0				angleOffset = 10;
			end
	
0			for angle = 0, 360-step, step do
0				local newx = maxWidth * cos(angle + angleOffset);
0				local newy = aura.y + maxHeight * sin(angle + angleOffset);
				--self:ShowText("Orbit ", i, " angle=", angle, " x=", string.format("%.2f", x), " y=", string.format("%.2f", y));
0				self:AddTranslation(animationGroup, newx-x, newy-y, duration * step / 30, PowaMisc.AnimationFps, i);
0				i = i + 1;
0				x = newx;
0				y = newy;
			end
		end
		
0		return animationGroup;
	end
	
2	function PowaAuras:AddMoveRandomLocation(animationGroup, xrangel, xrangeu, xoffset, yrangel, yrangeu, yoffset, duration, fps, useTrigger, speed, order)
0		local trans = animationGroup:CreateAnimation("Translation");
0		trans.speed = speed;
0		trans.xrangel = xrangel;
0		trans.xrangeu = xrangeu;
0		trans.yrangel = yrangel;
0		trans.yrangeu = yrangeu;
0		trans.xoffset = xoffset;
0		trans.yoffset = yoffset;
0		trans.useTrigger = useTrigger;
0		trans:SetOrder(order);
0		trans:SetDuration(duration);
0		trans:SetMaxFramerate(fps);
0		trans:SetScript("OnPlay",
0		function(self)
0			if (not self.useTrigger or self:GetParent().Trigger) then
0				self:SetOffset((random(self.xrangel,self.xrangeu) + self.xoffset) * self.speed, (random(self.yrangel,self.yrangeu) + self.yoffset) * self.speed);
			else
0				self:SetOffset(0,0);		
			end
0		end);
	end
	
2	function PowaAuras:AddAlphaOnTrigger(animationGroup, alphaTo, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha.alphaTo = alphaTo;
0		alpha:SetScript("OnPlay",
0		function(self)
0			if (self:GetParent().Trigger) then
0				self:SetChange(self.alphaTo);
			else
0				self:SetChange(0);
			end
0		end);
	end
	
2	function PowaAuras:AddTranslation(animationGroup, dx, dy, duration, fps, order)
0		local trans = animationGroup:CreateAnimation("Translation");
0		trans:SetOrder(order);
0		trans:SetDuration(duration);
		--trans:SetEndDelay(1);
0		trans:SetMaxFramerate(fps);
0		trans:SetOffset(dx, dy);
		--trans:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddTranslation OnPlay order=", self:GetOrder());
		--end);
	end
	
2	function PowaAuras:AddScale(animationGroup, xscaleTo, yscaleTo, duration, fps, order)
0		local scale = animationGroup:CreateAnimation("Scale");
0		scale:SetOrder(order);
0		scale:SetDuration(duration);
		--scale:SetEndDelay(5);
0		scale:SetMaxFramerate(fps);
0		scale:SetScale(xscaleTo, yscaleTo);
		--scale:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddScale OnPlay order=", self:GetOrder());
		--end);
		--scale:SetScript("OnFinished",
		--function(self)
		--	PowaAuras:ShowText("AddScale OnFinished order=", self:GetOrder());
		--end);
	end
	
2	function PowaAuras:AddAlpha(animationGroup, alphaTo, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetChange(alphaTo);
		--alpha:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("AddAlpha OnPlay order=", self:GetOrder());
		--end);
		--alpha:SetScript("OnFinished",
		--function(self)
		--	PowaAuras:ShowText("AddAlpha OnFinished order=", self:GetOrder());
		--end);
	end
	
2	function PowaAuras:AddFade(animationGroup, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			self:SetChange(-self:GetRegionParent():GetAlpha());
0		end);
	end
	
2	function PowaAuras:AddRelativeAlpha(animationGroup, change, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			local alpha = self:GetRegionParent():GetAlpha();
0			self:SetChange(math.min((alpha * change),0.99));
0		end);
	end
	
2	function PowaAuras:AddAbsoluteAlpha(animationGroup, targetAlpha, duration, fps, order)
0		local alpha = animationGroup:CreateAnimation("Alpha");
0		alpha:SetOrder(order);
0		alpha:SetDuration(duration);
0		alpha:SetMaxFramerate(fps);
0		alpha:SetScript("OnPlay",
0		function(self)
0			self:SetChange(math.min(targetAlpha,0.99) - self:GetRegionParent():GetAlpha());
0		end);
	end
	
2	function PowaAuras:AddBrightenAndReturn(animationGroup, change, targetAlpha, duration, fps, order)
0		self:AddRelativeAlpha(animationGroup,  change, 0, 0, order);
0		self:AddAbsoluteAlpha(animationGroup, targetAlpha, duration, fps, order+1);
	end
	
2	function PowaAuras:AddRotation(animationGroup, angle, duration, fps, order)
0		local rotation = animationGroup:CreateAnimation("Rotation");
0		rotation:SetOrder(order);
0		rotation:SetDuration(duration);
0		rotation:SetMaxFramerate(fps);
0		rotation:SetDegrees(angle);
	end
	
2	function PowaAuras:AddEndAnimation(aura, frame)
		--PowaAuras:ShowText("AddEndAnimation finish=", aura.finish);
0		if (not aura.finish or aura.finish==PowaAuras.AnimationEndTypes.None) then
0			return nil;
		end
		
0		local animationGroup = frame:CreateAnimationGroup("End");
0		animationGroup.aura = aura;
		
		--animationGroup:SetScript("OnPlay",
		--function(self)
		--	PowaAuras:ShowText("EndAnimation OnPlay ", self:GetName(), " aura=", self.aura.id);
		--end);
		
0		animationGroup:SetScript("OnFinished",
0		function(self, forced)
			--PowaAuras:ShowText("EndAnimation OnFinished ", self:GetName(), " aura=", self.aura.id);
0			if (self.aura) then
0				self.aura:Hide(true);
			end
0		end);
		
0		local duration = self:CalculateDuration(aura.speed);
		--PowaAuras:ShowText("AddEndAnimation duration=", duration, " speed=", aura.speed);
0		if (aura.finish==PowaAuras.AnimationEndTypes.Fade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.GrowAndFade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0			self:AddScale(animationGroup, 2.0, 2.0, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.ShrinkAndFade) then
0			self:AddFade(animationGroup, duration / 2, 20, 1);
0			self:AddScale(animationGroup, 0.25, 0.25, duration / 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.SpinAndFade) then
0			self:AddFade(animationGroup, duration * 2, 20, 1);
0			self:AddRotation(animationGroup, 360 * 4, duration * 2, 20, 1);
0		elseif (aura.finish==PowaAuras.AnimationEndTypes.SpinShrinkAndFade) then
0			self:AddFade(animationGroup, duration * 2, 20, 1);
0			self:AddRotation(animationGroup, 360 * 4, duration * 2, 20, 1);
0			self:AddScale(animationGroup, 0.25, 0.25, duration * 2, 20, 1);		
		end
			
0		return animationGroup;				
	end

==============================================================================
..\PowerAurasAuraClasses.lua
==============================================================================
	------------cPowaAura----------------
	--   cPowaAura is the base class and is not instanced directly, the other classes inherit properties and methods from it
	--===========================
	
2	cPowaAura = PowaClass(function(aura, id, base)
		--PowaAuras:ShowText("cPowaAura constructor id=", id, " base=", base);
0		aura.off = false;
		
0		aura.bufftype = PowaAuras.BuffTypes.Buff;
0		aura.buffname = "";
		
0		aura.texmode = 1;
0		aura.wowtex = false;
0		aura.customtex = false;
0		aura.textaura = false;
0		aura.owntex = false;
0		aura.realaura = 1;
0		aura.texture = 1;
0		aura.customname = "";
0		aura.aurastext = "";
0		aura.aurastextfont = 1;
0		aura.icon = "";
	
0		aura.timerduration = 0;
		
		-- Sound Settings
0		aura.sound = 0;
0		aura.soundfile = "";
0		aura.customsound = "";	
		
		-- Animation Settings
0		aura.begin = 0;
0		aura.anim1 = 1;
0		aura.anim2 = 0;
0		aura.speed = 1.00;
0		aura.finish = 1;
0		aura.isSecondary = false;
0		aura.beginSpin = false;
	
0		aura.duration = 0;
		
		-- Appearance Settings
0		aura.alpha = 0.75;
0		aura.size = 0.75;
0		aura.torsion = 1;
0		aura.symetrie = 0;
0		aura.x = 0;
0		aura.y = -30;
0		aura.randomcolor = false;
0		aura.r = 1.0;
0		aura.g = 1.0;
0		aura.b = 1.0;
		
0		aura.inverse = false;
0		aura.ignoremaj = true;
0		aura.exact = false;
	
0		aura.stacks = 0;
0		aura.stacksLower = 0;
0		aura.stacksOperator = PowaAuras.DefaultOperator;
	
0		aura.threshold = 50;
0		aura.thresholdinvert = false;
	
0		aura.mine = false;
	
0		aura.focus = false;
0		aura.target = false;
0		aura.targetfriend = false;
0		aura.raid = false;
0		aura.groupOrSelf = false;
0		aura.party = false;
	
0		aura.groupany = true;
0		aura.optunitn = false;
0		aura.unitn = "";
	
0		aura.inRaid = 0;
0		aura.inParty = 0;
0		aura.ismounted = false;
0		aura.isResting = false;
0		aura.inVehicle = false;	
0		aura.combat = 0;
0		aura.isAlive = true;
		
0		aura.spec1 = true;
0		aura.spec2 = true;
0		aura.gcd = false;
0		aura.stance = 10;
0		aura.multiids = "";
0		aura.tooltipCheck = "";
0		aura.UseOldAnimations = false;
	
0		if (base) then
0			for k, v in pairs (aura) do
0				local varType = type(v);
0				if (varType == "string"
0				 or varType == "boolean"
0				 or varType == "number"
0				 or k=="ShowOptions"
0				 or k=="CheckBoxes"
0				 or k=="OptionText"
0				 or k=="OptionTernary") then
0					if (base[k] ~= nil) then
0						aura[k] = base[k];
					end
				end
			end
		end
	
0		aura.Showing = false;
0		aura.Active = false;
0		aura.HideRequest = false;
0		aura.id = id;
		
0		if (aura.minDuration) then
0			aura.duration = math.max(aura.duration, aura.minDuration);
			--PowaAuras:ShowText("duration ", aura.duration, " minDuration ", aura.minDuration);
		end
		
		--PowaAuras:ShowText("base ", base);
	
0		if (base) then
0			local tempForSettings = PowaAuras.AuraClasses[base.bufftype];
			--PowaAuras:ShowText("base.Timer ", base.Timer, " isSecondary ", base.isSecondary, " TimerAllowed ", tempForSettings:TimerAllowed());
0			if (base.Timer and not aura.isSecondary and tempForSettings:TimerAllowed()) then
0				aura.Timer = cPowaTimer(aura, base.Timer);
			end				
			
0			if (base.Stacks and not base.isSecondary and tempForSettings:StacksAllowed()) then
0				aura.Stacks = cPowaStacks(aura, base.Stacks);
			end				
		end
		
		--if (not aura.Timer and not aura.isSecondary and base and (base.CanHaveTimerOnInverse or base.CanHaveTimer)) then
		--	aura.Timer = cPowaTimer(aura);
		--end
		
		--if (not aura.Stacks and not aura.isSecondary and base and base.CanHaveStacks) then
		--	aura.Stacks = cPowaStacks(aura);
		--end
		
2	end);
	
	
2	function cPowaAura:TimerShowing()
0		if (not self.Timer) then return false; end
0		return self.Timer.Showing;
	end
	
2	function cPowaAura:StacksShowing()
0		if (not self.Stacks) then return false; end
0		return self.Stacks.Showing;
	end
	
2	function cPowaAura:TimerAllowed()
		--PowaAuras:ShowText("TimerAllowed CanHaveTimer", self.CanHaveTimer, " inverse ", self.inverse, " CanHaveTimerOnInverse ", self.CanHaveTimerOnInverse);
0		return (self.CanHaveTimer and not self.inverse) or (self.CanHaveTimerOnInverse and self.inverse);
	end
	
2	function cPowaAura:StacksAllowed()
0		return (self.CanHaveStacks and not self.inverse);
	end
	
2	function cPowaAura:HideShowTabs()
0		if (self:TimerAllowed()) then 
0			PowaEditorTab3:Show();
0			if (not self.Timer) then
0				self.Timer = cPowaTimer(self);
			end
		else
0			PowaEditorTab3:Hide();
0			if (self.Timer) then
0				self.Timer.enabled = false;
			end
		end
0		if (self:StacksAllowed()) then 
0			PowaEditorTab5:Show();
0			if (not self.Stacks) then
0				self.Stacks = cPowaStacks(self);
			end
		else
0			PowaEditorTab5:Hide();
0			if (self.Stacks) then
0				self.Stacks.enabled = false;
			end
		end
	end
	
1	cPowaAura.TooltipOptions = {r=1.0, g=1.0, b=1.0};
2	function cPowaAura:AddExtraTooltipInfo(tooltip)
0		tooltip:SetText("|cffFFFFFF["..self.id.."] |r"..self.OptionText.typeText, self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
0		if (self.TooltipOptions.showBuffName and self.buffname ~= "???") then
0			tooltip:AddLine(self.buffname, nil, nil, nil, nil, 1);
		end
0		if (self.TooltipOptions.stacksColour) then
0			tooltip:AddLine(PowaAuras.Text.nomStacks..self.stacksOperator..self.stacks, self.TooltipOptions.stacksColour.r, self.TooltipOptions.stacksColour.g, self.TooltipOptions.stacksColour.b, 1);
		end
0		if (self.TooltipOptions.showThreshold) then
0			tooltip:AddLine(self.threshold, self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
		end
0		if (self.TooltipOptions.showStance) then
0			tooltip:AddLine(PowaAuras.PowaStance[self.stance], self.TooltipOptions.r, self.TooltipOptions.g, self.TooltipOptions.b, 1);
		end
	end
	
2	function cPowaAura:CreateFrames()
0		local frame = self:GetFrame();
0		if (frame==nil) then
0			PowaAuras:UnitTestInfo("New Frames", self.id);
			--PowaAuras:UnitTestDebug("Creating frame for aura ", self.id);
			--- Frame --- 
0			frame = CreateFrame("Frame","Frame"..self.id, UIParent);
0			self:SetFrame(frame);
			
0			frame:SetFrameStrata("LOW");
0			frame:Hide();  
			
0			frame.baseL = 256;
0			frame.baseH = 256;
		end
		
0		local texture = self:GetTexture();
0		if (texture==nil) then
0			PowaAuras:UnitTestInfo("New Texture", self.id);
0			if self.textaura then
				--PowaAuras:UnitTestDebug("Creating new textstring texture for aura ", self.id);
0				texture = frame:CreateFontString(nil, "OVERLAY");
0				texture:ClearAllPoints();
0				texture:SetPoint("CENTER",frame);
0				texture:SetFont(STANDARD_TEXT_FONT, 20);
0				texture:SetTextColor(self.r,self.g,self.b);
0				texture:SetJustifyH("CENTER");
			else
0				texture = frame:CreateTexture(nil,"BACKGROUND");
0				texture:SetBlendMode("ADD");
0				texture:SetAllPoints(frame); --- attache la texture a la frame
0				frame.texture = texture;
			end
0			self:SetTexture(texture);
		else
0			if self.textaura then
				--PowaAuras:UnitTestDebug("textaura ", texture:GetObjectType());
0				if texture:GetObjectType() == "Texture" then
0					PowaAuras:UnitTestInfo("Converting to textstring texture for aura ", self.id);
					--PowaAuras:UnitTestDebug("Converting to textstring texture for aura ", self.id);
0					texture:SetTexture(nil);
0					texture = frame:CreateFontString(nil, "OVERLAY");
0					texture:ClearAllPoints();
0					texture:SetPoint("CENTER",frame);
0					texture:SetFont(STANDARD_TEXT_FONT, 20);
0					texture:SetTextColor(self.r,self.g,self.b);
0					texture:SetJustifyH("CENTER");
0					self:SetTexture(texture);
				end
			else
0				if texture:GetObjectType() == "FontString" then
0					PowaAuras:UnitTestInfo("Converting from textstring texture for aura ", self.id);
0					texture:SetText("");
0					texture = frame:CreateTexture(nil,"BACKGROUND");
0					texture:SetBlendMode("ADD");	
0					texture:SetAllPoints(frame); --- attache la texture a la frame
0					frame.texture = texture;
0					self:SetTexture(texture);
				end
			end
		end	
0		return frame, texture;
	end
	
	
2	function cPowaAura:Hide(skipEndAnimationStop)	
0		PowaAuras:UnitTestInfo("Aura.Hide ", self.id);
		--PowaAuras:ShowText("cPowaAura:Hide ", self.id);
		
0		if (self.BeginAnimation and self.BeginAnimation:IsPlaying()) then
0			self.BeginAnimation:Stop();
		end
0		if (self.MainAnimation and self.MainAnimation:IsPlaying()) then
0			self.MainAnimation:Stop();
		end
0		if (not skipEndAnimationStop and (self.EndAnimation and self.EndAnimation:IsPlaying())) then
0			self.EndAnimation:Stop();
		end
	
0		local frame = self:GetFrame();
	
0		if (frame) then
0			frame:Hide();
		end
	
0		if (not self.isSecondary) then
0			if (self.Timer and (PowaAuras.ModTest or self.off)) then self.Timer:Hide(); end -- Hide Aura
0			if (self.Stacks) then self.Stacks:Hide(); end
0			local frame = PowaAuras.Frames[self.id];
0			if (frame) then
0				frame:Hide();
			end
0			local secondaryAura = PowaAuras.SecondaryAuras[self.id];
0			if (secondaryAura) then
0				secondaryAura:Hide();
			end
		end
	
0		self.Showing = false;
	end
	
2	function cPowaAura:AddEffect(i)
0		table.insert(PowaAuras.AurasByType[self.AuraType], i);
	end
	
2	function cPowaAura:IsPlayerAura()
0		return 	(not self.target) 
0			and (not self.targetfriend)
0			and (not self.party)
0			and (not self.raid) 
0			and (not (self.groupOrSelf and (GetNumPartyMembers()>0 or GetNumRaidMembers()>0))) 
0			and (not self.focus)
0			and (not self.optunitn);
	end
	
2	function cPowaAura:ShowTimerDurationSlider()
0		return false;
	end
	
2	function cPowaAura:CheckState(giveReason)
		
		--- player aura but player is dead
0		if (self:IsPlayerAura() and ((PowaAuras.WeAreAlive == true and self.isAlive == false) or (PowaAuras.WeAreAlive == false and self.isAlive == true))) then
0			if (not giveReason) then return false; end
0			if (PowaAuras.WeAreAlive == false) then
0				return false, PowaAuras.Text.nomReasonPlayerDead;
			else
0				return false, PowaAuras.Text.nomReasonPlayerAlive;
			end
		end
		
		--- target checks
0		if (not self.targetfriend or self.AuraType~="SpellAlert") then
0			if (self.target or self.targetfriend) then
0				if (UnitName("target") == nil) then
0					if (not giveReason) then return false; end
0					return false, PowaAuras.Text.nomReasonNoTarget;
				end
0				if (UnitName("target") == UnitName("player")) then
0					if (not giveReason) then return false; end
0					return false, PowaAuras.Text.nomReasonTargetPlayer;
				end		
0				local targetIsDead = UnitIsDead("target");
0				if ((targetIsDead and self.isAlive == true) or (not PowaAuras.targetIsDead and self.isAlive == false)) then
0					if (not giveReason) then return false; end
0					if (targetIsDead) then
0						return false, PowaAuras.Text.nomReasonTargetDead;
					end
0					return false, PowaAuras.Text.nomReasonTargetAlive;
				end
			end
						
			--- regarde si la cible est ennemie
0			if (self.target and self.targetfriend == false and UnitIsFriend("player","target")) then --- cible amie alors que faut pas
0				if (not giveReason) then return false; end
0				return false, PowaAuras.Text.nomReasonTargetFriendly;
			end
				
			--- regarde si la cible est amie
0			if (self.target == false and self.targetfriend and not UnitIsFriend("player","target")) then --- cible ennemie
0				if (not giveReason) then return false; end
0				return false, PowaAuras.Text.nomReasonTargetNotFriendly;
			end
		end
		
		--- party
0		if (self.party and not ((GetNumPartyMembers() > 0) or (GetNumRaidMembers() > 0))) then --- partycheck yes, but not in party
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotInParty;
		end
	        
	    --- focus
0		if (self.focus and (UnitName("focus") == nil or UnitName("focus") == UnitName("player"))) then --- focuscheck
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNoFocus;
		end
	        
	    --- unit
0		if (self.optunitn and not ((GetNumPartyMembers() > 0) or (GetNumRaidMembers() > 0) or UnitExists("pet"))) then --- Unitn yes, but not in party/raid or with pet
0			if (not giveReason) then return false; end
0			return false, self:InsertText(self.Text.nomReasonNoCustomUnit, self.unitn);
		end
	        
	    --- raid
0		if (self.raid and numrm == 0) then --- raidcheck yes, but not in raid
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotInRaid;
		end
	
		--- dual spec check
0		if ((not self.spec2 and PowaAuras.ActiveTalentGroup == 2) or (not self.spec1 and PowaAuras.ActiveTalentGroup == 1)) then
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonNotForTalentSpec;
	    end
		
		--- mode combat
0		if ((PowaAuras.WeAreInCombat == true and self.combat == false) or (PowaAuras.WeAreInCombat == false and self.combat == true)) then
0			if (not giveReason) then return false; end
0			if (self.combat == true) then
0				return false, PowaAuras.Text.nomReasonNotInCombat;
			end
0			return false, PowaAuras.Text.nomReasonInCombat;		
		end
			
0		if ((PowaAuras.WeAreInRaid == true and self.inRaid == false) or (PowaAuras.WeAreInRaid == false and self.inRaid == true)) then
0			if (not giveReason) then return false; end
0			if (self.inRaid == true) then
0				return false, PowaAuras.Text.nomReasonNotInRaid;
			end
0			return false, PowaAuras.Text.nomReasonInRaid;		
		end
			
0		if ((PowaAuras.WeAreInParty == true and self.inParty == false) or (PowaAuras.WeAreInParty == false and self.inParty == true)) then
0			if (not giveReason) then return false; end
0			if (self.inParty == true) then
0				return false, PowaAuras.Text.nomReasonNotInParty;
			end
0			return false, PowaAuras.Text.nomReasonInParty;		
		end
			
0		if ((PowaAuras.WeAreMounted == true and self.ismounted == false) or (PowaAuras.WeAreMounted == false and self.ismounted == true)) then
0			if (not giveReason) then return false; end
0			if (self.ismounted == true) then
0				return false, PowaAuras.Text.nomReasonNotMounted;
			end
0			return false, PowaAuras.Text.nomReasonMounted;		
		end
			
0		if ((PowaAuras.WeAreInVehicle == true and self.inVehicle == false) or (PowaAuras.WeAreInVehicle == false and self.inVehicle == true)) then
0			if (not giveReason) then return false; end
0			if (self.inVehicle == true) then
0				return false, PowaAuras.Text.nomReasonNotInVehicle;
			end
0			return false, PowaAuras.Text.nomReasonInVehicle;		
		end
	
		-- It's not dead it's restin'
0		if ((self.isResting==false and IsResting()==1 and not PowaAuras.WeAreInCombat) or (self.isResting==true and (IsResting()~=1))) then	
0			if (not giveReason) then return false; end
0			if (self.isResting == true) then
0				return false, PowaAuras.Text.nomReasonNotResting;
			end
0			return false, PowaAuras.Text.nomReasonResting;		
		end	
		
0		if (not giveReason) then return true; end
0		return true, PowaAuras.Text.nomReasonStateOK;
	end
	
2	function cPowaAura:ShouldShow(giveReason, reverse)
0		PowaAuras:UnitTestInfo("ShouldShow", self.id);
0		if (PowaMisc.Disabled) then
0			return false,  PowaAuras.Text.nomReasonDisabled;
		end
0		local stateResult, reason = self:CheckState(giveReason);	
0		if (not stateResult) then
0			self.InactiveDueToState = true;
0			return stateResult, reason;
		end
0		self.InactiveDueToState = false;
0		local result, reason = self:CheckIfShouldShow(giveReason);
0		if (result~=nil and (self.inverse or reverse) and not (self.inverse and reverse)) then
0			result = not result;
0			if (giveReason) then
0				reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonInverted, reason);
			end
		end
0		return result, reason;
	end
	
2	function cPowaAura:Display()
0		PowaAuras:Message("Aura Display id=", self.id); --OK
0		for k,v in pairs (self) do
0			PowaAuras:Message("  "..tostring(k).." = "..tostring(v)); --OK
		end
	end
	
2	function cPowaAura:GetFrame()
0		if (self.isSecondary) then
0			return PowaAuras.SecondaryFrames[self.id];
		end
0		return PowaAuras.Frames[self.id];
	end
	
2	function cPowaAura:GetTexture()
0		if (self.isSecondary) then
0			return PowaAuras.SecondaryTextures[self.id];
		end
0		return PowaAuras.Textures[self.id];
	end
	
2	function cPowaAura:SetFrame(frame)
0		if (self.isSecondary) then
0			PowaAuras.SecondaryFrames[self.id] = frame;
0			return;
		end
0		PowaAuras.Frames[self.id] = frame;
	end
	
2	function cPowaAura:SetTexture(texture)
0		if (self.isSecondary) then
0			PowaAuras.SecondaryTextures[self.id] = texture;
0			return;
		end
0		PowaAuras.Textures[self.id] = texture;
	end
	
2	function cPowaAura:GetSpellNameFromMatch(spellMatch)
0		local _, _,spellId = string.find(spellMatch, "%[(%d+)%]")
0		if (spellId) then		
0			local spellName, rank, spellIcon = GetSpellInfo(tonumber(spellId));
0			return spellName, spellIcon;
		end
0		return spellMatch;
	end
	
2	function cPowaAura:SetStacks(text)
0		local _, _,curStacksLower, curOperator, curStacks = string.find(text, "(%d*)(%D+)(%d*)")
	
0		if (curStacks == nil or curStacks == "") then curStacks = "0"; end
0		local stacks = tonumber(curStacks);
		--PowaAuras:Debug(stacks);
			
0		if (stacks ~= self.stacks) then
0			if (stacks > 100) or (stacks < 0) then stacks = 0; end
0			self.stacks = stacks or 0;
		end
		
0		if (curStacksLower == nil or curStacksLower == "") then curStacksLower = "0"; end
0		local stacksLower = tonumber(curStacksLower);
		--PowaAuras:Debug(stacksLower);
		
0		if (stacksLower ~= self.stacksLower) then
0			if (stacksLower > 100) or (stacksLower < 0) or (stacksLower > stacks) then stacksLower = 0; end
0			self.stacksLower = stacksLower or 0;
		end
		
0		if (curOperator ~= self.stacksOperator) then
0			if (not PowaAuras.allowedOperators[curOperator]) then
0				curOperator = PowaAuras.DefaultOperator;
			end	
0			self.stacksOperator = curOperator;
		end	
	end
	
2	function cPowaAura:Trim(s)
0	    return (string.gsub(s, "^%s*(.-)%s*$", "%1"));
	end
	
2	function cPowaAura:MatchSpell(spellName, spellTexture, textToFind)
0		if (spellName==nil or textToFind==nil) then
0			return false;
		end
0		if (textToFind=="*") then
0			return true;
		end
		--PowaAuras:Debug("  MatchSpell spellName   =",spellName);
		--PowaAuras:Debug("             spellTexture=",spellTexture);
		--PowaAuras:Debug("             textToFind  =",textToFind);
0		for pword in string.gmatch(textToFind, "[^/]+") do
0			pword = self:Trim(pword);
0			if (string.len(pword)>0) then
0				local textToSearch;
0				local textureMatch;
0				if string.find(pword, "_") then
0					 _, _,textToSearch = string.find(spellTexture, "([%w_]*)$")
				else
0					textToSearch = spellName;
0					pword, textureMatch = self:GetSpellNameFromMatch(pword);
				end
				--PowaAuras:Debug("textureMatch=", textureMatch);
0				if (not textureMatch or textureMatch==spellTexture) then
0					if (textToSearch) then
0						if (self.ignoremaj) then
0							textToSearch = string.upper(textToSearch)
0							pword = string.upper(pword);
						end
						--PowaAuras:Debug("pword=", pword);
						--PowaAuras:Debug("search=", textToSearch);
0						if (self.exact) then
							--PowaAuras:Debug("exact=", (textToSearch == pword));
0							if (textToSearch == pword) then
0								return true;
							end
						else
							--PowaAuras:Debug("find=", string.find(textToSearch, pword, 1, true));
0							if (string.find(textToSearch, pword, 1, true)) then
0								return true;
							end
						end
					end
				end
			end
		end
	
0		return nil;
	end
	
2	function cPowaAura:MatchText(textToSearch, textToFind)
0		if (textToSearch==nil or textToFind==nil) then
0			return false;
		end
0		if (textToFind=="*") then
0			return true;
		end
		--PowaAuras:Debug("MatchText textToSearch=",textToSearch," textToFind=",textToFind);
0		if (self.ignoremaj) then
0			textToFind = string.upper(textToFind);
0			textToSearch = string.upper(textToSearch);
		end
		--PowaAuras:Debug("MatchText textToSearch=",textToSearch," textToFind=",textToFind, " ignoremaj=", self.ignoremaj, " exact=", self.exact);
0		if (self.exact) then
0			return (textToSearch == textToFind);
		end
0		for pword in string.gmatch(textToFind, "[^/]+") do	
			--PowaAuras:Debug("pword=", pword," find=",string.find(textToSearch, pword, 1, true));
0			if (string.find(textToSearch, pword, 1, true)) then
0				return true;
			end
		end
0		return nil;
	end
	
2	function cPowaAura:CreateAuraString(keepLink)
0		local tempstr, varpref= "", "";
0		for k, v in pairs (self) do
			--- multi condition checks not supported for export.
0			if (k == "multiids" and not keepLink) then
0				v = "";
			end
0			local varType = type(v);
0			if (varType == "string" or varType == "boolean" or varType == "number") then
0				tempstr = tempstr..k..":"..string.sub(varType,1,2)
0				if (varType == "string") then
0					tempstr = tempstr..v;
				else
0					tempstr = tempstr..tostring(v);
				end
0				tempstr = tempstr.."; ";
			end
		end
0		if (self.Timer and self.Timer.enabled) then
0			for k, v in pairs (self.Timer) do
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					tempstr = tempstr.."timer."..k..":"..string.sub(varType,1,2);
0					if (varType == "string") then
0						tempstr = tempstr..v;
					else
0						tempstr = tempstr..tostring(v);
					end
0					tempstr = tempstr.."; ";
				end
			end
		end
0		if (self.Stacks and self.Stacks.enabled) then
0			for k, v in pairs (self.Stacks) do
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					tempstr = tempstr.."stacks."..k..":"..string.sub(varType,1,2);
0					if (varType == "string") then
0						tempstr = tempstr..v;
					else
0						tempstr = tempstr..tostring(v);
					end
0					tempstr = tempstr.."; ";
				end
			end
		end
	
0		if tempstr and tempstr ~= "" then
0			tempstr = strtrim(tempstr);
0			tempstr = string.sub(tempstr, 1, string.len(tempstr)-1);
		end
		--PowaAuras:Debug("Aura-string length: "..tostring(string.len(tempstr)));
0		return tempstr;
	end
	
2	function cPowaAura:GetUnit()
0		if (self.target or self.targetfriend) then
0			return "target";
0		elseif (self.focus) then
0			return "focus";
0		elseif (self.party) then
0			return "party";
0		elseif (self.raid) then
0			return "raid";
0		elseif (self.groupOrSelf) then
0			return "groupOrSelf";
0		elseif (self.optunitn) then
0			return self.unitn;
		else 
0			return "player";
		end	
0		return nil;
	end
	
2	function cPowaAura:CheckAllUnits(giveReason)
0		local unit = self:GetUnit();		
		--PowaAuras:Debug("on unit "..unit);
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
	
0		if unit == "party" then
0			for pm = 1, numpm do
0				unit = "party"..pm;
0				if self:CheckUnit(unit) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
0		elseif unit == "raid" then
0			for rm = 1, numrm do
0				unit = "raid"..rm;
0				if self:CheckUnit(unit) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
0		elseif  unit == "groupOrSelf" then
0			if (numrm>0) then
0				for rm = 1, numrm do
0					unit = "raid"..rm;
0					if self:CheckUnit(unit) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
					end
				end
0			elseif (numpm>0) then
0				for pm = 1, numpm do
0					unit = "party"..pm;
0					if self:CheckUnit(unit) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
					end
				end
0				if self:CheckUnit("player") then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
				end
			end
		else
0			if self:CheckUnit(unit) then
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].MatchReason, unit);
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.ReasonStat[self.ValueName].NoMatchReason, unit);
	end
	
2	function cPowaAura:CheckStacks(count)
0		local operator = self.stacksOperator or PowaAuras.DefaultOperator;
0		local stacks = self.stacks or 0;
0		local stacksLower = self.stacksLower or 0;
		--PowaAuras:Debug("Stack op=",operator," stacks=",stacks,"Stack Count=",count);
0		return    ((operator == "="  and stacks == 0)
0				or (operator == ">=" and count >= stacks)
0				or (operator == "<=" and count <= stacks)
0				or (operator == ">"  and count > stacks)
0				or (operator == "<"  and count < stacks)
0				or (operator == "="  and count == stacks)
0				or (operator == "-"  and count >= stacksLower and count <= stacks)
0				or (operator == "!"  and count ~= stacks));
	end
	
2	function cPowaAura:StacksText()
0		local stacksText = self.stacksOperator..tostring(self.stacks);
0		if (self.stacksOperator=="-") then
0			stacksText =  tostring(self.stacksLower)..stacksText;
		end
0		return stacksText;
	end
	
2	function cPowaAura:CheckTimerInvert()
0		if (PowaAuras.ModTest or self.Timer.InvertAuraBelow==nil or self.Timer.InvertAuraBelow==0 or self.InvertTest) then
0			return;
		end
	
0		local timeValue = 0;
0		if (self.Timer.DurationInfo and self.Timer.DurationInfo > 0) then
0			timeValue = math.max(self.Timer.DurationInfo - GetTime(), 0);
		end
		
0		if (PowaAuras.DebugCycle) then
0			PowaAuras:DisplayText("=================");
0			PowaAuras:DisplayText("CheckTimerInvert");
0			PowaAuras:DisplayText("id=",self.id);
0			PowaAuras:DisplayText("timeValue=",timeValue);
0			PowaAuras:DisplayText("InvertAuraBelow=",self.Timer.InvertAuraBelow);
0			PowaAuras:DisplayText("ForceTimeInvert=",self.ForceTimeInvert);
0			PowaAuras:DisplayText("InvertTimeHides=",self.InvertTimeHides);
		end
		
0		local oldForceTimeInvert = self.ForceTimeInvert;
0		if (timeValue and timeValue > 0 and ((not self.InvertTimeHides and timeValue<=self.Timer.InvertAuraBelow))
0										or (self.InvertTimeHides and timeValue>=self.Timer.InvertAuraBelow) ) then
0			self.ForceTimeInvert = true;
		else
0			self.ForceTimeInvert = nil;
		end
0		if (oldForceTimeInvert ~= self.ForceTimeInvert) then
0			self.InvertTest = true; -- To prevent infinite loop
			--PowaAuras:ShowText("Change in ForceTimeInvert=", self.ForceTimeInvert);
0			PowaAuras:TestThisEffect(self.id);
0			self.InvertTest = nil;
		end
	end
					
1	cPowaBuffBase = PowaClass(cPowaAura, {CanHaveTimer=true, CanHaveStacks=true, CanHaveInvertTime=true, InvertTimeHides=true});
	
2	function cPowaBuffBase:AddEffect(i)
	
0		if not self.target 
0	   and not self.targetfriend 
0	   and not self.party
0	   and not self.raid 
0	   and not self.groupOrSelf
0	   and not self.focus
0	   and not self.optunitn then --- self-buff
0			table.insert(PowaAuras.AurasByType.Buffs, i);
		end
0		if self.party then --- partybuff cible
0			table.insert(PowaAuras.AurasByType.PartyBuffs, i);
		end
0		if self.focus then --- focus buffs
0			table.insert(PowaAuras.AurasByType.FocusBuffs, i);
		end
0		if self.raid then --- raid buffs
0			table.insert(PowaAuras.AurasByType.RaidBuffs, i);
		end
0		if self.groupOrSelf then --- groupOrSelf buffs
0			table.insert(PowaAuras.AurasByType.GroupOrSelfBuffs, i);
		end
0		if self.optunitn then --- unit buffs
0			table.insert(PowaAuras.AurasByType.UnitBuffs, i);
		end
0		if (self.target or self.targetfriend) then --- target buff
0			table.insert(PowaAuras.AurasByType.TargetBuffs, i);
		end			
	end
	
2	function cPowaBuffBase:IsPresent(unittarget, s, giveReason, textToCheck)
	
		--PowaAuras:Debug("IsPresent on ",unittarget,"  buffid ",s," type", self.buffAuraType);
	
0		local auraName, _, auraTexture, count, _, _, expirationTime, caster = UnitAura(unittarget, s, self.buffAuraType);
		
0		if (auraName == nil) then return nil; end
	
		--PowaAuras:Debug("Aura=",auraName," count=",count," expirationTime=", expirationTime," caster=",caster);
	
0		if (not self:CompareAura(unittarget, s, auraName, auraTexture, textToCheck)) then
			--PowaAuras:Debug("CompareAura not found");
0			return false;
		end
		
0		local isMine = (caster~=nil) and UnitExists(caster) and UnitIsUnit("player", caster);
0		local bemine = self.mine;
		--PowaAuras:ShowText("Bemine=",bemine," isMine=",isMine);
0		if (bemine and isMine) or (not bemine) then
0			if (self:CheckStacks(count)) then
				--PowaAuras:ShowText("Present!");
0				if (self.Stacks) then
0					self.Stacks:SetStackCount(count);
				end			
0				if (self.Timer) then
0					self.Timer:SetDurationInfo(expirationTime);
0					self:CheckTimerInvert();
0					if (self.ForceTimeInvert) then
0						if (not giveReason) then return false; end
0						return false, PowaAuras.Text.nomReasonBuffPresentTimerInvert;
					end
				end
0				if (giveReason) then return true, PowaAuras.Text.nomReasonBuffFound; end
0				return true;
			else
0				if (giveReason) then return nil, PowaAuras:InsertText(PowaAuras.Text.nomReasonStacksMismatch, count, self:StacksText()); end
0				return nil;
			end
		end
		
0		return false;
	end	
	
2	function cPowaBuffBase:CheckTooltip(text, target, index)
0		if (text==nil or string.len(text) == 0) then
0			return true;
		end
	
		--PowaAuras:Debug("Search in tooltip for ",text);
	
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0		PowaAuras_Tooltip:SetUnitAura(target, index, self.buffAuraType);
		
0		for z = 1, PowaAuras_Tooltip:NumLines() do
			--PowaAuras:UnitTestDebug("Check tooltip line ",z);
0			local textlinel = getglobal("PowaAuras_TooltipTextLeft"..z);
0			local textl = textlinel:GetText();
0			local tooltipText = "";
0			if textl then
0				tooltipText = tooltipText..textl;
			end
0			local textliner = getglobal("PowaAuras_TooltipTextRight"..z);
0			local textr = textliner:GetText();
0			if textr then
0				tooltipText = tooltipText..textr;
			end
0			if (tooltipText ~= "") then
				--PowaAuras:UnitTestDebug("| "..text.." |");		
0				if (string.find(tooltipText, text, 1, true)) then
0					PowaAuras_Tooltip:Hide();
0					return true;
				end
			end
		end	
0		PowaAuras_Tooltip:Hide();
0		return false;
	end
	
2	function cPowaBuffBase:CompareAura(target, z, auraName, auraTexture, textToCheck)
		
		--PowaAuras:Debug("CompareAura",z," ",auraName, auraTexture);
		
0		if self:MatchSpell(auraName, auraTexture, textToCheck) then
			--PowaAuras:UnitTestDebug("Aura match found! ", self.id);
0			if (not self:CheckTooltip(self.tooltipCheck, target, z)) then
				--PowaAuras:UnitTestDebug("Tooltip no match found!");
0				return false;
			end
0			local tempicon;
0			if (self.owntex == true) then
0				getglobal("PowaIconTexture"):SetTexture(auraTexture);
0				tempicon = getglobal("PowaIconTexture"):GetTexture();
0				if (self.icon ~= tempicon) then
0					self.icon = tempicon;
				end
			end
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture(auraTexture);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			 return true;	
		end
0		return false;
	end
	
2	function cPowaBuffBase:CheckAllAuraSlots(target, giveReason)
		--PowaAuras:UnitTestDebug("-------------");
		--PowaAuras:UnitTestDebug("CheckAllAuraSlots for ", target);
0		local present, reason;
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			for i = 1, 40 do
0				present, reason = self:IsPresent(target, i, giveReason, pword);
0				if (present) then
					--PowaAuras:UnitTestDebug("CheckAllAuraSlots Present!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffPresent, target, self.auraType, self.buffname);
				end	
			end
		end
0		if (present==nil) then
0			if (not giveReason) then return false; end
0			if (reason) then
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffFoundButIncomplete, target, self.auraType, self.buffname, reason);
			end
0			return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffMissing, target, self.auraType, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonBuffMissing, target, self.auraType, self.buffname);
	end
	
2	function cPowaBuffBase:CheckGroup(group, count, giveReason)
0		for groupId = 1, count do
0			local present = self:CheckAllAuraSlots(group..groupId, false);
0			if (present) then
0				if (self.groupany == true) then
					--PowaAuras:UnitTestDebug("CheckGroup("..group..") Present!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonOneInGroupHasBuff, group..groupId, self.auraType, self.buffname);
				end
0			elseif (self.groupany==false) then
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNotAllInGroupHaveBuff, group, self.auraType, self.buffname);
			end
		end
0		if (self.groupany==false) then
			--PowaAuras:UnitTestDebug("CheckGroup("..group..") All Present!");
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonAllInGroupHaveBuff, group, self.auraType, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoOneInGroupHasBuff, group, self.auraType, self.buffname);
	end
	
2	function cPowaBuffBase:CheckIfShouldShow(giveReason)
0		PowaAuras:UnitTestInfo("CheckIfShouldShow ",self.buffAuraType," aura");
		--PowaAuras:Debug("Check " .. self.buffAuraType .. " aura");
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
		--- targets
0		if (self.target or self.targetfriend) then
			--PowaAuras:UnitTestDebug("on target or friendlytarget");
0			return self:CheckAllAuraSlots("target", giveReason);
		end	
		--- focus buff    
0		if self.focus then
			--PowaAuras:UnitTestDebug("on focus");
0			return self:CheckAllAuraSlots("focus", giveReason);
		end		
		--- unit buff    
0		if self.optunitn then
			--PowaAuras:UnitTestDebug("on unit "..self.unitn);
0			return self:CheckAllAuraSlots(self.unitn, giveReason);
		end		
		--- raid buff
0		if self.raid then
			--PowaAuras:UnitTestDebug("on raid size=", numrm);
0			return self:CheckGroup("raid", numrm, giveReason);
		end			
		--- partybuff    
0		if self.party then
			--PowaAuras:UnitTestDebug("on party size=", numpm);
0			return self:CheckGroup("party", numpm, giveReason);
		end
		
0		if (self.groupOrSelf) then --- Group or Self Buff
			--PowaAuras:UnitTestDebug("on Group or Self");
0			if (numrm>0) then
				--PowaAuras:UnitTestDebug("GoS on raidunit");
0				return self:CheckGroup("raid", numrm, giveReason); -- includes player
			end
0			if (numpm>0) then
				--PowaAuras:UnitTestDebug("GoS on partyunit or self");
0				local presentOnSelf, reason = self:CheckAllAuraSlots("player", giveReason);
0				if (presentOnSelf and self.groupany) then
0					if (not giveReason) then return true; end
0					return true, reason;
				end
0				if (not presentOnSelf and not self.groupany) then
0					if (not giveReason) then return false; end
0					return false, reason;
				end
0				return self:CheckGroup("party", numpm, giveReason);
			end
			--PowaAuras:UnitTestDebug("GoS on player");
0			return self:CheckAllAuraSlots("player", giveReason);
		end
				
		--- player buff    
	
		--PowaAuras:Debug("on player");
0		return self:CheckAllAuraSlots("player", giveReason);
	end
2	function cPowaBuffBase:ShowTimerDurationSlider()
0		return (self.target
0			 or self.targetfriend
0			 or self.party
0			 or self.focus
0			 or self.raid
0			 or self.optunitn);
	end
	
1	cPowaBuffBase.ShowOptions = {
1		["PowaBarBuffStacks"]=1,
1		["PowaGroupAnyButton"]=1,
1		["PowaBarTooltipCheck"]=1,
1	};
1	cPowaBuffBase.CheckBoxes = {
1		["PowaTargetButton"]=1,
1		["PowaPartyButton"]=1,
1		["PowaFocusButton"]=1,
1		["PowaRaidButton"]=1,
1		["PowaGroupOrSelfButton"]=1,
1		["PowaGroupAnyButton"]=1,
1		["PowaOptunitnButton"]=1,
1		["PowaInverseButton"]=1,
1		["PowaIngoreCaseButton"]=1,
1		["PowaOwntexButton"]=1,
1	};
	
1	cPowaBuff = PowaClass(cPowaBuffBase, {buffAuraType="HELPFUL", auraType="buff"});
1	cPowaBuff.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff, 
1						  exactTooltip=PowaAuras.Text.aideExact,
1						  typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Buff], 
1						  mineText=PowaAuras.Text.nomMine, mineTooltip=PowaAuras.Text.aideMine,
1						  targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,
1						};
	
1	cPowaBuff.TooltipOptions = {r=0.0, g=1.0, b=1.0, showBuffName=true, stacksColour={r=0.7,g=1.0,b=0.7}};
	
										  
1	cPowaDebuff = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="debuff"});
1	cPowaDebuff.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff2,
1							 exactTooltip=PowaAuras.Text.aideExact,
1							 typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Debuff],
1							 mineText=PowaAuras.Text.nomMine, mineTooltip=PowaAuras.Text.aideMine};
	
1	cPowaDebuff.TooltipOptions = {r=1.0, g=0.8, b=0.8, showBuffName=true, stacksColour={r=1.0,g=0.7,b=0.7}};						 
							 
1	cPowaTypeDebuff = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="debuff type"});
1	cPowaTypeDebuff.OptionText={
1							buffNameTooltip=PowaAuras.Text.aideBuff3,
1							exactTooltip=PowaAuras.Text.aideExact,
1							typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.TypeDebuff],
1							mineText=PowaAuras.Text.nomDispellable, mineTooltip=PowaAuras.Text.aideDispellable,
1							targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,
1							};
1	 cPowaTypeDebuff.ShowOptions = {["PowaGroupAnyButton"]=1,
1								   ["PowaBarTooltipCheck"]=1};						 
1	cPowaTypeDebuff.CheckBoxes = {["PowaTargetButton"]=1,
1								  ["PowaPartyButton"]=1,
1								  ["PowaFocusButton"]=1,
1								  ["PowaRaidButton"]=1,
1								  ["PowaGroupOrSelfButton"]=1,
1								  ["PowaGroupAnyButton"]=1,
1								  ["PowaOptunitnButton"]=1,
1								  ["PowaInverseButton"]=1,
1								  ["PowaIngoreCaseButton"]=1,
1								  };
1	cPowaTypeDebuff.TooltipOptions = {r=0.8, g=1.0, b=0.8, showBuffName=true};
	
2	function cPowaTypeDebuff:IsPresent(target, z)
0		local removeable;
0		if (self.mine) then
0			removeable = 1;
		end
0		local name, _, texture, count, typeDebuff, _, expirationTime = UnitDebuff(target, z, removeable);
0		if (not name) then
0			return false;
		end
		--PowaAuras:Debug("TypeDebuff IsPresent on ",target,"  buffid ",z,"  removeable ",removeable);
0		if (self.mine and typeDebuff==nil) then
0			return false;
		end
	
		--PowaAuras:UnitTestDebug("Debuff ",name," type ",typeDebuff);
			
0		local typeDebuffName;
0		if (typeDebuff ~= nil) then
0			typeDebuffName = PowaAuras.Text.DebuffType[typeDebuff];
		end
0		local typeDebuffCatName = PowaAuras.Text.DebuffCatType[PowaAuras.DebuffCatSpells[name]];
0		if (typeDebuffName == nil and typeDebuffCatName==nil) then
0			typeDebuffName = PowaAuras.Text.aucun;
		end
	
		--PowaAuras:UnitTestDebug("typeDebuffName ",typeDebuffName);
		--PowaAuras:UnitTestDebug("typeDebuffCatName ",typeDebuffCatName);
		--PowaAuras:UnitTestDebug("self.buffname ",self.buffname);
		
0		if self:MatchText(typeDebuffName, self.buffname)
0		or self:MatchText(typeDebuffCatName, self.buffname) then
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(count);
			end			
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture(texture);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(expirationTime);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
0					return false;
				end
			end
0			return true;
		end
	
0		return false;
	end
	
	
1	cPowaStealableSpell = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="stealable spell type", target=true, CanHaveTimer=true, CanHaveTimerOnInverse=false, CanHaveStacks=true, CanHaveInvertTime=true});
1	cPowaStealableSpell.OptionText={buffNameTooltip=PowaAuras.Text.aideStealableSpells, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.StealableSpell]};
1	cPowaStealableSpell.ShowOptions = {["PowaBarTooltipCheck"]=1};						 
1	cPowaStealableSpell.CheckBoxes={["PowaTargetButton"]=1,
1								["PowaFocusButton"]=1,
1								["PowaInverseButton"]=1,
1								["PowaIngoreCaseButton"]=1,
1								["PowaOwntexButton"]=1,
1								};
													  
1	cPowaStealableSpell.TooltipOptions = {r=0.8, g=0.8, b=0.2, showBuffName=true};
	
2	function cPowaStealableSpell:AddEffect(i)
0		if not self.target and not self.focus then --- any enemy casts
0			table.insert(PowaAuras.AurasByType.StealableSpells, i);
		end
0		if self.target then --- target casts
0			table.insert(PowaAuras.AurasByType.StealableTargetSpells, i);
		end
0		if self.focus then --- focus casts
0			table.insert(PowaAuras.AurasByType.StealableFocusSpells, i);
		end
	end
	
2	function cPowaStealableSpell:CheckUnit(unit)
0		if not UnitExists(unit) or UnitIsDead(unit) or not UnitCanAttack(unit, "player") then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit), " hostile=", UnitCanAttack(unit, "player"));
0			return false;
		end
		
0		for pword in string.gmatch(self.buffname, "[^/]+") do
	
0			for i = 1, 40 do
			
0				local auraName, _, auraTexture, count, typeDebuff, _, expirationTime, _, isStealable = UnitAura(unit, i);
				
0				if (auraName == nil) then return nil; end
	
				--PowaAuras:ShowText("Aura=",auraName," count=",count," expirationTime=", expirationTime," isStealable=",isStealable);
	
0				if (isStealable and self:CompareAura(unit, s, auraName, auraTexture, pword)) then
0					if (self.Stacks) then
0						self.Stacks:SetStackCount(count);
					end			
0					if (self.Timer) then
0						self.Timer:SetDurationInfo(expirationTime);
0						self:CheckTimerInvert();
0						if (self.ForceTimeInvert) then
0							return false;
						end
					end
0					return true;
				end	
			end
		end
		
		--PowaAuras:UnitTestDebug(unit, "  has stealable spell ", spellname, " no match");
0		return false;
	end	
	
2	function cPowaStealableSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check if target/focus is casting ", self.buffname);
		
		-- Check self target/focus first
0		if (self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStealablePresent, PowaAuras.Text.nomCheckTarget, self.buffname);
		end
0		if (self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStealablePresent, PowaAuras.Text.nomCheckFocus, self.buffname);
		end	
	
		--- Scan raid targets
0		local numrm = GetNumRaidMembers();
0		if numrm > 0 then
0			for i=1, numrm do
0				if (self:CheckUnit("raid"..i.."target")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetStealablePresent, i, self.buffname);
				end
			end
		else
		    -- Scan party targets
0			local numpm = GetNumPartyMembers();
0			if numpm > 0 then
0				for i=1, numpm do
0					if (self:CheckUnit("party"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetStealablePresent, i, self.buffname);
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoStealablePresent, self.buffname);
	end
	
1	cPowaPurgeableSpell = PowaClass(cPowaBuffBase, {buffAuraType = "HARMFUL", auraType="purgeable spell type", target=true, CanHaveTimer=true, CanHaveTimerOnInverse=false, CanHaveStacks=true, CanHaveInvertTime=true});
1	cPowaPurgeableSpell.OptionText={buffNameTooltip=PowaAuras.Text.aidePurgeableSpells, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.PurgeableSpell]};
1	cPowaPurgeableSpell.ShowOptions = {["PowaBarTooltipCheck"]=1};						 
1	cPowaPurgeableSpell.CheckBoxes={["PowaTargetButton"]=1,
1								["PowaFocusButton"]=1,
1								["PowaInverseButton"]=1,
1								["PowaIngoreCaseButton"]=1,
1								["PowaOwntexButton"]=1,
1								};
													  
1	cPowaPurgeableSpell.TooltipOptions = {r=0.2, g=0.8, b=0.2, showBuffName=true};
	
2	function cPowaPurgeableSpell:AddEffect(i)
0		if not self.target and not self.focus then --- any enemy casts
0			table.insert(PowaAuras.AurasByType.PurgeableSpells, i);
		end
0		if self.target then --- target casts
0			table.insert(PowaAuras.AurasByType.PurgeableTargetSpells, i);
		end
0		if self.focus then --- focus casts
0			table.insert(PowaAuras.AurasByType.PurgeableFocusSpells, i);
		end
	end
	
2	function cPowaPurgeableSpell:CheckUnit(unit)
0		if (not UnitExists(unit) or UnitIsDead(unit)) then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit));
0			return false;
		end
		
0		for pword in string.gmatch(self.buffname, "[^/]+") do
	
0			for i = 1, 40 do
			
0				local auraName, _, auraTexture, count, typeDebuff, _, expirationTime = UnitAura(unit, i, "CANCELABLE");
				
0				if (auraName == nil) then return nil; end
	
				--PowaAuras:ShowText(i," C Aura=",auraName," count=",count," expirationTime=", expirationTime);
	
0				if (auraName and self:CompareAura(unit, s, auraName, auraTexture, pword)) then
0					if (self.Stacks) then
0						self.Stacks:SetStackCount(count);
					end			
					--PowaAuras:Debug("CompareAura not found");
0					if (self.Timer) then
0						self.Timer:SetDurationInfo(expirationTime);
0						self:CheckTimerInvert();
0						if (self.ForceTimeInvert) then
0							return false;
						end
					end
0					return true;
				end	
			end
			
		end
			
		--PowaAuras:UnitTestDebug(unit, " has Purgeable spell ", spellname, " no match");
0		return false;
	end	
	
2	function cPowaPurgeableSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check if target/focus is casting ", self.buffname);
		
		-- Check self target/focus first
0		if (self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPurgeablePresent, PowaAuras.Text.nomCheckTarget, self.buffname);
		end
0		if (self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPurgeablePresent, PowaAuras.Text.nomCheckFocus, self.buffname);
		end	
	
		--- Scan raid targets
0		local numrm = GetNumRaidMembers();
0		if numrm > 0 then
0			for i=1, numrm do
0				if (self:CheckUnit("raid"..i.."target")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetPurgeablePresent, i, self.buffname);
				end
			end
		else
		    -- Scan party targets
0			local numpm = GetNumPartyMembers();
0			if numpm > 0 then
0				for i=1, numpm do
0					if (self:CheckUnit("party"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetPurgeablePresent, i, self.buffname);
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoPurgeablePresent, self.buffname);
	end
	
	-- This is not really AoE it is periodic damage, could be a DoT or a ground effect damage
1	cPowaAoE = PowaClass(cPowaAura, {AuraType = "Aoe"});
1	cPowaAoE.OptionText={buffNameTooltip=PowaAuras.Text.aideBuff4, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.AoE]};
1	cPowaAoE.ShowOptions={["PowaBarTooltipCheck"]=1};				 
1	cPowaAoE.CheckBoxes={["PowaIngoreCaseButton"]=1};
1	cPowaAoE.TooltipOptions = {r=0.6, g=0.4, b=1.0, showBuffName=true};
2	function cPowaAoE:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check AoE");
	
0		for spellId, spell in pairs (PowaAuras.AoeAuraAdded) do
			--PowaAuras:ShowText("checking AoE "..spell.." ("..spellId..")");
0			if self:MatchSpell(spell, PowaAuras.AoeAuraTexture[spellId], self.buffname) then
				--PowaAuras:ShowText("Found! Showing=", self.Showing, " Active=", self.Active);
0				if (self.icon == "") then
0					PowaIconTexture:SetTexture("Interface\\icons\\Spell_fire_meteorstorm");
0					self.icon = PowaIconTexture:GetTexture();
				end
0				if (self.duration>0) then
0					self.TimeToHide = GetTime() + self.duration;
				end
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonAoETrigger, spell);
			end
		end
		
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonAoENoTrigger, self.buffname);
	end
	
1	cPowaEnchant = PowaClass(cPowaAura, {AuraType = "Enchants", CanHaveTimer=true, CanHaveTimerOnInverse=true, CanHaveStacks=true, CanHaveInvertTime=true, InvertTimeHides=true});
1	cPowaEnchant.OptionText = {buffNameTooltip=PowaAuras.Text.aideBuff5, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Enchant]};
1	cPowaEnchant.ShowOptions={["PowaBarBuffStacks"]=1};
1	cPowaEnchant.CheckBoxes={["PowaIngoreCaseButton"]=1,
1							 ["PowaInverseButton"]=1,
1							 ["PowaOwntexButton"]=1};
1	cPowaEnchant.TooltipOptions = {r=1.0, g=0.8, b=1.0, showBuffName=true};
	
2	function cPowaEnchant:CheckforEnchant(slot, enchantText, textToFind)
		--PowaAuras:Debug("Check enchant ("..enchantText..") active in slot",slot);
		--PowaAuras:ShowText("Check enchant ("..enchantText..") active in slot",slot);
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
0		PowaAuras_Tooltip:SetInventoryItem("player", slot);
		--PowaAuras:UnitTestDebug("search in tooltip for ", textToFind);			
		--PowaAuras:ShowText("search in tooltip for ", textToFind);			
0		for z = 1, PowaAuras_Tooltip:NumLines() do
			--PowaAuras:UnitTestDebug("Check tooltip line ",z);
			--PowaAuras:ShowText("Check tooltip line ",z);
0			local textlinel = getglobal("PowaAuras_TooltipTextLeft"..z);
0			local textl = textlinel:GetText();
0			local text = "";
0			if textl then
0				text = text..textl;
			end
0			local textliner = getglobal("PowaAuras_TooltipTextRight"..z);
0			local textr = textliner:GetText();
0			if textr then
0				text = text..textr;
			end
0			if (text ~= "") then
				--PowaAuras:UnitTestDebug("| "..text.." |");
				--PowaAuras:ShowText("| "..text.." |");
0				if (self:MatchText(text, textToFind)) then
0					PowaAuras_Tooltip:Hide();
0					return true;
				end
			end
		end	
0		PowaAuras_Tooltip:Hide();
0		return false;		
	end
					
2	function cPowaEnchant:SetForEnchant(loc, slot, charges, index)
		--PowaAuras:Debug(loc,":found ",self.buffname," in the tooltip!");
0		if (self:CheckStacks(charges)) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture( GetInventoryItemTexture("player", slot) );
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end 
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(count);
			end			
0			return true;
		end
0		return false;
	end
			
2	function cPowaEnchant:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check weapon enchant");
		--PowaAuras:ShowText("Check weapon enchant");
0		local hasMainHandEnchant, mainHandExpiration, mainHandCharges, hasOffHandEnchant, offHandExpiration, offHandCharges = GetWeaponEnchantInfo();
		--PowaAuras:ShowText("mainHandExpiration=", mainHandExpiration);
	
0		local checkMain = true;
0		local checkOff = true;
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			if (pword==PowaAuras.Text.mainHand) then
0				checkMain = true;
0				checkOff = false;
0			elseif (pword==PowaAuras.Text.offHand) then
0				checkOff = true;
0				checkMain = false;
			else
0				if (hasMainHandEnchant and checkMain) then		
0					if (self:CheckforEnchant(16, PowaAuras.Text.mainHand, pword)) then
0						if (self:SetForEnchant("MH", 16, mainHandCharges, 1)) then
0							if (self.Stacks) then
0								self.Stacks:SetStackCount(mainHandCharges);
							end
0							PowaAuras.Pending[self.id] = GetTime() + mainHandExpiration / 1000;
0							if (self.Timer) then
0								self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0								self:CheckTimerInvert();
0								if (self.ForceTimeInvert) then
0									if (not giveReason) then return false; end
0									return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantMainInvert, self.buffname);
								end
							end
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantMain, self.buffname);
						end
					end
				end
0				if (hasOffHandEnchant and checkOff) then
0					if (self:CheckforEnchant(17, PowaAuras.Text.offHand, pword)) then
0						if (self:SetForEnchant("OH", 17, offHandCharges, 2)) then
0							if (self.Stacks) then
0								self.Stacks:SetStackCount(offHandCharges);
							end
0							PowaAuras.Pending[self.id] = GetTime() + offHandExpiration / 1000;
0							if (self.Timer) then
0								self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0								self:CheckTimerInvert();
0								if (self.ForceTimeInvert) then
0									if (not giveReason) then return false; end
0									return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantOffInvert, self.buffname);
								end
							end		
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonEnchantOff, self.buffname);
						end
					end	
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoEnchant, self.buffname);
	end
	
2	cPowaCombo = PowaClass(cPowaAura,
0	{
1		AuraType = "Combo", 
1		CanHaveStacks=true,
1		OptionText={buffNameTooltip=PowaAuras.Text.aideBuff6, exactTooltip=PowaAuras.Text.aideExact, typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Combo]},
1		CheckBoxes={["PowaIngoreCaseButton"]=1,
1					},
1	});
	
								  					 
1	cPowaCombo.TooltipOptions = {r=1.0, g=1.0, b=0.0, showBuffName=true};
								  
	
2	function cPowaCombo:CheckIfShouldShow(giveReason)
0		if (not(PowaAuras.playerclass == "ROGUE" or (PowaAuras.playerclass=="DRUID" and GetShapeshiftForm()==3))) then
0			if (not giveReason) then return nil; end
0			return nil, PowaAuras.Text.nomReasonNoUseCombo;
		end
		--PowaAuras:Debug("Check Combos");
0		local nCombo = tostring(GetComboPoints("player"));
		--PowaAuras:UnitTestDebug("nCombo=", nCombo, " self.buffname=", self.buffname);
0		if self:MatchText(nCombo, self.buffname) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\inv_sword_48");
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (self.Stacks) then
0				self.Stacks:SetStackCount(nCombo);
			end			
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonComboMatch, nCombo, self.buffname);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoComboMatch, nCombo, self.buffname);
	end
	
1	cPowaActionReady = PowaClass(cPowaAura, {AuraType = "Actions", CanHaveTimer=true, CanHaveTimerOnInverse=true, CooldownAura=true, CanHaveInvertTime=true});
1	cPowaActionReady.OptionText={
1								buffNameTooltip=PowaAuras.Text.aideBuff7,
1								exactTooltip=PowaAuras.Text.aideExact,
1								typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.ActionReady],
1								mineText=PowaAuras.Text.nomIgnoreUseable, mineTooltip=PowaAuras.Text.aideIgnoreUseable,
1								};
	
1	cPowaActionReady.CheckBoxes={["PowaIngoreCaseButton"]=1,
1								 ["PowaInverseButton"]=1,
1								 ["PowaOwntexButton"]=1,
1								};
					
								  					 
1	cPowaActionReady.TooltipOptions = {r=0.8, g=0.8, b=1.0, showBuffName=true};
								  
2	function cPowaActionReady:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Action / Button:", self.slot);
		--PowaAuras:ShowText("-----ACTION READY---------");
		--PowaAuras:ShowText("Slot=", self.slot);
0		if (not self.slot or self.slot == 0) then 
0			if (not giveReason) then return false; end
0			return false, PowaAuras.Text.nomReasonActionNotFound; 
		end 
	
0		local cdstart, cdduration, enabled = GetActionCooldown(self.slot);
		--PowaAuras:ShowText("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
0		if (not enabled) then
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(0);
			end
0			if (not giveReason) then return false; end
0			return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonActionlNotEnabled, spellName);
		end
	
		--PowaAuras:ShowText("self.mine= ",self.mine," usable= ",IsUsableAction(self.slot));
0		if (not self.mine) then
0			local usable, noMana = IsUsableAction(self.slot);
0			if (not usable) then
				--PowaAuras:ShowText("HIDE!!");
0				if (not giveReason) then return false; end
0				return true, PowaAuras.Text.nomReasonActionNotUsable;
			end
		end
		
		-- Ignore if this is just Global Cooldown
0		local globalCD = (cdduration > 0.2 and cdduration < 1.7);
		--PowaAuras:ShowText("globalCD=",globalCD);
0		if (globalCD) then
0			if (not giveReason) then return self.Showing; end
0			return self.Showing, PowaAuras:InsertText(PowaAuras.Text.nomReasonGlobalCooldown, spellName);
		end
		
0		if (cdstart == 0) then
			--PowaAuras:ShowText("SHOW!!");
0			if (not giveReason) then return true; end
0			return true, PowaAuras.Text.nomReasonActionReady;
		end
	
0		PowaAuras.Pending[self.id] = cdstart + cdduration;
	
0		local reason = PowaAuras.Text.nomReasonActionNotReady;
0		if (self.Timer) then
0			self.Timer:SetDurationInfo(cdstart + cdduration);
0			self:CheckTimerInvert();
0			if (self.ForceTimeInvert) then
0				if (not giveReason) then return true; end
0				return true, PowaAuras.Text.nomReasonActionNotReadyInvert;
			end
0			if (giveReason) then
0				reason = PowaAuras.Text.PowaAuras.Text.nomReasonActionNotUsable;
			end
		end		
		--PowaAuras:ShowText("HIDE!!");
0		if (not giveReason) then return false; end
0		return false, reason;
	end
	
2	function cPowaActionReady:ShowTimerDurationSlider()
0		return true;
	end
	
1	cPowaOwnSpell = PowaClass(cPowaAura, {AuraType = "OwnSpells", CanHaveTimer=true, CanHaveTimerOnInverse=true, CooldownAura=true, CanHaveInvertTime=true});
1	cPowaOwnSpell.OptionText={
1							buffNameTooltip=PowaAuras.Text.aideBuff8,
1							exactTooltip=PowaAuras.Text.aideExact,
1							typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.OwnSpell],
1							mineText=PowaAuras.Text.nomIgnoreUseable, mineTooltip=PowaAuras.Text.aideIgnoreUseable,
1							};
1	cPowaOwnSpell.ShowOptions={["PowaBarTooltipCheck"]=1};
1	cPowaOwnSpell.CheckBoxes={
1							  ["PowaInverseButton"]=1,
1							  ["PowaInverseButton"]=1,
1							  ["PowaIngoreCaseButton"]=1,
1							  ["PowaOwntexButton"]=1,
1							  };
							  
								  					 
1	cPowaOwnSpell.TooltipOptions = {r=1.0, g=0.6, b=0.2, showBuffName=true};
	
	
2	function cPowaOwnSpell:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Spell:", self.buffname);
		--PowaAuras:ShowText("-----OWN SPELL---------");
		--PowaAuras:ShowText("Spell=", self.buffname);
0		for pword in string.gmatch(self.buffname, "[^/]+") do
0			local spellName, spellIcon = self:GetSpellNameFromMatch(pword);
0			if (self.icon == "") then
0				if (not spellIcon) then
0					_, _, spellIcon = GetSpellInfo(spellName);
				end
0				if (spellIcon) then
0					getglobal("PowaIconTexture"):SetTexture(spellIcon);
0					self.icon = getglobal("PowaIconTexture"):GetTexture();
				end
			end
0			local cdstart, cdduration, enabled = GetSpellCooldown(spellName);
			--PowaAuras:UnitTestDebug("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
			--PowaAuras:ShowText("cdstart= ",cdstart," duration= ",cdduration," enabled= ",enabled);
0			if (not enabled) then
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotEnabled, spellName);
			end
			-- Ignore if this is just Global Cooldown
0			local globalCD = (cdduration > 0.2 and cdduration < 1.7);
			--PowaAuras:ShowText("globalCD= ",globalCD);
0			if (globalCD) then
0				if (PowaAuras.Pending[self.id]) then
					--PowaAuras:ShowText("Current Pending= ",PowaAuras.Pending[self.id]);
0					if (PowaAuras.Pending[self.id] < (cdstart + cdduration)) then
0						PowaAuras.Pending[self.id] = cdstart + cdduration;
						--PowaAuras:ShowText("Set GCD Pending= ",PowaAuras.Pending[self.id]);
					end
				end
0				if (not giveReason) then return self.Showing; end
0				return self.Showing, PowaAuras:InsertText(PowaAuras.Text.nomReasonGlobalCooldown, spellName);
			end
	
0			if (cdstart == 0) then
				--if (not self.mine) then
					--local usable, noPower = IsUsableSpell(spellName);
					--PowaAuras:ShowText("usable= ",usable," noPower= ",noPower);
					--if (usable and not noPower) then
					--	if (not giveReason) then return true; end
					--	return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellUsable, spellName);
					--else
					--	if (not giveReason) then return false; end
					--	return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotUsable, spellName);
					--end
				--end
				--PowaAuras:ShowText("SHOW!!");
0				if (not giveReason) then return true; end
0				return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellUsable, spellName);
			end
			
0			PowaAuras.Pending[self.id] = cdstart + cdduration;
			--PowaAuras:ShowText("Set Pending= ",PowaAuras.Pending[self.id]);
	
0			if (giveReason) then
0				local reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotFound, self.buffname);
			end
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(PowaAuras.Pending[self.id]);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
					--PowaAuras:ShowText("SHOW2!!");
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellNotReady, spellName);
				end
				--PowaAuras:ShowText("Set DurationInfo= ",self.Timer.DurationInfo);
			end
0			if (giveReason) then
0				reason = PowaAuras:InsertText(PowaAuras.Text.nomReasonSpellOnCooldown, spellName);
			end
		end
		--PowaAuras:ShowText("HIDE!!");
0		if (not giveReason) then return false; end
0		return false, reason
	end
2	function cPowaOwnSpell:ShowTimerDurationSlider()
0		return true;
	end
	
1	cPowaAuraStats = PowaClass(cPowaAura);
1	cPowaAuraStats.OptionText={targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,};
	
1	cPowaAuraStats.ShowOptions={["PowaBarThresholdSlider"]=1,
1							    ["PowaThresholdInvertButton"]=1};					 
1	cPowaAuraStats.CheckBoxes={["PowaTargetButton"]=1,
1							   ["PowaPartyButton"]=1,
1							   ["PowaFocusButton"]=1,
1							   ["PowaRaidButton"]=1,
1							   ["PowaGroupOrSelfButton"]=1,
1							   ["PowaGroupAnyButton"]=1,
1							   ["PowaOptunitnButton"]=1,
1							   ["PowaInverseButton"]=1,};
	
								  
2	function cPowaAuraStats:AddEffect(i)
0	  if not self.target 
0	  and not self.targetfriend 
0	  and not self.party 
0	  and not self.raid 
0	  and not self.focus
0	  and not self.optunitn then
0			table.insert(PowaAuras.AurasByType[self.ValueName], i);
		end
0		if self.optunitn then
0			table.insert(PowaAuras.AurasByType["NamedUnit"..self.ValueName], i);
		end
0		if self.focus then     
0			table.insert(PowaAuras.AurasByType["Focus"..self.ValueName], i);
		end
0		if (self.target or self.targetfriend) then --- TargetHealth
0			table.insert(PowaAuras.AurasByType["Target"..self.ValueName], i);
		end
0		if self.party then
0			table.insert(PowaAuras.AurasByType["Party"..self.ValueName], i);
		end
0		if self.raid then
0			table.insert(PowaAuras.AurasByType["Raid"..self.ValueName], i);
		end
	end
2	function cPowaAuraStats:CheckUnit(unit)
		--PowaAuras:Debug("CheckUnit " .. unit);
0		if (not self:IsCorrectPowerType(unit)) then
			--PowaAuras:UnitTestDebug("Correct powertype " ,self:IsCorrectPowerType(unit));
0			return nil;
		end			
0		if (UnitIsDeadOrGhost(unit)) then
			--PowaAuras:UnitTestDebug("Correct powertype dead ", UnitIsDeadOrGhost(unit));
0			return false;
		end			
	
0		local curValue = self:UnitValue(unit);
0		local maxValue = self:UnitValueMax(unit);
		--PowaAuras:UnitTestDebug("curValue=", curValue, " maxValue=", maxValue);
0		if (curValue==nil or maxValue==nil) then return false; end
	
0		local curpercenthp = (curValue / maxValue) * 100;
0		if self.thresholdinvert then 
0			thresholdvalidate = (curpercenthp > self.threshold);
		else
0			thresholdvalidate = (curpercenthp < self.threshold)
		end	
0		if (thresholdvalidate) then
0			if (self.icon == "") then
0				getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\Spell_fire_meteorstorm");
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			return true;
		end
0		return false;
	end
	
2	function cPowaAuraStats:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Stat "..self.ValueName);
0		return self:CheckAllUnits(giveReason);
	end
	
	
1	cPowaHealth = PowaClass(cPowaAuraStats, {ValueName = "Health"});
1	cPowaHealth.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Health]};
1	cPowaHealth.TooltipOptions = {r=0.2, g=1.0, b=0.2, showThreshold=true};
2	function cPowaHealth:IsCorrectPowerType(unit)
0		return true;
	end
2	function cPowaHealth:UnitValue(unit)
0		return UnitHealth(unit);
	end
2	function cPowaHealth:UnitValueMax(unit)
0		return UnitHealthMax(unit);
	end
	
	
1	cPowaMana = PowaClass(cPowaAuraStats, {ValueName = "Mana"});
1	cPowaMana.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Mana]};
1	cPowaMana.TooltipOptions = {r=0.2, g=0.2, b=1.0, showThreshold=true};
2	function cPowaMana:IsCorrectPowerType(unit)
0		local powerType = UnitPowerType(unit);
0		return (powerType and powerType == 0);
	end
2	function cPowaMana:UnitValue(unit)
		--PowaAuras:Debug("Mana UnitValue for ", unit);
0		return UnitPower(unit);
	end
2	function cPowaMana:UnitValueMax(unit)
		--PowaAuras:Debug("Mana UnitValueMax for ", unit);
0		return UnitPowerMax(unit);
	end
	
1	cPowaEnergyRagePower = PowaClass(cPowaMana, {ValueName = "RageEnergy"});
1	cPowaEnergyRagePower.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.EnergyRagePower]};
1	cPowaEnergyRagePower.TooltipOptions = {r=1.0, g=0.4, b=0.0, showThreshold=true};
2	function cPowaEnergyRagePower:IsCorrectPowerType(unit)
0		local powerType = UnitPowerType(unit);
0		return (powerType and powerType > 0);
	end
	
1	cPowaAggro = PowaClass(cPowaAura, {ValueName = "Aggro"});
1	cPowaAggro.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Aggro]};
1	cPowaAggro.CheckBoxes={["PowaPartyButton"]=1,
1						   ["PowaRaidButton"]=1,
1						   ["PowaGroupOrSelfButton"]=1,
1						   ["PowaInverseButton"]=1};
1	cPowaAggro.TooltipOptions = {r=1.0, g=0.4, b=0.2};
2	function cPowaAggro:AddEffect(i)
	
0		if not self.target 
0	   and not self.targetfriend 
0	   and not self.party
0	   and not self.raid 
0	   and not self.focus
0	   and not self.optunitn then --- self Aggro
0		table.insert(PowaAuras.AurasByType.Aggro, i);
		end
0		if self.party then --- party Aggro
0			table.insert(PowaAuras.AurasByType.PartyAggro, i);
		end
0		if self.raid then --- raid Aggro
0			table.insert(PowaAuras.AurasByType.RaidAggro, i);
		end
	end
	
2	function cPowaAggro:CheckUnit(unit)
		--PowaAuras:Message(unit," UnitThreatSituation=", UnitThreatSituation(unit));
0		return (UnitThreatSituation(unit) or -1)> 0;
	end	
2	function cPowaAggro:CheckIfShouldShow(giveReason)
0		if (self.icon == "") then
0			getglobal("PowaIconTexture"):SetTexture("Interface\\icons\\Ability_Warrior_EndlessRage");
0			self.icon = getglobal("PowaIconTexture"):GetTexture();
		end
		--PowaAuras:Debug("Check Aggro status");
0		return self:CheckAllUnits(giveReason);
	end
	
1	cPowaPvP = PowaClass(cPowaAura, {ValueName = "PvP"});
1	cPowaPvP.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.PvP],
1						 targetFriendText=PowaAuras.Text.nomCheckFriend, targetFriendTooltip=PowaAuras.Text.aideTargetFriend,};
1	cPowaPvP.CheckBoxes={["PowaTargetButton"]=1,
1						 ["PowaPartyButton"]=1,
1						 ["PowaGroupOrSelfButton"]=1,
1						 ["PowaRaidButton"]=1,};						
								  
1	cPowaPvP.TooltipOptions = {r=1.0, g=1.0, b=0.8};
	
2	function cPowaPvP:AddEffect(i)
0		if not self.target 
0	  and not self.targetfriend 
0	  and not self.party
0		and not self.raid 
0		and not self.focus
0	  and not self.optunitn then --- self pvp flag
0			table.insert(PowaAuras.AurasByType.PvP, i);
		end
0		if (self.target or self.targetfriend) then --- target flag
0			table.insert(PowaAuras.AurasByType.TargetPvP, i);
		end
0		if self.party then --- party pvp flagged
0			table.insert(PowaAuras.AurasByType.PartyPvP, i);
		end
0		if self.raid then --- raid pvp flagged
0			table.insert(PowaAuras.AurasByType.RaidPvP, i);
		end
	end
2	function cPowaPvP:CheckUnit(unit)
0		return UnitIsPVP(unit);
	end	
2	function cPowaPvP:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check PvP Flag");
0		return self:CheckAllUnits(giveReason);
	end
	
	
1	cPowaSpellAlert = PowaClass(cPowaAura, {AuraType = "SpellAlert", CanHaveInvertTime=true});
1	cPowaSpellAlert.OptionText={buffNameTooltip=PowaAuras.Text.aideSpells, 
1	                            exactTooltip=PowaAuras.Text.aideExact, 
1	                            typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.SpellAlert], 
1						        mineText=PowaAuras.Text.nomCanInterrupt, mineTooltip=PowaAuras.Text.aideCanInterrupt,
1						        targetFriendText=PowaAuras.Text.nomPlayerSpell, targetFriendTooltip=PowaAuras.Text.aidePlayerSpell,
1								};
1	cPowaSpellAlert.CheckBoxes={["PowaTargetButton"]=1,
1								["PowaFocusButton"]=1,
1								["PowaInverseButton"]=1,
1								["PowaIngoreCaseButton"]=1,
1								["PowaOwntexButton"]=1,
1								};
						
								  
1	cPowaSpellAlert.TooltipOptions = {r=0.4, g=0.4, b=1.0, showBuffName=true};
	
2	function cPowaSpellAlert:AddEffect(i)
0		if self.targetfriend then --- player
0			table.insert(PowaAuras.AurasByType.PlayerSpells, i);
		else
0			if not self.target and not self.focus then --- any enemy casts
0				table.insert(PowaAuras.AurasByType.Spells, i);
			end
0			if self.target then --- target casts
0				table.insert(PowaAuras.AurasByType.TargetSpells, i);
			end
0			if self.focus then --- focus casts
0				table.insert(PowaAuras.AurasByType.FocusSpells, i);
			end
		end
	end
	
2	function cPowaSpellAlert:CreateSpellFrame(endtime, spellicon)
0		local tempicon;
0		if (self.owntex == true) then
0			getglobal("PowaIconTexture"):SetTexture(spellicon);
0			tempicon = getglobal("PowaIconTexture"):GetTexture();
0			if (self.icon ~= tempicon) then
0				self.icon = tempicon;
			end
		end
0		if (self.icon == "") then
0		  getglobal("PowaIconTexture"):SetTexture(spellicon);
0		  self.icon = getglobal("PowaIconTexture"):GetTexture();
		end
	end
	
2	function cPowaSpellAlert:CheckUnit(unit)
0		if not UnitExists(unit) or UnitIsDead(unit) or (unit~="player" and not UnitCanAttack(unit, "player")) then
			--PowaAuras:UnitTestDebug(unit, " exists=", UnitExists(unit), " dead=", UnitIsDeadOrGhost(unit), " hostile=", UnitCanAttack(unit, "player"));
0			return false;
		end
0		local spellname, _, _, spellicon, _, endtime 
0		local spellname, _, _, spellicon, _, endtime, _, _, interrupt = UnitCastingInfo(unit);
0		if not spellname then
0			spellname, _, _, spellicon, _, endtime, _, interrupt = UnitChannelInfo(unit);
		end
0		if not spellname then -- not casting
			--PowaAuras:UnitTestDebug(unit, " is not casting");
0			return false;
		end
		
0		if (self.mine and not interrupt) then
0			return false;
		end
			
0		if self:MatchSpell(spellname, spellicon, self.buffname, true) then
0			if (self.Timer) then
0				self.Timer:SetDurationInfo(GetTime() + endtime/1000);
0				self:CheckTimerInvert();
0				if (self.ForceTimeInvert) then
0					return false;
				end
			end
0			self:CreateSpellFrame(endtime, spellicon);
0			return true;
		end
		
		--PowaAuras:UnitTestDebug(unit, " is casting ", spellname, " no match");
0		return false;
	end	
	
2	function cPowaSpellAlert:CheckIfShouldShow(giveReason)
		--PowaAuras:UnitTestDebug("Check for spell being cast ", self.buffname);
		--PowaAuras:ShowText("Check for spell being cast ", self.buffname);
		
		-- Check self target/focus first
0		if (self.target and self:CheckUnit("target")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonTargetCasting, self.buffname);
		end
0		if (self.focus and self:CheckUnit("focus")) then
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonFocusCasting, self.buffname);
		end	
	
0		if not self.target and not self.focus then
0			if (self.targetfriend) then
				--PowaAuras:ShowText("Check player");
0				if (self:CheckUnit("player")) then
0					if (not giveReason) then return true; end
0					return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonYouAreCasting, self.buffname);
				end	
0				if (not giveReason) then return false; end
0				return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonYouAreNotCasting, self.buffname);
			end
			--- Scan raid targets
0			local numrm = GetNumRaidMembers();
0			if numrm > 0 then
0				for i=1, numrm do
0					if (self:CheckUnit("raid"..i.."target")) then
0						if (not giveReason) then return true; end
0						return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonRaidTargetCasting, i, self.buffname);
					end
				end
			else
				-- Scan party targets
0				local numpm = GetNumPartyMembers();
0				if numpm > 0 then
0					for i=1, numpm do
0						if (self:CheckUnit("party"..i.."target")) then
0							if (not giveReason) then return true; end
0							return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonPartyTargetCasting, i, self.buffname);
						end
					end
				end
			end
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoCasting, self.buffname);
	end
2	function cPowaSpellAlert:ShowTimerDurationSlider()
0		return true;
	end
	
1	cPowaStance = PowaClass(cPowaAura, {AuraType = "Stance"});
1	cPowaStance.OptionText={typeText=PowaAuras.Text.AuraType[PowaAuras.BuffTypes.Stance]};
1	cPowaStance.ShowOptions={["PowaDropDownStance"]=1};
1	cPowaStance.CheckBoxes={["PowaInverseButton"]=1};
								  
1	cPowaStance.TooltipOptions = {r=1.0, g=0.6, b=0.2, showStance=true};
	
2	function cPowaStance:CheckIfShouldShow(giveReason)
		--PowaAuras:Debug("Check Stance");
0		local nStance = GetShapeshiftForm(false);
		--PowaAuras:UnitTestDebug("nStance = "..tostring(nStance).." / self.stance = "..tostring(self.stance));
		--PowaAuras:ShowText("nStance = "..tostring(nStance).." / self.stance = "..tostring(self.stance));
0		if (nStance == self.stance)then
0			if (self.icon == "" and nStance>0) then
0				local icon = GetShapeshiftFormInfo(nStance);
0				getglobal("PowaIconTexture"):SetTexture(icon);
0				self.icon = getglobal("PowaIconTexture"):GetTexture();
			end
0			if (not giveReason) then return true; end
0			return true, PowaAuras:InsertText(PowaAuras.Text.nomReasonStance, nStance, self.stance);
		end
0		if (not giveReason) then return false; end
0		return false, PowaAuras:InsertText(PowaAuras.Text.nomReasonNoStance, nStance, self.stance);
	end
	
	-- Concrete Classes
1	PowaAuras.AuraClasses = {
1		[PowaAuras.BuffTypes.Buff]=cPowaBuff,
1		[PowaAuras.BuffTypes.Debuff]=cPowaDebuff,
1		[PowaAuras.BuffTypes.TypeDebuff]=cPowaTypeDebuff,
1		[PowaAuras.BuffTypes.AoE]=cPowaAoE,
1		[PowaAuras.BuffTypes.Enchant]=cPowaEnchant,
1		[PowaAuras.BuffTypes.Combo]=cPowaCombo,
1		[PowaAuras.BuffTypes.ActionReady]=cPowaActionReady,
1		[PowaAuras.BuffTypes.Health]=cPowaHealth,
1		[PowaAuras.BuffTypes.Mana]=cPowaMana,
1		[PowaAuras.BuffTypes.EnergyRagePower]=cPowaEnergyRagePower,
1		[PowaAuras.BuffTypes.Aggro]=cPowaAggro,
1		[PowaAuras.BuffTypes.PvP]=cPowaPvP,
1		[PowaAuras.BuffTypes.SpellAlert]=cPowaSpellAlert,
1		[PowaAuras.BuffTypes.Stance]=cPowaStance,
1		[PowaAuras.BuffTypes.OwnSpell]=cPowaOwnSpell,
1		[PowaAuras.BuffTypes.StealableSpell]=cPowaStealableSpell,
1		[PowaAuras.BuffTypes.PurgeableSpell]=cPowaPurgeableSpell,
1	}
	
	-- Instance concrete class based on type
2	function PowaAuras:AuraFactory(auraType, id, base)
0		local class = self.AuraClasses[auraType];
0		if (class) then
			--self:Message("AuraFactory "..tostring(auraType).." id="..tostring(id).." class="..tostring(class));
0			if (base == nil) then
0				base = {};
			end
0			base.bufftype = auraType;
0			return class(id, base);
		end
0		self:Message("AuraFactory unknown "..tostring(auraType).." id="..tostring(id)); --OK
0		return nil;
	end

==============================================================================
..\PowerAurasBase.lua
==============================================================================
1	PowaAuras = {
1		Version = GetAddOnMetadata("PowerAuras", "Version");
		
1		CurrentAuraId = 1;
1		MaxAuras = 360;
1		NextCheck = 0.2; 
1		Tstep = 0.09765625;
1		NextDebugCheck = 0;
	
		-- Internal counters
1		DebugTimer = 0;
1		ChecksTimer = 0; 
1		ThrottleTimer = 0;
1		TimerUpdateThrottleTimer = 0;
	
1		VariablesLoaded = false;
1		SetupDone = false;
1		Initialising = true;
1		ModTest = false;
1		DebugCycle = false; 	
1		ResetTargetTimers = false;	
		
1		ActiveTalentGroup = GetActiveTalentGroup();
	
1		WeAreInCombat = false;
1		WeAreInRaid = false;
1		WeAreInParty = false;
1		WeAreMounted = false;
1		WeAreInVehicle = false;
1		WeAreAlive = true;
	
1		Pending = {}; --- Workaround for 'silent' cooldown end (no event fired)
1		Cascade = {}; -- Dependant auras that need checking
	
1		PowaStance = {[0] = "Humanoid"};
		
1		allowedOperators = {
1			["="] = true,
1			[">"] = true,
1			["<"] = true,
1			["!"] = true,
1			[">="] = true,
1			["<="] = true,
1			["-"] = true,
1		};
	
1		DefaultOperator = ">=";
	
1		MainOptionPage = 1;
1		CurrentAuraPage = 1;
		
1		maxtextures = 0;
	
1		MoveEffect = 0; -- 1 = copie / 2 = move
		
1		Auras = {};
1		SecondaryAuras = {};
1		Frames = {};
1		SecondaryFrames = {};
1		Textures = {};
1		SecondaryTextures = {};
1		TimerFrame = {};
1		StacksFrames = {};
		
1		Sound = {};
1		BeginAnimDisplay = {};
1		EndAnimDisplay = {};
1		Text = {};
1		Anim = {};
		
1		DebuffCatSpells = {};
		
1		AoeAuraAdded = {};
1		AoeAuraFaded = {};
1		AoeAuraTexture = {};
	
1		playerclass = "unknown",
		
1		Events = 
0		{
1			"ACTIONBAR_SLOT_CHANGED",
1			"ACTIONBAR_UPDATE_COOLDOWN",
1			"ACTIONBAR_UPDATE_USABLE",
1			"BAG_UPDATE_COOLDOWN",
1			"COMBAT_LOG_EVENT_UNFILTERED",
1			"PARTY_MEMBERS_CHANGED",
1			"PLAYER_ALIVE",
1			"PLAYER_DEAD",
1			"PLAYER_FOCUS_CHANGED",
1			"PLAYER_REGEN_DISABLED",
1			"PLAYER_REGEN_ENABLED",
1			"PLAYER_TALENT_UPDATE",
1			"PLAYER_TARGET_CHANGED",
1			"PLAYER_UNGHOST",
1			"PLAYER_UPDATE_RESTING",
1			"PLAYER_UPDATE_RESTING",
1			"RAID_ROSTER_UPDATE",
1			"SPELL_UPDATE_COOLDOWN",
1			"UNIT_AURA",
1			"UNIT_AURASTATE",
1			"UNIT_COMBO_POINTS",
1			"UNIT_ENERGY",
1			"UNIT_ENTERED_VEHICLE",
1			"UNIT_EXITED_VEHICLE",
1			"UNIT_FACTION",
1			"UNIT_HEALTH",
1			"UNIT_INVENTORY_CHANGED",
1			"UNIT_MANA",
1			"UNIT_MAXENERGY",
1			"UNIT_MAXHEALTH",
1			"UNIT_MAXMANA",
1			"UNIT_MAXRUNIC_POWER",
1			"UNIT_RAGE",
1			"UNIT_RUNIC_POWER",
1			"UNIT_SPELLCAST_CHANNEL_START",
1			"UNIT_SPELLCAST_CHANNEL_STOP",
1			"UNIT_SPELLCAST_CHANNEL_UPDATE",
1			"UNIT_SPELLCAST_DELAYED",
1			"UNIT_SPELLCAST_FAILED",
1			"UNIT_SPELLCAST_INTERRUPTED",
1			"UNIT_SPELLCAST_START",
1			"UNIT_SPELLCAST_STOP",
1			"UNIT_SPELLCAST_SUCCEEDED",
1			"UNIT_THREAT_SITUATION_UPDATE",
1			"UPDATE_SHAPESHIFT_FORM",
0			"UPDATE_SHAPESHIFT_FORMS";
1		};
		
1		DoCheck =
0		{
1			Buffs = false,
1			TargetBuffs = false,
1			PartyBuffs = false,
1			RaidBuffs = false,
1			GroupOrSelfBuffs = false,
1			UnitBuffs = false,
1			FocusBuffs = false,
	
1			Health = false,
1			TargetHealth = false,
1			PartyHealth = false,
1			RaidHealth = false,
1			FocusHealth = false,
1			NamedUnitHealth = false,
	
1			Mana = false,
1			TargetMana = false,
1			PartyMana = false,
1			RaidMana = false,
1			FocusMana = false,
1			NamedUnitMana = false,
	
1			RageEnergy = false,
1			TargetRageEnergy = false,
1			PartyRageEnergy = false,
1			RaidRageEnergy = false,
1			FocusRageEnergy = false,
1			UnitRageEnergy = false,
	
1			Others = false,
1			Combo = false,
1			Aoe = false,
	
1			Stance = false,
1			Actions = false,
1			Enchants = false,
	
1			All = false,
	
1			PvP = false,
1			PartyPvP = false,
1			RaidPvP = false,
1			TargetPvP = false,
	
1			Aggro = false,
1			PartyAggro = false,
1			RaidAggro = false,
	
1			Spells = false,
1			TargetSpells = false,
1			FocusSpells = false,
1			PlayerSpells = false,
			
1			OwnSpells = false,
1		};
	
1		BuffTypes =
0		{
1			Buff=1,
1			Debuff=2,
1			TypeDebuff=3,
1			AoE=4,
1			Enchant=5,
1			Combo=6,
1			ActionReady=7,
1			Health=8,
1			Mana=9,
1			EnergyRagePower=10,
1			Aggro=11,
1			PvP=12,
1			SpellAlert=13,
1			Stance=14,
1			OwnSpell=15,
1			StealableSpell=16,
1			PurgeableSpell=17,
1		};
	
		
1		AnimationBeginTypes =
0		{
1			None=0,
1			ZoomIn=1,
1			ZoomOut=2,
1			FadeIn=3,
1			TranslateLeft=4,
1			TranslateTopLeft=5,
1			TranslateTop=6,
1			TranslateTopRight=7,
1			TranslateRight=8,
1			TranslateBottomRight=9,
1			TranslateBottom=10,
1			TranslateBottomLeft=11,
1			Bounce=12,
1		};
		
1		AnimationEndTypes =
0		{
1			None=0,
1			GrowAndFade=1,
1			ShrinkAndFade=2,
1			Fade=3,
1			SpinAndFade=4,
1			SpinShrinkAndFade=5,
1		};
		
1		AnimationTypes =
0		{
1			Invisible=0,
1			Static=1,
1			Flashing=2,
1			Growing=3,
1			Pulse=4,
1			Bubble=5,
1			WaterDrop=6,
1			Electric=7,
1			Shrinking=8,
1			Flame=9,
1			Orbit=10,
1		};
		
			
1		AurasByType =
0		{
1			Buffs = {},
1			TargetBuffs = {},
1			PartyBuffs = {},
1			RaidBuffs = {},
1			GroupOrSelfBuffs = {},
1			UnitBuffs = {},
1			FocusBuffs = {},
			
1			Health = {},
1			TargetHealth = {},
1			FocusHealth = {},
1			PartyHealth = {},
1			RaidHealth = {},
1			NamedUnitHealth = {},
	
1			Mana = {},
1			TargetMana = {},
1			FocusMana = {},
1			PartyMana = {},
1			RaidMana = {},
1			NamedUnitMana = {},
	
1			RageEnergy = {},
1			TargetRageEnergy = {},
1			PartyRageEnergy = {},
1			RaidRageEnergy = {},
1			FocusRageEnergy = {},
1			UnitRageEnergy = {},
	
1			Combo = {},
1			Aoe = {},
	
1			Stance = {},
1			Actions = {},
1			Enchants = {},
	
1			PvP = {},
1			PartyPvP = {},
1			RaidPvP = {},
1			TargetPvP = {},
			
1			Aggro = {},
1			PartyAggro = {},
1			RaidAggro = {},
			
1			Spells = {},
1			TargetSpells = {},
1			FocusSpells = {},
1			PlayerSpells = {},
			
1			StealableSpells = {},
1			StealableTargetSpells = {},
1			StealableFocusSpells = {},
			
1			PurgeableSpells = {},
1			PurgeableTargetSpells = {},
1			PurgeableFocusSpells = {},
	
1			OwnSpells = {},
1		};
		
1		DebuffCatType =
0		{
1			CC = 1,
1			Silence = 2,
1			Snare = 3,
1			Root = 4,
1			Disarm = 5,
1			Stun = 6,
1			PvE = 10,
1		},
	
1		WowTextures = {
	
			-- auras types
1			[1] = "Spells\\AuraRune_B",
1			[2] = "Spells\\AuraRune256b",
1			[3] = "Spells\\Circle",
1			[4] = "Spells\\GENERICGLOW2B",
1			[5] = "Spells\\GenericGlow2b1",
1			[6] = "Spells\\ShockRingCrescent256",
1			[7] = "SPELLS\\AuraRune1",
1			[8] = "SPELLS\\AuraRune5Green",
1			[9] = "SPELLS\\AuraRune7",
1			[10] = "SPELLS\\AuraRune8",
1			[11] = "SPELLS\\AuraRune9",
1			[12] = "SPELLS\\AuraRune11",
1			[13] = "SPELLS\\AuraRune_A",
1			[14] = "SPELLS\\AuraRune_C",
1			[15] = "SPELLS\\AuraRune_D",
1			[16] = "SPELLS\\Holy_Rune1",
1			[17] = "SPELLS\\Rune1d_GLOWless",
1			[18] = "SPELLS\\Rune4blue",
1			[19] = "SPELLS\\RuneBC1",
1			[20] = "SPELLS\\RuneBC2",
1			[21] = "SPELLS\\RUNEFROST",
1			[22] = "Spells\\Holy_Rune_128",
1			[23] = "Spells\\Nature_Rune_128",
1			[24] = "SPELLS\\Death_Rune",
1			[25] = "SPELLS\\DemonRune6",
1			[26] = "SPELLS\\DemonRune7",
1			[27] = "Spells\\DemonRune5backup",
			-- icones types
1			[28] = "Particles\\Intellect128_outline",
1			[29] = "Spells\\Intellect_128",
1			[30] = "SPELLS\\GHOST1",
1			[31] = "Spells\\Aspect_Beast",
1			[32] = "Spells\\Aspect_Hawk",
1			[33] = "Spells\\Aspect_Wolf",
1			[34] = "Spells\\Aspect_Snake",
1			[35] = "Spells\\Aspect_Cheetah",
1			[36] = "Spells\\Aspect_Monkey",
1			[37] = "Spells\\Blobs",
1			[38] = "Spells\\Blobs2",
1			[39] = "Spells\\GradientCrescent2",
1			[40] = "Spells\\InnerFire_Rune_128",
1			[41] = "Spells\\RapidFire_Rune_128",
1			[42] = "Spells\\Protect_128",
1			[43] = "Spells\\Reticle_128",
1			[44] = "Spells\\Star2A",
1			[45] = "Spells\\Star4",
1			[46] = "Spells\\Strength_128",
1			[47] = "Particles\\STUNWHIRL",
1			[48] = "SPELLS\\BloodSplash1",
1			[49] = "SPELLS\\DarkSummon",
1			[50] = "SPELLS\\EndlessRage",
1			[51] = "SPELLS\\Rampage",
1			[52] = "SPELLS\\Eye",
1			[53] = "SPELLS\\Eyes",
1			[54] = "SPELLS\\Zap1b",
1		};
	
1		Fonts = {
			--- wow fonts
1			[1] = STANDARD_TEXT_FONT, --- "Fonts\\FRIZQT__.TTF"
1			[2] = "Fonts\\ARIALN.TTF",
1			[3] = "Fonts\\skurri.ttf",
1			[4] = "Fonts\\MORPHEUS.ttf",
			--- external fonts (free use or gpl'd, author in font file)
1			[5] = "Interface\\Addons\\PowerAuras\\Fonts\\All_Star_Resort.ttf",
1			[6] = "Interface\\Addons\\PowerAuras\\Fonts\\Army.ttf",
1			[7] = "Interface\\Addons\\PowerAuras\\Fonts\\Army_Condensed.ttf",
1			[8] = "Interface\\Addons\\PowerAuras\\Fonts\\Army_Expanded.ttf",
1			[9] = "Interface\\Addons\\PowerAuras\\Fonts\\Blazed.ttf",
1			[10] = "Interface\\Addons\\PowerAuras\\Fonts\\Blox2.ttf",
1			[11] = "Interface\\Addons\\PowerAuras\\Fonts\\CloisterBlack.ttf",
1			[12] = "Interface\\Addons\\PowerAuras\\Fonts\\Moonstar.ttf",
1			[13] = "Interface\\Addons\\PowerAuras\\Fonts\\Neon.ttf",
1			[14] = "Interface\\Addons\\PowerAuras\\Fonts\\Pulse_virgin.ttf",
1			[15] = "Interface\\Addons\\PowerAuras\\Fonts\\Punk_s_not_dead.ttf",
1			[16] = "Interface\\Addons\\PowerAuras\\Fonts\\whoa!.ttf",
1			[17] = "Interface\\Addons\\PowerAuras\\Fonts\\Hexagon.ttf",
1			[18] = "Interface\\Addons\\PowerAuras\\Fonts\\Starcraft_Normal.ttf",
1		};
		
1		TimerTextures = {
1			"Original",
1			"AccidentalPresidency",
1			"Crystal",
1			"Digital",
1			"Monofonto",
1			"OCR",
0			"WhiteRabbit",
1		};
	
		-- Colors used in messages
		--------------------------
1		Colors = {
1			["Blue"] = "|cff6666ff",
1			["Grey"] = "|cff999999",
1			["Green"] = "|cff66cc33",
1			["Red"] = "|cffff2020",
1			["Yellow"] = "|cffffff40",
1			["BGrey"] = "|c00D0D0D0",
1			["White"] = "|c00FFFFFF",
1			["Orange"] = "|cffff9930",
1			["Purple"] = "|cffB0A0ff",
1			["Gold"] = "|cffffff00",
1		};
		
1		SetColours = {
1			["PowaTargetButton"]       = {r=1.0, g=0.2, b=0.2},
1			["PowaTargetFriendButton"] = {r=0.2, g=1.0, b=0.2},
1			["PowaPartyButton"]        = {r=0.2, g=1.0, b=0.2},
1			["PowaGroupOrSelfButton"]  = {r=0.2, g=1.0, b=0.2},
1			["PowaFocusButton"]        = {r=0.2, g=1.0, b=0.2},
1			["PowaRaidButton"]         = {r=0.2, g=1.0, b=0.2},
1			["PowaOptunitnButton"]     = {r=0.2, g=1.0, b=0.2},
1		};
		
1		OptionCheckBoxes = {
1			"PowaTargetButton",
1			"PowaPartyButton",
1			"PowaGroupOrSelfButton",
1			"PowaRaidButton",
1			"PowaIngoreCaseButton",
1			"PowaOwntexButton",
1			"PowaInverseButton",
1			"PowaFocusButton",
1			"PowaOptunitnButton",
0			"PowaGroupAnyButton",
1		};
		
1		OptionTernary = {};
								  
1		OptionHideables = {
1			"PowaGroupAnyButton",
1			"PowaBarTooltipCheck",
1			"PowaBarThresholdSlider",
1			"PowaThresholdInvertButton",
1			"PowaBarBuffStacks",
0			"PowaDropDownStance",
1		};
	
1	};
	
1	PowaAuras.DebuffTypeSpellIds={
		-- Death Knight
1		[47481] = PowaAuras.DebuffCatType.Stun,		-- Gnaw (Ghoul)
1		[51209] = PowaAuras.DebuffCatType.CC,		-- Hungering Cold
1		[47476] = PowaAuras.DebuffCatType.Silence,	-- Strangulate
1		[45524] = PowaAuras.DebuffCatType.Snare,	-- Chains of Ice
1		[55666] = PowaAuras.DebuffCatType.Snare,	-- Desecration (no duration, lasts as long as you stand in it)
1		[58617] = PowaAuras.DebuffCatType.Snare,	-- Glyph of Heart Strike
1		[50436] = PowaAuras.DebuffCatType.Snare,	-- Icy Clutch (Chilblains)
		-- Druid
1		[5211]  = PowaAuras.DebuffCatType.Stun,		-- Bash (also Shaman Spirit Wolf ability)
1		[33786] = PowaAuras.DebuffCatType.CC,		-- Cyclone
1		[2637]  = PowaAuras.DebuffCatType.CC,		-- Hibernate (works against Druids in most forms and Shamans using Ghost Wolf)
1		[22570] = PowaAuras.DebuffCatType.Stun,		-- Maim
1		[9005]  = PowaAuras.DebuffCatType.Stun,		-- Pounce
1		[339]   = PowaAuras.DebuffCatType.Root,		-- Entangling Roots
1		[19675] = PowaAuras.DebuffCatType.Root,		-- Feral Charge Effect (immobilize with interrupt [spell lockout, not silence])
1		[58179] = PowaAuras.DebuffCatType.Snare,	-- Infected Wounds
1		[61391] = PowaAuras.DebuffCatType.Snare,	-- Typhoon
		-- Hunter
1		[3355]  = PowaAuras.DebuffCatType.CC,		-- Freezing Trap Effect
1		[24394] = PowaAuras.DebuffCatType.Stun,		-- Intimidation
1		[1513]  = PowaAuras.DebuffCatType.CC,		-- Scare Beast (works against Druids in most forms and Shamans using Ghost Wolf)
1		[19503] = PowaAuras.DebuffCatType.CC,		-- Scatter Shot
1		[19386] = PowaAuras.DebuffCatType.CC,		-- Wyvern Sting
1		[34490] = PowaAuras.DebuffCatType.Silence,	-- Silencing Shot
1		[53359] = PowaAuras.DebuffCatType.Disarm,	-- Chimera Shot - Scorpid
1		[19306] = PowaAuras.DebuffCatType.Root,		-- Counterattack
1		[19185] = PowaAuras.DebuffCatType.Root,		-- Entrapment
1		[35101] = PowaAuras.DebuffCatType.Snare,	-- Concussive Barrage
1		[5116]  = PowaAuras.DebuffCatType.Snare,	-- Concussive Shot
1		[13810] = PowaAuras.DebuffCatType.Snare,	-- Frost Trap Aura (no duration, lasts as long as you stand in it)
1		[61394] = PowaAuras.DebuffCatType.Snare,	-- Glyph of Freezing Trap
1		[2974]  = PowaAuras.DebuffCatType.Snare,	-- Wing Clip
		-- Hunter Pets
1		[50519] = PowaAuras.DebuffCatType.Stun,		-- Sonic Blast (Bat)
1		[50541] = PowaAuras.DebuffCatType.Disarm,	-- Snatch (Bird of Prey)
1		[54644] = PowaAuras.DebuffCatType.Snare,	-- Froststorm Breath (Chimera)
1		[50245] = PowaAuras.DebuffCatType.Root,		-- Pin (Crab)
1		[50271] = PowaAuras.DebuffCatType.Snare,	-- Tendon Rip (Hyena)
1		[50518] = PowaAuras.DebuffCatType.Stun,		-- Ravage (Ravager)
1		[54706] = PowaAuras.DebuffCatType.Root,		-- Venom Web Spray (Silithid)
1		[4167]  = PowaAuras.DebuffCatType.Root,		-- Web (Spider)
		-- Mage
1		[44572] = PowaAuras.DebuffCatType.Stun,		-- Deep Freeze
1		[31661] = PowaAuras.DebuffCatType.CC,		-- Dragon's Breath
1		[12355] = PowaAuras.DebuffCatType.Stun,		-- Impact
1		[118]   = PowaAuras.DebuffCatType.CC,		-- Polymorph
1		[18469] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Improved Counterspell
1		[64346] = PowaAuras.DebuffCatType.Disarm,	-- Fiery Payback
1		[33395] = PowaAuras.DebuffCatType.Root,		-- Freeze (Water Elemental)
1		[122]   = PowaAuras.DebuffCatType.Root,		-- Frost Nova
1		[11071] = PowaAuras.DebuffCatType.Root,		-- Frostbite
1		[55080] = PowaAuras.DebuffCatType.Root,		-- Shattered Barrier
1		[11113] = PowaAuras.DebuffCatType.Snare,	-- Blast Wave
1		[6136]  = PowaAuras.DebuffCatType.Snare,	-- Chilled (generic effect, used by lots of spells [looks weird on Improved Blizzard, might want to comment out])
1		[120]   = PowaAuras.DebuffCatType.Snare,	-- Cone of Cold
1		[116]   = PowaAuras.DebuffCatType.Snare,	-- Frostbolt
1		[47610] = PowaAuras.DebuffCatType.Snare,	-- Frostfire Bolt
1		[31589] = PowaAuras.DebuffCatType.Snare,	-- Slow
		-- Paladin
1		[853]   = PowaAuras.DebuffCatType.Stun,		-- Hammer of Justice
1		[2812]  = PowaAuras.DebuffCatType.Stun,		-- Holy Wrath (works against Warlocks using Metamorphasis and Death Knights using Lichborne)
1		[20066] = PowaAuras.DebuffCatType.CC,		-- Repentance
1		[20170] = PowaAuras.DebuffCatType.Stun,		-- Stun (Seal of Justice proc)
1		[10326] = PowaAuras.DebuffCatType.CC,		-- Turn Evil (works against Warlocks using Metamorphasis and Death Knights using Lichborne)
1		[63529] = PowaAuras.DebuffCatType.Silence,	-- Shield of the Templar
1		[20184] = PowaAuras.DebuffCatType.Snare,	-- Judgement of Justice (not really a snare, druids might want this though)
		-- Priest
1		[605]   = PowaAuras.DebuffCatType.CC,		-- Mind Control
1		[64044] = PowaAuras.DebuffCatType.CC,		-- Psychic Horror
1		[8122]  = PowaAuras.DebuffCatType.CC,		-- Psychic Scream
1		[9484]  = PowaAuras.DebuffCatType.CC,		-- Shackle Undead (works against Death Knights using Lichborne)
1		[15487] = PowaAuras.DebuffCatType.Silence,	-- Silence
		--[64058] = Disarm,	-- Psychic Horror (duplicate debuff names not allowed atm, need to figure out how to support this later)
1		[15407] = PowaAuras.DebuffCatType.Snare,	-- Mind Flay
		-- Rogue
1		[2094]  = PowaAuras.DebuffCatType.CC,		-- Blind
1		[1833]  = PowaAuras.DebuffCatType.Stun,		-- Cheap Shot
1		[1776]  = PowaAuras.DebuffCatType.CC,		-- Gouge
1		[408]   = PowaAuras.DebuffCatType.Stun,		-- Kidney Shot
1		[6770]  = PowaAuras.DebuffCatType.CC,		-- Sap
1		[1330]  = PowaAuras.DebuffCatType.Silence,	-- Garrote - Silence
1		[18425] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Improved Kick
1		[51722] = PowaAuras.DebuffCatType.Disarm,	-- Dismantle
1		[31125] = PowaAuras.DebuffCatType.Snare,	-- Blade Twisting
1		[3409]  = PowaAuras.DebuffCatType.Snare,	-- Crippling Poison
1		[26679] = PowaAuras.DebuffCatType.Snare,	-- Deadly Throw
		-- Shaman
1		[51880] = PowaAuras.DebuffCatType.Stun,		-- Improved Fire Nova Totem
1		[39796] = PowaAuras.DebuffCatType.Stun,		-- Stoneclaw Stun
1		[51514] = PowaAuras.DebuffCatType.CC,		-- Hex (although effectively a silence+disarm effect, it is conventionally thought of as a CC, plus you can trinket out of it)
1		[64695] = PowaAuras.DebuffCatType.Root,		-- Earthgrab (Storm, Earth and Fire)
1		[63685] = PowaAuras.DebuffCatType.Root,		-- Freeze (Frozen Power)
1		[3600]  = PowaAuras.DebuffCatType.Snare,	-- Earthbind (5 second duration per pulse, but will keep re-applying the debuff as long as you stand within the pulse radius)
1		[8056]  = PowaAuras.DebuffCatType.Snare,	-- Frost Shock
1		[8034]  = PowaAuras.DebuffCatType.Snare,	-- Frostbrand Attack
		-- Warlock
1		[710]   = PowaAuras.DebuffCatType.CC,		-- Banish (works against Warlocks using Metamorphasis and Druids using Tree Form)
1		[6789]  = PowaAuras.DebuffCatType.CC,		-- Death Coil
1		[5782]  = PowaAuras.DebuffCatType.CC,		-- Fear
1		[5484]  = PowaAuras.DebuffCatType.CC,		-- Howl of Terror
1		[6358]  = PowaAuras.DebuffCatType.CC,		-- Seduction (Succubus)
1		[30283] = PowaAuras.DebuffCatType.Stun,		-- Shadowfury
1		[24259] = PowaAuras.DebuffCatType.Silence,	-- Spell Lock (Felhunter)
1		[18118] = PowaAuras.DebuffCatType.Snare,	-- Aftermath
1		[18223] = PowaAuras.DebuffCatType.Snare,	-- Curse of Exhaustion
		-- Warrior
1		[7922]  = PowaAuras.DebuffCatType.Stun,		-- Charge Stun
1		[12809] = PowaAuras.DebuffCatType.Stun,		-- Concussion Blow
1		[20253] = PowaAuras.DebuffCatType.Stun,		-- Intercept (also Warlock Felguard ability)
1		[5246]  = PowaAuras.DebuffCatType.CC,		-- Intimidating Shout
1		[12798] = PowaAuras.DebuffCatType.Stun,		-- Revenge Stun
1		[46968] = PowaAuras.DebuffCatType.Stun,		-- Shockwave
1		[18498] = PowaAuras.DebuffCatType.Silence,	-- Silenced - Gag Order
1		[676]   = PowaAuras.DebuffCatType.Disarm,	-- Disarm
1		[58373] = PowaAuras.DebuffCatType.Root,		-- Glyph of Hamstring
1		[23694] = PowaAuras.DebuffCatType.Root,		-- Improved Hamstring
1		[1715]  = PowaAuras.DebuffCatType.Snare,	-- Hamstring
1		[12323] = PowaAuras.DebuffCatType.Snare,	-- Piercing Howl
		-- Other
1		[30217] = PowaAuras.DebuffCatType.Stun,		-- Adamantite Grenade
1		[30216] = PowaAuras.DebuffCatType.Stun,		-- Fel Iron Bomb
1		[20549] = PowaAuras.DebuffCatType.Stun,		-- War Stomp
1		[25046] = PowaAuras.DebuffCatType.Silence,	-- Arcane Torrent
1		[39965] = PowaAuras.DebuffCatType.Root,		-- Frost Grenade
1		[55536] = PowaAuras.DebuffCatType.Root,		-- Frostweave Net
1		[13099] = PowaAuras.DebuffCatType.Root,		-- Net-o-Matic
1		[29703] = PowaAuras.DebuffCatType.Snare,	-- Dazed
		-- PvE
1		[28169] = PowaAuras.DebuffCatType.PvE,		-- Mutating Injection (Grobbulus)
1		[28059] = PowaAuras.DebuffCatType.PvE,		-- Positive Charge (Thaddius)
1		[28084] = PowaAuras.DebuffCatType.PvE,		-- Negative Charge (Thaddius)
1		[27819] = PowaAuras.DebuffCatType.PvE,		-- Detonate Mana (Kel'Thuzad)
1		[63024] = PowaAuras.DebuffCatType.PvE,		-- Gravity Bomb (XT-002 Deconstructor)
1		[63018] = PowaAuras.DebuffCatType.PvE,		-- Light Bomb (XT-002 Deconstructor)
1		[62589] = PowaAuras.DebuffCatType.PvE,		-- Nature's Fury (Freya, via Ancient Conservator)
1		[63276] = PowaAuras.DebuffCatType.PvE,		-- Mark of the Faceless (General Vezax)
1	};
	
1	PowaAuras.Text = {};
	
2	function PowaAuras:UnitTestDebug(...)
	end
	
2	function PowaAuras:UnitTestInfo(...)
	end
	
2	function PowaAuras:Debug(...)
0		if (PowaMisc.debug == true) then
0			self:Message(...) --OK
		end
		--self:UnitTestDebug(...);
	end
	
2	function PowaAuras:Message(...)
0		args={...};
0		if (args==nil or #args==0) then
0			return;
		end
0		local Message = "";
0		for i=1, #args do
0			Message = Message..tostring(args[i]);
		end
0		DEFAULT_CHAT_FRAME:AddMessage(Message);
	end
	
	-- Use this for temp debug messages
2	function PowaAuras:ShowText(...)
0		self:Message(...); -- OK
	end
	
	-- Use this for real messages instead of ShowText
2	function PowaAuras:DisplayText(...)
0		self:Message(...);
	end
	
	----------------------------------------------------------------------------------------
	-- This function will print a Message to the GUI screen (not the chat window) then fade.
	----------------------------------------------------------------------------------------
2	function PowaAuras:Error( msg, holdtime )
0		if (holdtime==nil) then
0			holdtime = UIERRORS_HOLD_TIME;
		end
0		UIErrorsFrame:AddMessage(msg, 0.75, 0.75, 1.0, 1.0, holdtime);
	end
	
	
2	function PowaAuras:ReverseTable(t)
0		if (type(t)~="table") then return nil; end
0		local newTable = {};
0		for k,v in pairs(t) do
0			newTable[v] = k;
		end
0		return newTable;
	end
	
2	function PowaAuras:CopyTable(t, lookup_table, original)
1		if (type(t)~="table") then
0			return t;
		end
		
1		local copy;
1		if (original==nil) then
1			copy = {};
		else
0			copy = original;
		end
11		for i,v in pairs(t) do
10			if (type(v)~="function") then
10				if (type(v)~="table") then
10					copy[i] = v;
				else
0					lookup_table = lookup_table or {};
0					lookup_table[t] = copy;
0					if lookup_table[v] then
0						copy[i] = lookup_table[v]; -- we already copied this table. reuse the copy.
					else
0						copy[i] = self:CopyTable(v, lookup_table); -- not yet copied. copy it.
					end
				end
			end
		end
1		return copy
	
	end
	
2	function PowaAuras:MergeTables(desTable, sourceTable)
14		if (not sourceTable or type(sourceTable)~="table") then
0			return;
		end
14		if (not desTable or type(desTable)~="table") then
0			desTable = sourceTable;
0			return;
		end
		
355		for i,v in pairs(sourceTable) do
341			if (type(v)~="function") then
341				if (type(v)~="table") then
328					desTable[i] = v;
				else
13					desTable[i] = {};
13					self:MergeTables(desTable[i], v);
				end
			end
		end
	
	end
	
2	function PowaAuras:InsertText(text, ...)
0		args={...};
0		if (args==nil or #args==0) then
0			return text;
		end
0		for k, v in pairs(args) do
0			text = string.gsub(text, "$"..k, tostring(v));
		end
0		return text;
	end
	
2	function PowaAuras:MatchString(textToSearch, textToFind, ingoreCase)
0		if (textToSearch==nil) then
0			return textToFind==nil;
		end
0		if (ingoreCase) then
0			textToFind = string.upper(textToFind);
0			textToSearch = string.upper(textToSearch);
		end
0		return string.find(textToSearch, textToFind, 1, true)
	end
		
	-- PowaAura Classes
	-- class.lua
	-- Compatible with Lua 5.1 (not 5.0).
1	function PowaClass(base,ctor)
22		local c = {}     -- a new class instance
22		if not ctor and type(base) == 'function' then
3	      ctor = base;
3	      base = nil;
19		elseif type(base) == 'table' then
	   -- our new class is a shallow copy of the base class!
733	      for i,v in pairs(base) do
714	          c[i] = v;
	      end
19		  if (type(ctor)=="table") then
71			for i,v in pairs(ctor) do
53				c[i] = v;
			end
18			ctor = nil;
		  end
19	      c._base = base;
		end
		-- the class will be the metatable for all its objects,
		-- and they will look up their methods in it.
22		c.__index = c
	
		-- expose a ctor which can be called by <classname>(<args>)
22		local mt = {}
0		mt.__call = function(class_tbl,...)
0			local obj = {}
0			setmetatable(obj,c)
0			if ctor then
				--PowaAuras:ShowText("Call constructor "..tostring(ctor));
0				ctor(obj,...)
			end 
0			return obj
		end
	    
22	    if ctor then
3			c.init = ctor;
	    else 
19	 		if base and base.init then
19				c.init = base.init;
19				ctor = base.init;
			end
	    end
	 
0		c.is_a = function(self,klass)
0	      local m = getmetatable(self)
0	      while m do 
0	         if m == klass then return true end
0	         m = m._base
	      end
0	      return false
	    end
22	  setmetatable(c,mt)
22	  return c
	end
	

==============================================================================
..\PowerAurasDecoratorClasses.lua
==============================================================================
	
2	cPowaStacks = PowaClass(function(stacker, aura, base)
0		stacker.enabled = false;
0		stacker.x = 0;
0		stacker.y = 0;
0		stacker.a = 1.0;
0		stacker.h = 1.0;
0		stacker.Transparent = false;
0		stacker.HideLeadingZeros = false;
0		stacker.UpdatePing = false;
0		stacker.Texture = "Default";
		--PowaAuras:ShowText("cPowaTimer");
0		if (base) then
0			for k, v in pairs (stacker) do
				--PowaAuras:ShowText("  base."..tostring(k).."="..tostring(base[k]));
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					if (base[k] ~= nil) then
0						stacker[k] = base[k];
					end
				end
			end
		end
0		stacker.Showing = false;
0		stacker.id = aura.id;
2	end);
	
2	function cPowaStacks:GetTexture()
0		local texture = PowaMisc.DefaultStacksTexture;
0		if (self.Texture ~= "Default") then
0			texture = self.Texture;
		end
0		local postfix = "";
0		if (self.Transparent) then
0			postfix = "Transparent";
		end
0		return "Interface\\Addons\\PowerAuras\\TimerTextures\\"..texture.."\\Timers"..postfix..".tga";
	end
	
2	function cPowaStacks:ShowValue(aura, newvalue)
0		local frame = PowaAuras.StacksFrames[self.id];
0		if (aura.texmode == 1) then
0			frame.texture:SetBlendMode("ADD");
		else
0			frame.texture:SetBlendMode("DISABLE");
		end
0		local auraTexture = PowaAuras.Textures[self.id];
0		if (auraTexture) then
0			if auraTexture:GetObjectType() == "Texture" then
0				frame.texture:SetVertexColor(auraTexture:GetVertexColor());
0			elseif auraTexture:GetObjectType() == "FontString" then
0				frame.texture:SetVertexColor(auraTexture:GetTextColor());
			end
		else
0			frame.texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
	
		--PowaAuras:ShowText("newvalue=", newvalue);
		
0		local deci = math.floor(newvalue / 10);
0		local uni  = math.floor(newvalue - (deci*10));
		--PowaAuras:ShowText("Show stacks: ",deci, " ", uni);
0		local tStep = PowaAuras.Tstep;
0		if (deci==0) then
0			frame.texture:SetTexCoord(tStep , tStep * 1.5, tStep * uni, tStep * (uni+1));
		else
0			frame.texture:SetTexCoord(tStep * uni, tStep * (uni+1), tStep * deci, tStep * (deci+1));
		end
0		if (not frame:IsVisible()) then
			--PowaAuras:Message("Show Stacks Frame for ", self.id);
0			frame:Show(); 
		end
0		if (self.UpdatePing and frame.PingAnimationGroup) then
			--PowaAuras:ShowText("Stacks UpdatePing");
0			frame.PingAnimationGroup:Play();
		end
	
	end
	
2	function cPowaStacks:SetStackCount(count)
0		PowaAuras:UnitTestInfo("SetStackCount ",self.id);
0		local aura = PowaAuras.Auras[self.id];
0		if (aura == nil) then
0			PowaAuras:UnitTestInfo("Stacks aura missing");
0			return;
		end
0		if (self.enabled==false) then 
0			PowaAuras:UnitTestInfo("Stacks disabled");
0			return;
		end
0		if (not count or count==0) then
0			local frame = PowaAuras.StacksFrames[self.id];
0			if (frame and frame:IsVisible()) then
0				frame:Hide();
			end
0			self.Showing = false;
0			return;
		end
0		if (self.lastShownValue==count and self.Showing) then
0			return;
		end
0		self.lastShownValue=count;
0		PowaAuras:CreateStacksFrameIfMissing(self.id, self.UpdatePing);
0		self:ShowValue(aura, count);
0		self.Showing = true;
	end
	
2	function cPowaStacks:Hide()
		--PowaAuras:ShowText("Hide Stacks Frame for ", self.id, " ", self.Showing, " ", PowaAuras.StacksFrames[self.id]);
0		if (not self.Showing) then return; end
0		if (PowaAuras.StacksFrames[self.id]) then
0			PowaAuras.StacksFrames[self.id]:Hide();
		end
0		self.Showing = false;
	end
	
2	function cPowaStacks:Delete()
0		self:Hide();
0		if PowaAuras.StacksFrames[self.id] then
0			PowaAuras.StacksFrames[self.id] = nil;
		end
	end
	
	------- Timer -------
	
2	cPowaTimer = PowaClass(function(timer, aura, base)
0		timer.enabled = false;
0		timer.x = 0;
0		timer.y = 0;
0		timer.a = 1.0;
0		timer.h = 1.0;
0		timer.cents = true;
0		timer.dual = false;
0		timer.Transparent = false;
0		timer.HideLeadingZeros = false;
0		timer.UpdatePing = false;
0		timer.InvertAuraBelow = 0;
0		timer.Texture = "Default";
		--PowaAuras:ShowText("cPowaTimer");
0		if (base) then
0			for k, v in pairs (timer) do
				--PowaAuras:Message("  base."..tostring(k).."="..tostring(base[k]));
0				local varType = type(v);
0				if (varType == "string" or varType == "boolean" or varType == "number") then
0					if (base[k] ~= nil) then
0						timer[k] = base[k];
					end
				end
			end
		end
0		timer.Showing = false;
		--PowaAuras:Message("CTR Timer id=", aura.id);
		--PowaAuras:Message("CooldownAura=", aura.CooldownAura);
		--PowaAuras:Message("inverse=", aura.inverse);
		--PowaAuras:Message("CanHaveTimer=", aura.CanHaveTimer);
		--PowaAuras:Message("CanHaveTimerOnInverse=", aura.CanHaveTimerOnInverse);
0		timer.ShowOnAuraHide = ((aura.CooldownAura and (not aura.inverse and aura.CanHaveTimer)) or (not aura.CooldownAura and (aura.inverse and aura.CanHaveTimerOnInverse)));
		--PowaAuras:Message("ShowOnAuraHide=", timer.ShowOnAuraHide);
	 
0		timer.id = aura.id;
		--for k,v in pairs (timer) do
		--	PowaAuras:ShowText("  "..tostring(k).."="..tostring(v));
		--end
2	end);
	
2	function cPowaTimer:GetTexture()
0		local texture = PowaMisc.DefaultTimerTexture;
0		if (self.Texture ~= "Default") then
0			texture = self.Texture;
		end
0		local postfix = "";
0		if (self.Transparent) then
0			postfix = "Transparent";
		end
0	    texture = "Interface\\Addons\\PowerAuras\\TimerTextures\\"..texture.."\\Timers"..postfix..".tga";
		--PowaAuras:ShowText("Timer texture: ", texture);
0		return texture;
	end
	--- ------------------------------------------------------------------------------------------------- TIMERS
2	function cPowaTimer:Update(elapsed)
0		PowaAuras:UnitTestInfo("Timer.Update ",self.id);
		--PowaAuras:ShowText("Timer.Update ",self.id);
0		local aura = PowaAuras.Auras[self.id];
0		if (aura == nil) then
0			PowaAuras:UnitTestInfo("Timer aura missing");
			--PowaAuras:ShowText("Timer aura missing");
0			return;
		end
0		if (self.enabled==false and self.InvertAuraBelow==0) then
0			PowaAuras:UnitTestInfo("Timer disabled");
			--PowaAuras:ShowText("Timer disabled");
0			return;
		end
	
0		local newvalue = 0;
		--- Determine the value to display in the timer
0		if (PowaAuras.ModTest) then
0			newvalue = random(0,99) + (random(0, 99) / 100);
		
0		elseif (aura.timerduration > 0) then--- if a user defined timer is active for the aura override the rest
0			if (aura.target or aura.targetfriend) and (PowaAuras.ResetTargetTimers == true) then
0				self.CustomDuration = aura.timerduration;
			else
0				self.CustomDuration = math.max(self.CustomDuration - elapsed, 0);
			end	
0			newvalue = self.CustomDuration;
		else
0			if (self.DurationInfo and self.DurationInfo > 0) then
0				newvalue = math.max(self.DurationInfo - GetTime(), 0);
			end
0			aura:CheckTimerInvert();
		end
	
0		if (PowaAuras.DebugCycle) then
0			PowaAuras:Message("newvalue=",newvalue); --OK
		end
	
0		PowaAuras:UnitTestInfo("Timer newvalue", newvalue);
		--PowaAuras:ShowText("Timer newvalue=", newvalue, " elapsed=", elapsed);
	
		
0		if (self.enabled==false or (aura.ForceTimeInvert and aura.InvertTimeHides)) then
0			PowaAuras:UnitTestInfo("Timer disabled");
			--PowaAuras:ShowText("Timer disabled");
0			return;
		end
		
			
0		if (newvalue and newvalue > 0) then --- Time has value to display
	
0			PowaAuras:CreateTimerFrameIfMissing(self.id, self.UpdatePing);
		
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("cents=",self.cents); --OK
			end
0			local incLarge = 0;
0			if (self.cents) then
0				local small;
0				if (newvalue > 60.00) then 
0					small = math.fmod(newvalue,60); 
				else
0					small = (newvalue - math.floor(newvalue)) * 100;
				end
0				if (PowaMisc.TimerRoundUp) then
0					small = math.ceil(small);
				end
				
				--if (small==60) then
				--	incLarge=1;
				--	small = 0;
				--end
	
0				if (PowaAuras.DebugCycle) then
0					PowaAuras:Message("small=",small); --OK
				end
0				if (self.lastShownSmall~=small) then
0					self:ShowValue(aura, 2, small);
0					self.lastShownSmall=small;
				end
			end	
	
0			local large = newvalue;
0			if (newvalue > 60.00) then 
0				large = newvalue / 60;		
			end
0			large = math.min (99.00, large);
0			if ((not self.cents) and PowaMisc.TimerRoundUp) then
0				large = math.ceil(large);
			else
0				large = math.floor(large);		
			end
0			large = large + incLarge;
	
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("large=",large); --OK
			end
0			if (self.lastShownLarge~=large) then
0				self:ShowValue(aura, 1, large);
0				self.lastShownLarge=large;
			end
	
0			self.Showing = true;		
	
0		elseif (self.Showing) then
0			if (PowaAuras.DebugCycle) then
0				PowaAuras:Message("HideTimerFrames"); --OK
			end
0			self:Hide();
0			PowaAuras:TestThisEffect(self.id);
		end			
		
	end
	
2	function cPowaTimer:SetDurationInfo(endtime)
0		if (self.DurationInfo ~= endtime) then
0			self.DurationInfo = endtime;
			--PowaAuras:ShowText("Timer refresh ", self.id, " DurationInfo", self.DurationInfo, " time=", self.DurationInfo - GetTime());
0			if (PowaAuras.TimerFrame[self.id]) then
0				for frameIndex = 1,2 do
0					local timerFrame = PowaAuras.TimerFrame[self.id][frameIndex];
0					if (timerFrame and self.UpdatePing and timerFrame.PingAnimationGroup) then
						--PowaAuras:ShowText("Timer UpdatePing");
0						timerFrame.PingAnimationGroup:Play();
					end
				end
			end
		end
	end
	
2	function cPowaTimer:ExtractDigits(displayValue)
0		local deci = math.floor(displayValue / 10);
0		local uni = math.floor(displayValue - (deci*10))
0		return deci, uni;
	end
	
2	function cPowaTimer:ShowValue(aura, frameIndex, displayValue)
0		local timerFrame = PowaAuras.TimerFrame[self.id][frameIndex];
0		if (aura.texmode == 1) then
0			timerFrame.texture:SetBlendMode("ADD");
		else
0			timerFrame.texture:SetBlendMode("DISABLE");
		end
0		local auraTexture = PowaAuras.Textures[self.id];
0		if (auraTexture) then
0			if auraTexture:GetObjectType() == "Texture" then
0				timerFrame.texture:SetVertexColor(auraTexture:GetVertexColor());
0			elseif auraTexture:GetObjectType() == "FontString" then
0				timerFrame.texture:SetVertexColor(auraTexture:GetTextColor());
			end
		else
0			timerFrame.texture:SetVertexColor(aura.r,aura.g,aura.b);
		end
		
0		local deci, uni = self:ExtractDigits(displayValue);
		--PowaAuras:ShowText("Show timer: ",deci, " ", uni, " ", PowaAuras.Auras[k].Timer.HideLeadingZeros);
0		local tStep = PowaAuras.Tstep;
0		if (deci==0 and self.HideLeadingZeros) then
0			timerFrame.texture:SetTexCoord(tStep , tStep * 1.5, tStep * uni, tStep * (uni+1));
		else
0			timerFrame.texture:SetTexCoord(tStep * uni, tStep * (uni+1), tStep * deci, tStep * (deci+1));
		end
0		if (not timerFrame:IsVisible()) then
			--PowaAuras:ShowText("Show timer frame id=",self.id, " index=", frameIndex);
0			timerFrame:Show(); -- Timer Frame
		end
		--PowaAuras:ShowText("Show #3 ", k, " ", i, " ", j, " ", seconds);
		
		--PowaAuras:ShowText("deci=", deci, " uni=", uni);
	end
	
	
2	function cPowaTimer:HideFrame(i)
0		if (PowaAuras.TimerFrame[self.id] and PowaAuras.TimerFrame[self.id][i]) then
			--PowaAuras:ShowText("Hide Timer Frame ", i," for ", self.id);
0			PowaAuras.TimerFrame[self.id][i]:Hide();
		end
	end
	
2	function cPowaTimer:Hide()
0		if (not self.Showing) then return; end
0		if PowaAuras.TimerFrame[self.id] then
0			self:HideFrame(1);
0			self:HideFrame(2);
		end
0		self.Showing = false;
		--PowaAuras:ShowText("Hide timer frame");
	end
	
2	function cPowaTimer:Delete()
0		self:Hide();
0		if PowaAuras.TimerFrame[self.id] then
0			PowaAuras.TimerFrame[self.id][1] = nil;
0			PowaAuras.TimerFrame[self.id][2] = nil;
0			PowaAuras.TimerFrame[self.id] = nil;
		end
	end

==============================================================================
..\PowerAurasDump.lua
==============================================================================
	--[[
	
0	powa_dump.lua
0	Power Auras debug dump function
	
	--]]
	
	----------------------------------------------
	-- Dump eveything we can think of into PowaState
	----------------------------------------------
2	function PowaAuras:Dump()
	
		--self:Dump_Safe();
		
0		local Status, Err = pcall(PowaAuras.Dump_Safe, self);
	
0		if (not Status) then
0			self:Message(Err); -- OK
0			self:DisplayText(self.Colors.Red, "Error in dump protected call: ", Err);
		else
0			self:DisplayText(self.Colors.Green, "Dump OK");	
		end
	end
	
2	function PowaAuras:Dump_Safe()
0		PowaState = {};
		-- Build
0		if (GetBuildInfo~=nil) then
0			local version, buildnum, builddate = GetBuildInfo();
0			PowaState["BuildInfo"] = {Version=version, BuildNum=buildnum, BuildDate=builddate};
		end
		-- Time
0		PowaState["Time"] = GetTime();
		-- Locale
0		PowaState["Locale"] = GetLocale();
		-- Zone
0		PowaState["Zone"] = GetRealZoneText();
		-- Realm
0		PowaState["Realm"] = GetRealmName();
		-- CurrentMapZone
0		PowaState["CurrentMapZone"] = GetCurrentMapZone();
		-- CurrentMapContinent
0		PowaState["CurrentMapContinent"] = GetCurrentMapContinent();
		--ActiveTalentGroup
0		PowaState["ActiveTalentGroup"] = GetActiveTalentGroup()
		-- IsInInstance
0		PowaState["IsInInstance"] = IsInInstance();
		-- IsMounted
0		PowaState["IsMounted"] = IsMounted();
		-- IsFlying
0		PowaState["IsFlying"] = IsFlying();
		-- IsResting
0		PowaState["IsResting"] = IsResting();
		-- Player
0		PowaState["player"] = self:GetUnitInfo("player");
		-- PlayerPet
0		PowaState["playerpet"] = self:GetUnitInfo("playerpet");
		-- Target
0		PowaState["target"] = self:GetUnitInfo("target");
		-- TargetPet
0		PowaState["targetpet"] = self:GetUnitInfo("targetpet");
		-- TargetTarget
0		PowaState["targettarget"] = self:GetUnitInfo("targettarget");
		--ComboPoints
0		PowaState["ComboPoints"] = {player=GetComboPoints("player"), vehicle=GetComboPoints("vehicle")};
		-- Weapon Enchant
0		local hasMainHandEnchant, mainHandExpiration, mainHandCharges, hasOffHandEnchant, offHandExpiration, offHandCharges = GetWeaponEnchantInfo();
0		PowaState.WeaponEnchant = {hasMainHandEnchant=hasMainHandEnchant, mainHandExpiration=mainHandExpiration, mainHandCharges=mainHandCharges, hasOffHandEnchant=hasOffHandEnchant, offHandExpiration=offHandExpiration, offHandCharges=offHandCharges};
		-- Stances
0		local numforms = GetNumShapeshiftForms();
0		PowaState["NumShapeshiftForms"] =  numforms;
0		if (numforms>0) then
0			PowaState["ShapeshiftFormInfo"] = {};
0			for iForm=1, numforms do
0				local icon, name, active, castable = GetShapeshiftFormInfo(iForm);
0				PowaState["ShapeshiftFormInfo"][iForm] = {Icon=icon, Name=name, Active=active, Castable=castable};
			end
		end
0		PowaState["ShapeshiftForm"] =  GetShapeshiftForm(false);
	
		
		-- CTRA MainTanks
0		if (CT_RA_MainTanks~=nil) then
0			PowaState.CT_RA_MainTanks = {};
0			for Index, MTName in pairs(CT_RA_MainTanks) do
0				PowaState.CT_RA_MainTanks[Index] = MTName;
			end
		end
		-- RDX MainTanks
0		if (RDX~=nil and RDXM.Assists~=nil and RDXM.Assists.cfg~=nil and RDXM.Assists.cfg.mtarray~=nil) then
0			PowaState.RDX_MainTanks = {};
0			for Index, MTName in pairs(RDXM.Assists.cfg.mtarray) do
0				PowaState.RDX_MainTanks[Index] = MTName;
			end
		end
		-- oRA MainTanks
0		if (oRA_MainTank~=nil and oRA_MainTank.MainTankTable~=nil) then
0			PowaState.oRA_MainTanks = {};
0			for Index, MTName in pairs(oRA_MainTank.MainTankTable) do
0				PowaState.oRA_MainTanks[Index] = MTName;
			end
		end	
	
		-- Slots
0		PowaState["Inventory"] = {};
0		PowaState.Inventory["Slot"] = {};
0		PowaState.Inventory["ItemLink"] = {};
0		PowaState.Inventory["ItemCooldown"] = {};
0		self:GetSlotInfo("HeadSlot");
0		self:GetSlotInfo("NeckSlot");
0		self:GetSlotInfo("ShoulderSlot");
0		self:GetSlotInfo("BackSlot");
0		self:GetSlotInfo("ChestSlot");
0		self:GetSlotInfo("ShirtSlot");
0		self:GetSlotInfo("TabardSlot");
0		self:GetSlotInfo("WristSlot");
0		self:GetSlotInfo("HandsSlot");
0		self:GetSlotInfo("WaistSlot");
0		self:GetSlotInfo("LegsSlot");
0		self:GetSlotInfo("FeetSlot");
0		self:GetSlotInfo("Finger0Slot");
0		self:GetSlotInfo("Finger1Slot");
0		self:GetSlotInfo("Trinket0Slot");
0		self:GetSlotInfo("Trinket1Slot");
0		self:GetSlotInfo("MainHandSlot");
0		self:GetSlotInfo("SecondaryHandSlot");
0		self:GetSlotInfo("RangedSlot");
0		self:GetSlotInfo("AmmoSlot");
0		self:GetSlotInfo("Bag0Slot");
0		self:GetSlotInfo("Bag1Slot");
0		self:GetSlotInfo("Bag2Slot");
0		self:GetSlotInfo("Bag3Slot");
	
		-- SpellTabs
0		PowaState.SpellTabs = {};
0		for i = 1, MAX_SKILLLINE_TABS do
0			local Name, Texture, Offset, Count = GetSpellTabInfo(i);
0			PowaState.SpellTabs[i] = {Name=Name, Texture=Texture, Offset=Offset, Count=Count};
		end
		-- Spells
0		PowaState.SpellBook = {};
0		local i = 1;
0		while (true) do
0			local spellName, spellRank = GetSpellName(i, BOOKTYPE_SPELL);
0			local Texture = GetSpellTexture(i, BOOKTYPE_SPELL);
0			if (spellName==nil or Texture==nil) then
0				do break end
			end
0			PowaState.SpellBook[i] = {Name=spellName, Rank=spellRank, Texture=Texture};
0			local StartTime, Duration, Enabled = GetSpellCooldown(i, BOOKTYPE_SPELL);
0			PowaState.SpellBook[i]["Cooldown"] = {StartTime=StartTime, Duration=Duration, Enabled=Enabled};
0			PowaState.SpellBook[i]["UsableSpell"] = IsUsableSpell(spellName);
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetSpell(i, BOOKTYPE_SPELL);
0			self:CaptureTooltip(PowaState.SpellBook[i]);
0			PowaState.SpellBook[spellName] = PowaState.SpellBook[i];
0			i = i + 1;
		end
		-- Debuff Spells
0		PowaState.SpellInfo = {}
0		for k in pairs(PowaAuras.DebuffTypeSpellIds) do
0			local name, rank, icon, cost, isFunnel, powerType, castTime, minRange, maxRange = GetSpellInfo(k);
0			if spellName then
0				PowaState.SpellInfo[k] = {Name=name, Rank=rank, Icon=icon, Cost=cost, IsFunnel=isFunnel, PowerType=powerType, CastTime=castTime, MinRange=minRange, MaxRange=maxRange};
			end
		end
		-- SpellIds used in auras
0		for _, aura in pairs(PowaAuras.Auras) do
0			for pword in string.gmatch(aura.buffname, "[^/]+") do
0				local _, _,spellId = string.find(aura.buffname, "%[(%d+)%]")
0				if (spellId) then		
0					local name, rank, icon, cost, isFunnel, powerType, castTime, minRange, maxRange = GetSpellInfo(tonumber(spellId));
0					if spellName then
0						PowaState.SpellInfo[k] = {Name=name, Rank=rank, Icon=icon, Cost=cost, IsFunnel=isFunnel, PowerType=powerType, CastTime=castTime, MinRange=minRange, MaxRange=maxRange};
					end
				end
			end
		end
	
	
		-- BonusScan
0		if (BonusScanner~=nil and
0			BonusScanner.active==1 and
0			BonusScanner.bonuses~=nil and
0			BonusScanner.bonuses.HEAL~=nil) then
0			PowaState.BonusScanner = {Active=BonusScanner.active, Heal=BonusScanner.bonuses.HEAL};
		end
		-- ActionSlots
0		PowaState.ActionSlots = {};
0		for Id = 1, 120 do
0			local Text = GetActionText(Id);
0			local cdStart, cdDuration, cdEnabled = GetActionCooldown(Id);
0			PowaState.ActionSlots[Id] = {HasAction=HasAction(Id),
0										ActionText=Text,
0										InRange=IsActionInRange(Id),
0										HasRange=ActionHasRange(Id),
0										CurrentAction=IsCurrentAction(Id),
0										AutoRepeatAction=IsAutoRepeatAction(Id),
0										UsableAction=IsUsableAction(Id),
0										AttackAction=IsAttackAction(Id),
0										Texture=GetActionTexture(Id),
0										Count=GetActionCount(Id),
0										Cooldown={Start=cdStart, Duration=cdDuration, Enabled=cdEnabled},
0										};
0			if (Text==nil and HasAction(Id)) then
0				self:ResetTooltip();
0				PowaAuras_Tooltip:SetAction(Id);
0				self:CaptureTooltip(PowaState.ActionSlots[Id]);
			end
		end
		--Bags
0		PowaState.Bags = {};
0		for bag = 0, NUM_BAG_FRAMES do
0			PowaState.Bags[bag] = {Slots=GetContainerNumSlots(bag)};
0			for slot = 1, GetContainerNumSlots(bag) do
0				local itemName = GetContainerItemLink(bag, slot);
0				if itemName then
0					local texture, count = GetContainerItemInfo(bag, slot);
0					PowaState.Bags[bag][slot] = {Name=itemName, Texture=texture, Count=count};
				end
			end
		end
		--Macros
0		PowaState.Macros = {};
0		for Id = 1, 36 do
0			local Name, IconTexture, Body = GetMacroInfo(Id);
0			PowaState.Macros[Id] = {Name=Name, Texture=IconTexture, Body=self:Escape(Body)};
		end
		--Groups
0		PowaState["RaidLeader"] = IsRaidLeader();
0		PowaState["PartyLeader"] = IsPartyLeader();
0		PowaState["PartyLeaderIndex"] = GetPartyLeaderIndex();
		
0		local numpm = GetNumPartyMembers();
0		local numrm = GetNumRaidMembers();
		--Raid
0		if (numrm>0) then
0			PowaState.Raid = {Count=numrm};
0			PowaState.Raid.Roster = {};
0			for Id = 1, 40 do
0				local unit = "raid"..Id;
0				if (UnitExists(unit)) then
0					PowaState.Raid[unit] = self:GetUnitInfo(unit);
0					PowaState.Raid["raidpet"..Id] = self:GetUnitInfo("raidpet"..Id);
0					PowaState.Raid[unit.."Target"] = self:GetUnitInfo(unit.."Target");
0					PowaState.Raid[unit.."TargetTarget"] = self:GetUnitInfo(unit.."TargetTarget");
				end
0				local name, rank, subgroup, level, classloc, class, zone, online, isDead = GetRaidRosterInfo(Id);
0				PowaState.Raid.Roster[Id] = {Name=name, Rank=rank, Subgroup=subgroup, Level=level, ClassLoc=classloc, Class=class, Zone=zone, Online=online, IsDead=isDead};
			end
		end
		--Party
0		if (numpm>0) then
0			PowaState.Party = {Count=numpm};
0			for Id = 1, 4 do
0				local unit = "party"..Id;
0				if (UnitExists(unit)) then
0					PowaState.Party[unit] = self:GetUnitInfo(unit);
0					PowaState.Party["partypet"..Id] = self:GetUnitInfo("partypet"..Id);
0					PowaState.Party[unit.."Target"] = self:GetUnitInfo(unit.."Target");
0					PowaState.Party[unit.."TargetTarget"] = self:GetUnitInfo(unit.."TargetTarget");
				end
			end
		end
		
		--Battlefields
0		PowaState.Battlefields = {};
0		for Id=1, MAX_BATTLEFIELD_QUEUES do
0			local bgstatus, BGName, instanceID = GetBattlefieldStatus(Id);
0			PowaState.Battlefields[Id] = {Status=bgstatus, Name=BGName, Id=instanceID};
		end
		
		-- Powa
0		PowaState.Powa = self:CopyTable(PowaAuras);
0		PowaState.PowaGlobalListe = self:CopyTable(PowaGlobalListe);
0		PowaState.PowaPlayerListe = self:CopyTable(PowaPlayerListe);
	
	end
	
	-- Extract details for specified unit
2	function PowaAuras:GetUnitInfo(unit)
0		if (not UnitExists(unit)) then
0			return nil;
		end
	
		--self:Message("GetUnitInfo for " .. tostring(unit));
	
0		local UnitInfo = {Unit=unit}
0		local Name, Realm = UnitName(unit)
0		UnitInfo["Name"] = Name;
0		UnitInfo["Realm"] = Realm;
0		UnitInfo["Level"] = UnitLevel(unit);
0		local LocClass, Class= UnitClass(unit);
0		UnitInfo["LocClass"] = LocClass;
0		UnitInfo["Class"] = Class;
0		UnitInfo["Sex"] = UnitSex(unit);
0		UnitInfo["Connected"] = UnitIsConnected(unit);
0		UnitInfo["Dead"] = UnitIsDead(unit);
0		UnitInfo["Ghost"] = UnitIsGhost(unit);
0		UnitInfo["DeadOrGhost"] = UnitIsDeadOrGhost(unit);
0		UnitInfo["Corpse"] = UnitIsCorpse(unit);
0		UnitInfo["Player"] = UnitIsUnit(unit, "player");
0		UnitInfo["Visible"] = UnitIsVisible(unit);
0		UnitInfo["Enemy"] = UnitIsEnemy(unit, "player");
0		UnitInfo["Friend"] = UnitIsFriend(unit, "player");
0		UnitInfo["PVP"] = UnitIsPVP(unit);
0		UnitInfo["ThreatSituation"] = UnitThreatSituation(unit);
0		UnitInfo["CanAttack"] = UnitCanAttack(unit, "player");
0		UnitInfo["CanBeAttacked"] = UnitCanAttack("player", unit);
0		UnitInfo["CanCooperate"] = UnitCanCooperate("player", unit);
0		local X, Y = GetPlayerMapPosition(unit);
0		UnitInfo["Pos"]= {X=X, Y=Y};
0		UnitInfo["InteractDistance"] = {[1]=CheckInteractDistance(unit, 1);
0										[2]=CheckInteractDistance(unit, 2),
0										[3]=CheckInteractDistance(unit, 3),
0										[4]=CheckInteractDistance(unit, 4)};
0		UnitInfo["InParty"] = UnitInParty(unit);
0		UnitInfo["UnitInRaid"] = UnitInRaid(unit);
0		UnitInfo["PlayerOrPetInParty"] = UnitPlayerOrPetInParty(unit);
0		UnitInfo["PlayerOrPetInRaid"] = UnitPlayerOrPetInRaid(unit);
	
0		self:ResetTooltip();
0		PowaAuras_Tooltip:SetUnit(unit);
0		self:CaptureTooltip(UnitInfo)
	
0		UnitInfo["InCombat"] = UnitAffectingCombat(unit);
0		UnitInfo["TargetInCombat"] = UnitAffectingCombat(unit, "target");
	
0		UnitInfo.Buffs = {};
0		local Index = 1;
0		local Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitBuff(unit, Index);
0		while (Name~=nil) do
0			UnitInfo.Buffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitBuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["Buffs"][Index])
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitBuff(unit, Index);
		end
	
0		UnitInfo.Debuffs = {};
0		Index = 1;
0		Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index);
0		while (Name~=nil) do
0			UnitInfo.Debuffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitDebuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["Debuffs"][Index]);
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index);
		end
	
0		UnitInfo.RemoveableDebuffs = {};
0		Index = 1;
0		Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index, 1);
0		while (Name~=nil) do
0			UnitInfo.RemoveableDebuffs[Index] = {Name=Name, Applications=Applications, Type=Type, Rank=Rank, Icon=Icon, Duration=Duration, Expires=Expires, Source=Source, Stealable=Stealable};
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetUnitDebuff(unit, Index);
0			self:CaptureTooltip(UnitInfo["RemoveableDebuffs"][Index]);
0			Index = Index + 1;
0			Name, Rank, Icon, Applications, Type, Duration, Expires, Source, Stealable = UnitDebuff(unit, Index, 1);
		end
	
0		local StatIndex = {[1]="Strength", [2]="Agility", [3]="Stamina", [4]="Intellect", [5]="Spirit"};
0		UnitInfo["Stats"] = {};
0	    for Index = 1, 5 do
0			local base, stat, posBuff, negBuff = UnitStat(unit, Index);
0			UnitInfo.Stats[Index] = {Type=StatIndex[Index], Base=base, Stat=stat, PosBuff=posBuff, NegBuff=negBuff};
		end
	
0		local ResIndex = {[0]="Physical", [1]="Holy", [2]="Fire", [3]="Nature", [4]="Frost", [5]="Shadow", [6]="Arcane"};
0		UnitInfo.Resistances = {};
0	    for Index = 0, 6 do
0			local base, total, bonus, malus = UnitResistance(unit, Index)
0			UnitInfo["Resistances"][Index] = {Type=ResIndex[Index], Base=base, Total=total, Bonus=bonus, Malus=malus};
		end
	
0	    UnitInfo["Armor"] = UnitArmor(unit);
0	    UnitInfo["AttackBothHands"] = UnitAttackBothHands(unit);
0	    UnitInfo["AttackPower"] = UnitAttackPower(unit);
0	    UnitInfo["AttackSpeed"] = UnitAttackSpeed(unit);
0	    UnitInfo["Classification"] = UnitClassification(unit);
0	    UnitInfo["CreatureFamily"] = UnitCreatureFamily(unit);
0	    UnitInfo["CreatureType"] = UnitCreatureType(unit) ;
0	    UnitInfo["Damage"] = UnitDamage(unit);
0	    UnitInfo["Defense"] = UnitDefense(unit);
0	    UnitInfo["FactionGroup"] = UnitFactionGroup(unit);
0	    UnitInfo["Health"] = UnitHealth(unit);
0	    UnitInfo["HealthMax"] = UnitHealthMax(unit) ;
0	    UnitInfo["IsCharmed"] = UnitIsCharmed(unit);
	    --UnitInfo["IsCivilian"] = UnitIsCivilian(unit);
0	    UnitInfo["IsPartyLeader"] = UnitIsPartyLeader(unit);
0	    UnitInfo["IsPlayer"] = UnitIsPlayer(unit);
	   -- UnitInfo["IsPlusMob"] = UnitIsPlusMob(unit);
0	    UnitInfo["IsTapped"] = UnitIsTapped(unit);
0	    UnitInfo["IsTappedByPlayer"] = UnitIsTappedByPlayer(unit);
0	    UnitInfo["IsTrivial"] = UnitIsTrivial(unit);
		
0	    UnitInfo["InVehicle"] = UnitInVehicle(unit);
		
0	    UnitInfo["Mana"] = UnitMana(unit);
0	    UnitInfo["ManaMax"] = UnitManaMax(unit);
0	    UnitInfo["Power"] = {};
0	    UnitInfo["PowerMax"] = {};
0	    UnitInfo.Power.Default = UnitPower(unit);
0	    UnitInfo.PowerMax.Default = UnitPowerMax(unit);
0		for powerType=0,6 do
0			UnitInfo.Power[powerType] = UnitPower(unit, powerType);
0			UnitInfo.PowerMax[powerType] = UnitPowerMax(unit, powerType);
		end
0		local powerType, powerTypeString = UnitPowerType(unit);
0	    UnitInfo["PowerType"] = powerType;
0	    UnitInfo["PowerTypeString"] = powerTypeString;
0		UnitInfo.RuneCooldown  = {};
0		UnitInfo.RuneType  = {};
0		for runeId=1,6 do
0			local runeStart, runeDuration, runeReady = GetRuneCooldown(runeId)
0			UnitInfo.RuneCooldown[runeId] = {Start=runeStart, Duration=runeDuration, RuneReady=runeReady};
0			UnitInfo.RuneType[runeId] = GetRuneType(runeId);
		end
0	    UnitInfo["OnTaxi"] = UnitOnTaxi(unit);
0	    UnitInfo["PVPName"] = UnitPVPName(unit) ;
0	    UnitInfo["PVPRank"] = UnitPVPRank(unit);
0	    UnitInfo["Race"] = UnitRace(unit);
0	    UnitInfo["RangedAttack"] = UnitRangedAttack(unit);
0	    UnitInfo["RangedAttackPower"] = UnitRangedAttackPower(unit);
0	    UnitInfo["RangedDamage"] = UnitRangedDamage(unit);
0		Name, Realm = UnitName(unit.."Target")
0	    UnitInfo["Target"] = Name;
0	    UnitInfo["TargetRealm"] = Realm;
0		Name, Realm = UnitName(unit.."TargetTarget")
0	    UnitInfo["TargetTarget"] = Name;
0	    UnitInfo["TargetTargetRealm"] = Realm;
0	    UnitInfo["XP"] = UnitXP(unit);
0	    UnitInfo["XPMax"] = UnitXPMax(unit);
0		UnitInfo["UnitHasVehicleUI"] = UnitHasVehicleUI(unit);
0		local spell, rank, displayName, icon, startTime, endTime, isTradeSkill = UnitCastingInfo(unit);
0		UnitInfo["CastingInfo"] = {Spell=spell, Rank=rank, DisplayName=displayName, Icon=icon, StartTime=startTime, EndTime=endTime, IsTradeSkill=isTradeSkill};
0		spell, rank, displayName, icon, startTime, endTime, isTradeSkill = UnitChannelInfo(unit);
0		UnitInfo["ChannelInfo"] = {Spell=spell, Rank=rank, DisplayName=displayName, Icon=icon, StartTime=startTime, EndTime=endTime, IsTradeSkill=isTradeSkill};
	
0		return UnitInfo;
	end
	
	-- Extract details for specified slot
2	function PowaAuras:GetSlotInfo(slot)
0		local Id, Texture = GetInventorySlotInfo(slot);
0		if (Id~=nil) then
0			PowaState.Inventory.Slot[slot] = {Id=Id, Texture=Texture, Slot=slot};
0			PowaState.Inventory.ItemLink[Id] = GetInventoryItemLink("player", Id);
0			PowaState.Inventory.ItemCooldown[Id] = GetInventoryItemCooldown("player", Id);
0			PowaState.Inventory.Slot[Id] = PowaState.Inventory.Slot[slot]
0			self:ResetTooltip();
0			PowaAuras_Tooltip:SetInventoryItem("player", Id);
0			self:CaptureTooltip(PowaState.Inventory.Slot[Id]);
		end
	end
	
2	function PowaAuras:Escape(text)
0		if (text==nil) then
0			return nil;
		end
0		return string.gsub(string.gsub(text, "\n", "<LF>"), "\r", "<CR>");
	end
	
2	function PowaAuras:ResetTooltip()
0		for z = 1, 9 do
0			local line = getglobal("PowaAuras_TooltipTextLeft"..z);
0			if (line~=nil) then line:SetText(nil); end
0			line = getglobal("PowaAuras_TooltipTextRight"..z);
0			if (line~=nil) then line:SetText(nil); end
		end
0		PowaAuras_Tooltip:ClearLines();
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
	end
	
2	function PowaAuras:CaptureTooltip(store)
0		store["Tooltip"] = {};
0		store.Tooltip.NumLines = PowaAuras_Tooltip:NumLines();
0		for z = 1, PowaAuras_Tooltip:NumLines() do
0			local line = getglobal("PowaAuras_TooltipTextLeft"..z);
0			store.Tooltip["Left"..z]  = self:Escape(line:GetText());
0			line = getglobal("PowaAuras_TooltipTextRight"..z);
0			store.Tooltip["Right"..z] = self:Escape(line:GetText());
		end
	end
	

==============================================================================
..\PowerAurasEvents.lua
==============================================================================
	
2	function PowaAuras:VARIABLES_LOADED(...)
0		self:UnitTestDebug("VARIABLES_LOADED");
0		PowaMisc.disabled = nil;
	
		-- Ensure PowaMisc gets any new values
0		for k, v in pairs(PowaAuras.PowaMiscDefault) do
0			if (PowaMisc[k]==nil) then PowaMisc[k] = v; end
		end
		-- Remove redundant settings
0		for k in pairs(PowaMisc) do
0			if (PowaAuras.PowaMiscDefault[k]==nil) then PowaMisc[k] = nil; end
		end
	
0		if (self.Version~=PowaMisc.Version) then
0			self:DisplayText(self.Colors.Purple.."<Power Auras Classic>|r "..self.Colors.Gold..self.Version.."|r - "..self.Text.welcome);
0			PowaMisc.Version = self.Version;
		end
		
0		PowaOptionsCpuFrame2_OnShow();
	
0		if (not PowaMisc.Disabled) then
0			self:RegisterEvents(PowaAuras_Frame);
		end
	
0		if (TestPA==nil) then
0			PowaState = {};
		end
		
0		_, self.playerclass = UnitClass("player");
	
0		self:LoadAuras();
	
0		for i = 1, 5 do
0			getglobal("PowaOptionsList"..i):SetText(PowaPlayerListe[i]);
		end
0		for i = 1, 10 do
0			getglobal("PowaOptionsList"..i+5):SetText(PowaGlobalListe[i]);
		end
		
0		local texi = 1;
0		while ( AuraTexture:SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..texi..".tga") == 1 ) do 
0			texi = texi+1;
		end
0		self.maxtextures = texi - 1;
		
0		PowaBarAuraTextureSlider:SetMinMaxValues(1, self.maxtextures);
0		PowaBarAuraTextureSliderHigh:SetText(self.maxtextures);
	
		
0		self:FindAllChildren();
			
		
0		for k, v in pairs(self.Auras) do
0			self:UnitTestDebug("Loaded Auras ",k, " ", v.buffname);
		end
		
0		self:CreateEffectLists();
		
0		if (self.SetupDone) then
0			self.Initialising = false;
		end
0		self.VariablesLoaded = true;
	end
	
2	function PowaAuras:Setup()
0		self:UnitTestDebug("Setup");
0		PowaAuras_Tooltip:SetOwner(UIParent, "ANCHOR_NONE");
	
		-- Look-up spells by spellId for debuff types
0		self.DebuffCatSpells = {}
0		for k, v in pairs(self.DebuffTypeSpellIds) do
0			local spellName = GetSpellInfo(k);
0			if spellName then
0				self.DebuffCatSpells[spellName] = v
			else
				--self:Debug("Unknown spellId: ", k)
			end
		end	
		
0		if UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = false;
		end
	
0		self.WeAreInRaid = (GetNumRaidMembers() > 0);
0		self.WeAreInParty = (GetNumPartyMembers() > 0);
	
0		self.WeAreMounted = (IsMounted()~=nil);
0		self.WeAreInVehicle = (UnitInVehicle("player")~=nil);
	
0		self.ActiveTalentGroup = GetActiveTalentGroup();
		
0		self:GetStances();
		
0		self:MemorizeActions();
		
0		self.DoCheck.All = true;
			
0		if (self.VariablesLoaded) then
0			self.Initialising = false;
		end
0		self.SetupDone = true;
		
0		self.PendingRescan = GetTime() + 6;
	end
	
2	function PowaAuras:PLAYER_ENTERING_WORLD(...)
0		self:Setup();
	end
	
2	function PowaAuras:GetStances()
0		for iForm=1, GetNumShapeshiftForms() do
0			self.PowaStance[iForm] = select(2,GetShapeshiftFormInfo(iForm));
		end
	end
			
2	function PowaAuras:PLAYER_TALENT_UPDATE(...)
0		self.ActiveTalentGroup = GetActiveTalentGroup();
0		if (self.ModTest == false) then
			--self:ShowText("PLAYER_TALENT_UPDATE ");
0			self.PendingRescan = GetTime() + 1;
		end
	end
			
2	function PowaAuras:PLAYER_UPDATE_RESTING(...)
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end
	end
	
2	function PowaAuras:PARTY_MEMBERS_CHANGED(...)	  
0		if (self.ModTest == false) then
0			self.DoCheck.PartyBuffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.PartyHealth = true;
0			self.DoCheck.PartyMana = true;
		end
0		self.WeAreInParty = (GetNumPartyMembers() > 0);
	end
			
2	function PowaAuras:RAID_ROSTER_UPDATE(...)
0		if (self.ModTest == false) then
0			self.DoCheck.RaidBuffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.RaidHealth = true;
0			self.DoCheck.RaidMana = true;	
		end
0		self.WeAreInRaid = (GetNumRaidMembers() > 0);
	end
					
2	function PowaAuras:UNIT_HEALTH(...)
0		local unit = ...;
0		self:SetCheckResource("Health", unit);
	end
			
2	function PowaAuras:UNIT_MAXHEALTH(...)
0		local unit = ...;
0		self:SetCheckResource("Health", unit);
	end
			
2	function PowaAuras:UNIT_MANA(...)
0		local unit = ...;
0		self:SetCheckResource("Mana", unit);
	end
			
2	function PowaAuras:UNIT_MAXMANA(...)
0		local unit = ...;
0		self:SetCheckResource("Mana", unit);
	end
	
2	function PowaAuras:UNIT_RAGE(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
2	function PowaAuras:UNIT_ENERGY(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
2	function PowaAuras:UNIT_MAXENERGY(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
2	function PowaAuras:UNIT_RUNIC_POWER(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
2	function PowaAuras:SetCheckResource(resourceType, unitType)
0		if (self.ModTest == false) then
0			if (unitType == "target") then
0				self.DoCheck["Target"..resourceType] = true;				
0			elseif (unitType == "focus") then             
0				self.DoCheck["Focus"..resourceType] = true;				
0			elseif ("party" == string.sub(unitType, 1, 5)) then 
0				self.DoCheck["Party"..resourceType] = true;  	
0				self.DoCheck["NamedUnit"..resourceType] = true;			
0			elseif ("raid" == string.sub(unitType, 1, 4)) then              
0				self.DoCheck["Raid"..resourceType] = true;		
0				self.DoCheck["NamedUnit"..resourceType] = true;		
0			elseif (unitType == "pet") then
0				self.DoCheck["NamedUnit"..resourceType] = true;
0			elseif (unitType == "player") then
0				self.DoCheck[resourceType] = true;	
			end
		end
	end
	
2	function PowaAuras:UNIT_MAXRUNIC_POWER(...)
0		local unit = ...;
0		self:SetCheckResource("RageEnergy", unit);
	end
	
2	function PowaAuras:SpellcastEvent(unit)
0		if (self.ModTest == false) then
			--- spell alert handling
0			if unit and not UnitIsDead(unit) then
0				if UnitIsUnit(unit, "player") then
0					self.DoCheck.PlayerSpells = true;
0				elseif (UnitCanAttack(unit, "player")) then
0					if UnitIsUnit(unit, "target") then
0						self.DoCheck.TargetSpells = true;
					end
0					if UnitIsUnit(unit, "focus") then
0						self.DoCheck.FocusSpells = true;
					end
0					self.DoCheck.Spells = true; --- party/raidscan for casting units in this case
				end
			end
		end
	end
	
2	function PowaAuras:UNIT_SPELLCAST_SUCCEEDED(...)	  
0		if (self.ModTest == false) then
0			local unit, spell = ...;
			--self:ShowText("UNIT_SPELLCAST_SUCCEEDED ",unit, " ", spell);
			--- druid shapeshift special case
0			if (unit and unit == "player") then
0				if ( (spell == GetSpellInfo(768)) or (spell == GetSpellInfo(5487)) or (spell == GetSpellInfo(9634)) ) then
0					self.DoCheck.Mana = true;
0					self.DoCheck.RageEnergy = true;
				end			
0				for _, auraId in pairs(self.AurasByType.OwnSpells) do	
					--self:ShowText("Pending set for OwnSpells ", auraId);
0					self.DoCheck.OwnSpells = true;
0					self.Pending[auraId] = GetTime() + 0.5; -- Allow 0.5 sec for client to update or time may be wrong
				end
			else
0				PowaAuras:SpellcastEvent(unit);
			end
		end
	end
	
2	function PowaAuras:UNIT_SPELLCAST_START(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_CHANNEL_START(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_DELAYED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_CHANNEL_UPDATE(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_STOP(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_FAILED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_INTERRUPTED(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
	
2	function PowaAuras:UNIT_SPELLCAST_CHANNEL_STOP(...)
0		local unit = ...;
0		PowaAuras:SpellcastEvent(unit);
	end
			
2	function PowaAuras:PLAYER_FOCUS_CHANGED(...)	  
0		if (self.ModTest == false) then
0			self.DoCheck.FocusBuffs = true;
0			self.DoCheck.FocusHealth = true;
0			self.DoCheck.FocusMana = true;
0			self.DoCheck.FocusRageEnergy = true;
0			self.DoCheck.FocusSpells = true;
0			self.DoCheck.StealableFocusSpells = true;
0			self.DoCheck.PurgeableFocusSpells = true;
		end
	end
	
2	function PowaAuras:BuffsChanged(unit)
0		if (not self.ModTest) then
			--self:ShowText("BuffsChanged ", unit);
0			if (arg1 == "target") then
0				self.DoCheck.TargetBuffs = true;
0				self.DoCheck.StealableTargetSpells = true;
0				self.DoCheck.PurgeableTargetSpells = true;
0			elseif ("party" == string.sub(arg1, 1, 5)) then 
0				self.DoCheck.PartyBuffs = true;
0				self.DoCheck.GroupOrSelfBuffs = true;
0			elseif (arg1 == "focus") then
0				self.DoCheck.FocusBuffs = true;
0				self.DoCheck.StealableFocusSpells = true;
0				self.DoCheck.PurgeableFocusSpells = true;
0			elseif (string.sub(arg1, 1, 4) == "raid") then
0				self.DoCheck.RaidBuffs = true;       
0				self.DoCheck.GroupOrSelfBuffs = true;
0			elseif (arg1 == "player") then
				--- active les checks
0				self.DoCheck.Buffs = true;
0				self.DoCheck.GroupOrSelfBuffs = true;
			else
0				self.DoCheck.UnitBuffs = true;
0				self.DoCheck.StealableSpells = true;
0				self.DoCheck.PurgeableSpells = true;
			end
		end
	end
	
2	function PowaAuras:UNIT_AURA(...)
0		local unit = ...;
0		self:BuffsChanged(unit);
	end
	
2	function PowaAuras:UNIT_AURASTATE(...)
0		local unit = ...;
0		self:BuffsChanged(unit);
	end
	
2	function PowaAuras:PLAYER_DEAD(...)
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end
0		self.WeAreMounted = false;
0		self.WeAreInVehicle = false;
0		self.WeAreAlive = false;
	end
		
2	function PowaAuras:PLAYER_ALIVE(...)
0		if not UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = true;
0			if (self.ModTest == false) then
0				self.DoCheck.All = true;
			end
		end
	end
		
2	function PowaAuras:PLAYER_UNGHOST(...)
0		if not UnitIsDeadOrGhost("player") then
0			self.WeAreAlive = true;
0			if (self.ModTest == false) then
0				self.DoCheck.All = true;
			end
		end
	end
	 
2	function PowaAuras:PLAYER_TARGET_CHANGED(...)
0		if (self.ModTest == false) then
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.TargetHealth = true;
0			self.DoCheck.TargetMana = true;
0			self.DoCheck.TargetRageEnergy = true;
0			self.ResetTargetTimers = true;
0			self.DoCheck.Actions = true;
0			self.DoCheck.TargetSpells = true;
0			self.DoCheck.Combo = true;
0			self.DoCheck.StealableTargetSpells = true;
0			self.DoCheck.PurgeableTargetSpells = true;
		end
	end
		 
2	function PowaAuras:PLAYER_REGEN_DISABLED(...)
0		if (self.ModTest == false) then
0			self.WeAreInCombat = true;
0			self.DoCheck.Others = true;
0			self.DoCheck.Enchants = true;
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.Buffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.Actions = true;
		end	   
	end
		   
2	function PowaAuras:PLAYER_REGEN_ENABLED(...)
0		if (self.ModTest == false) then
0			self.WeAreInCombat = false;
0			self.DoCheck.Others = true;
0			self.DoCheck.Enchants = true;
0			self.DoCheck.TargetBuffs = true;
0			self.DoCheck.Buffs = true;
0			self.DoCheck.GroupOrSelfBuffs = true;
0			self.DoCheck.Actions = true;
		end
	end   
		
2	function PowaAuras:UNIT_COMBO_POINTS(...)
0		local unit = ...;
0		if unit ~= "player" then return; end
0		if (self.ModTest == false) then
0			self.DoCheck.Combo = true;
		end
	end
	
2	function PowaAuras:VehicleCheck(unit, entered)
0		if unit ~= "player" then return; end
0		if (self.ModTest == false) then
0			self.DoCheck.All = true;
		end	
0		self.WeAreInVehicle = entered;
	end
			
2	function PowaAuras:UNIT_ENTERED_VEHICLE(...)
0		local unit = ...;
0		self:VehicleCheck(unit, true)
	end
	
2	function PowaAuras:UNIT_EXITED_VEHICLE(...)
0		local unit = ...;
0		self:VehicleCheck(unit, false)
	end
		
2	function PowaAuras:UNIT_FACTION(...) --- GetPVPTimer() returns the time until unflag in ms
0		local unit = ...;
0		if (self.ModTest == false) then
0			if unit == "player" then
0				self.DoCheck.PvP = true;
0			elseif unit == "target" then
0				self.DoCheck.TargetPvP = true;
			end
	
0			for i=1,GetNumPartyMembers() do
0				if unit == "party"..i then
0					self.DoCheck.PartyPvP = true;
0					break;
				end
			end
0			for i=1, GetNumRaidMembers() do
0				if unit == "raid"..i then
0					self.DoCheck.RaidPvP = true;
0					break;
				end
			end
		end
	end
		
		
2	function PowaAuras:COMBAT_LOG_EVENT_UNFILTERED(...)
0		local timestamp,event,sourceGUID,sourceName,sourceFlags,destGUID,destName,destFlags, spellId, spellName, _, spellType = ...;
		--self:ShowText("COMBAT_LOG_EVENT_UNFILTERED ", event);
0		if (not self.ModTest) then
0			if (destGUID and destGUID==UnitGUID("player") and spellName) then
0				if (event == "ENVIRONMENTAL_DAMAGE") then
					--self:ShowText("ENVIRONMENTAL_DAMAGE type=", spellId, " size=", spellName);					
0					if  (spellId ~= "FALLING") then
0						self.AoeAuraAdded[0] = spellId;
0						self.DoCheck.Aoe = true;
					end
0				elseif ((event=="SPELL_PERIODIC_DAMAGE"
0					  or event=="SPELL_DAMAGE"
0					  or ((event=="SPELL_AURA_APPLIED" or event=="SPELL_AURA_APPLIED_DOSE") and spellType=="DEBUFF"))) then
0					local matchFound = false;
					--self:ShowText("SPELL_PERIODIC_DAMAGE ", spellId, " ", spellName);
0					if (PowaMisc.UseGTFO) then
0						if (GTFO.SpellID[spellId]) then
							--self:ShowText(spellId.." - ID Match Found "..spellName);
0							matchFound = ((not GTFO.SpellID[spellId].applicationOnly)
0											 or (GTFO.SpellID[spellId].applicationOnly
0											 and (event == "SPELL_AURA_APPLIED"
0											   or event == "SPELL_AURA_APPLIED_DOSE")));
0						elseif (GTFO.SpellName[spellName]) then
							--self:ShowText(spellName.." - Name Match Found");
0							matchFound = ((not GTFO.SpellName[spellName].applicationOnly)
0											 or (GTFO.SpellName[spellName].applicationOnly
0											 and (event == "SPELL_AURA_APPLIED"
0											   or event == "SPELL_AURA_APPLIED_DOSE")));
0						elseif (PowaGTFOPvP[spellId]) then
							--self:ShowText(spellName.." - PvP Match Found");
0							matchFound = true;
						end
					else
0						matchFound = true;
					end
0					if (matchFound) then
0						self.AoeAuraAdded[spellId] = spellName;
0						if (not self.AoeAuraTexture[spellName]) then
0							self.AoeAuraTexture[spellId] = select(3, GetSpellInfo(spellId));
						end
0						self.DoCheck.Aoe = true;
					end
				end
			end
		end
	end
	
2	function PowaAuras:ACTIONBAR_SLOT_CHANGED(...)
0		local arg1 = ...;
0		self:MemorizeActions(arg1);
	end
		
2	function PowaAuras:UPDATE_SHAPESHIFT_FORMS(...)
0		self:GetStances();
0		if (self.ModTest) then return; end
		
0		self.DoCheck.Stance = true;
	end
		
2	function PowaAuras:ACTIONBAR_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("ACTIONBAR_UPDATE_COOLDOWN");
0			self.DoCheck.Actions = true;
0			self.DoCheck.Stance = true;
		end	
	end
			
2	function PowaAuras:ACTIONBAR_UPDATE_USABLE(...)
0		if (self.ModTest == false) then
			--self:ShowText("ACTIONBAR_UPDATE_USABLE");
0			self.DoCheck.Actions = true;
0			self.DoCheck.Stance = true;
		end
	end
		
2	function PowaAuras:SPELL_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("SPELL_UPDATE_COOLDOWN");
0			self.DoCheck.OwnSpells = true;
		end	
	end
			
2	function PowaAuras:UPDATE_SHAPESHIFT_FORM(...)
0		if (self.ModTest == false) then
			--self:ShowText("UPDATE_SHAPESHIFT_FORM");
0			self.DoCheck.Stance = true;
0			self.DoCheck.Actions = true;
		end  
	end
	
2	function PowaAuras:BAG_UPDATE_COOLDOWN(...)
0		if (self.ModTest == false) then
			--self:ShowText("BAG_UPDATE_COOLDOWN");
		end  
	end
	
2	function PowaAuras:UNIT_INVENTORY_CHANGED(...)
0		if (self.ModTest == false) then
0			local unit = ...;
			--self:ShowText("UNIT_INVENTORY_CHANGED ", unit);
0			if (unit=="player") then
0				for _, auraId in pairs(self.AurasByType.Enchants) do
					--self:ShowText("Pending set for Enchants ", auraId);
0					self.Pending[auraId] = GetTime() + 0.25; -- Allow time for client to update or timer will be wrong
				end
			end			
		end  
	end
	
2	function PowaAuras:UNIT_THREAT_SITUATION_UPDATE(...)
0		local unit = ...;
0		if (self.ModTest == false) then
			--self:ShowText("UNIT_THREAT_SITUATION_UPDATE ", unit);
0			if unit == "player" then
0				self.DoCheck.Aggro = true;
0				return;
			end
	
0			for i=1,GetNumPartyMembers() do
0				if unit == "party"..i then
0					self.DoCheck.PartyAggro = true;
0					break;
				end
			end
0			for i=1, GetNumRaidMembers() do
0				if unit == "raid"..i then
0					self.DoCheck.RaidAggro = true;
0					break;
				end
			end
		end
	end

==============================================================================
..\PowerOptions.lua
==============================================================================
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< MAIN OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
	-- ---------------------------------------------------------------------------------------------------------------------
	
2	function PowaAuras:ResetPositions()
0		PowaBarConfigFrame:ClearAllPoints();
0		PowaBarConfigFrame:SetPoint("CENTER", "UIParent", "CENTER", 0, 50);
0		PowaOptionsFrame:ClearAllPoints();
0		PowaOptionsFrame:SetPoint("CENTER", "UIParent", "CENTER", 0, 50);
	end
	
	-- ---------------------------------------------------------------------------------------------------------------------
2	function PowaAuras:UpdateMainOption()
		-- traductions
0		getglobal("PowaOptionsHeader"):SetText("POWER AURAS "..self.Version);
0		getglobal("PowaMainHideAllButton"):SetText(self.Text.nomHide);
0		getglobal("PowaMainTestButton"):SetText(self.Text.nomTest);
0		getglobal("PowaEditButton"):SetText(self.Text.nomEdit);
0		getglobal("PowaOptionsRename"):SetText(self.Text.nomRename);
0		if (PowaMisc.Disabled) then
0			getglobal("PowaEnableButton"):SetChecked(false);
		else
0			getglobal("PowaEnableButton"):SetChecked(true);
		end
0		if (PowaMisc.debug) then
0			getglobal("PowaDebugButton"):SetChecked(true);
		else
0			getglobal("PowaDebugButton"):SetChecked(false);
		end
0		if (PowaMisc.TimerRoundUp) then
0			PowaTimerRoundingButton:SetChecked(true);
		else
0			PowaTimerRoundingButton:SetChecked(false);
		end
0		if (PowaMisc.UseGTFO) then
0			PowaGTFOButton:SetChecked(true);
		else
0			PowaGTFOButton:SetChecked(false);
		end
	
		-- affiche les icones
0		for i = 1, 24 do
0			local k = ((self.MainOptionPage-1)*24) + i;
			--self:Message("icon ", k);
0			local aura = self.Auras[k];
			-- icone
0			if (aura == nil) then
0				getglobal("PowaIcone"..i):SetNormalTexture("Interface\\PaperDoll\\UI-Backpack-EmptySlot");
0				getglobal("PowaIcone"..i):SetText("");
0				getglobal("PowaIcone"..i):SetAlpha(0.33);
			else
				--self:Message("buffname ", aura.buffname, "icon", aura.icon);
0				if (aura.buffname == "" or aura.buffname == " ") then -- pas de nom -> desactive
0					getglobal("PowaIcone"..i):SetNormalTexture("Interface\\PaperDoll\\UI-Backpack-EmptySlot");
0				elseif (aura.icon == "") then -- active mais pas d'icone
0					getglobal("PowaIcone"..i):SetNormalTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
				else
0					getglobal("PowaIcone"..i):SetNormalTexture(aura.icon);	
				end	
				-- off ou ON
0				if (aura.buffname ~= "" and aura.buffname ~= " " and aura.off) then
0					getglobal("PowaIcone"..i):SetText("OFF");
				else
0					getglobal("PowaIcone"..i):SetText("");
				end
				-- surbrillance de l'effet en cours
0				if (self.CurrentAuraId == k) then -- le bouton en cours
0					if (aura == nil or aura.buffname == "" or aura.buffname == " ") then -- nulle
0						getglobal("PowaSelected"):Hide();
					else
0						getglobal("PowaSelected"):SetPoint("CENTER", "PowaIcone"..i, "CENTER");
0						getglobal("PowaSelected"):Show();
					end
				end
				-- grisage des effets non visibles
0				if (not aura.Showing) then
0					getglobal("PowaIcone"..i):SetAlpha(0.33);
				else
0					getglobal("PowaIcone"..i):SetAlpha(1.0);
				end
			end
		end
		-- choisi la liste en cours
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetHighlightTexture("Interface\\Buttons\\UI-Panel-Button-Highlight");
0		getglobal("PowaOptionsList"..self.MainOptionPage):LockHighlight();
	end
	
	-- ---------------------------------------------------------------------------------------------------------------------
2	function PowaAuras:IconeClick(owner, button)
0		local iconeID = owner:GetID();
0		local auraId = ((self.MainOptionPage-1)*24) + iconeID;
	
0		if (self.MoveEffect > 0) then -- mode move, annule
0			return;
		end
0		if (ColorPickerFrame:IsVisible()) then -- color picker visible, ca deconne
0			return;
		end
0		local aura = self.Auras[auraId];
0		if (self.Auras[auraId] == nil or aura.buffname == "" or aura.buffname == " ") then -- ne fait rien si bouton vide
0			return;
		end
0		if IsShiftKeyDown() then -- Toggle ON ou OFF
0			if (aura.off) then
0				aura.off = false;
0				getglobal("PowaIcone"..iconeID):SetText("");
			else
0				aura.off = true;
0				getglobal("PowaIcone"..iconeID):SetText("OFF");
			end
0		elseif IsControlKeyDown() then
0			local show, reason = self:TestThisEffect(auraId, true);
0			if (show) then
0				self:Message(self:InsertText(self.Text.nomReasonShouldShow, reason)); --OK
			else	
0				self:Message(self:InsertText(self.Text.nomReasonWontShow, reason)); --OK
			end
0		elseif (self.CurrentAuraId == auraId) then
0			if (button == "RightButton") then
0				self:EditorShow();
0				return;
			else
0				if (aura.Showing) then 
0					getglobal("PowaIcone"..iconeID):SetAlpha(0.33);
				else
0					getglobal("PowaIcone"..iconeID):SetAlpha(1.0);
				end
0				PowaAuras:OptionTest();
			end
0		elseif (self.CurrentAuraId ~= auraId) then -- clicked a different button
0			self.CurrentAuraId = auraId;
0			self.CurrentAuraPage = self.MainOptionPage;
0			getglobal("PowaSelected"):SetPoint("CENTER", owner, "CENTER");
0			getglobal("PowaSelected"):Show();
0			self:InitPage(); -- change de page dans l'editeur d'effet
		end
	end
	
2	function PowaAuras:IconeEntered(owner)
0		local iconeID = owner:GetID();
0		local k = ((self.MainOptionPage-1)*24) + iconeID;
0		local aura = self.Auras[k];
0		if (self.MoveEffect > 0) then -- mode move, annule
0			return;
0		elseif (aura == nil) then
			-- rien si pas actif
0		elseif (aura.buffname == "" or aura.buffname == " ") then
			-- rien si pas de nom
		else
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			aura:AddExtraTooltipInfo(GameTooltip);
			
0			if (aura.party) then
0				GameTooltip:AddLine("("..self.Text.nomCheckParty..")", 1.0, 0.2, 0.2, 1);
			end		
0			if (aura.exact) then
0				GameTooltip:AddLine("("..self.Text.nomExact..")", 1.0, 0.2, 0.2, 1);
			end	
0			if (aura.mine) then
0				GameTooltip:AddLine("("..self.Text.nomMine..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.focus) then
0				GameTooltip:AddLine("("..self.Text.nomCheckFocus..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.raid) then
0				GameTooltip:AddLine("("..self.Text.nomCheckRaid..")", 1.0, 0.2, 0.2, 1);
		    end
0			if (aura.groupOrSelf) then
0				GameTooltip:AddLine("("..self.Text.nomCheckGroupOrSelf..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.optunitn) then
0				GameTooltip:AddLine("("..self.Text.nomCheckOptunitn..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.target) then
0				GameTooltip:AddLine("("..self.Text.nomCheckTarget..")", 1.0, 0.2, 0.2, 1);
			end
0			if (aura.targetfriend) then
0				GameTooltip:AddLine("("..self.Text.nomCheckFriend..")", 0.2, 1.0, 0.2, 1);
			end
0			GameTooltip:AddLine(self.Text.aideEffectTooltip,1.0,1.0,1.0,1);
	
0			GameTooltip:Show();
		end
	end
	
2	function PowaAuras:MainListClick(owner)
0		local listeID = owner:GetID();
	
0		if (self.MoveEffect == 1) then
			-- deplace l'effet
0			self:BeginCopyEffect( self.CurrentAuraId, listeID)
0			return;
0		elseif (self.MoveEffect == 2) then
			-- deplace l'effet
0			self:BeginMoveEffect( self.CurrentAuraId, listeID)
0			return;
		end
	
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetHighlightTexture("");
0		getglobal("PowaOptionsList"..self.MainOptionPage):UnlockHighlight();
0		getglobal("PowaSelected"):Hide();
0		self.MainOptionPage = listeID;
	
		-- selectionne le premier effet de la page
0		self.CurrentAuraId = ((self.MainOptionPage-1)*24)+1;
0		self.CurrentAuraPage = self.MainOptionPage;
		-- change de page dans l'editeur d'effet ou cache l'editeur
0		if (self.Auras[auraId] ~= nil and self.Auras[ self.CurrentAuraId].buffname ~= "" and self.Auras[ self.CurrentAuraId].buffname ~= " ") then
0			self:InitPage(); 
		else
0			self:EditorClose();
		end
	
		-- en cas d'edition de renommage :)
0		getglobal("PowaOptionsRenameEditBox"):SetText( getglobal("PowaOptionsList"..self.MainOptionPage):GetText() );
	
0		self:UpdateMainOption();
	end
	
2	function PowaAuras:MainListEntered(owner)
0		local listeID = owner:GetID();
	
0		if (self.MainOptionPage ~= listeID) then
0			if (self.MoveEffect > 0) then
0				getglobal("PowaOptionsList"..listeID):SetHighlightTexture("Interface\\Buttons\\UI-Panel-Button-Highlight"); 
			else
0				getglobal("PowaOptionsList"..listeID):SetHighlightTexture("");
0				getglobal("PowaOptionsList"..listeID):UnlockHighlight();
			end
		end
0		if (self.MoveEffect == 1) then
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			GameTooltip:SetText(self.Text.aideCopy, nil, nil, nil, nil, 1);
0			GameTooltip:Show();
0		elseif (self.MoveEffect == 2) then
0			GameTooltip:SetOwner(owner, "ANCHOR_RIGHT");
0			GameTooltip:SetText(self.Text.aideMove, nil, nil, nil, nil, 1);
0			GameTooltip:Show();
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
2	function PowaAuras:OptionRename()
0		getglobal("PowaOptionsRename"):Hide();
0		getglobal("PowaOptionsRenameEditBox"):Show();
	
0		getglobal("PowaOptionsRenameEditBox"):SetText( getglobal("PowaOptionsList"..self.MainOptionPage):GetText() );
	end
	
2	function PowaAuras:OptionRenameEdited()
0		getglobal("PowaOptionsRename"):Show();
0		getglobal("PowaOptionsRenameEditBox"):Hide();
	
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetText( getglobal("PowaOptionsRenameEditBox"):GetText() );
0		if (self.MainOptionPage > 5) then
0			PowaGlobalListe[self.MainOptionPage-5] = getglobal("PowaOptionsRenameEditBox"):GetText();
		else
0			PowaPlayerListe[self.MainOptionPage] = getglobal("PowaOptionsRenameEditBox"):GetText();
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
2	function PowaAuras:TriageIcones(nPage)
0		  local min = ((nPage-1)*24) + 1;
0		  local max = min + 23;
	
0		  local a = min;
	
		-- masque les effets de la page
0		for i = min, max do
0			local aura = self.Auras[i];
0			if (aura) then
0				aura:Hide();
			end
0			self.SecondaryAuras[i] = nil;
		end
	
0		for i = min, max do
0			if (self.Auras[i]) then
0				self.Auras[a] = self.Auras[i];
0				self.Auras[a].id = a;
0				if (self.Auras[a].Timer) then
0					self.Auras[a].Timer.id = a;
				end
0				if (i>a) then
0					self.Auras[i] = nil;
				end
0				a = a+1;
			end
		end
		-- gere les liens vers les effets globaux
0		for i = 121, 360 do
0			if (self.Auras[i]) then 
0				PowaGlobalSet[i] = self.Auras[i]; 
			else
0				PowaGlobalSet[i] = nil;
			end
		end
	end
	
2	function PowaAuras:DeleteAura(aura)
0		if (aura.Timer) then aura.Timer:Delete(); end
0		if (aura.Stacks) then aura.Stacks:Delete(); end
		
0		self.Frames[aura.id] = nil;
0		self.Textures[aura.id] = nil;
0		self.SecondaryAuras[aura.id] = nil;
0		self.SecondaryFrames[aura.id] = nil;
0		self.SecondaryTextures[aura.id] = nil;
	
0		self.Auras[aura.id] = nil;
0		if (aura.id > 120) then
0			PowaGlobalSet[aura.id] = nil;
		end
	end
	
2	function PowaAuras:OptionDeleteEffect(auraId)
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		if (not IsControlKeyDown()) then return; end
	
0		local aura = self.Auras[auraId];
0		if (not aura) then return; end
		
0		aura:Hide();
0		self:DeleteAura(aura);
	
0		getglobal("PowaSelected"):Hide();
	
0		if (getglobal("PowaBarConfigFrame"):IsVisible()) then
0			getglobal("PowaBarConfigFrame"):Hide();
		end
	
0		self:TriageIcones(self.MainOptionPage); -- trie les trous
0		self:UpdateMainOption();
	end
	
2	function PowaAuras:GetNextFreeSlot()
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- Found a free slot		
0				return i;
			end
		end
0		return nil;
	end
	
2	function PowaAuras:OptionNewEffect()
	
0		local i = self:GetNextFreeSlot();
0		if (not i) then
0			self:Message("All aura slots filled"); --OK
0			return;
		end
	                   
		--self:Message("New Effect slot=", i)
0		self.CurrentAuraId = i;
0		self.CurrentAuraPage = self.MainOptionPage;
0		local aura = self:AuraFactory(PowaAuras.BuffTypes.Buff, i, {buffname = "???", off = false});
		--self:Message("Timer.enabled=", aura.Timer.enabled)
0		self.Auras[i] = aura;
0		self.Showing = true;
		-- effet global ?
0		if (i > 120) then
0			PowaGlobalSet[i] = aura;
		end
0		self:DisplayAura(i);
0		self:UpdateMainOption();
0		self:InitPage();
0		self:UpdateTimerOptions();
0		if (not getglobal("PowaBarConfigFrame"):IsVisible()) then
0			getglobal("PowaBarConfigFrame"):Show();
0			PlaySound("TalentScreenOpen");
		end
		--self:Debug("New aura ", i);
		--aura:Display();
	
	end
	
	
2	function PowaAuras:ExtractImportValue(valueType, value)
0		if valueType == "st" then
0			return value;
0		elseif valueType == "bo" then
0			if value == "false" then
0				return false;
0			elseif value == "true" then
0				return true;
			end
0		elseif valueType == "nu" then
0			return tonumber(value);
		end
0		return nil;
	end
	
2	function PowaAuras:ImportAura(aurastring, auraId, offset)
	
		--self:Message("Import ", auraId);
		--self:Message(aurastring);
	
0		local aura = cPowaAura(auraId);
	
0		local aurastring = string.gsub(aurastring,";%s*",";");
0		local temptbl = {strsplit(";", aurastring)};
0		local importAuraSettings = {};
0		local importTimerSettings = {};
0		local importStacksSettings = {};
0		local hasTimerSettings = false;
0		local hasStacksSettings = false;
	
0		for i, val in ipairs(temptbl) do
			--self:Message(i, "  ", val);
0			local key, var = strsplit(":", val);
0			local varpref = string.sub(var,1,2);
0			var = string.sub(var,3);
0			if (string.sub(key,1,6)  == "timer.") then
0				importTimerSettings[key] = self:ExtractImportValue(varpref, var);
0				hasTimerSettings = true;
0			elseif (string.sub(key,1,7)  == "stacks.") then
0				importStacksSettings[key] = self:ExtractImportValue(varpref, var);
0				hasStacksSettings = true;
			else
0			    importAuraSettings[key] = self:ExtractImportValue(varpref, var);
			end
	 	end
		
0		for k, v in pairs(aura) do
0			local varType = type(v);
			--self:Message(k, "  ", v, "  ", varType, "  ", importAuraSettings[k]);
0			if (k=="combat") then
0				if (importAuraSettings.combat==0) then
0					aura.combat = 0;
0				elseif (importAuraSettings.combat==1) then
0					aura.combat = true;
0				elseif (importAuraSettings.combat==2) then
0					aura.combat = false;
				end
0			elseif (k=="isResting") then
0				if (importAuraSettings.ignoreResting) then
0					aura.isResting = true;
				else
0					aura.isResting = 0;
				end
0			elseif (k=="inRaid") then
0				if (importAuraSettings.isinraid==true) then
0					aura.inRaid = true;
				else
0					aura.inRaid = 0;
				end	
0			elseif (k=="multiids" and offset) then
0				local newMultiids = "";
0				local sep = "";
0				for multiId in string.gmatch(importAuraSettings[k], "[^/]+") do
0					newMultiids = newMultiids .. sep .. tostring(offset + multiId);
0					sep = "/";
				end
0				aura[k] = newMultiids;
0			elseif (varType == "string" or varType == "boolean" or varType == "number" and k~="id") then
0				aura[k] = importAuraSettings[k];
			end
		end	
		
0		if (aura.bufftype==self.BuffTypes.Combo) then --backwards compatability
0			if (string.len(aura.buffname)>1 and string.find(aura.buffname, "/", 1, true)==nil) then
0				local newBuffName=string.sub(aura.buffname, 1, 1);
0				for i=2, string.len(aura.buffname) do
0					newBuffName = newBuffName.."/"..string.sub(aura.buffname, i, i);
				end
0				aura.buffname = newBuffName
			end
		end
		
0		if (importAuraSettings.timer) then --backwards compatability
0			aura.Timer = cPowaTimer(aura);
		end
		
		--self:Message("hasTimerSettings=", hasTimerSettings);
0		if (hasTimerSettings) then
			--self:CreateTimerFrameIfMissing(aura.id)
0			if (aura.Timer==nil) then
0				aura.Timer = cPowaTimer(aura);
			end
0			for k in pairs(aura.Timer) do
0				aura.Timer[k] = importTimerSettings["timer."..k];
			end
		end
0		if (hasStacksSettings) then
			--self:CreateTimerFrameIfMissing(aura.id)
0			if (aura.Stacks==nil) then
0				aura.Stacks = cPowaStacks(aura);
			end
0			for k in pairs(aura.Stacks) do
0				aura.Stacks[k] = importStacksSettings["stacks."..k];
			end
		end
		--self:Message("new Aura created from import");
		--aura:Display();
0		return self:AuraFactory(aura.bufftype, auraId, aura);
	end
	
	
2	function PowaAuras:CreateNewAuraFromImport(auraId, importString, updateLink)
0		if importString==nil or importString == "" then
0			return;
		end
0		self.Auras[auraId] = self:ImportAura(importString, auraId, updateLink);
0		if (auraId > 120) then
0			PowaGlobalSet[auraId] = self.Auras[auraId];
		end				
	end
	
2	function PowaAuras:CreateNewAuraSetFromImport(importString)
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
0			if (self.Auras[i] ~= nil) then	
0				PowaAuras:DeleteAura(self.Auras[i]);
			end
		end
	
0		local auraId = min;
0		local offset;
0		for k, v in string.gmatch(importString, "([^\n=@]+)=([^@]+)@") do
			--self:ShowText("k=", k, " len=", string.len(v));
0			if (k=="Set") then
0				if (not string.find(v, PowaAuras.Text.ListePlayer)) then
0					PowaPlayerListe[self.MainOptionPage] = v;
				end
			else
0				if (not offset) then
0					local _, _, oldAuraId = string.find(k, "(%d+)");
					--self:ShowText("oldAuraId=", oldAuraId);
0					offset = min - oldAuraId;
					--self:ShowText(" offset=", offset);
				end
0				self.Auras[auraId] = self:ImportAura(v, auraId, offset);
0				auraId = auraId + 1;
			end
	    end
0		getglobal("PowaOptionsList"..self.MainOptionPage):SetText( PowaPlayerListe[self.MainOptionPage] );
0		if (self.MainOptionPage > 5) then
0			PowaGlobalListe[self.MainOptionPage-5] = getglobal("PowaOptionsRenameEditBox"):GetText();
		else
0			PowaPlayerListe[self.MainOptionPage] = getglobal("PowaOptionsRenameEditBox"):GetText();
		end
	
0		self:UpdateMainOption();
	end
	
2	function PowaAuras:OptionImportEffect()
	
0		local i = self:GetNextFreeSlot();
0		if (not i) then
0			self:Message("All aura slots filled"); -- OK
0			return;
		end
	                       
0		self.ImportAuraId = i;
0		self.CurrentAuraPage = self.MainOptionPage;
	
0		StaticPopup_Show("POWERAURAS_IMPORT_AURA");
				
	end
	
2	function PowaAuras:OptionExportEffect()
0		if self.Auras[self.CurrentAuraId] then
0			StaticPopup_Show("POWERAURAS_EXPORT_AURA");
		end
	end
	
2	function PowaAuras:CreateAuraSetString()
0		local setString = "Set=" .. PowaPlayerListe[self.MainOptionPage].."@";
0		local min = ((self.MainOptionPage-1)*24) + 1;
0		local max = min + 23;
	
0		for i = min, max do
			--self:ShowText(i);
0			if (self.Auras[i] ~= nil and self.Auras[i].buffname ~= "" and self.Auras[i].buffname ~= " ") then	
0				setString = setString .. "\nAura[" .. tostring(i) .. "]=" .. self.Auras[i]:CreateAuraString(true).."@";
				--self:ShowText("Aura[" .. tostring(i) .. "]");
			end
		end
0		return setString;
	end
	
2	function PowaAuras:OptionImportSet()
0		StaticPopup_Show("POWERAURAS_IMPORT_AURA_SET");		
	end
	
2	function PowaAuras:OptionExportSet()
0		StaticPopup_Show("POWERAURAS_EXPORT_AURA_SET");
	end
	
2	function PowaAuras:DisableMoveMode()
0		getglobal("PowaOptionsMove"):UnlockHighlight();
0		getglobal("PowaOptionsCopy"):UnlockHighlight();
0		self.MoveEffect = 0;
0		for i = 1, 15 do
0			getglobal("PowaOptionsList"..i.."Glow"):Hide();
		end
		-- reactive les boutons
0		getglobal("PowaOptionsMove"):Enable();
0		getglobal("PowaOptionsCopy"):Enable();
0		getglobal("PowaOptionsRename"):Enable();
0		getglobal("PowaEditButton"):Enable();
0		getglobal("PowaMainTestButton"):Enable();
0		getglobal("PowaMainHideAllButton"):Enable();
0		getglobal("PowaOptionsSelectorNew"):Enable();
0		getglobal("PowaOptionsSelectorDelete"):Enable();
	end
	
2	function PowaAuras:OptionMoveEffect(isMove)
	
0		if (self.Auras[self.CurrentAuraId] == nil or self.Auras[self.CurrentAuraId].buffname == "" or self.Auras[self.CurrentAuraId].buffname == " ") then
0			return; -- on essaye de deplacer un effet vide !!
		end
	
		-- illumine le bouton pour dire que c'est actif
0		if (self.MoveEffect == 0) then
0			if (isMove) then
0				self.MoveEffect = 2;
0				getglobal("PowaOptionsMove"):LockHighlight();
0				getglobal("PowaOptionsCopy"):Disable();
			else
0				self.MoveEffect = 1;
0				getglobal("PowaOptionsCopy"):LockHighlight();
0				getglobal("PowaOptionsMove"):Disable();
			end
0			for i = 1, 15 do
0				getglobal("PowaOptionsList"..i.."Glow"):SetVertexColor(0.5,0.5,0.5);
0				getglobal("PowaOptionsList"..i.."Glow"):Show();
			end
			-- annule tous les boutons
0			getglobal("PowaOptionsRename"):Disable();
0			getglobal("PowaEditButton"):Disable();
0			getglobal("PowaMainTestButton"):Disable();
0			getglobal("PowaMainHideAllButton"):Disable();
0			getglobal("PowaOptionsSelectorNew"):Disable();
0			getglobal("PowaOptionsSelectorDelete"):Disable();
		else
0			self:DisableMoveMode();
		end
	end
	
2	function PowaAuras:BeginMoveEffect(Pfrom, ToPage)
0	  local min = ((ToPage-1)*24) + 1;
0	  local max = min + 23;
		-- trouve un endroit dispo dans la page choisie
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- on a trouve une place dispo
0				self:DoCopyEffect(Pfrom, i, true); -- copie et efface effet actuel
0				self:TriageIcones(self.CurrentAuraPage); -- trie les pages pour eviter les trous
0				self.CurrentAuraId = ((self.MainOptionPage-1)*24)+1; -- nouvelle aura en cours sera le premier effet de cette page
				-- gere les visus
0				self:DisableMoveMode();
				-- met a jour la page
0				self:UpdateMainOption();
0				return;
			end
		end
	end
	
2	function PowaAuras:BeginCopyEffect(Pfrom, ToPage)
0	  local min = ((ToPage-1)*24) + 1;
0	  local max = min + 23;
		-- trouve un endroit dispo dans la page choisie
0		for i = min, max do
0			if (self.Auras[i] == nil or self.Auras[i].buffname == "" or self.Auras[i].buffname == " ") then -- on a trouve une place dispo
0				self:DoCopyEffect(Pfrom, i, false); -- copie et efface effet actuel
0				self.CurrentAuraId = i; -- nouvelle aura en cours sera l'effet cree
				-- gere les visus
0				self:DisableMoveMode();
				-- met a jour la page
0				self:UpdateMainOption();
0				return;
			end
		end
	end
	
2	function PowaAuras:DoCopyEffect(idFrom, idTo, isMove)
0		self.Auras[idTo] = self:AuraFactory(self.Auras[idFrom].bufftype, idTo, self.Auras[idFrom]);
		
0		if (self.Auras[idFrom].Timer) then
0			self.Auras[idTo].Timer = cPowaTimer(self.Auras[idTo], self.Auras[idFrom].Timer);
		end
		
0		if (self.Auras[idFrom].Stacks) then
0			self.Auras[idTo].Stacks = cPowaStacks(self.Auras[idTo], self.Auras[idFrom].Stacks);
		end
	
0		if (idTo > 120) then -- on entre dans la zone des effets globaux
0			PowaGlobalSet[idTo] = self.Auras[idTo];
		end
	
0		if (isMove) then
0			self:DeleteAura(self.Auras[idFrom]);
		end
	end
	-- ---------------------------------------------------------------------------------------------------------------------
2	function PowaAuras:MainOptionShow()
		--self:ShowText("MainOptionShow");
0		if (PowaOptionsFrame:IsVisible()) then
0			self:MainOptionClose();
		else
0			self:OptionHideAll();
0			self.ModTest = true;
0			self:UpdateMainOption();
0			getglobal("PowaOptionsFrame"):Show();
0			PlaySound("TalentScreenOpen");
0			if (PowaMisc.Disabled) then
0				self:DisplayText("Power Auras "..self.Colors.Red..ADDON_DISABLED.."|r");
			end
		end
	end
	
2	function PowaAuras:MainOptionClose()
		--self:ShowText("MainOptionClose");
0		self:DisableMoveMode();
0		self.ModTest = false;
0		if ColorPickerFrame:IsVisible() then
0			self.CancelColor();
0			ColorPickerFrame:Hide();
		end
0		getglobal("FontSelectorFrame"):Hide();
0		getglobal("PowaBarConfigFrame"):Hide();
0		getglobal("PowaOptionsFrame"):Hide();
0		PlaySound("TalentScreenClose");
	
0		PowaAuras:OptionHideAll();
	    
0		self:FindAllChildren();
0		self:CreateEffectLists();	
0		self.DoCheck.All = true;
0		self:NewCheckBuffs();
0	 	self:MemorizeActions();
	end
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< MAIN OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
2	function PowaAuras:UpdateTimerOptions()
	
0		local timer = self.Auras[self.CurrentAuraId].Timer;
0		if (timer) then
			
0			getglobal("PowaShowTimerButton"):SetChecked(timer.enabled);
	
0			getglobal("PowaTimerAlphaSlider"):SetValue(timer.a);
0			getglobal("PowaTimerSizeSlider"):SetValue(timer.h);
			-- ajuste slider Y
0			getglobal("PowaTimerCoordSlider"):SetMinMaxValues(timer.y-5000,timer.y+5000);
0			getglobal("PowaTimerCoordSliderLow"):SetText(timer.y-100);
0			getglobal("PowaTimerCoordSliderHigh"):SetText(timer.y+100);
0			getglobal("PowaTimerCoordSlider"):SetValue(timer.y);
0			getglobal("PowaTimerCoordSlider"):SetMinMaxValues(timer.y-100,timer.y+100);
			-- ajuste slider X
0			getglobal("PowaTimerCoordXSlider"):SetMinMaxValues(timer.x-5000,timer.x+5000);
0			getglobal("PowaTimerCoordXSliderLow"):SetText(timer.x-100);
0			getglobal("PowaTimerCoordXSliderHigh"):SetText(timer.x+100);
0			getglobal("PowaTimerCoordXSlider"):SetValue(timer.x);
0			getglobal("PowaTimerCoordXSlider"):SetMinMaxValues(timer.x-100,timer.x+100);
	
0			getglobal("PowaBuffTimerCentsButton"):SetChecked(timer.cents);
0			getglobal("PowaBuffTimerDualButton"):SetChecked(timer.dual);
0			getglobal("PowaBuffTimerLeadingZerosButton"):SetChecked(timer.HideLeadingZeros);
0			getglobal("PowaBuffTimerUpdatePingButton"):SetChecked(timer.UpdatePing);
0			getglobal("PowaBuffTimerTransparentButton"):SetChecked(timer.Transparent);
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownTimerTexture, timer.Texture);
			
0			PowaTimerInvertAuraSlider:SetValue(timer.InvertAuraBelow);
	
	
		end
	end
	
2	function PowaAuras:UpdateStacksOptions()
	
0		local stacks = self.Auras[self.CurrentAuraId].Stacks;
0		if (stacks) then
			
0			getglobal("PowaShowStacksButton"):SetChecked(stacks.enabled);
	
0			getglobal("PowaStacksAlphaSlider"):SetValue(stacks.a);
0			getglobal("PowaStacksSizeSlider"):SetValue(stacks.h);
			-- ajuste slider Y
0			getglobal("PowaStacksCoordSlider"):SetMinMaxValues(stacks.y-5000,stacks.y+5000);
0			getglobal("PowaStacksCoordSliderLow"):SetText(stacks.y-100);
0			getglobal("PowaStacksCoordSliderHigh"):SetText(stacks.y+100);
0			getglobal("PowaStacksCoordSlider"):SetValue(stacks.y);
0			getglobal("PowaStacksCoordSlider"):SetMinMaxValues(stacks.y-100,stacks.y+100);
			-- ajuste slider X
0			getglobal("PowaStacksCoordXSlider"):SetMinMaxValues(stacks.x-5000,stacks.x+5000);
0			getglobal("PowaStacksCoordXSliderLow"):SetText(stacks.x-100);
0			getglobal("PowaStacksCoordXSliderHigh"):SetText(stacks.x+100);
0			getglobal("PowaStacksCoordXSlider"):SetValue(stacks.x);
0			getglobal("PowaStacksCoordXSlider"):SetMinMaxValues(stacks.x-100,stacks.x+100);
	
0			getglobal("PowaBuffStacksTransparentButton"):SetChecked(stacks.Transparent);
0			getglobal("PowaBuffStacksUpdatePingButton"):SetChecked(stacks.UpdatePing);
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownStacksTexture, stacks.Texture);
	
		end
	end
	
	
2	function PowaAuras:SetOptionText(optionsText)
		--self:ShowText("typeText=", optionsText.typeText);
0		PowaDropDownBuffTypeText:SetText(optionsText.typeText);
0		if (optionsText.buffNameTooltip) then
0			PowaBarBuffName:Show();
0			PowaBarBuffName.aide = optionsText.buffNameTooltip;
		else
0			self:DisableTextfield("PowaBarBuffName");
		end
0		if (optionsText.exactTooltip) then
0			self:EnableCheckBox("PowaExactButton");
0			PowaExactButton.aide = optionsText.exactTooltip;
		else
0			self:DisableCheckBox("PowaExactButton");
		end
0		if (optionsText.mineText) then
0			self:EnableCheckBox("PowaMineButton");
0			PowaMineButtonText:SetText(optionsText.mineText);
0			PowaMineButton.tooltipText = optionsText.mineTooltip; 
		else
0			PowaMineButton:SetChecked(false);
0			self:DisableCheckBox("PowaMineButton");
		end
0		if (optionsText.targetFriendText) then
0			self:EnableCheckBox("PowaTargetFriendButton");
0			PowaTargetFriendButtonText:SetText(optionsText.targetFriendText);
0			PowaTargetFriendButton.tooltipText = optionsText.targetFriendTooltip; 
		else
0			PowaTargetFriendButton:SetChecked(false);
0			self:DisableCheckBox("PowaTargetFriendButton");
		end
		
	end
	
2	function PowaAuras:ShowOptions(optionsToShow)
0		for k,v in pairs(self.OptionHideables) do
0			if (optionsToShow and optionsToShow[v]) then
0				getglobal(v):Show();
			else
0				getglobal(v):Hide();
			end
		end
	end
	
2	function PowaAuras:EnableCheckBoxes(checkBoxesToEnable)
		--self:ShowText("EnableCheckBoxes");
0		for k,v in pairs(self.OptionCheckBoxes) do
			--self:ShowText(v, " checkBoxesToEnable=", checkBoxesToEnable[v]);
0			if (checkBoxesToEnable and checkBoxesToEnable[v]) then
				--self:ShowText(v, " Colours=", self.SetColours[v]);
0				self:EnableCheckBox(v, self.SetColours[v]);
			else
0				getglobal(v):SetChecked(false);
0				self:DisableCheckBox(v);	
			end
		end
	end
	
2	function PowaAuras:EnableTernary(ternariesToEnable)
		--self:ShowText("EnableTernary");
0		for k,v in pairs(self.OptionTernary) do
			--self:ShowText(v, " ternariesToEnable=", ternariesToEnable[v]);
0			if (not ternariesToEnable or not ternariesToEnable[v]) then
				--self:ShowText("Disable Ternary ",v);
				--self:Ternary_Set(getglobal(v));
0				self:DisableTernary(getglobal(v));
			end
		end
	end
	
	
2	function PowaAuras:SetupOptionsForAuraType(aura)
		--self:ShowText("aura=", aura);
	
0		self:SetOptionText(aura.OptionText);
0		self:ShowOptions(aura.ShowOptions);
0		self:EnableCheckBoxes(aura.CheckBoxes);
0		self:EnableTernary(aura.Ternary);
	
0		if (aura:ShowTimerDurationSlider()) then
0			PowaTimerDurationSlider:Show();
		else
0			PowaTimerDurationSlider:Hide();
		end
		
0		if (aura.CanHaveInvertTime) then
0			PowaTimerInvertAuraSlider:Show();
		else
0			PowaTimerInvertAuraSlider:Hide();
		end
	end
	
2	function PowaAuras:InitPage()
	
		--self:ShowText("InitPage ", self.CurrentAuraId);
	
0		local CheckTexture = 0;
0	    local aura = self.Auras[self.CurrentAuraId];
		--self:Message("aura ", aura);
0		self:UpdateTimerOptions();
	
0		getglobal("PowaDropDownAnim1Text"):SetText(self.Anim[aura.anim1]);
0		getglobal("PowaDropDownAnim2Text"):SetText(self.Anim[aura.anim2]);
0		getglobal("PowaDropDownAnimBeginText"):SetText(self.BeginAnimDisplay[aura.begin]);
0		getglobal("PowaDropDownAnimEndText"):SetText(self.EndAnimDisplay[aura.finish]);
0		getglobal("PowaDropDownSoundText"):SetText(self.Sound[aura.sound]);
0		getglobal("PowaDropDownStanceText"):SetText(self.PowaStance[aura.stance]);
0		getglobal("PowaBarCustomSound").aide = self.Text.aideCustomSound;
0		getglobal("PowaBarBuffStacks").aide = self.Text.aideStacks;
		-- ---------------
0		getglobal("PowaOwntexButton"):SetChecked(aura.owntex);
0		getglobal("PowaWowTextureButton"):SetChecked(aura.wowtex);
0		getglobal("PowaCustomTextureButton"):SetChecked(aura.customtex);
0		getglobal("PowaTextAuraButton"):SetChecked(aura.textaura);
0		getglobal("PowaRandomColorButton"):SetChecked(aura.randomcolor);
0		getglobal("PowaShowSpinAtBeginning"):SetChecked(aura.beginSpin);
0		getglobal("PowaOldAnimation"):SetChecked(aura.UseOldAnimations);
0		getglobal("PowaIngoreCaseButton"):SetChecked(aura.ignoremaj);
0		getglobal("PowaInverseButton"):SetChecked(aura.inverse);
0		getglobal("PowaTargetButton"):SetChecked(aura.target);
0		getglobal("PowaTargetFriendButton"):SetChecked(aura.targetfriend);
0		getglobal("PowaPartyButton"):SetChecked(aura.party);
0		getglobal("PowaFocusButton"):SetChecked(aura.focus);
0		getglobal("PowaRaidButton"):SetChecked(aura.raid);
0		getglobal("PowaGroupOrSelfButton"):SetChecked(aura.groupOrSelf);
0		getglobal("PowaGroupAnyButton"):SetChecked(aura.groupany);
0		getglobal("PowaOptunitnButton"):SetChecked(aura.optunitn);
0		getglobal("PowaExactButton"):SetChecked(aura.exact);
0		getglobal("PowaMineButton"):SetChecked(aura.mine);
0		getglobal("PowaThresholdInvertButton"):SetChecked(aura.thresholdinvert);
		-- ----------------
0		getglobal("PowaTexModeButton"):SetChecked(aura.texmode == 1);
	
		-- Ternary Logic
0		self:TernarySetState(getglobal("PowaInCombatButton"), aura.combat);
0		self:TernarySetState(getglobal("PowaIsInRaidButton"), aura.inRaid);
0		self:TernarySetState(getglobal("PowaIsInPartyButton"), aura.inParty);
0		self:TernarySetState(getglobal("PowaRestingButton"), aura.isResting);
0		self:TernarySetState(getglobal("PowaIsMountedButton"), aura.ismounted);
0		self:TernarySetState(getglobal("PowaInVehicleButton"), aura.inVehicle);
0		self:TernarySetState(getglobal("PowaIsAliveButton"), aura.isAlive);
	
0		getglobal("PowaTimerDurationSlider"):SetValue(aura.timerduration);
0		getglobal("PowaBarThresholdSlider"):SetValue(aura.threshold);
		----------------
		-- dual specs
0		self:EnableCheckBox("PowaTalentGroup1Button");
0		self:EnableCheckBox("PowaTalentGroup2Button");
0		getglobal("PowaTalentGroup1Button"):SetChecked(aura.spec1);
0		getglobal("PowaTalentGroup2Button"):SetChecked(aura.spec2);
		
		
0		aura:HideShowTabs();
0		self:SetupOptionsForAuraType(aura);
	
		-- changement de page
0		if (getglobal("PowaBarConfigFrameEditor4"):IsVisible() and not PowaEditorTab3:IsVisible() ) then
0			PanelTemplates_SelectTab(PowaEditorTab2);
0			PanelTemplates_DeselectTab(PowaEditorTab1);
0			PanelTemplates_DeselectTab(PowaEditorTab3);
0			getglobal("PowaBarConfigFrameEditor2"):Show();
0			getglobal("PowaBarConfigFrameEditor3"):Hide();
0			getglobal("PowaBarConfigFrameEditor4"):Hide();
		end
		-- Visuels auras
0		getglobal("PowaBarAuraAlphaSlider"):SetValue(aura.alpha);
0		getglobal("PowaBarAuraSizeSlider"):SetValue(aura.size);
		-- ajuste slider Y
0		getglobal("PowaBarAuraCoordSlider"):SetMinMaxValues(aura.y-5000,aura.y+5000);
0		getglobal("PowaBarAuraCoordSliderLow"):SetText(aura.y-200);
0		getglobal("PowaBarAuraCoordSliderHigh"):SetText(aura.y+200);
0		getglobal("PowaBarAuraCoordSlider"):SetValue(aura.y);
0		getglobal("PowaBarAuraCoordSlider"):SetMinMaxValues(aura.y-200,aura.y+200);
0		getglobal("PowaBarAuraCoordYEdit"):SetText(aura.y);
		-- ajuste slider X
0		getglobal("PowaBarAuraCoordXSlider"):SetMinMaxValues(aura.x-5000,aura.x+5000);
0		getglobal("PowaBarAuraCoordXSliderLow"):SetText(aura.x-200);
0		getglobal("PowaBarAuraCoordXSliderHigh"):SetText(aura.x+200);
0		getglobal("PowaBarAuraCoordXSlider"):SetValue(aura.x);
0		getglobal("PowaBarAuraCoordXSlider"):SetMinMaxValues(aura.x-200,aura.x+200);
0		getglobal("PowaBarAuraCoordXEdit"):SetText(aura.x);
	
0		getglobal("PowaBarAuraAnimSpeedSlider"):SetValue(aura.speed);
		
0		getglobal("PowaBarAuraDurationSlider"):SetValue(aura.duration);
0		getglobal("PowaBarAuraDurationSlider"):SetMinMaxValues(aura.minDuration or 0,30);
0		if (not aura.minDuration or aura.minDuration==0) then
0			getglobal("PowaBarAuraDurationSliderLow"):SetText(PowaAuras.Text.aucune);
		else
0			getglobal("PowaBarAuraDurationSliderLow"):SetText(aura.minDuration);
		end
		
0		getglobal("PowaBarAuraSymSlider"):SetValue(aura.symetrie);
0		getglobal("PowaBarAuraDeformSlider"):SetValue(aura.torsion);
0		getglobal("PowaBarBuffName"):SetText(aura.buffname);
0		getglobal("PowaBarMultiID"):SetText(aura.multiids);
0		getglobal("PowaBarTooltipCheck"):SetText(aura.tooltipCheck);
	
0		getglobal("PowaBarCustomSound"):SetText(aura.customsound);
0		getglobal("PowaBarUnitn"):SetText(aura.unitn);
		
0		getglobal("PowaBarBuffStacks"):SetText(aura:StacksText());	
		
0		if (aura.icon == "") then
0			getglobal("PowaIconTexture"):SetTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
		else
0			getglobal("PowaIconTexture"):SetTexture(aura.icon);
		end
	    
0		if (aura.optunitn == true) then
0			self:EnableTextfield("PowaBarUnitn");
0		elseif (aura.optunitn == false) then
0			self:DisableTextfield("PowaBarUnitn");
		end
	
0		if (aura.owntex) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(aura.icon);
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
			
0		elseif (aura.wowtex) then
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			if (#self.WowTextures > self.maxtextures) then
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
			else
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
			end
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(#self.WowTextures);
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.WowTextures[aura.texture]);
	
0		elseif (aura.customtex) then
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			getglobal("PowaBarCustomTexName"):Show();
0			getglobal("PowaBarCustomTexName"):SetText(aura.customname);
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self:CustomTexPath(aura.customname));
0		elseif (aura.textaura) then
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Show();
0			getglobal("PowaFontsButton"):Show();
0			getglobal("PowaBarAurasText"):SetText(aura.aurastext);
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Icons\\INV_Scroll_02");  --- Driizt: check if need to test as well
		else
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
0			if (#self.WowTextures < self.maxtextures) then
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
			else
0				getglobal("PowaBarAuraTextureSlider"):SetValue(aura.texture);
0				getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
			end
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(self.maxtextures);
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..aura.texture..".tga");
		end
0		if (CheckTexture ~= 1) then
0			getglobal("AuraTexture"):SetTexture("Interface\\CharacterFrame\\TempPortrait.tga");
		end
	
0		getglobal("PowaColorNormalTexture"):SetVertexColor(aura.r,aura.g,aura.b);
0		getglobal("AuraTexture"):SetVertexColor(aura.r,aura.g,aura.b);
	
		-- affiche la symetrie
0		if (aura.symetrie == 1) then 
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 0, 1); -- inverse X
0		elseif (aura.symetrie == 2) then 
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 1, 0); -- inverse Y
0		elseif (aura.symetrie == 3) then 
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 1, 0); -- inverse XY
		else 
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 0, 1); 
		end
	
0		getglobal("PowaColor_SwatchBg").r = aura.r;
0		getglobal("PowaColor_SwatchBg").g = aura.g;
0		getglobal("PowaColor_SwatchBg").b = aura.b;
	
0		getglobal("PowaHeader"):SetText(self.Text.nomEffectEditor);
	end
	-----------------------------------------------------------------------------------------------------------------------
	-- Sliders Changed
	-----------------------------------------------------------------------------------------------------------------------
	
2	function PowaAuras:BarAuraTextureSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraTextureSlider"):GetValue();
0		local CheckTexture = 0;
0		local auraId = self.CurrentAuraId;
		
0		if (self.Auras[auraId].owntex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.Auras[auraId].icon);
	
0		elseif (self.Auras[auraId].wowtex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self.WowTextures[SliderValue]);
	
0		elseif (self.Auras[auraId].customtex == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture(self:CustomTexPath(self.Auras[auraId].customname));
		
0		elseif (self.Auras[auraId].textaura == true) then
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Icons\\INV_Scroll_02"); 
		
		else
0			CheckTexture = getglobal("AuraTexture"):SetTexture("Interface\\Addons\\PowerAuras\\Auras\\Aura"..SliderValue..".tga");
		end
		
0		if (CheckTexture ~= 1) then
0			getglobal("AuraTexture"):SetTexture("Interface\\CharacterFrame\\TempPortrait.tga");
		end
			
0		getglobal("PowaBarAuraTextureSliderText"):SetText(self.Text.nomTexture.." : "..SliderValue);
0		getglobal("AuraTexture"):SetVertexColor(self.Auras[auraId].r,self.Auras[auraId].g,self.Auras[auraId].b);
		
0		PowaBarAuraTextureEdit:SetText(SliderValue);
		
0		self.Auras[auraId].texture = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:TextAuraTextureChanged()
0		local thisText = getglobal("PowaBarAuraTextureEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		getglobal("PowaBarAuraTextureSlider"):SetValue(thisNumber or 0);
	end
	
	 
2	function PowaAuras:BarAuraAlphaSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraAlphaSlider"):GetValue();
	
0		getglobal("PowaBarAuraAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[self.CurrentAuraId].alpha = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraSizeSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraSizeSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[auraId].size = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraCoordSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraCoordSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
0		if (getglobal("PowaBarAuraCoordYEdit")) then
0			getglobal("PowaBarAuraCoordYEdit"):SetText(SliderValue);
		end
	
0		self.Auras[auraId].y = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraCoordXSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraCoordXSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
		
0		getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
0		if (getglobal("PowaBarAuraCoordXEdit")) then
0			getglobal("PowaBarAuraCoordXEdit"):SetText(SliderValue);
		end
	
0		self.Auras[auraId].x = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraAnimSpeedSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraAnimSpeedSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
	
0		getglobal("PowaBarAuraAnimSpeedSliderText"):SetText(self.Text.nomSpeed.." : "..format("%.0f",SliderValue*100).."%");
	
0		self.Auras[auraId].speed = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraAnimDurationSliderChanged(control)
0		if (self.Initialising) then return; end
0		local sliderValue = control:GetValue();
	
0		getglobal(control:GetName().."Text"):SetText(self.Text.nomDuration.." : "..sliderValue.." sec");
	
		--self:ShowText("Duration set to ", sliderValue);
0		self.Auras[self.CurrentAuraId].duration = sliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraSymSliderChanged()
0		if (self.Initialising) then return; end
	
0		local SliderValue = getglobal("PowaBarAuraSymSlider"):GetValue();
	
0		if (SliderValue == 0) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : "..self.Text.aucune);
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 0, 1);
0		elseif (SliderValue == 1) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : X");
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 0, 1);
0		elseif (SliderValue == 2) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : Y");
0			getglobal("AuraTexture"):SetTexCoord(0, 1, 1, 0);
0		elseif (SliderValue == 3) then
0			getglobal("PowaBarAuraSymSliderText"):SetText(self.Text.nomSymetrie.." : XY");
0			getglobal("AuraTexture"):SetTexCoord(1, 0, 1, 0);
		end
		
0		self.Auras[self.CurrentAuraId].symetrie = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarAuraDeformSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarAuraDeformSlider"):GetValue();
	
0		getglobal("PowaBarAuraDeformSliderText"):SetText(self.Text.nomDeform.." : "..format("%.2f", SliderValue));
	
0		self.Auras[self.CurrentAuraId].torsion = SliderValue;
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:BarThresholdSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaBarThresholdSlider"):GetValue();
0		local auraId = self.CurrentAuraId;
	
0		getglobal("PowaBarThresholdSliderText"):SetText(self.Text.nomThreshold.." : "..SliderValue.."%");
	
0		self.Auras[auraId].threshold = SliderValue;
	end
	
	------------------------------------------------------------------
	-- Text Changed
	------------------------------------------------------------------
	
2	function PowaAuras:TextCoordXChanged()
0		local thisText = getglobal("PowaBarAuraCoordXEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		local auraId = self.CurrentAuraId;
	
0		if (thisNumber == nil) then
0			getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..0);
0			getglobal("PowaBarAuraCoordXSlider"):SetValue(0);
0			getglobal("PowaBarAuraCoordXEdit"):SetText(0);
0			self.Auras[auraId].x = 0;	
		else
0			if (thisNumber > 300 or thisNumber < -300) then
0				getglobal("PowaBarAuraCoordXEdit"):SetText(thisNumber);
0				self:DisableSlider("PowaBarAuraCoordXSlider");
			else
0				self:EnableSlider("PowaBarAuraCoordXSlider");
0				getglobal("PowaBarAuraCoordXSliderText"):SetText(self.Text.nomPos.." X : "..thisNumber);
0				getglobal("PowaBarAuraCoordXSlider"):SetValue(thisNumber);
			end
0			self.Auras[auraId].x = thisNumber;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:TextCoordYChanged()
0		local thisText = getglobal("PowaBarAuraCoordYEdit"):GetText();
0		local thisNumber = tonumber(thisText);
0		local auraId = self.CurrentAuraId;
	
0		if (thisNumber == nil) then
0			getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..0);
0			getglobal("PowaBarAuraCoordSlider"):SetValue(0);
0			getglobal("PowaBarAuraCoordYEdit"):SetText(0);
0			self.Auras[auraId].y = 0;	
		else
0			if (thisNumber > 300 or thisNumber < -300) then
0				getglobal("PowaBarAuraCoordYEdit"):SetText(thisNumber);
0				self:DisableSlider("PowaBarAuraCoordSlider");
			else
0				self:EnableSlider("PowaBarAuraCoordSlider");
0				getglobal("PowaBarAuraCoordSliderText"):SetText(self.Text.nomPos.." Y : "..thisNumber);
0				getglobal("PowaBarAuraCoordSlider"):SetValue(thisNumber);
			end
0			self.Auras[auraId].y = thisNumber;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:TextChanged()
0		local oldText = PowaBarBuffName:GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldText ~= self.Auras[auraId].buffname) then
0			self.Auras[auraId].buffname = PowaBarBuffName:GetText();
0			self.Auras[auraId].icon = "";
0			PowaIconTexture:SetTexture("Interface\\Icons\\Inv_Misc_QuestionMark");
		end
	end
	
2	function PowaAuras:MultiIDChanged()
0		local oldText = getglobal("PowaBarMultiID"):GetText();
0		local auraId = self.CurrentAuraId;
0		if (oldText ~= self.Auras[auraId].multiids) then
0			self.Auras[auraId].multiids = getglobal("PowaBarMultiID"):GetText();
0			self:FindAllChildren();
		end
	end
	
2	function PowaAuras:TooltipCheckChanged()
0		local oldText = getglobal("PowaBarTooltipCheck"):GetText();
0		local auraId = self.CurrentAuraId;
0		if (oldText ~= self.Auras[auraId].tooltipCheck) then
0			self.Auras[auraId].tooltipCheck = getglobal("PowaBarTooltipCheck"):GetText();
		end
	end
	
2	function PowaAuras:StacksTextChanged()
0		local aura = self.Auras[self.CurrentAuraId];
0		aura:SetStacks(getglobal("PowaBarBuffStacks"):GetText());
	end
	
2	function PowaAuras:UnitnTextChanged()
0		local oldUnitnText = getglobal("PowaBarUnitn"):GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldUnitnText ~= self.Auras[auraId].unitn) then
0			self.Auras[auraId].unitn = getglobal("PowaBarUnitn"):GetText();
		end
	end
	
2	function PowaAuras:CustomTextChanged()
0		local auraId = self.CurrentAuraId;
0		self.Auras[auraId].customname = getglobal("PowaBarCustomTexName"):GetText();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:AurasTextCancel()
0		local auraId = self.CurrentAuraId;
0		getglobal("PowaBarAurasText"):SetText(self.Auras[auraId].aurastext);
	end
	
2	function PowaAuras:AurasTextChanged()
0		local auraId = self.CurrentAuraId;
0		self.Auras[auraId].aurastext = getglobal("PowaBarAurasText"):GetText();
		--self:Message("aura text changed to ", self.Auras[auraId].aurastext);
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:CustomSoundTextChanged()
0		local oldCustomSound = getglobal("PowaBarCustomSound"):GetText();
0		local auraId = self.CurrentAuraId;
	
0		if (oldCustomSound ~= self.Auras[auraId].customsound) then -- meme texte
0			self.Auras[auraId].customsound = getglobal("PowaBarCustomSound"):GetText();
0			if not (self.Auras[auraId].customsound == "") then
0				PlaySoundFile("Interface\\AddOns\\PowerAuras\\Sounds\\"..self.Auras[auraId].customsound);
			end
		end	
	end
	
	---------------------------------
	-- Checkboxes changed
	---------------------------------
	
2	function PowaAuras:InverseChecked()
0		local aura = self.Auras[self.CurrentAuraId];
0		if (getglobal("PowaInverseButton"):GetChecked()) then
0			aura.inverse = true;
		else
0			aura.inverse = false;
		end
0		aura:HideShowTabs();
	end
	
2	function PowaAuras:IgnoreMajChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaIngoreCaseButton"):GetChecked()) then
0			self.Auras[auraId].ignoremaj = true;
		else
0			self.Auras[auraId].ignoremaj = false;
		end
	end
	
2	function PowaAuras:ExactChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaExactButton"):GetChecked()) then
0			self.Auras[auraId].exact = true;
		else
0			self.Auras[auraId].exact = false;
		end
	end
	
2	function PowaAuras:TalentGroup1Checked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTalentGroup1Button"):GetChecked()) then
0			self.Auras[auraId].spec1 = true;
	        else
0			self.Auras[auraId].spec1 = false;
		end
	end
	
2	function PowaAuras:TalentGroup2Checked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTalentGroup2Button"):GetChecked()) then
0			self.Auras[auraId].spec2 = true;
		else
0			self.Auras[auraId].spec2 = false;
		end
	end
	
2	function PowaAuras:MineChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaMineButton"):GetChecked()) then
0			self.Auras[auraId].mine = true;
		else
0			self.Auras[auraId].mine = false;
		end
	end
	
	
2	function PowaAuras:CheckedButtonOnClick(button, key)
0		self.Auras[self.CurrentAuraId][key] = (button:GetChecked()~=nil);
	end
	
2	function PowaAuras:RandomColorChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaRandomColorButton"):GetChecked()) then
0			self.Auras[auraId].randomcolor = true;
		else
0			self.Auras[auraId].randomcolor = false;
		end
	end
	
2	function PowaAuras:TexModeChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTexModeButton"):GetChecked()) then
0			self.Auras[auraId].texmode = 1;
		else
0			self.Auras[auraId].texmode = 2;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:ThresholdInvertChecked(owner)
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaThresholdInvertButton"):GetChecked()) then
0			self.Auras[auraId].thresholdinvert = true;
		else
0			self.Auras[auraId].thresholdinvert = false;
		end
	end
	
	------------------------------------
	
2	function PowaAuras:OwntexChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaOwntexButton"):GetChecked()) then
0			self.Auras[auraId].owntex = true;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].customtex = false;
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].owntex = false;
		end	
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:WowTexturesChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaWowTextureButton"):GetChecked()) then
0			self.Auras[auraId].wowtex = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].customtex = false;
0			self.Auras[auraId].textaura = false;
			
0			getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,#self.WowTextures);
0			getglobal("PowaBarAuraTextureSlider"):SetValue(1);
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(#self.WowTextures);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].wowtex = false;
0			getglobal("PowaBarAuraTextureSlider"):SetMinMaxValues(1,self.maxtextures);
0			getglobal("PowaBarAuraTextureSlider"):SetValue(1);
0			getglobal("PowaBarAuraTextureSliderHigh"):SetText(self.maxtextures);
		end
0		PowaAuras:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:CustomTexturesChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaCustomTextureButton"):GetChecked()) then
0			self.Auras[auraId].customtex = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarCustomTexName"):Show();
0			getglobal("PowaBarCustomTexName"):SetText(self.Auras[auraId].customname);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaTextAuraButton"):SetChecked(false);
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		else
0			self.Auras[auraId].customtex = false;
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarCustomTexName"):Hide();
		end
0		PowaAuras:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:TextAuraChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTextAuraButton"):GetChecked()) then
0			self.Auras[auraId].textaura = true;
0			self.Auras[auraId].owntex = false;
0			self.Auras[auraId].wowtex = false;
0			self.Auras[auraId].customtex = false;
0			getglobal("PowaBarAuraTextureSlider"):Hide();
0			getglobal("PowaBarAurasText"):Show();
0			getglobal("PowaFontsButton"):Show();
0			getglobal("PowaBarAurasText"):SetText(self.Auras[auraId].aurastext);
0			getglobal("PowaOwntexButton"):SetChecked(false);
0			getglobal("PowaWowTextureButton"):SetChecked(false);
0			getglobal("PowaCustomTextureButton"):SetChecked(false);
0			getglobal("PowaBarCustomTexName"):Hide();
		else
0			self.Auras[auraId].textaura = false;
0			getglobal("PowaBarAuraTextureSlider"):Show();
0			getglobal("PowaBarAurasText"):Hide();
0			getglobal("PowaFontsButton"):Hide();
		end
0		self:BarAuraTextureSliderChanged();
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
	-----------------------------------------------
	-- Targets, Party, Raid, ... Checkboxes
	-----------------------------------------------
	
2	function PowaAuras:TargetChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTargetButton"):GetChecked()) then
0			self.Auras[auraId].target = true;
		else
0			self.Auras[auraId].target = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:TargetFriendChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaTargetFriendButton"):GetChecked()) then
0			self.Auras[auraId].targetfriend = true;
		else
0			self.Auras[auraId].targetfriend = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:PartyChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaPartyButton"):GetChecked()) then
0			self.Auras[auraId].party = true;
		else
0			self.Auras[auraId].party = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:GroupOrSelfChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaGroupOrSelfButton"):GetChecked()) then
0			self.Auras[auraId].groupOrSelf = true;
		else
0			self.Auras[auraId].groupOrSelf = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:FocusChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaFocusButton"):GetChecked()) then
0			self.Auras[auraId].focus = true;
		else
0			self.Auras[auraId].focus = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:RaidChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaRaidButton"):GetChecked()) then
0			self.Auras[auraId].raid = true;
		else
0			self.Auras[auraId].raid = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:GroupAnyChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaGroupAnyButton"):GetChecked()) then
0			self.Auras[auraId].groupany = true;
		else
0			self.Auras[auraId].groupany = false;
		end
0		self:InitPage();
	end
	
2	function PowaAuras:OptunitnChecked()
0		local auraId = self.CurrentAuraId;
0		if (getglobal("PowaOptunitnButton"):GetChecked()) then
0			self.Auras[auraId].optunitn = true;		
0			getglobal("PowaBarUnitn"):Show();
0			getglobal("PowaBarUnitn"):SetText(self.Auras[auraId].unitn);
		else
0			self.Auras[auraId].optunitn = false;
0			getglobal("PowaBarUnitn"):Hide();
		end
	end
	
	------------------------------------------
	-- Dropdownmenus
	------------------------------------------
	
2	function PowaAuras.DropDownMenu_Initialize(owner)
0		local info;
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura == nil) then
0			aura = PowaAuras:AuraFactory(PowaAuras.BuffTypes.Buff, 0);
		end
		
0		if (owner:GetName() == "PowaDropDownAnim1Button" or owner:GetName() == "PowaDropDownAnim1") then
0			for i = 1, 10 do
0				info = {}; 
0				info.text = PowaAuras.Anim[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickAnim1;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnim1, PowaAuras.Anim[aura.anim1]);
0		elseif (owner:GetName() == "PowaDropDownAnim2Button" or owner:GetName() == "PowaDropDownAnim2") then
0			for i = 0, 10 do
0				info = {}; 
0				info.text = PowaAuras.Anim[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickAnim2;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnim2, PowaAuras.Anim[aura.anim2]);
0		elseif (owner:GetName() == "PowaDropDownStanceButton" or owner:GetName() == "PowaDropDownStance") then
0			info = {func = PowaAuras.DropDownMenu_OnClickStance, owner = owner};
0			for i = 0, #(PowaAuras.PowaStance) do
0				info.text = PowaAuras.PowaStance[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end				
0			UIDropDownMenu_SetSelectedValue(PowaDropDownStance, PowaAuras.PowaStance[aura.stance]);
0			UIDropDownMenu_SetWidth(PowaDropDownStance, 210, 1);
0		elseif (owner:GetName() == "PowaDropDownSoundButton" or owner:GetName() == "PowaDropDownSound") then
0			for i = 0, 15 do
0				info = {}; 
0				info.text = PowaAuras.Sound[i]; 
0				info.func = PowaAuras.DropDownMenu_OnClickSound;
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownSound, PowaAuras.Sound[aura.sound]);	
0			UIDropDownMenu_SetWidth(PowaDropDownSound, 220, 1);
0		elseif (owner:GetName() == "PowaDropDownAnimBeginButton" or owner:GetName() == "PowaDropDownAnimBegin") then
0			info = {func = PowaAuras.DropDownMenu_OnClickBegin, owner = owner}; 
0			for i = 0, #PowaAuras.BeginAnimDisplay do
0				info.text = PowaAuras.BeginAnimDisplay[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnimBegin, PowaAuras.BeginAnimDisplay[aura.begin]);
0		elseif (owner:GetName() == "PowaDropDownAnimEndButton" or owner:GetName() == "PowaDropDownAnimEnd") then
0			info = {func = PowaAuras.DropDownMenu_OnClickEnd, owner = owner}; 
0			for i = 0, #PowaAuras.EndAnimDisplay do
0				info.text = PowaAuras.EndAnimDisplay[i]; 
0				info.value = i;
0				UIDropDownMenu_AddButton(info);
			end
0			UIDropDownMenu_SetSelectedValue(PowaDropDownAnimEnd, PowaAuras.EndAnimDisplay[aura.finish]);
0		elseif (owner:GetName() == "PowaDropDownBuffTypeButton" or owner:GetName() == "PowaDropDownBuffType") then
			--PowaAuras:Message("DropDownMenu_Initialize for buff type");
	
0			info = {func = PowaAuras.DropDownMenu_OnClickBuffType, owner = owner};
0			for _,v in pairs(PowaAuras.BuffTypes) do
0				info.text = PowaAuras.Text.AuraType[v];
0				info.value = v;
0				UIDropDownMenu_AddButton(info);
			end
			
0			UIDropDownMenu_SetSelectedValue(PowaDropDownBuffType, aura.bufftype);
		end
	end
	
2	function PowaAuras.DropDownMenu_OnClickBuffType()
		--PowaAuras:Message("DropDownMenu_OnClickBuffType bufftype ", this.value, " for aura ", PowaAuras.CurrentAuraId, " ", this.owner);
	
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
	
0		aura = PowaAuras:AuraFactory(this.value, PowaAuras.CurrentAuraId, PowaAuras.Auras[PowaAuras.CurrentAuraId]);
0		aura.icon= "";
0		PowaAuras.Auras[PowaAuras.CurrentAuraId] = aura
0		if (PowaAuras.CurrentAuraId > 120) then
0			PowaGlobalSet[PowaAuras.CurrentAuraId] = aura;
		end				
	
	
0		if (aura.bufftype == PowaAuras.BuffTypes.TypeDebuff
0		 or aura.bufftype == PowaAuras.BuffTypes.AoE
0		 or aura.bufftype == PowaAuras.BuffTypes.Enchant
0		 or aura.bufftype == PowaAuras.BuffTypes.Combo
0		 or aura.bufftype == PowaAuras.BuffTypes.Health
0		 or aura.bufftype == PowaAuras.BuffTypes.Mana
0		 or aura.bufftype == PowaAuras.BuffTypes.EnergyRagePower
0		 or aura.bufftype == PowaAuras.BuffTypes.Aggro
0		 or aura.bufftype == PowaAuras.BuffTypes.PvP
0		 or aura.bufftype == PowaAuras.BuffTypes.Stance) then
0			aura.owntex = false;
		end
	
0		PowaAuras:InitPage();
	end
	
	
2	function PowaAuras:ShowSpinAtBeginningChecked(control)
0		local aura = self.Auras[self.CurrentAuraId];
0		if (control:GetChecked()) then
0			aura.beginSpin = true;
		else
0			aura.beginSpin = false;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:OldAnimationChecked(control)
0		local aura = self.Auras[self.CurrentAuraId];
0		if (control:GetChecked()) then
0			aura.UseOldAnimations = true;
		else
0			aura.UseOldAnimations = false;
		end
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras.DropDownMenu_OnClickAnim1(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
		--PowaAuras:ShowText("DropDownMenu_OnClickAnim1 optionID=", optionID, " auraId=", auraId);
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnim1, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnim1); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnim1, optionName);
	
0		PowaAuras.Auras[auraId].anim1 = optionID;
0		PowaAuras:RedisplayAura(auraId);
	end
	
2	function PowaAuras.DropDownMenu_OnClickAnim2(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnim2, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnim2); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnim2, optionName);
	
0		PowaAuras.Auras[auraId].anim2 = optionID -1;
0		PowaAuras:RedisplayAura(auraId);
	end
	
2	function PowaAuras.DropDownMenu_OnClickSound(owner)
0		local optionID = owner:GetID();
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownSound, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownSound); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownSound, optionName);
	
0		aura.sound = optionID -1;
0		if (aura.sound == 1) then
0			aura.soundfile = "LEVELUP";
0		elseif (aura.sound == 2) then
0			aura.soundfile = "LOOTWINDOWCOINSOUND";
0		elseif (aura.sound == 3) then
0			aura.soundfile = "MapPing";
0		elseif (aura.sound == 4) then
0			aura.soundfile = "UndeadExploration";
0		elseif (aura.sound == 5) then
0			aura.soundfile = "QUESTADDED";
0		elseif (aura.sound == 6) then
0			aura.soundfile = "QUESTCOMPLETED";
0		elseif (aura.sound == 7) then
0			aura.soundfile = "WriteQuest";
0		elseif (aura.sound == 8) then
0			aura.soundfile = "Fishing Reel in";
0		elseif (aura.sound == 9) then
0			aura.soundfile = "igPVPUpdate";
0		elseif (aura.sound == 10) then
0			aura.soundfile = "ReadyCheck";
0		elseif (aura.sound == 11) then
0			aura.soundfile = "RaidWarning";
0		elseif (aura.sound == 12) then
0			aura.soundfile = "AuctionWindowOpen";
0		elseif (aura.sound == 13) then
0			aura.soundfile = "AuctionWindowClose";
0		elseif (aura.sound == 14) then
0			aura.soundfile = "TellMessage";
0		elseif (aura.sound == 15) then
0			aura.soundfile = "igBackPackOpen";
0		elseif (aura.sound == 0) then
0			aura.soundfile = "";	
		end	
0		if not(aura.soundfile == "") or not (aura.soundfile == nil)then
0			PlaySound(aura.soundfile);
		end	
	end
	
2	function PowaAuras.DropDownMenu_OnClickStance()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local auraId = PowaAuras.CurrentAuraId;
	
0		if (PowaAuras.Auras[auraId].stance ~= this.value) then
0			PowaAuras.Auras[auraId].stance = this.value;
0			PowaAuras.Auras[auraId].icon = "";
		end
0		PowaAuras:InitPage();
	end
	
2	function PowaAuras.DropDownMenu_OnClickBegin(owner)
0		UIDropDownMenu_SetSelectedID(this.owner, this.value + 1); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnimBegin); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnimBegin, optionName);
	
0		PowaAuras.Auras[PowaAuras.CurrentAuraId].begin = this.value;
0		PowaAuras:RedisplayAura(auraId);
	end
	
2	function PowaAuras.DropDownMenu_OnClickEnd(owner)
0		local optionID = owner:GetID();
0		local auraId = PowaAuras.CurrentAuraId;
	
0		UIDropDownMenu_SetSelectedID(PowaDropDownAnimEnd, optionID); 
0		local optionName =  UIDropDownMenu_GetText(PowaDropDownAnimEnd); 
0		UIDropDownMenu_SetSelectedValue(PowaDropDownAnimEnd, optionName);
	
0		PowaAuras.Auras[auraId].finish = optionID - 1;
0		PowaAuras:RedisplayAura(auraId);
	end
	
	----------------------------------------------------------
	-- OPTIONS DEPLACEMENT
	
2	function PowaAuras:Bar_MouseDown(owner, button, frmFrame)
0		if( button == "LeftButton") then
0			getglobal( frmFrame ):StartMoving( );
		end
	end
	
2	function PowaAuras:Bar_MouseUp(owner, button, frmFrame)
0		getglobal( frmFrame ):StopMovingOrSizing( );
	end
	
	----------------------------------------------------------
	-- COLOR PICKER
	
2	function PowaAuras.SetColor()
0		PowaAuras:SetAuraColor(ColorPickerFrame:GetColorRGB());
	end
	
2	function PowaAuras.CancelColor()
0		PowaAuras:SetAuraColor(ColorPickerFrame.previousValues.r, ColorPickerFrame.previousValues.g, ColorPickerFrame.previousValues.b);
	end
	
2	function PowaAuras:SetAuraColor(r, g, b)
		--self:Message("SetColor r=", r, " g=",g, " b=", b);
0		local swatch = getglobal("PowaColorNormalTexture"); -- juste le visuel
0		local frame = getglobal("PowaColor_SwatchBg");      -- enregistre la couleur
0		swatch:SetVertexColor(r,g,b);
0		frame.r = r;
0		frame.g = g;
0		frame.b = b;
	
0		self.Auras[self.CurrentAuraId].r = r;
0		self.Auras[self.CurrentAuraId].g = g;
0		self.Auras[self.CurrentAuraId].b = b;
	
0		getglobal("AuraTexture"):SetVertexColor(r,g,b);
0		self:RedisplayAura(self.CurrentAuraId);
	end
	
2	function PowaAuras:OpenColorPicker()
0		CloseMenus();
0		if ColorPickerFrame:IsVisible() then
0			PowaAuras.CancelColor();
0			ColorPickerFrame:Hide();
		else
0			button = getglobal("PowaColor_SwatchBg");
	
0			ColorPickerFrame.func = self.SetColor -- button.swatchFunc;
0			ColorPickerFrame:SetColorRGB(button.r, button.g, button.b);
0			ColorPickerFrame.previousValues = {r = button.r, g = button.g, b = button.b, opacity = button.opacity};
0			ColorPickerFrame.cancelFunc = self.CancelColor
		
0			ColorPickerFrame:SetPoint("TOPLEFT", "PowaBarConfigFrame", "TOPRIGHT", 0, 0)
		
0			ColorPickerFrame:Show();
		end
	end
	
	----------------------------------------------------------
	-- FONT SELECTOR
	
2	function PowaAuras:FontSelectorOnShow(owner)
0		owner:SetBackdropBorderColor(0.9, 1.0, 0.95); 
0		owner:SetBackdropColor(0.6, 0.6, 0.6);
	end
	
2	function PowaAuras:OpenFontSelector(owner)
0		CloseMenus();
		
0		if (FontSelectorFrame:IsVisible()) then
0			getglobal("FontSelectorFrame"):Hide();
		else
0			FontSelectorFrame.selectedFont = self.Auras[self.CurrentAuraId].aurastextfont;	
0			getglobal("FontSelectorFrame"):Show();
		end
		
	end
	
2	function PowaAuras:FontSelectorOkay(owner)
0		if FontSelectorFrame.selectedFont then
0			self.Auras[self.CurrentAuraId].aurastextfont = FontSelectorFrame.selectedFont;
		else
0			self.Auras[self.CurrentAuraId].aurastextfont = 1;
		end
0		self:RedisplayAura(self.CurrentAuraId);
0		self:FontSelectorClose(owner);
	end
	
2	function PowaAuras:FontSelectorCancel(owner)
0		self:FontSelectorClose(owner);
	end
	
2	function PowaAuras:FontSelectorClose(owner)
0		if (FontSelectorFrame:IsVisible()) then
0			getglobal("FontSelectorFrame"):Hide();
		end
	end
	
2	function PowaAuras:FontButton_OnClick(owner)
0		FontSelectorFrame.selectedFont = getglobal("FontSelectorEditorScrollButton"..owner:GetID()).font;
0		self:FontScrollBar_Update(owner);
	end
	
2	function PowaAuras.FontScrollBar_Update(owner)
0		local fontOffset = FauxScrollFrame_GetOffset(FontSelectorEditorScrollFrame); 
0		local fontIndex;
0		local fontName, namestart, nameend;
		
0		for i=1, 10, 1 do
0			fontIndex = fontOffset + i;
0			fontName = PowaAuras.Fonts[fontIndex];
0			fontText = getglobal("FontSelectorEditorScrollButton"..i.."Text");
0			fontButton = getglobal("FontSelectorEditorScrollButton"..i);
0			fontButton.font = fontIndex;
			
0			namestart = string.find(fontName, "\\", 1, true);
0			nameend = string.find(fontName, ".", 1, true);
0			if namestart and nameend and (nameend > namestart) then
0				fontName = string.sub(fontName, namestart+1, nameend-1);
0				while string.find(fontName, "\\", 1, true) do
0					namestart = string.find(fontName, "\\", 1, true)
0					fontName = string.sub(fontName, namestart+1);
				end
			end	
0			fontText:SetFont(PowaAuras.Fonts[fontIndex], 14, "OUTLINE, MONOCHROME");
0			fontText:SetText(fontName);
0			if FontSelectorFrame.selectedFont == fontIndex then
0				fontButton:LockHighlight();
			else
0				fontButton:UnlockHighlight();
			end	
		end
		
0		FauxScrollFrame_Update(FontSelectorEditorScrollFrame, #PowaAuras.Fonts, 10, 16 );
		
	end
	
	----------------------------------------------------------------------
2	function PowaAuras:EditorShow()
0		if (PowaBarConfigFrame:IsVisible()) then
0			self:EditorClose();
0			return;
		end
0		local aura = self.Auras[self.CurrentAuraId];
0		if (aura) then
			--if (aura.Timer and aura.Timer.enabled) then
			--	self:CreateTimerFrameIfMissing(aura.id);
			--end
0			self:InitPage();
0			getglobal("PowaBarConfigFrame"):Show();
0			PlaySound("TalentScreenOpen");
		end
	end
	
2	function PowaAuras:EditorClose() --- ferme la fenetre d'option
0		if (PowaBarConfigFrame:IsVisible()) then
0			if (FontSelectorFrame:IsVisible()) then
0				getglobal("FontSelectorFrame"):Hide();
			end
0			if (ColorPickerFrame:IsVisible()) then
0				self.CancelColor();
0				ColorPickerFrame:Hide();
			end
0			getglobal("PowaBarConfigFrame"):Hide();
0			PlaySound("TalentScreenClose");
		end
	end
	
	-- <<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<< ADV. OPTIONS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	
2	function PowaAuras:UpdateOptionsTimer(auraId)
	
0		if (self.Initialising) then return; end
		
0		local timerOpts = self.Auras[auraId].Timer;
		
0	    local frame1 = self.TimerFrame[auraId][1];	
0		frame1:SetAlpha(math.min(timerOpts.a,0.99));
0		frame1:SetWidth(20 * timerOpts.h);
0		frame1:SetHeight(20 * timerOpts.h);
0		frame1:SetPoint("Center", timerOpts.x, timerOpts.y);
	
0	    local frame2 = self.TimerFrame[auraId][2];
0		frame2:SetAlpha(timerOpts.a * 0.75);
0		frame2:SetWidth(14 * timerOpts.h);
0		frame2:SetHeight(14 * timerOpts.h);
0		frame2:SetPoint("LEFT", frame1, "RIGHT", 1, -1.5);
	
	end
	
	
2	function PowaAuras:UpdateOptionsStacks(auraId)
0		if (self.Initialising) then return; end  
		
0		local stackOpts = self.Auras[auraId].Stacks;
		
0	    local frame = self.StacksFrames[auraId];	
0		frame:SetAlpha(math.min(stackOpts.a, 0.99));
0		frame:SetWidth(20 * stackOpts.h);
0		frame:SetHeight(20 * stackOpts.h);
0		frame:SetPoint("Center", stackOpts.x, stackOpts.y);
	end
	
2	function PowaAuras:ShowTimerChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer.enabled = true;
			--self:CreateTimerFrameIfMissing(self.CurrentAuraId);	
		else
0			self.Auras[self.CurrentAuraId].Timer.enabled = false;
0			self.Auras[self.CurrentAuraId].Timer:Delete();
		end
	end
	
2	function PowaAuras:TimerAlphaSliderChanged()
0		local SliderValue = getglobal("PowaTimerAlphaSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
		
0		getglobal("PowaTimerAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Timer.a = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerSizeSliderChanged()
0		local SliderValue = getglobal("PowaTimerSizeSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Timer.h = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerCoordSliderChanged()
0		local SliderValue = getglobal("PowaTimerCoordSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Timer.y = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerCoordXSliderChanged()
0		local SliderValue = getglobal("PowaTimerCoordXSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaTimerCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Timer.x = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:PowaTimerInvertAuraSliderChanged(slider)
0		if (self.Initialising) then return; end
	
0		local text;
0		if (self.Auras[self.CurrentAuraId].InvertTimeHides) then
0			text = self.Text.nomTimerHideAura;
0			slider.aide = PowaAuras.Text.aidePowaTimerHideAuraSlider;
		else
0			text = self.Text.nomTimerInvertAura;
0			slider.aide = PowaAuras.Text.aidePowaTimerInvertAuraSlider;
		end
0		getglobal(slider:GetName().."Text"):SetText(text.." : "..slider:GetValue().." sec");
	
0		self.Auras[self.CurrentAuraId].Timer.InvertAuraBelow = slider:GetValue();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerDurationSliderChanged()
0		if (self.Initialising) then return; end
0		local SliderValue = getglobal("PowaTimerDurationSlider"):GetValue();
	
0		getglobal("PowaTimerDurationSliderText"):SetText(self.Text.nomTimerDuration.." : "..SliderValue.." sec");
	
0		self.Auras[self.CurrentAuraId].timerduration = SliderValue;
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerChecked(control, setting)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer[setting] = true;
		else
0			self.Auras[self.CurrentAuraId].Timer[setting] = false;
		end
0		self.Auras[self.CurrentAuraId].Timer:Delete();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
2	function PowaAuras:TimerTransparentChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Timer.Transparent = true;
		else
0			self.Auras[self.CurrentAuraId].Timer.Transparent = false;
		end
0		self.Auras[self.CurrentAuraId].Timer:Delete();
		--self:CreateTimerFrameIfMissing(self.CurrentAuraId);
	end
	
	------ Stacks ----
	
2	function PowaAuras:ShowStacksChecked(control)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Stacks.enabled = true;
		else
0			self.Auras[self.CurrentAuraId].Stacks.enabled = false;
0			self.Auras[self.CurrentAuraId].Stacks:Delete();
		end
	end
	
2	function PowaAuras:StacksAlphaSliderChanged()
0		local SliderValue = getglobal("PowaStacksAlphaSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
		
0		getglobal("PowaStacksAlphaSliderText"):SetText(self.Text.nomAlpha.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Stacks.a = SliderValue;
	end
	
2	function PowaAuras:StacksSizeSliderChanged()
0		local SliderValue = getglobal("PowaStacksSizeSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksSizeSliderText"):SetText(self.Text.nomTaille.." : "..format("%.2f", SliderValue) );
	
0		self.Auras[self.CurrentAuraId].Stacks.h = SliderValue;
	end
	
2	function PowaAuras:StacksCoordSliderChanged()
0		local SliderValue = getglobal("PowaStacksCoordSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksCoordSliderText"):SetText(self.Text.nomPos.." Y : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Stacks.y = SliderValue;
	end
	
2	function PowaAuras:StacksCoordXSliderChanged()
0		local SliderValue = getglobal("PowaStacksCoordXSlider"):GetValue();
	
0		if (self.Initialising) then return; end   -- desactived
	
0		getglobal("PowaStacksCoordXSliderText"):SetText(self.Text.nomPos.." X : "..SliderValue);
	
0		self.Auras[self.CurrentAuraId].Stacks.x = SliderValue;
	end
	
	
2	function PowaAuras:StacksChecked(control, setting)
0		if (self.Initialising) then return; end
0		if (control:GetChecked()) then
0			self.Auras[self.CurrentAuraId].Stacks[setting] = true;
		else
0			self.Auras[self.CurrentAuraId].Stacks[setting] = false;
		end
0		self.Auras[self.CurrentAuraId].Stacks:Delete();
	end
	
	-- ----------------------------------------------------------- LIGNE DE COMMANDE
	
1	function PowaAuras_CommanLine(msg)
0		if (msg=="dump") then
0			PowaAuras:Dump();
0			PowaAuras:DisplayText("State dumped to"); -- OK
0			PowaAuras:DisplayText("WTF \\ Account \\ <ACCOUNT> \\ "..GetRealmName().." \\ "..UnitName("player").." \\ SavedVariables \\ PowerAuras.lua"); -- OK
0			PowaAuras:DisplayText("You must log-out to save the values to disk (at end of fight/raid is fine)"); -- OK
0		elseif (msg=="toggle" or msg=="tog") then
0			PowaAuras:Toggle();
		else
0			PowaAuras:MainOptionShow();
		end
	end
	
	------------------------------------
	-- Enable/Disable Options Functions
	------------------------------------
	
2	function PowaAuras:DisableSlider(slider)
0		getglobal(slider):EnableMouse(false);
0		getglobal(slider.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		getglobal(slider.."Low"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		getglobal(slider.."High"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
2	function PowaAuras:EnableSlider(slider)
0		getglobal(slider):EnableMouse(true);
0		getglobal(slider.."Text"):SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
0		getglobal(slider.."Low"):SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
0		getglobal(slider.."High"):SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
	end
	
2	function PowaAuras:DisableTextfield(textfield)
0		getglobal(textfield):Hide();
0		getglobal(textfield.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
2	function PowaAuras:EnableTextfield(textfield)
0		getglobal(textfield):Show();
0		getglobal(textfield.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
2	function PowaAuras:DisableCheckBox(checkBox)
0		getglobal(checkBox):Disable();
0		getglobal(checkBox.."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
	end
	
2	function PowaAuras:EnableCheckBox(checkBox, colour)
		--self:ShowText("EnableCheckBox ", checkBox); 
0		getglobal(checkBox):Enable();
0		if (not colour) then
0			colour = NORMAL_FONT_COLOR;
		end
		--self:ShowText("r=", color.r, " g=", color.g, " b=", color.b); 
0		getglobal(checkBox.."Text"):SetTextColor(colour.r, colour.g, colour.b);	
	end
	
	---- Blizzard Addon -----
	
2	function PowaAuras:EnableChecked()
		--PowaAuras:ShowText("EnableChecked");
0		if (PowaEnableButton:GetChecked()) then
0			self:Toggle(true);
		else
0			self:MainOptionClose();
0			self:Toggle(false);
		end
	end
	
2	function PowaAuras:DebugChecked()
0		if (PowaDebugButton:GetChecked()) then
0			PowaMisc.debug = true;
		else
0			PowaMisc.debug = false;
		end
	end
	
2	function PowaAuras:TimerRoundingChecked()
0		if (PowaTimerRoundingButton:GetChecked()) then
0			PowaMisc.TimerRoundUp = true;
		else
0			PowaMisc.TimerRoundUp = false;
		end
	end
	
2	function PowaAuras:GTFOChecked(control)
0		if (control:GetChecked()) then
0			PowaMisc.UseGTFO = true;
		else
0			PowaMisc.UseGTFO = false;
		end
	end
	
2	function PowaAuras.OptionsOK()
0		PowaMisc.OnUpdateLimit = (100 - PowaOptionsUpdateSlider2:GetValue()) / 200;
0		local newFps = PowaOptionsAnimationsSlider2:GetValue();
0		if (newFps~=PowaMisc.AnimationFps) then
0			PowaMisc.AnimationFps = newFps;
0			for auraId in pairs(PowaAuras.Auras) do
0				PowaAuras:RedisplayAura(auraId);
			end
		end
0		PowaMisc.AnimationLimit = (100 - PowaOptionsTimerUpdateSlider2:GetValue()) / 1000;
0		PowaAuras:EnableChecked();
0		PowaAuras:DebugChecked();
0		PowaAuras:TimerRoundingChecked();
	
0		local newDefaultTimerTexture = UIDropDownMenu_GetSelectedValue(PowaDropDownDefaultTimerTexture);
0		if (newDefaultTimerTexture~=PowaMisc.DefaultTimerTexture) then
0			PowaMisc.DefaultTimerTexture = newDefaultTimerTexture;
0			for auraId, aura in pairs(PowaAuras.Auras) do
0				if (aura.Timer and aura.Timer.Texture == "Default") then
0					aura.Timer:Hide(); -- Options Recreate
0					PowaAuras.TimerFrame[auraId] = {};
0					PowaAuras:CreateTimerFrame(auraId, 1);
0					PowaAuras:CreateTimerFrame(auraId, 2);
				end
			end
		end
0		local newDefaultStacksTexture = UIDropDownMenu_GetSelectedValue(PowaDropDownDefaultStacksTexture);
0		if (newDefaultStacksTexture~=PowaMisc.DefaultStacksTexture) then
0			PowaMisc.DefaultStacksTexture = newDefaultStacksTexture;
0			for auraId, aura in pairs(PowaAuras.Auras) do
0				if (aura.Stacks and aura.Stacks.Texture == "Default") then
0					aura.Stacks:Hide();
0					PowaAuras.StacksFrames[auraId].texture:SetTexture(aura.Stacks:GetTexture());
				end
			end
0			PowaAuras.StacksFrames = {};
		end
0		PowaAuras.ModTest = false;
0		PowaAuras.DoCheck.All = true;
	end
	
2	function PowaAuras.OptionsCancel(arg1, arg2)
		--PowaAuras:ShowText("OptionsCancel arg1=",arg1," arg2=",arg2);
0		PowaOptionsCpuFrame2_OnShow();
0		PowaAuras.ModTest = false;
0		PowaAuras.DoCheck.All = true;
	end
	
2	function PowaAuras:OptionsDefault()
0		PowaMisc.OnUpdateLimit = 0;
0		PowaMisc.AnimationLimit = 0;
0		PowaMisc.Disabled = false;
0		PowaMisc.debug = false;
0		PowaOptionsCpuFrame2_OnShow();
	end
	
1	function PowaOptionsCpuFrame2_OnLoad(panel)
0		panel.name = GetAddOnMetadata("PowerAuras", "Title");
0		panel.okay = function (self) PowaAuras.OptionsOK();  end;
0		panel.cancel = function (self) PowaAuras:OptionsCancel();  end;
0		panel.default = function (self) PowaAuras.OptionsDefault();  end;
0		InterfaceOptions_AddCategory(panel);
	end
	
1	function PowaOptionsCpuFrame2_OnShow(hide)
		--PowaAuras:ShowText("PowaOptionsCpuFrame2_OnShow");
		--PowaAuras:ShowText("OnUpdateLimit=", PowaMisc.OnUpdateLimit);
		--PowaAuras:ShowText("AnimationLimit=", PowaMisc.AnimationLimit);
		--PowaAuras:ShowText("Disabled=", PowaMisc.Disabled ~= false);
		--PowaAuras:ShowText("debug=", PowaMisc.debug);
0		PowaOptionsUpdateSlider2:SetValue(100-200*PowaMisc.OnUpdateLimit); 
0		PowaOptionsAnimationsSlider2:SetValue(PowaMisc.AnimationFps);
0		PowaOptionsTimerUpdateSlider2:SetValue(100-1000*PowaMisc.AnimationLimit);
0		PowaEnableButton:SetChecked(PowaMisc.Disabled ~= true);
0		PowaDebugButton:SetChecked(PowaMisc.debug);
0		PowaGTFOButton:SetChecked(PowaMisc.UseGTFO);
0		PowaTimerRoundingButton:SetChecked(PowaMisc.TimerRoundUp);
0		UIDropDownMenu_SetSelectedValue(PowaDropDownDefaultTimerTexture, PowaMisc.DefaultTimerTexture);
0		UIDropDownMenu_SetSelectedValue(PowaDropDownDefaultStacksTexture, PowaMisc.DefaultStacksTexture);
	end
	
2	function PowaAuras:PowaOptionsUpdateSliderChanged2(control)
0		PowaOptionsUpdateSlider2Text:SetText(self.Text.nomUpdateSpeed.." : "..control:GetValue().."%");
	end
	
2	function PowaAuras:PowaOptionsAnimationsSliderChanged2(control)
0		PowaOptionsAnimationsSlider2Text:SetText(self.Text.nomFPS.." : "..control:GetValue().." FPS");
	end
	
2	function PowaAuras:PowaOptionsTimerUpdateSliderChanged2(control)
0		PowaOptionsTimerUpdateSlider2Text:SetText(self.Text.nomTimerUpdate.." : "..control:GetValue().."%");
	end
	
2	function PowaAuras.DropDownDefaultTimerMenu_Initialize(owner)
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickDefault, PowaMisc.DefaultTimerTexture, false);
	end
	
2	function PowaAuras.DropDownDefaultStacksMenu_Initialize(owner)
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickDefault, PowaMisc.DefaultStacksTexture, false);
	end
	
2	function PowaAuras.DropDownMenu_OnClickDefault()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
	end
	
2	function PowaAuras:InitializeTextureDropdown(owner, onClick, currentValue, addDefaultOption)
		--self:ShowText("InitializeTextureDropdown currentValue=", currentValue, " addDefaultOption=", addDefaultOption);
0		local info = {func = onClick, owner = owner, text=PowaAuras.Text.Default};
0		if (addDefaultOption) then
0			UIDropDownMenu_AddButton(info);
		end
0		for k,v in pairs(PowaAuras.TimerTextures) do
0			info.text = v; 
0			UIDropDownMenu_AddButton(info);
		end
0		UIDropDownMenu_SetSelectedValue(owner, currentValue);
	end
	
	
2	function PowaAuras.DropDownTimerMenu_Initialize(owner)
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Timer==nil) then return; end
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickTimerTexture, aura.Timer.Texture, true);
	end
	
2	function PowaAuras.DropDownMenu_OnClickTimerTexture()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Timer==nil) then return; end
0		aura.Timer.Texture = this.value;
0		aura.Timer:Delete();
		--PowaAuras:CreateTimerFrameIfMissing(PowaAuras.CurrentAuraId);
	end
	
2	function PowaAuras.DropDownStacksMenu_Initialize(owner)
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Stacks==nil) then return; end
0		PowaAuras:InitializeTextureDropdown(owner, PowaAuras.DropDownMenu_OnClickStacksTexture, aura.Stacks.Texture, true);
	end
	
2	function PowaAuras.DropDownMenu_OnClickStacksTexture()
0		UIDropDownMenu_SetSelectedValue(this.owner, this.value);
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
0		if (aura==nil or aura.Stacks==nil) then return; end
0		aura.Stacks.Texture = this.value;
0		aura.Stacks:Delete();
	end
	
	--- Ternary Logic ---
2	function PowaAuras:DisableTernary(control)
0		getglobal(control:GetName().."Text"):SetTextColor(GRAY_FONT_COLOR.r, GRAY_FONT_COLOR.g, GRAY_FONT_COLOR.b);
0		control:Disable();
	end
	
2	function PowaAuras:TernarySetState(button, value)
0		local label = getglobal(button:GetName().."Text")
0		button:Enable();
0		label:SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
	
0		if value==0 then
0			button:SetCheckedTexture("Interface\\Buttons\\UI-CheckBox-Check")
0			button:SetChecked(0)
0		elseif value==false then
0			button:SetCheckedTexture("Interface\\RAIDFRAME\\ReadyCheck-NotReady")
0			button:SetChecked(1)
0		elseif value==true then
0			button:SetCheckedTexture("Interface\\Buttons\\UI-CheckBox-Check")
0			button:SetChecked(1)
		end
	end
	
2	function PowaAuras.Ternary_OnClick()
	
0		local aura = PowaAuras.Auras[PowaAuras.CurrentAuraId];
		--PowaAuras:ShowText("Ternary_OnClick control=",this:GetName(), " Parameter=", this.Parameter);
0		if (aura[this.Parameter]==false) then
0			aura[this.Parameter] = true; -- Off => On
0		elseif (aura[this.Parameter]==true) then
0			aura[this.Parameter] = 0; -- On => Ingore
		else
0			aura[this.Parameter] = false; -- Ignore => Off
		end	
	
0		PowaAuras:TernarySetState(this, aura[this.Parameter]);
0		PowaAuras.Ternary_CheckTooltip(this)
	end
	
2	function PowaAuras.Ternary_CheckTooltip(button)
0		GameTooltip:SetOwner(button, "ANCHOR_RIGHT"); 
0		GameTooltip:SetText(PowaAuras.Text.TernaryAide[button.Parameter], nil, nil, nil, nil, 1); 
0		GameTooltip:AddLine(PowaAuras.Text.aideTernary.."\n\124TInterface\\Buttons\\UI-CheckBox-Up:22\124t = "..PowaAuras.Text.nomWhatever.."\n\124TInterface\\Buttons\\UI-CheckBox-Check:22\124t = "..PowaAuras.Text.TernaryYes[button.Parameter].."\n\124TInterface\\RAIDFRAME\\ReadyCheck-NotReady:22\124t = "..PowaAuras.Text.TernaryNo[button.Parameter], .8,.8,.8, 1) 
0		GameTooltip:Show()
	end

==============================================================================
..\localisation.lua
==============================================================================
0	﻿--if (GetLocale() == "enEN") then
	
1	PowaAuras.Anim[0] = "[Invisible]";
1	PowaAuras.Anim[1] = "Static";
1	PowaAuras.Anim[2] = "Flashing";
1	PowaAuras.Anim[3] = "Growing";
1	PowaAuras.Anim[4] = "Pulse";
1	PowaAuras.Anim[5] = "Bubble";
1	PowaAuras.Anim[6] = "Water drop";
1	PowaAuras.Anim[7] = "Electric";
1	PowaAuras.Anim[8] = "Shrinking";
1	PowaAuras.Anim[9] = "Flame";
1	PowaAuras.Anim[10] = "Orbit";
	
1	PowaAuras.BeginAnimDisplay[0] = "[None]";
1	PowaAuras.BeginAnimDisplay[1] = "Zoom In";
1	PowaAuras.BeginAnimDisplay[2] = "Zoom Out";
1	PowaAuras.BeginAnimDisplay[3] = "Fade In";
1	PowaAuras.BeginAnimDisplay[4] = "Left";
1	PowaAuras.BeginAnimDisplay[5] = "Top-Left";
1	PowaAuras.BeginAnimDisplay[6] = "Top";
1	PowaAuras.BeginAnimDisplay[7] = "Top-Right";
1	PowaAuras.BeginAnimDisplay[8] = "Right";
1	PowaAuras.BeginAnimDisplay[9] = "Bottom-Right";
1	PowaAuras.BeginAnimDisplay[10] = "Bottom";
1	PowaAuras.BeginAnimDisplay[11] = "Bottom-Left";
1	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
1	PowaAuras.EndAnimDisplay[0] = "[None]";
1	PowaAuras.EndAnimDisplay[1] = "Grow";
1	PowaAuras.EndAnimDisplay[2] = "Shrink";
1	PowaAuras.EndAnimDisplay[3] = "Fade Out";
1	PowaAuras.EndAnimDisplay[4] = "Spin";
1	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
1	PowaAuras.Sound[0] = NONE;
1	PowaAuras.Sound[1] = "LEVELUP";
1	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
1	PowaAuras.Sound[3] = "MapPing";
1	PowaAuras.Sound[4] = "Exploration";
1	PowaAuras.Sound[5] = "QUESTADDED";
1	PowaAuras.Sound[6] = "QUESTCOMPLETED";
1	PowaAuras.Sound[7] = "WriteQuest";
1	PowaAuras.Sound[8] = "Fishing Reel in";
1	PowaAuras.Sound[9] = "igPVPUpdate";
1	PowaAuras.Sound[10] = "ReadyCheck";
1	PowaAuras.Sound[11] = "RaidWarning";
1	PowaAuras.Sound[12] = "AuctionWindowOpen";
1	PowaAuras.Sound[13] = "AuctionWindowClose";
1	PowaAuras.Sound[14] = "TellMessage";
1	PowaAuras.Sound[15] = "igBackPackOpen";
	
2	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
1		welcome = "Type /powa to view the options.",
	
1		aucune = "None",
1		aucun = "None",
1		largeur = "Width",
1		hauteur = "Height",
1		mainHand = "main",
1		offHand = "off",
1		bothHands = "both",
	
1		DebuffType =
0		{
1			Magic   = "Magic",
1			Disease = "Disease",
1			Curse   = "Curse",
1			Poison  = "Poison",
1		},
	
1		DebuffCatType =
0		{
1			[PowaAuras.DebuffCatType.CC] = "CC",
1			[PowaAuras.DebuffCatType.Silence] = "Silence",
1			[PowaAuras.DebuffCatType.Snare] = "Snare",
1			[PowaAuras.DebuffCatType.Stun] = "Stun",
1			[PowaAuras.DebuffCatType.Root] = "Root",
1			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
1			[PowaAuras.DebuffCatType.PvE] = "PvE",
1		},
		
1		AuraType =
0		{
1			[PowaAuras.BuffTypes.Buff] = "Buff",
1			[PowaAuras.BuffTypes.Debuff] = "Debuff",
1			[PowaAuras.BuffTypes.AoE] = "AOE Debuff",
1			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff type",
1			[PowaAuras.BuffTypes.Enchant] = "Weapon Enchant",
1			[PowaAuras.BuffTypes.Combo] = "Combo Points",
1			[PowaAuras.BuffTypes.ActionReady] = "Action Usable",
1			[PowaAuras.BuffTypes.Health] = "Health",
1			[PowaAuras.BuffTypes.Mana] = "Mana",
1			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
1			[PowaAuras.BuffTypes.Aggro] = "Aggro",
1			[PowaAuras.BuffTypes.PvP] = "PvP",
1			[PowaAuras.BuffTypes.Stance] = "Stance",
1			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
1			[PowaAuras.BuffTypes.OwnSpell] = "My Spell Cooldown", 
1			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
1			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
1		},
		
		-- main
1		nomEnable = "Activate Power Auras",
1		aideEnable = "Enable all Power Auras effects",
	
1		nomDebug = "Activate Debug Messages",
1		aideDebug = "Enable Debug Messages",
1		ListePlayer = "Page",
1		ListeGlobal = "Global",
1		aideMove = "Move the effect here.",
1		aideCopy = "Copy the effect here.",
1		nomRename = "Rename",
1		aideRename = "Rename the selected effect's page.",
1		nomTest = "Test",
1		nomHide = "Hide all",
1		nomEdit = "Edit",
1		nomNew = "New",
1		nomDel = "Delete",
1		nomImport = "Import", 
1		nomExport = "Export", 
1		nomImportSet = "Import Set", 
1		nomExportSet = "Export Set", 
1		aideImport = "Press Ctrl-V to paste the Aura-string and press \'Accept\'",
1		aideExport = "Press Ctrl-C to copy the Aura-string for sharing.",
1		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
1		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
1		aideDel = "Remove the selected effect (Hold CTRL to allow this button to work)",
1		nomMove = "Move",
1		nomCopy = "Copy",
1		nomPlayerEffects = "Character effects",
1		nomGlobalEffects = "Global\neffects",
1		aideEffectTooltip = "(Shift-click to toggle effect ON or OFF)",
	
		-- editor
1		nomSound = "Sound to play",
1		aideSound = "Plays a sound at the beginning.",
1		nomCustomSound = "OR soundfile:",
1		aideCustomSound = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
	
1		nomTexture = "Texture",
1		aideTexture = "The texture to be shown. You can easily replace textures by changing the files Aura#.tga in the Addon's directory.",
	
1		nomAnim1 = "Main Animation",
1		nomAnim2 = "Secondary Animation",
1		aideAnim1 = "Animate the texture or not, with various effects.",
1		aideAnim2 = "This animation will be shown with less opacity than the main animaton. Attention, to not overload the screen.",
	
1		nomDeform = "Deformation",
1		aideDeform = "Stretch the texture in height or in width.",
	
1		aideColor = "Click here to change the color of the texture.",
1		aideFont = "Click here to pick Font. Press OK to apply the selection.",
1		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", 
1		aideTooltipCheck = "Also check the tooltip contains this text",
	
1		aideBuff = "Enter here the name of the buff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Super Buff/Power)",
1		aideBuff2 = "Enter here the name of the debuff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Dark Disease/Plague)",
1		aideBuff3 = "Enter here the type of the debuff which must activate or deactivate the effect (Poison, Disease, Curse, Magic, CC, Silence, Stun, Snare, Root or None). You can enter several types (ex: Disease/Poison)",
1		aideBuff4 = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
1		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
1		aideBuff6 = "Enter here the number of combo points that must activate this effect (ex : 1 or 1/2/3 or 0/4/5 etc...) ",
1		aideBuff7 = "Enter here the name, or a part of the name, of an action in your action bars. The effect will be active when this action is usable.",
1		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
1		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.",
1		aideStacks = "Enter here the operator and the amount of stacks, required activate/deactivate the effect. Operator is required ex: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
1		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).", 
1		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).", 
	
1		aideUnitn = "Enter here the name of the unit, which must activate/deactivate the effect. You can enter only names, if they are in your raid or group.",
1		aideUnitn2 = "Only for raid/group.",
	
1		aideMaxTex = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
1		aideAddEffect = "Add an effect for edition.",
1		aideWowTextures = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
1		aideTextAura = "Check this to type text instead of texture.",
1		aideRealaura = "Real Aura",
1		aideCustomTextures = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
1		aideRandomColor = "Check this to tell this effect to use random color each time it will be activated.",
	
1		aideTexMode = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.",
		
1		nomActivationBy = "Activation by :",
	
1		nomOwnTex = "Use own Texture",
1		aideOwnTex = "Use the De/Buff or Ability Texture instead.",
1		nomStacks = "Stacks",
	
1		nomUpdateSpeed = "Update speed",
1		nomSpeed = "Animation speed",
1		nomFPS = "Global Animation FPS",
1		nomTimerUpdate = "Timer update speed",
1		nomBegin = "Begin Animation",
1		nomEnd = "End Animation",
1		nomSymetrie = "Symmetry",
1		nomAlpha = "Opacity",
1		nomPos = "Position",
1		nomTaille = "Size",
	
1		nomExact = "Exact Name",
1		nomThreshold = "Threshold",
1		aideThreshInv = "Check this to invert the threshold logic. Unchecked = Low Warning / Checked = High Warning.",
1		nomThreshInv = "</>",
1		nomStance = "Stance",
	
1		nomMine = "Cast by me",
1		aideMine = "Check this to test only buffs/debuffs cast by the player",
1		nomDispellable = "I can dispell",
1		aideDispellable = "Check to show only buffs that are dispellable",
1		nomCanInterrupt = "Can be Interrupted",
1		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
1		nomPlayerSpell = "Player Casting",
1		aidePlayerSpell = "Check if Player is casting a spell",
	
1		nomCheckTarget = "Enemy Target",
1		nomCheckFriend = "Friendly Target",
1		nomCheckParty = "Partymember",
1		nomCheckFocus = "Focus",
1		nomCheckRaid = "Raidmember",
1		nomCheckGroupOrSelf = "Raid/Party or self",
1		nomCheckGroupAny = "Any", 
1		nomCheckOptunitn = "Unitname",
	
1		aideTarget = "Check this to test an enemy target only.",
1		aideTargetFriend = "Check this to test a friendly target only.",
1		aideParty = "Check this to test a party member only.",
1		aideGroupOrSelf = "Check this to test a party or raid member or self.",
1		aideFocus = "Check this to test the focus only.",
1		aideRaid = "Check this to test a raid member only.",
1		aideGroupAny = "Check this to test buff on 'Any' party/raid member. Unchecked: Test that 'All' are buffed.",
1		aideOptunitn = "Check this to test a spezial char in raid/group only.",	
1		aideExact = "Check this to test the exact name of the buff/debuff/action.",
1		aideStance = "Select which Stance,Aura or Form trigger the event.",
	
1		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
1		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
1		nomCheckShowTimer = "Show",
1		nomTimerDuration = "Duration",
1		aideTimerDuration = "Show a timer to simulate buff/debuff duration on the target (0 to deactivate)",
1		aideShowTimer = "Check this to show the timer of this effect.",
1		aideSelectTimer = "Select which timer will show the duration",
1		aideSelectTimerBuff = "Select which timer will show the duration (this one is reserved for player's buffs)",
1		aideSelectTimerDebuff = "Select which timer will show the duration (this one is reserved for player's debuffs)",
	
1		nomCheckShowStacks = "Show",
	
1		nomCheckInverse = "Invert",
1		aideInverse = "Invert the logic to show this effect only when buff/debuff is not active.",	
	
1		nomCheckIgnoreMaj = "Ignore uppercase",	
1		aideIgnoreMaj = "Check this to ignore upper/lowercase of buff/debuff names.",
	
1		nomDuration = "Anim. duration",
1		aideDuration = "After this time, this effect will disapear (0 to deactivate)",
	
1		nomCentiemes = "Show hundredth",
1		nomDual = "Show two timers",
1		nomHideLeadingZeros = "Hide Leading Zeros",
1		nomTransparent = "Use transparent textures",
1		nomUpdatePing = "Animate on refresh",
1		nomClose = "Close",
1		nomEffectEditor = "Effect Editor",
1		nomAdvOptions = "Options",
1		nomMaxTex = "Maximum of textures available",
1		nomTabAnim = "Animation",
1		nomTabActiv = "Activation",
1		nomTabSound = "Sound",
1		nomTabTimer = "Timer",
1		nomTabStacks = "Stacks",
1		nomWowTextures = "WoW Textures",
1		nomCustomTextures = "Custom Textures",
1		nomTextAura = "Text Aura",
1		nomRealaura = "Real Aura",
1		nomRandomColor = "Random Colors",
1		nomTexMode = "Glow",
	
1		nomTalentGroup1 = "Spec 1",
1		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
1		nomTalentGroup2 = "Spec 2",
1		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
	
1		nomReset = "Reset Editor Positions",	
1		nomPowaShowAuraBrowser = "Show Aura Browser",
		
1		nomDefaultTimerTexture = "Default Timer Texture",
1		nomTimerTexture = "Timer Texture",
1		nomDefaultStacksTexture = "Default Stacks Texture",
1		nomStacksTexture = "Stacks Texture",
		
1		Enabled = "Enabled",
1		Default = "Default",
	
1		Ternary = {
1			combat = "In Combat",
1			inRaid = "In Raid",
1			inParty = "In Party",
1			isResting = "Resting",
1			ismounted = "Mounted",
1			inVehicle = "In Vehicle",
1			isAlive= "Alive",
1		},
	
1		nomWhatever = "Ignored",
1		aideTernary = "Sets how the status effects how this aura is shown.",
1		TernaryYes = {
1			combat = "Only When In Combat",
1			inRaid = "Only When In Raid",
1			inParty = "Only When In Party",
1			isResting = "Only When Resting",
1			ismounted = "Only When Mounted",
1			inVehicle = "Only When In Vehicle",
1			isAlive= "Only When Alive",
1		},
1		TernaryNo = {
1			combat = "Only When Not in Combat",
1			inRaid = "Only When Not in Raid",
1			inParty = "Only When Not in Party",
1			isResting = "Only When Not Resting",
1			ismounted = "Only When Not Mounted",
1			inVehicle = "Only When Not in Vehicle",
1			isAlive= "Only When Dead",
1		},
1		TernaryAide = {
1			combat = "Effect modified by Combat status.",
1			inRaid = "Effect modified by Raid status.",
1			inParty = "Effect modified by Party status.",
1			isResting = "Effect modified by Resting status.",
1			ismounted = "Effect modified by Mounted status.",
1			inVehicle = "Effect modified by Vehicle status.",
1			isAlive= "Effect modified by Alive status.",
1		},
	
1		nomTimerInvertAura = "Invert Aura When Time Below",
1		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
1		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
1		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
1		aideTimerRounding = "When checked will round the timer up",
1		nomTimerRounding = "Round Timer Up",
	
1		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
1		nomGTFO = "Use GTFO for AoE",
	
1		nomIgnoreUseable = "Display Only Depends on Cooldown",
1		aideIgnoreUseable = "Ignores if spell is usable (just uses cooldown)",
	
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
1		nomReasonShouldShow = "Should show because $1",
1		nomReasonWontShow   = "Won't show because $1",
		
1		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
1		nomReasonDisabled = "Power Auras Disabled",
1		nomReasonGlobalCooldown = "Ignore Global Cool-down",
		
1		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
1		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
1		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
1		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
1		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
1		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
1		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
1		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
1		nomReasonBuffFound              = "Buff present",
1		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
1		nomReasonAuraMissing = "Aura missing",
1		nomReasonAuraOff     = "Aura off",
1		nomReasonAuraBad     = "Aura bad",
		
1		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
1		nomReasonPlayerDead     = "Player is DEAD",
1		nomReasonPlayerAlive    = "Player is Alive",
1		nomReasonNoTarget       = "No Target",
1		nomReasonTargetPlayer   = "Target is you",
1		nomReasonTargetDead     = "Target is Dead",
1		nomReasonTargetAlive    = "Target is Alive",
1		nomReasonTargetFriendly = "Target is Friendly",
1		nomReasonTargetNotFriendly = "Target not Friendly",
		
1		nomReasonNotInCombat = "Not in combat",
1		nomReasonInCombat = "In combat",
		
1		nomReasonInParty = "In Party",
1		nomReasonInRaid = "In Raid",
1		nomReasonNotInParty = "Not in Party",
1		nomReasonNotInRaid = "Not in Raid",
1		nomReasonNoFocus = "No focus",	
1		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
1		nomReasonNotMounted = "Not Mounted",
1		nomReasonMounted = "Mounted",		
1		nomReasonNotInVehicle = "Not In Vehicle",
1		nomReasonInVehicle = "In Vehicle",		
1		nomReasonNotResting = "Not Resting",
1		nomReasonResting = "Resting",		
1		nomReasonStateOK = "State OK",
	
1		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
1		nomReasonSpellUsable     = "Spell $1 usable",
1		nomReasonSpellNotUsable  = "Spell $1 not usable",
1		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
1		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
1		nomReasonSpellNotFound   = "Spell $1 not found",
1		nomReasonSpellOnCooldown = "Spell $1 on Cooldown",
		
1		nomReasonStealablePresent = "$1 has Stealable spell $2", --$1=Target $2=SpellName (e.g. "Focus has Stealable spell Blessing of Wisdom")
1		nomReasonNoStealablePresent = "Nobody has Stealable spell $1", --$1=SpellName (e.g. "Nobody has Stealable spell Blessing of Wisdom")
1		nomReasonRaidTargetStealablePresent = "Raid$1Target has has Stealable spell $2", --$1=RaidId $2=SpellName (e.g. "Raid21Target has Stealable spell Blessing of Wisdom")
1		nomReasonPartyTargetStealablePresent = "Party$1Target has has Stealable spell $2", --$1=PartyId $2=SpellName (e.g. "Party4Target has Stealable spell Blessing of Wisdom")
		
1		nomReasonPurgeablePresent = "$1 has Purgeable spell $2", --$1=Target $2=SpellName (e.g. "Focus has Purgeable spell Blessing of Wisdom")
1		nomReasonNoPurgeablePresent = "Nobody has Purgeable spell $1", --$1=SpellName (e.g. "Nobody has Purgeable spell Blessing of Wisdom")
1		nomReasonRaidTargetPurgeablePresent = "Raid$1Target has has Purgeable spell $2", --$1=RaidId $2=SpellName (e.g. "Raid21Target has Purgeable spell Blessing of Wisdom")
1		nomReasonPartyTargetPurgeablePresent = "Party$1Target has has Purgeable spell $2", --$1=PartyId $2=SpellName (e.g. "Party4Target has Purgeable spell Blessing of Wisdom")
	
1		nomReasonAoETrigger = "AoE $1 triggered", -- $1=AoE spell name
1		nomReasonAoENoTrigger = "AoE no trigger for $1", -- $1=AoE spell match
		
1		nomReasonEnchantMainInvert = "Main Hand $1 enchant found, timer invert", -- $1=Enchant match
1		nomReasonEnchantMain = "Main Hand $1 enchant found", -- $1=Enchant match
1		nomReasonEnchantOffInvert = "Off Hand $1 enchant found, timer invert"; -- $1=Enchant match
1		nomReasonEnchantOff = "Off Hand $1 enchant found", -- $1=Enchant match
1		nomReasonNoEnchant = "No enchant found on weapons for $1", -- $1=Enchant match
	
1		nomReasonNoUseCombo = "You do not use combo points",
1		nomReasonComboMatch = "Combo points $1 match $2",-- $1=Combo Points, $2=Combo Match
1		nomReasonNoComboMatch = "Combo points $1 no match with $2",-- $1=Combo Points, $2=Combo Match
	
1		nomReasonActionNotFound = "not found on Action Bar",
1		nomReasonActionReady = "Action Ready",
1		nomReasonActionNotReadyInvert = "Action Not Ready (on cooldown), timer invert",
1		nomReasonActionNotReady = "Action Not Ready (on cooldown)",
1		nomReasonActionlNotEnabled = "Action not enabled",
1		nomReasonActionNotUsable = "Action not usable",
	
1		nomReasonYouAreCasting = "You are casting $1", -- $1=Casting match
1		nomReasonYouAreNotCasting = "You are not casting $1", -- $1=Casting match
1		nomReasonTargetCasting = "Target casting $1", -- $1=Casting match
1		nomReasonFocusCasting = "Focus casting $1", -- $1=Casting match
1		nomReasonRaidTargetCasting = "Raid$1Target casting $2", --$1=RaidId $2=Casting match
1		nomReasonPartyTargetCasting = "Party$1Target casting $2", --$1=PartyId $2=Casting match
1		nomReasonNoCasting = "Nobody's target casting $1", -- $1=Casting match
		
1		nomReasonStance = "Current Stance $1, matches $2", -- $1=Current Stance, $2=Match Stance
1		nomReasonNoStance = "Current Stance $1, does not match $2", -- $1=Current Stance, $2=Match Stance
	
1		ReasonStat = {
1			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
1			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
1			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
1			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
1			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
1		},
	
1	});
	
	

==============================================================================
..\localisation_deDE.lua
==============================================================================
1	﻿if (GetLocale() == "deDE") then
	
0	PowaAuras.Anim[0] = "[Nichts]";
0	PowaAuras.Anim[1] = "Statisch";
0	PowaAuras.Anim[2] = "Blitzend";
0	PowaAuras.Anim[3] = "Wachsend";
0	PowaAuras.Anim[4] = "Pulsierend";
0	PowaAuras.Anim[5] = "Blase";
0	PowaAuras.Anim[6] = "Wassertropfen";
0	PowaAuras.Anim[7] = "Electrisch";
0	PowaAuras.Anim[8] = "Schrumpfend";
0	PowaAuras.Anim[9] = "Flamme";
0	PowaAuras.Anim[10] = "Orbit";
	
0	PowaAuras.BeginAnimDisplay[0] = "[None]";
0	PowaAuras.BeginAnimDisplay[1] = "Reinzoomend";
0	PowaAuras.BeginAnimDisplay[2] = "Rauszoomend";
0	PowaAuras.BeginAnimDisplay[3] = "Nur Alpha";
0	PowaAuras.BeginAnimDisplay[4] = "Links";
0	PowaAuras.BeginAnimDisplay[5] = "Obenlinks";
0	PowaAuras.BeginAnimDisplay[6] = "Oben";
0	PowaAuras.BeginAnimDisplay[7] = "Obenrechts";
0	PowaAuras.BeginAnimDisplay[8] = "Rechts";
0	PowaAuras.BeginAnimDisplay[9] = "Untenrechts";
0	PowaAuras.BeginAnimDisplay[10] = "Unten";
0	PowaAuras.BeginAnimDisplay[11] = "Untenlinks";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce"; --- untranslated
	
0	PowaAuras.EndAnimDisplay[0] = "[None]";
0	PowaAuras.EndAnimDisplay[1] = "Reinzoomend";
0	PowaAuras.EndAnimDisplay[2] = "Rauszoomend";
0	PowaAuras.EndAnimDisplay[3] = "Nur Alpha";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "Kein";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "Gib /powa ein, um die Optionen zu öffnen.",
	
0		aucune = "Nichts",
0		aucun = "Nichts",
0		largeur = "Breite",
0		hauteur = "Höhe",
0		mainHand = "Waffenhand",
0		offHand = "Schildhand",
0		bothHands = "beide",
	
0		DebuffType =
0		{
0			Magic = "Magie",
0			Disease = "Disease",
0			Curse = "Fluch",
0			Poison = "Gift",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "Silence",
0			[PowaAuras.DebuffCatType.Snare] = "Snare",
0			[PowaAuras.DebuffCatType.Stun] = "Stun",
0			[PowaAuras.DebuffCatType.Root] = "Root",
0			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE Debuff",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff Typ",
0			[PowaAuras.BuffTypes.Enchant] = "Waffenbuffs",
0			[PowaAuras.BuffTypes.Combo] = "Kombo Punkte",
0			[PowaAuras.BuffTypes.ActionReady] = "Aktion benutzbar",
0			[PowaAuras.BuffTypes.Health] = "Leben",
0			[PowaAuras.BuffTypes.Mana] = "Mana",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
0			[PowaAuras.BuffTypes.Aggro] = "Aggro",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Haltung",
0			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
0			[PowaAuras.BuffTypes.OwnSpell] = "My Spell", 
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell", 
0		},
		
		-- main
0		nomEnable = "Aktiviere Power Auras",
0		aideEnable = "Alle Power Auras Effekte einschalten",
0		nomDebug = "Aktiviere Debug Meldungen",
0		aideDebug = "Zeigt Debug Meldungen im Chatfenster",	
0		ListePlayer = "Char",
0		ListeGlobal = "Global",
0		aideMove = "Effekt hierher verschieben.",
0		aideCopy = "Effekt hierher kopieren.",
0		nomRename = "Umbenennen",
0		aideRename = "Seitentitel umbenennen.",
0		nomTest = "Test",
0		nomHide = "Alle ausblenden",
0		nomEdit = "Editieren",
0		nomNew = "Neu",
0		nomDel = "Löschen",
0		nomImport = "Import", --- untranslated
0		nomExport = "Export", --- untranslated
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set", 
0		aideImport = "Paste the Aura String to the editbox and press \'Accept\'", --- untranslated
0		aideExport = "Copy the Aura String from the editbox to share with others.", --- untranslated
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "Löscht den ausgewählten Effekt.(Halte CTRL gedrückt, um zu löschen)",
0		nomMove = "Verschieben",
0		nomCopy = "Kopieren",
0		nomPlayerEffects = "Charakter Effekte",
0		nomGlobalEffects = "Globale\nEffekte",
0		aideEffectTooltip = "(Shift-Klick um Effekt ein oder auszuschalten.)",
	
		-- editor
0		nomSound = "Sound abspielen:",
0		aideSound = "Spielt einen Sound am Anfang ab.",
0		nomCustomSound = "ODER Sounddatei:",
0		aideCustomSound = "Dateiname eingeben der Sounddatei, die VOR dem WoW Starten im Sounds Verzeichniss war. mp3 und wav werden unterstützt. Bsp.: 'cookie.mp3' ;)",
		
0		nomTexture = "Grafik",
0		aideTexture = "Die Aura die angezeigt werden soll.",
	
0		nomAnim1 = "Hauptanimation",
0		nomAnim2 = "Zweitanimation",
0		aideAnim1 = "Animiere die Aura oder nicht.",
0		aideAnim2 = "Diese Animation wird mit weniger Staerke angezeigt als die Hauptanimation. Wegen möglicher Überladung der Grafik.",
	
0		nomDeform = "Deformation",
0		aideDeform = "Strecke die Animation in Höhe und Breite.",
	
0		aideColor = "Klicken, um die Farbe zu ändern.",
0		aideFont = "Click here to pick Font. Press OK to apply the selection.", --- untranslated
0		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", --- untranslated
0		aideTooltipCheck = "Also check the tooltip contains this text",
	
0		aideBuff = "Gib hier den Namen oder einen Teil vom Namen des Buff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Namen getrennt werden. (Bsp.: Super Buff/Power)",
0		aideBuff2 = "Gib hier den Namen oder einen Teil vom Namen des Debuff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Namen getrennt werden. (Bsp: Dark Disease/Plague)",
0		aideBuff3 = "Gib hier den Typ(Gift, Disease, Fluch, Magie or Nichts) des Debuff ein, der die Aura ein und ausschalten soll. Mit einem Slash können mehrere Typen getrennt werden.",
0		aideBuff4 = "Gib hier den Namen der Area of Effect(AoE) ein, der die Aura ein oder ausschalten soll. Der Name einer AoE steht im Kampflog.",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
0		aideBuff6 = "Gib hier die Anzahl Kombopunkte ein, um die Aura ein oder auszuschalten (Bsp.: 1 oder 1/2/3 oder 0/4/5 usw...) ",
0		aideBuff7 = "Gib hier einen Namen oder einen Teil davon einer Aktion auf deiner Aktionsleiste ein, um diese auf Benutzbarkeit zu überprüfen. (Bsp.: Hinrichten, Fass, Rache, Überwältigen,...",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].", --- untranslated
		
0		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.", --- untranslated
0		aideStacks = "Gib hier den Vergleicher und die Anzahl Stapel ein des De/Buffs. Oder einfach freilassen, wenn nicht stapelbar. Es geht nur MIT einem Vergleicher! Bsp: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",  --- untranslated
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",  --- untranslated
	
0		aideUnitn = "Gib hier den Namen des Spielers ein, welcher überwacht werden soll. Funktioniert nur mit Spieler innerhalb des Raids oder der Gruppe.",	
0		aideUnitn2 = "Only for raid/group.", --- untranslated
	
0		aideMaxTex = "Definiert die Texturanzahl die im Editor zur Verfügung stehen. Wenn Texturen im PowerAuras Verzeichniss hinzugefügt wurden (mit den Namen AURA1.tga bis AURA50.tga), muss hier die letzte Zahl eingetragen werden.",
0		aideAddEffect = "Fügt ein Effekt zum bearbeiten hinzu.",
0		aideWowTextures = "Aktivieren um die WoW-Grafiken anstatt die Grafiken im PowerAuras Verzeichniss zu verwenden.",
0		aideTextAura = "Check this to type text instead of texture.", -- untranslated
0		aideRealaura = "Reale Aura",
0		aideCustomTextures = "Aktivieren um die Grafiken im 'Custom' Verzeichniss zu verwenden. Du musst den Dateinamen der Grafik eintragen (Bsp.: myTexture.tga)",--- untraslated (needs update to match enGB string)
0		aideRandomColor = "Aktivieren um jedesmal wenn die Aura aktiviert wird eine zufällige Farbe zu erhalten.",
	
0		aideTexMode = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.", --- untranslated
	
0		nomActivationBy = "Aktiv wenn:",
	
0		nomOwnTex = "Use own Texture", --- untranslated
0		aideOwnTex = "Use the De/Buff or Ability Texture instead.", --- untranslated
0		nomStacks = "Stacks", --- untranslated
	
0		nomUpdateSpeed = "Update speed", --- untranslated
0		nomSpeed = "Animations Tempo",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "Animations Start",
0		nomEnd = "Animations Ende",
0		nomSymetrie = "Symetrie",
0		nomAlpha = "Alpha",
0		nomPos = "Position",
0		nomTaille = "Grösse",
	
0		nomExact = "Exakter Name",
0		nomGCD = "Global Cooldown",
0		nomThreshold = "Schwellwert",
0		aideThreshInv = "Check this to invert the threshold logic. Health/Mana: default = Low Warning / checked = High Warning. Energy/Rage/Power: default = High Warning / checked = Low Warning", --- untranslated
0		nomThreshInv = "</>",
0		nomStance = "Haltung",
	
0		nomMine = "Cast by me", --- untranslated
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
0		nomDispellable = "I can dispell", --- untranslated
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Can be Interrupted", --- untranslated
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "Feindliches Ziel",
0		nomCheckFriend = "Freundliches Ziel",
0		nomCheckParty = "Gruppenmitglied",
0		nomCheckFocus = "Focus",
0		nomCheckRaid = "Raidmitglied",
0		nomCheckGroupOrSelf = "Raid/Party or self", --- untranslated
0		nomCheckGroupAny = "Any", --- untranslated
0		nomCheckOptunitn = "Charname",
		
0		aideTarget = "Aktivieren um feindliches Ziel zu überwachen.",
0		aideTargetFriend = "Aktivieren um freundliches Ziel zu überwachen.",
0		aideParty = "Aktivieren um Gruppenmitglieder zu überwachen.",
0		aideGroupOrSelf = "Check this to test a party or raid member or self.", --- untranslated
0		aideFocus = "Aktivieren um das Focusziel zu überwachen.",
0		aideRaid = "Aktivieren um Raidmitglieder zu überwachen.",
0		aideGroupAny = "Checked: Test if 'Any' party/raid member is buffed. Default (unchecked): 'All' must be buffed.", --- untranslated
0		aideExact = "Aktivieren um den EXAKTEN Namen des Buffes zu überwachen.",
0		aideOptunitn = "Aktivieren um einen bestimmten Char in der Raid/Gruppe zu überwachen.",
0		aideGCD = "Aktivieren um den Globalen Cooldown mit einzubeziehen, wenn 'Aktion benutzbar' gewählt ist. Kann zu einem blinken der Aura führen, wenn die Aktion nur einen Globalen Cooldown hat.",
0		aideStance = "Kampfhaltung auswählen, die die Aura aktiviert.",	
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin", --- untranslated
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends", --- untranslated
	
0		nomCheckShowTimer = "Zeigen",
0		nomTimerDuration = "Dauer",
0		aideTimerDuration = "Zeigt eine Buff/Debuff Dauer. (0 um zu daktivieren)",
0		aideShowTimer = "Aktivieren um den Timer zu zeigen.",
0		aideSelectTimer = "Auswählen welcher Timer die Dauer anzeigen soll.",
0		aideSelectTimerBuff = "Auswählen welcher Timer die Dauer anzeigen soll (this one is reserved for player's buffs)",
0		aideSelectTimerDebuff = "Auswählen welcher Timer die Dauer anzeigen soll (this one is reserved for player's debuffs)",
	
0		nomCheckShowStacks = "Show", --- untranslated
	
0		nomCheckInverse = "Zeige wenn NICHT aktiv",
0		aideInverse = "Aktivieren um die Aura nur zu zeigen wenn der Buff/Debuff NICHT aktiv ist.",	
		
0		nomCheckIgnoreMaj = "Ignoriere Gross/Kleinschreibung",	
0		aideIgnoreMaj = "Aktivieren um die Gross/Kleinschreibung bei Buff/Debuff-Namen zu ignorieren.",
		
0		nomDuration = "Animationsdauer",
0		aideDuration = "Nach dieser Zeit wird die Aura verschwinden (0 um zu daktivieren)",
		
0		nomCentiemes = "Zeige hundertstel",
0		nomDual = "Zeige 2 Timer",
0		nomHideLeadingZeros = "Hide Leading Zeros", --- untranslated
0		nomTransparent = "Use transparent textures", --- untranslated
0		nomUpdatePing = "Animate on refresh", --- untranslated
0		nomClose = "Schliessen",
0		nomEffectEditor = "Effekt Editor",
0		nomAdvOptions = "Optionen",
0		nomMaxTex = "Maximum Texturen verfügbar",
0		nomTabAnim = "Animation",
0		nomTabActiv = "Aktivierung",
0		nomTabSound = "Sound", --- untranslated
0		nomTabTimer = "Timer", --- untranslated
0		nomTabStacks = "Stacks", --- untranslated
0		nomWowTextures = "WoW Texturen",
0		nomCustomTextures = "Custom Texturen", --- untranslated
0		nomTextAura = "Text Aura", --- untranslated
0		nomRealaura = "Reale Aura",
0		nomRandomColor = "Zufällige Farben",
0		nomTexMode = "Glühen",
	
0		nomTalentGroup1 = "Spec 1",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "Spec 2",
0		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
..\localisation_frFR.lua
==============================================================================
1	﻿if (GetLocale() == "frFR") then
	
0	PowaAuras.Anim[0] = "[Invisible]";
0	PowaAuras.Anim[1] = "Statique";
0	PowaAuras.Anim[2] = "Clignotement";
0	PowaAuras.Anim[3] = "Agrandir";
0	PowaAuras.Anim[4] = "Pulsation";
0	PowaAuras.Anim[5] = "Effet bulle";
0	PowaAuras.Anim[6] = "Goutte d'eau";
0	PowaAuras.Anim[7] = "Electrique";
0	PowaAuras.Anim[8] = "R\195\169tr\195\169cir";
0	PowaAuras.Anim[9] = "Flamme";
0	PowaAuras.Anim[10] = "Orbite";
	
0	PowaAuras.BeginAnimDisplay[0] = "[Aucun]";
0	PowaAuras.BeginAnimDisplay[1] = "Zoom Avant";
0	PowaAuras.BeginAnimDisplay[2] = "Zoom Arriere";
0	PowaAuras.BeginAnimDisplay[3] = "Transparence seule";
0	PowaAuras.BeginAnimDisplay[4] = "Gauche";
0	PowaAuras.BeginAnimDisplay[5] = "Haut-Gauche";
0	PowaAuras.BeginAnimDisplay[6] = "Haut";
0	PowaAuras.BeginAnimDisplay[7] = "Haut-Droite";
0	PowaAuras.BeginAnimDisplay[8] = "Droite";
0	PowaAuras.BeginAnimDisplay[9] = "Bas-Droite";
0	PowaAuras.BeginAnimDisplay[10] = "Bas";
0	PowaAuras.BeginAnimDisplay[11] = "Bas-Gauche";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[Aucun]";
0	PowaAuras.EndAnimDisplay[1] = "Zoom Avant";
0	PowaAuras.EndAnimDisplay[2] = "Zoom Arriere";
0	PowaAuras.EndAnimDisplay[3] = "Transparence seule";
	
	-- untranslated--francais---------------------							--
0	PowaAuras.Sound[0] = "None";						--
0	PowaAuras.Sound[1] = "LEVELUP";					--
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";					--
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";				--
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";				--
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";				--		
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";				--
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";		--
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";			--
	
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
	
0		welcome = "Tapez /powa pour afficher les options.",
	
0		aucune = "Aucune",
0		aucun = "Aucun",
0		largeur = "Largeur",
0		hauteur = "Hauteur",
0		mainHand = "droite",
0		offHand = "gauche",
0		bothHands = "toutes",
	
0		DebuffType =
0		{
0			Magic = "Magie",
0			Disease = "Maladie",
0			Curse = "Mal\195\169diction",
0			Poison = "Poison",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "Silence",
0			[PowaAuras.DebuffCatType.Snare] = "Snare",
0			[PowaAuras.DebuffCatType.Stun] = "Stun",
0			[PowaAuras.DebuffCatType.Root] = "Root",
0			[PowaAuras.DebuffCatType.Disarm] = "Disarm",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "Debuff de zone",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Type du Debuff",
0			[PowaAuras.BuffTypes.Enchant] = "Enchant. d'arme",
0			[PowaAuras.BuffTypes.Combo] = "Combos",
0			[PowaAuras.BuffTypes.ActionReady] = "Action utilisable",
0			[PowaAuras.BuffTypes.Health] = "Health",
0			[PowaAuras.BuffTypes.Mana] = "Mana",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Rage/Energy/Runic",
0			[PowaAuras.BuffTypes.Aggro] = "Aggro",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Stance",
0			[PowaAuras.BuffTypes.SpellAlert] = "Spell Alert", 
0			[PowaAuras.BuffTypes.OwnSpell] = "My Spell", 
0		},
	
		-- Main
0		nomEnable = "Activer Power Auras",
0		aideEnable = "Active tous les effets de Power Auras",
0		ListePlayer = "Page",
0		ListeGlobal = "Global",
0		aideMove = "D\195\169place l'effet s\195\169l\195\169ctionn\195\169 ici.",
0		aideCopy = "Copie l'effet s\195\169l\195\169ctionn\195\169 ici.",
0		nomRename = "Renommer",
0		aideRename = "Renomme la page d'effet en cours.",
0		nomTest = "Tester",
0		nomHide = "Tout masquer",
0		nomEdit = "Editer",
0		nomNew = "Nouveau",
0		nomDel = "Suppr.",
0		nomImport = "Import", --- untranslated
0		nomExport = "Export", --- untranslated
0		aideImport = "Paste the Aura String to the editbox and press \'Accept\'", --- untranslated
0		aideExport = "Copy the Aura String from the editbox to share with others.", --- untranslated
0		aideDel = "Supprime l'effet s\195\169l\195\169ctionn\195\169 (appuyez sur CTRL pour autoriser la suppression)",
0		nomMove = "D\195\169placer",
0		nomCopy = "Copier",
0		nomPlayerEffects = "Effets du personnage",
0		nomGlobalEffects = "Effets\nglobaux",
0		aideEffectTooltip = "(Maj-click pour mettre cet effet sur ON ou OFF)",
	
		-- untranslated --francais-------------------
0		nomDebug = "Activer Debug Messages",
0		aideDebug = "Shows Debug Messages in the chat",
		
0		nomSound = "Sound to play",
0		aideSound = "Plays a sound at the beginning.",
0		nomCustomSound = "OR soundfile:",
0		aideCustomSound = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
		
0		nomExact = "Exact Name",
0		nomThreshold = "Threshold",
0		nomGCD = "Global Cooldown",
0		aideThreshInv = "Check this to invert the threshold logic. Health/Mana: default = Low Warning / checked = High Warning. Energy/Rage/Power: default = High Warning / checked = Low Warning", --- untranslated
0		nomThreshInv = "</>", 
0		nomMine = "Cast by me", --- untranslated
0		nomDispellable = "I can dispell",
0		nomCanInterrupt = "Can be Interrupted",
		
0		aideGCD = "Check this and the Global Cooldown triggers with aura. May cause blinking the aura, when an action only has a Global Cooldown.",
0		aideStance = "Select which Stance,Aura or Form trigger the event.",
			
0		aideExact = "Check this to test the exact name of the buff/debuff.",
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
		
0		nomTabSound = "Sound",
0		nomTabTimer = "Timer",
		-- -------------------------------------------
		
0		nomTexture = "Texture",
0		aideTexture = "La texture \195\160 afficher. Vous pouvez facilement remplacer les textures en changeant les fichier Aura#.tga du dossier de l'AddOn.",
0		nomAnim1 = "Animation principale",
0		nomAnim2 = "Animation secondaire",
0		aideAnim1 = "Anime la texture ou pas, avec diff\195\169rents effets.",
0		aideAnim2 = "Cette animation sera affich\195\169e avec moins d'opacit\195\169 que la principale. Attention, afin de ne pas surcharger le tout.",
0		nomDeform = "D\195\169formation",
0		aideDeform = "Etire la texture vers le haut ou en largeur.",
0		aideColor = "Cliquez ici pour changer la couleur de la texture.",
0		aideFont = "Click here to pick Font. Press OK to apply the selection.", --- untranslated
0		aideMultiID = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.", --- untranslated
0		aideTooltipCheck = "Also check the tooltip starts with this text", --- untranslated
0		aideBuff = "Entrez ici le nom du buff, ou une partie du nom, qui doit activer/d\195\169sactiver l'effet. Vous pouvez entrer plusieurs noms s'ils sont s\195\169par\195\169 comme il convient (ex: Super Buff/Puissance)",
0		aideBuff2 = "Entrez ici le nom du d\195\169buff, ou une partie du nom, qui doit activer/d\195\169sactiver l'effet. Vous pouvez entrer plusieurs noms s'ils sont s\195\169par\195\169 comme il convient (ex: Maladie noire/Peste)",
0		aideBuff3 = "Entrez ici le type du d\195\169buff qui doit activer ou d\195\169sactiver l'effet (Poison, Maladie, Mal\195\169diction, Magie ou Aucun). Vous pouvez aussi entrer plusieurs types de d\195\169buffs \195\160 la fois.",
0		aideBuff4 = "Entrez ici le nom de l'effet de zone qui activera l'effet (comme une pluie de feu par exemple, g\195\169n\195\169ralement le nom de l'effet est disponible dans le journal de combat)",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)", --- untranslated
0		aideBuff6 = "Vous pouvez entrez ici le ou les chiffres des points de combos qui activeront l'effet (ex : 1 ou 1/2/3 ou 0/4/5 etc...) ",
0		aideBuff7 = "Indiquez ici le nom, ou une partie du nom, d'une des actions dans vos barres. L'effet sera actif si l'action est utilisable.",
		
0		aideSpells = "Enter here the Spell Name that will trigger a spell alert Aura.", --- untranslated
0		aideStacks = "Enter here the operator and the amount of stacks, which must activate/deactivate the effect. It works only with an operator! ex: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", -- untranslated
		
0		aideUnitn = "Entrez ici le nom du unit, qui doit activer/d\195\169sactiver l'effet. Works only for raid/partymembers.",
0		aideUnitn2 = "Only for raid/group.",
0		aideMaxTex = "Defini le maximum de textures disponibles dans l'Editeur d'Effets. Si vous rajoutez des textures en les mettant dans le dossier de l'AddOn (nomm\195\169es de AURA1.tga \195\160 AURA50.tga) c'est ici qu'il faudra le signaler.",
0		aideAddEffect = "Ajoute une page d'effet.",
0		aideWowTextures = "Cochez cette case pour utiliser les textures internes du jeu plut\195\180t que le dossier de l'addon pour cet effet.",
0		aideRealaura = "Reale Aura",
0		aideTextAura = "Check this to type text instead of texture.", -- untranslated
0		aideCustomTextures = "Cochez cette case pour utiliser les textures pr\195\169sentes dans le sous-dossier 'Custom'. Vous devez connaitre le nom du fichier et indiquer son nom (ex : myTexture.tga)", --- untraslated (needs update to match enGB string)
0		aideRandomColor = "Cochez cette case pour que l'effet prenne des couleurs au hasard \195\160 chaque activation.",
0		aideTexMode = "Decochez cette case pour utiliser la transparence de la texture. Par defaut, les couleurs sombres seront plus transparentes.",
0		nomActivationBy = "Activation par :",
0		nomOwnTex = "Use own Texture", -- untranslated
0		aideOwnTex = "Use the De/Buff or Ability Texture instead.", -- untranslated
0		nomStacks = "Stacks", -- untranslated
		
0		nomUpdateSpeed = "Update speed",
0		nomSpeed = "Vitesse d'Anim.",
0		nomBegin = "Animation de d\195\169part",
0		nomEnd = "Animation de fin",
0		nomSymetrie = "Sym\195\169trie",
0		nomAlpha = "Transparence",
0		nomPos = "Position",
0		nomTaille = "Taille",
		
			
0		nomCheckTarget = "Cible ennemie",
0		nomCheckFriend = "Cible amie",
0		nomCheckParty = "Cible partie",
0		nomCheckFocus = "Cible focus",
0		nomCheckRaid = "Cible raid",
0		nomCheckGroupOrSelf = "Raid/Party or self",
0		nomCheckGroupAny = "Any", --- untranslated
0		nomCheckOptunitn = "Cible unit",
0		aideTarget = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible ennemie.",
0		aideTargetFriend = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible amie.",
0		aideParty = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible partie.",
0		aideGroupOrSelf = "Check this to test a party or raid member or self.",
0		aideFocus = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible focus.",
0		aideRaid = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible raid.",
0		aideGroupAny = "Cochez cette case pour v\195\169rifier plut\195\180t les buffs/d\195\169buffs d'une cible unit de raid ou partie.",	
0		aideExact = "Check this to test the exact name of the buff/debuff.",
0		aideMine = "Check this to test only buffs/debuffs cast by the player", --- untranslated
0		nomCheckShowTimer = "Afficher",
0		nomTimerDuration = "Chronometre",
		
0		aideTimerDuration = "Affiche un timer pour simuler la dur\195\169e d'un buff/debuff sur la cible (0 pour d\195\169sactiver)",
0		aideShowTimer = "Cochez cette case pour afficher la dur\195\169e de cet effet.",
0		aideSelectTimer = "Choisissez quel timer sera pris pour afficher la dur\195\169e",
0		aideSelectTimerBuff = "Choisissez quel timer sera pris pour afficher la dur\195\169e (celui-ci est reserv\195\169 aux buffs du joueur)",
0		aideSelectTimerDebuff = "Choisissez quel timer sera pris pour afficher la dur\195\169e (celui-ci est reserv\195\169 aux debuffs du joueur)",
		
0		nomCheckInverse = "Afficher si inactif",
0		aideInverse = "Cochez cette case pour afficher cet effet uniquement quand le buff/d\195\169buff n'est pas actif.",
		
0		nomCheckIgnoreMaj = "Ignorer les majuscules",
0		aideIgnoreMaj = "Cochez cette case pour ignorer les majuscules/minuscules du nom des buffs/d\195\169buffs.",
		
0		nomDuration = "Dur\195\169e de l'Anim.",
0		aideDuration = "Pass\195\169 ce d\195\169lai, l'animation sera masqu\195\169e (0 pour d\195\169sactiver)",
		
0		nomCentiemes = "Afficher centiemes",
0		nomDual = "Afficher 2 dur\195\169es",
0		nomHideLeadingZeros = "Hide Leading Zeros",
0		nomTransparent = "Use transparent textures",
0		nomClose = "Fermer",
0		nomEffectEditor = "Editeur d'Effet",
0		nomAdvOptions = "Options",
0		nomMaxTex = "Maximum de textures disponibles",
0		nomTabAnim = "Animation",
0		nomTabActiv = "Activation",
0		nomWowTextures = "Textures WoW",
0		nomCustomTextures = "Autres Textures",
0	    nomRealaura = "Reale Aura",
0		nomTextAura = "Text Aura", --- untranslated
0		nomRandomColor = "Couleurs al\195\169atoires",
0		nomTexMode = "Glow",
	
0		nomTalentGroup1 = "Spec 1",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "Spec 2",
0		aideTalentGroup2 = "Show this effect only when you are in your secondary talent spec.",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
..\localisation_koKR.lua
==============================================================================
1	﻿if (GetLocale() == "koKR") then
	
0	PowaAuras.Anim[0] = "[보이지 않음]";
0	PowaAuras.Anim[1] = "공전";
0	PowaAuras.Anim[2] = "점멸";
0	PowaAuras.Anim[3] = "성장";
0	PowaAuras.Anim[4] = "파동";
0	PowaAuras.Anim[5] = "거품";
0	PowaAuras.Anim[6] = "낙수";
0	PowaAuras.Anim[7] = "전기장";
0	PowaAuras.Anim[8] = "꽁무니";
0	PowaAuras.Anim[9] = "화염";
0	PowaAuras.Anim[10] = "궤도";
	
0	PowaAuras.BeginAnimDisplay[0] = "[없음]";
0	PowaAuras.BeginAnimDisplay[1] = "확대";
0	PowaAuras.BeginAnimDisplay[2] = "축소";
0	PowaAuras.BeginAnimDisplay[3] = "불투명도만";
0	PowaAuras.BeginAnimDisplay[4] = "좌측";
0	PowaAuras.BeginAnimDisplay[5] = "상단-좌측";
0	PowaAuras.BeginAnimDisplay[6] = "상단";
0	PowaAuras.BeginAnimDisplay[7] = "상단-우측";
0	PowaAuras.BeginAnimDisplay[8] = "우측";
0	PowaAuras.BeginAnimDisplay[9] = "하단-우측";
0	PowaAuras.BeginAnimDisplay[10] = "하단";
0	PowaAuras.BeginAnimDisplay[11] = "하단-좌측";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[없음]";
0	PowaAuras.EndAnimDisplay[1] = "확대";
0	PowaAuras.EndAnimDisplay[2] = "축소";
0	PowaAuras.EndAnimDisplay[3] = "불투명도만";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "없음";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "옵션을 볼려면 /powa를 입력하십시오.",
	
0		aucune = "없음",
0		aucun = "없음",
0		largeur = "너비",
0		hauteur = "높이",
0		mainHand = "주무기",
0		offHand = "보조 무기",
0		bothHands = "둘다",
	
0		DebuffType =
0		{
0			Magic = "마법",
0			Disease = "질병",
0			Curse = "저주",
0			Poison = "독",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "군중제어",
0			[PowaAuras.DebuffCatType.Silence] = "침묵",
0			[PowaAuras.DebuffCatType.Snare] = "덫",
0			[PowaAuras.DebuffCatType.Stun] = "기절",
0			[PowaAuras.DebuffCatType.Root] = "올가미",
0			[PowaAuras.DebuffCatType.Disarm] = "무장해제",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "버프",
0			[PowaAuras.BuffTypes.Debuff] = "디버프",
0			[PowaAuras.BuffTypes.AoE] = "AOE 디버프",
0			[PowaAuras.BuffTypes.TypeDebuff] = "디버프의 유형",
0			[PowaAuras.BuffTypes.Enchant] = "무기 강화",
0			[PowaAuras.BuffTypes.Combo] = "연계 점수",
0			[PowaAuras.BuffTypes.ActionReady] = "사용 가능한 행동",
0			[PowaAuras.BuffTypes.Health] = "생명력",
0			[PowaAuras.BuffTypes.Mana] = "마나",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "분노/기력/룬",
0			[PowaAuras.BuffTypes.Aggro] = "어그로",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "태세",
0			[PowaAuras.BuffTypes.SpellAlert] = "주문 경고", 
0			[PowaAuras.BuffTypes.OwnSpell] = "나의 주문", 
0			[PowaAuras.BuffTypes.StealableSpell] = "훔치기 가능한 주문", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "제거가능한 주문",
0		},
	
		-- main
0		nomEnable = "Power Auras 활성화",
0		aideEnable = "모든 Power Auras 효과를 활성화합니다.",
0		nomDebug = "디버그 메시지 활성화",
0		aideDebug = "디버그 메시지를 활성화합니다.",
0		ListePlayer = "페이지",
0		ListeGlobal = "공통",
0		aideMove = "여기로 효과를 이동시킵니다.",
0		aideCopy = "여기로 효과를 복사합니다.",
0		nomRename = "이름 변경",
0		aideRename = "선택된 효과의 페이지의 이름을 변경합니다.",
0		nomTest = "테스트",
0		nomHide = "모두 숨기기",
0		nomEdit = "편집",
0		nomNew = "새로",
0		nomDel = "삭제",
0		nomImport = "들여오기",
0		nomExport = "내보내기",
0		nomImportSet = "설정 가져오기", 
0		nomExportSet = "설정 내보내기", 
0		aideImport = "오라 구문열을 붙여넣기 하려면 Ctrl-V를 누르고 \'승낙\'을 누르십시오.",
0		aideExport = "공유하기 위해 오라 구문열을 복사하려면 Ctrl-C를 누르십시오.",
0		aideImportSet = "오라 설정 구문열을 붙여넣기 하려면 Ctrl-V를 누르고 \'승낙\'을 누르십시오.",
0		aideExportSet = "공유하기 위해 모든 오라 구문열을 복사하려면 Ctrl-C를 누르십시오.",
0		aideDel = "선택된 효과를 제거합니다(이 버튼을 작동되게 하려면 CTRL을 누르십시오).",
0		nomMove = "이동",
0		nomCopy = "복사",
0		nomPlayerEffects = "캐릭터별 효과",
0		nomGlobalEffects = "공통 효과",
0		aideEffectTooltip = "(효과 켜기/끄기를 전환하려면 Shift-클릭하십시오)",
	
		-- editor
0		nomSound = "재생할 소리",
0		aideSound = "애니메이션 시작시 소리를 재생합니다.",
0		nomCustomSound = "혹은 소리 파일:",
0		aideCustomSound = "게임을 시작하기 전에, Sounds 폴더내의 소리 파일의 이름을 아래의 빈칸에 입력하십시오. mp3 및 wav 확장자를 지원합니다. (예: 'cookie.mp3' ;)",
	
0		nomTexture = "텍스쳐",
0		aideTexture = "보여지게 될 텍스쳐를 선택합니다. 애드온 폴더내의 Aura#.tga 파일의 변경을 통해 텍스쳐를 쉽게 바꿀 수 있습니다.",
	
0		nomAnim1 = "주 애니메이션",
0		nomAnim2 = "보조 애니메이션",
0		aideAnim1 = "다양한 효과와 더불어 텍스쳐에 움직임을 부여할 지 여부를 선택합니다.",
0		aideAnim2 = "이 애니메이션은 주 애니메이션보다는 덜 불투명하게 보여지게 됩니다. 화면의 과부하를 줄이기 위해 한개의 보조 애니메이션만이 동시에 보여지게 된다는 점에 주의 하십시오.",
	
0		nomDeform = "형태 변경",
0		aideDeform = "텍스쳐를 높이 혹은 너비로 늘립니다.",
	
0		aideColor = "텍스쳐의 색상을 변경하려면 여기를 클릭하십시오.",
0		aideFont = "글꼴을 선택하려면 여기를 클릭하십시오. 선택한 것을 적용하려면 '확인'을 누르십시오.",
0		aideMultiID = "체크한 것과 연결시키기 위해 다른 오라 ID를 여기에 입력합니다. 다중 ID는 '/'로 구별지워져야만 합니다. 오라 ID는 오라 툴팁의 첫번째 줄에서 [#]로 찾을 수 있습니다.",
0		aideTooltipCheck = "Also check the tooltip starts with this text",
	
0		aideBuff = "여기에 이 효과를 활성/비활성화해야만 하는 버프의 이름을, 혹은 이름의 일부분을 입력합니다. 구분되어 있어야 할 이름이라면 각각의 이름을 ('/'로 분리해) 입력할 수 있습니다(예: Super Buff/Power).",
0		aideBuff2 = "여기에 이 효과를 활성/비활성화해야만 하는 디버프의 이름을, 혹은 이름의 일부분을 입력합니다. 구분되어 있어야 할 이름이라면 각각의 이름을 ('/'로 분리해) 입력할 수 있습니다(예: Dark Disease/Plague).",
0		aideBuff3 = "여기에 이 효과를 활성/비활성화해야만 하는 디버프의 유형(독, 질병, 저주, 마법, 군중제어, 침묵, 기절, 덫, 올가미 혹은 없음)을 입력합니다. 디버프 각각의 유형을 ('/'로 분리해) 입력할 수도 있습니다(예: 질병/독).",
0		aideBuff4 = "여기에 이 효과에 적용해야만 하는 효과의 범위 이름(AOE)을 입력합니다(예를 들면 불의 비와 같은 경우입니다. 이 효과의 범위(AOE)의 이름을 전투 기록에서 찾을 수 있습니다).",
0		aideBuff5 = "여기에 이 효과를 활성화해야만 하는 일시적인 무기 강화를 입력합니다 : 선택적으로 주무기 혹은 보조무기 장착 칸을 지정하기 위해 '주무기', '보조 무기' 혹은 양 무기에 대해 '둘다'(예: 주무기/crippling).",
0		aideBuff6 = "여기에 이 효과를 활성화해야만 하는 연계 점수의 숫자를 입력합니다(예 : 1 혹은 1/2/3 혹은 0/4/5 등등...).",
0		aideBuff7 = "여기에 단축 행동바에 있는 행동의 이름을, 혹은 이름의 일부분을 입력합니다. 이 행동이 사용 가능한 경우에 효과는 활성화될 것입니다.",
0		aideBuff8 = "여기에 마법책에 있는 주문의 이름을, 혹은 이름의 일부분을 입력합니다. 주문의 ID를 입력하여도 됩니다(예: 12345).",
	
0		aideSpells = "여기에 주문 경고 오라를 적용할 주문의 이름을 입력합니다.",
0		aideStacks = "여기에 이 효과를 활성/비활성화하는데 요구되는 연산자와 중첩 횟수를 입력합니다. 연산자를 사용한 경우에만 작동합니다! 예: '<5' '>3' '=11' '!5' '>=0' '<=6' '2<>8'",
	
0		aideStealableSpells = "마법훔치기를 할 주문명을 여기에 입력하시요. (use * for any stealable spell).", 
0		aidePurgeableSpells = "정화할 주문명을 여기에 입력하시요. (use * for any purgeable spell).", 
	
0		aideUnitn = "여기에 이 효과를 활성/비활성화해야만 하는 유닛의 이름을 입력합니다. 공격대 혹은 그룹에 속해 있는 유닛의 이름만 입력할 수 있습니다.",
0		aideUnitn2 = "공격대/그룹에 한해",
	
0		aideMaxTex = "효과 편집기에 가능한 텍스쳐의 최대 갯수를 정의 합니다. 애드온 폴더에 텍스쳐를 추가하려면(AURA1.tga에서 AURA50.tga까지 이름과 함께), 여기에 올바른 갯수를 지시해야만 합니다.",
0		aideAddEffect = "편집을 위한 효과를 추가합니다.",
0		aideWowTextures = "이 효과에 대해 Power Auras 폴더내의 텍스쳐 대신에 WoW의 텍스쳐를 사용하려면 이 옵션에 체크하십시오.",
0		aideTextAura = "텍스쳐 대신에 문자를 입력하려면 이 옵션에 체크하십시오.",
0		aideRealaura = "활성 오오라",
0		aideCustomTextures = "하위 폴더 'Custom'에 있는 텍스쳐를 사용하려면 이 옵션에 체크하십시오. 아래에 텍스쳐의 이름을 기입해야만 합니다(예: myTexture.tga)",
0		aideRandomColor = "이 효과를 알리기 위해 활성화되는 매 시간마다 무작위 색상을 사용하려면 이 옵션에 체크하십시오.",
	
0		aideTexMode = "불투명한 텍스쳐를 사용하려면 이 옵션을 체크 해제하십시오. 기본적으로 가장 어두운 색상이 더욱 반투명합니다.",
	
0		nomActivationBy = "활성화:",
	
0		nomOwnTex = "자신의 텍스쳐 사용",
0		aideOwnTex = "기본 텍스쳐 대신에 자신의 디/버프 혹은 능력 텍스쳐를 사용합니다.",
0		nomStacks = "중첩",
	
0		nomUpdateSpeed = "Update speed",
0		nomSpeed = "애니메이션 속도",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "시작 애니메이션",
0		nomEnd = "종료 애니메이션",
0		nomSymetrie = "좌우 대칭",
0		nomAlpha = "불투명도",
0		nomPos = "위치",
0		nomTaille = "크기",
	
0		nomExact = "정확한 이름",
0		nomGCD = "전역 재사용 대기",
0		nomThreshold = "한계치",
0		aideThreshInv = "한계치 값을 뒤집으려면 이 옵션에 체크하십시오. 생명력/마나: 기본 = 낮음 경고/체크시 = 높음 경고. 기력/분노/마력: 기본 = 높음 경고/체크시 = 낮음 경고",
0		nomThreshInv = "</>",
0		nomStance = "태세",
	
0		nomMine = "나에 의해 시전된",
0		nomDispellable = "내가 해제할 수 있는",
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "적대적 대상",
0		nomCheckFriend = "우호적 대상",
0		nomCheckParty = "파티원",
0		nomCheckFocus = "주시 대상",
0		nomCheckRaid = "공격대원",
0		nomCheckGroupOrSelf = "공격대/파티원 혹은 자신",
0		nomCheckGroupAny = "특정",
0		nomCheckOptunitn = "유닛 이름",
	
0		aideTarget = "적대적 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideTargetFriend = "우호적 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideParty = "파티원에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideGroupOrSelf = "파티 혹은 공격대원 혹은 자신에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideFocus = "주시 대상에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideRaid = "공격대원에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideGroupAny = "'특정' 파티/공격대원에 대해 버프를 테스트하려면 이곳에 체크하십시오. 비체크시: '모든' 파티/공격대원에 대해 버프가 테스트됩니다.",
0		aideOptunitn = "공격대/그룹에 속해 있는 특정 캐릭터에 한해 테스트하려면 이곳에 체크하십시오.",
0		aideExact = "버프/디버프/행동의 정확한 이름을 테스트하려면 이곳에 체크하십시오.",
0		aideGCD = "'사용 가능한 행동'과 함께 GCD를 적용하려면 이곳에 체크하십시오. 행동이 GCD를 갖고 있는 경우에 오라가 번쩍이게 됩니다.",
0		aideStance = "이벤트에 적용할 태세, 오라 혹은 변신을 선택하십시오.",
0		aideMine = "플레이어에 의해 시전된 버프/디버프에 한해 테스트하려면 이곳에 체크하십시오.",
	
0		nomCheckShowTimer = "보이기",
0		nomTimerDuration = "지속시간",
0		aideTimerDuration = "대상에 대해 버프/디버프 지속시간을 시연하기 위해서 타이머를 보여줍니다(비활성화하려면 0)",
0		aideShowTimer = "이 효과의 타이머를 보여주려면 이곳에 체크하십시오.",
0		aideSelectTimer = "지속시간을 보여줄 타이머를 선택합니다.",
0		aideSelectTimerBuff = "지속시간을 보여줄 타이머를 선택합니다(이중 하나는 플레이어의 버프를 위해 남겨둔 상태입니다).",
0		aideSelectTimerDebuff = "지속시간을 보여줄 타이머를 선택합니다(이중 하나는 플레이어의 디버프를 위해 남겨둔 상태입니다).",
	
0		nomCheckShowStacks = "보이기",
	
0		nomCheckInverse = "비활성화시 보이기",
0		aideInverse = "버프/디버프가 비활성화되어 있는 경우에만 이 효과를 보여주려면 여기에 체크하십시오.",
	
0		nomCheckIgnoreMaj = "대문자 무시",
0		aideIgnoreMaj = "버프/디버프 이름의 대/소문자를 무시하려면 여기에 체크하십시오.",
	
0		nomDuration = "애니메이션 지속시간",
0		aideDuration = "이 시간 이후로 이 효과는 나타나지 않습니다(비활성화 하려면 0)",
	
0		nomCentiemes = "초 백단위 보이기",
0		nomDual = "타이머 두개 보이기",
0		nomHideLeadingZeros = "0일때 숨기기",
0		nomTransparent = "반투명한 텍스쳐 사용",
0		nomClose = "닫기",
0		nomEffectEditor = "효과 편집기",
0		nomAdvOptions = "확장 옵션",
0		nomMaxTex = "가능한 텍스쳐의 최대 갯수",
0		nomTabAnim = "애니메이션",
0		nomTabActiv = "활성화",
0		nomTabSound = "소리",
0		nomTabTimer = "타이머",
0		nomTabStacks = "중첩",
0		nomWowTextures = "WoW 텍스쳐",
0		nomCustomTextures = "사용자 텍스쳐",
0		nomTextAura = "문자 오라",
0		nomRealaura = "활성 오라",
0		nomRandomColor = "무작위 색상",
0		nomTexMode = "빛남",
0		nomTalentGroup1 = "특성 전문화 1",
0		aideTalentGroup1 = "첫번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup2 = "특성 전문화 2",
0		aideTalentGroup2 = "두번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup1 = "특성 전문화 1",
0		aideTalentGroup1 = "첫번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
0		nomTalentGroup2 = "특성 전문화 2",
0		aideTalentGroup2 = "두번째 특성을 전문화한 경우에만 이 효과를 보여줍니다.",
		
0		nomReset = "편집창 위치 초기화",	
0		nomPowaShowAuraBrowser = "Aura Browser 보이기",
		
0		nomDefaultTimerTexture = "타이머 텍스쳐 기본값",
0		nomTimerTexture = "타이머 텍스쳐",
0		nomDefaultStacksTexture = "충첩 텍스쳐 기본값",
0		nomStacksTexture = "중첩 텍스쳐",
		
0		Enabled = "활성화",
0		Default = "기본값",
	
0		Ternary = {
0			combat = "전투 중",
0			inRaid = "공격대 중",
0			inParty = "파티 중",
0			isResting = "휴식 중",
0			ismounted = "탈것 중",
0			inVehicle = "운송수단 중",
0			isAlive= "살아 있을 때",
0		},
	
0		nomWhatever = "무시",
0		aideTernary = "오라표시 조건을 설정",
0		TernaryYes = {
0			combat = "오직 전투중일 때",
0			inRaid = "오직 공격대에 속해 있을 때",
0			inParty = "오직 5인 파티에 속해 있을 때",
0			isResting = "오직 휴식상태일 때",
0			ismounted = "오직 탈것 상태일 때",
0			inVehicle = "오직 운송수단 타고 있을 때",
0			isAlive= "오직 살아 있을 때만",
0		},
0		TernaryNo = {
0			combat = "전투중이 아닐 때",
0			inRaid = "공격대가 아닐 때",
0			inParty = "파티가 아닐 때",
0			isResting = "휴식 상태가 아닐 때",
0			ismounted = "탈것을 탄 상태가 아닐 때",
0			inVehicle = "운송수단을 타고 있지 않을 때",
0			isAlive= "죽었을 때",
0		},
0		TernaryAide = {
0			combat = "전투 상황에 의한 효능 상태.",
0			inRaid = "공격대 상황에 의한 효능 상태.",
0			inParty = "파티 상황에 의한 효능 상태.",
0			isResting = "휴식상황에 의한 효능 상태.",
0			ismounted = "탈것 상황에 의한 효능 상태.",
0			inVehicle = "운송수단 상황에 의한 효능 상태.",
0			isAlive= "살아 있는 상황에 의한 효능 상태.",
0		},
	
0		nomTimerInvertAura = "시간 이하일 때 오라 반전",
0		aidePowaTimerInvertAuraSlider = "제한시간보다 지속시간이 적을 때 오라 반전(0일 때 비활성화)",
0		nomTimerHideAura = "오라 숨김 & 상기 시간까지",
0		aidePowaTimerHideAuraSlider = "제한 시간보다 지속시간이 더 중요할 때 오라와 시간 숨김 (0일 때 비활성화)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
..\localisation_ruRU.lua
==============================================================================
1	﻿if (GetLocale() == "ruRU") then 
	
0	PowaAuras.Anim[0] = "[Cкрытый]";
0	PowaAuras.Anim[1] = "Статический";
0	PowaAuras.Anim[2] = "Мигание";
0	PowaAuras.Anim[3] = "Увеличение";
0	PowaAuras.Anim[4] = "Пульсация";
0	PowaAuras.Anim[5] = "Пузыриться";
0	PowaAuras.Anim[6] = "Капанье воды";
0	PowaAuras.Anim[7] = "Электрический";
0	PowaAuras.Anim[8] = "Стягивание";
0	PowaAuras.Anim[9] = "Огонь";
0	PowaAuras.Anim[10] = "Вращаться";
	
0	PowaAuras.BeginAnimDisplay[0] = "[Нету]";
0	PowaAuras.BeginAnimDisplay[1] = "Увеличить масштаб";
0	PowaAuras.BeginAnimDisplay[2] = "Уменьшить масштаб";
0	PowaAuras.BeginAnimDisplay[3] = "Только матовость";
0	PowaAuras.BeginAnimDisplay[4] = "Слева";
0	PowaAuras.BeginAnimDisplay[5] = "Вверху-слева";
0	PowaAuras.BeginAnimDisplay[6] = "Вверху";
0	PowaAuras.BeginAnimDisplay[7] = "Вверху-справа";
0	PowaAuras.BeginAnimDisplay[8] = "Справа";
0	PowaAuras.BeginAnimDisplay[9] = "Внизу-справа";
0	PowaAuras.BeginAnimDisplay[10] = "Внизу";
0	PowaAuras.BeginAnimDisplay[11] = "Внизу-слева";
0	PowaAuras.BeginAnimDisplay[12] = "Bounce";
	
0	PowaAuras.EndAnimDisplay[0] = "[Нету]";
0	PowaAuras.EndAnimDisplay[1] = "Увеличить масштаб";
0	PowaAuras.EndAnimDisplay[2] = "Уменьшить масштаб";
0	PowaAuras.EndAnimDisplay[3] = "Только матовость";
0	PowaAuras.EndAnimDisplay[4] = "Spin"; --- untranslated
0	PowaAuras.EndAnimDisplay[5] = "Spin In"; --- untranslated
	
0	PowaAuras.Sound[0] = "Нету";
0	PowaAuras.Sound[1] = "LEVELUP";
0	PowaAuras.Sound[2] = "LOOTWINDOWCOINSOUND";
0	PowaAuras.Sound[3] = "MapPing";
0	PowaAuras.Sound[4] = "Exploration";
0	PowaAuras.Sound[5] = "QUESTADDED";
0	PowaAuras.Sound[6] = "QUESTCOMPLETED";
0	PowaAuras.Sound[7] = "WriteQuest";
0	PowaAuras.Sound[8] = "Fishing Reel in";
0	PowaAuras.Sound[9] = "igPVPUpdate";
0	PowaAuras.Sound[10] = "ReadyCheck";
0	PowaAuras.Sound[11] = "RaidWarning";
0	PowaAuras.Sound[12] = "AuctionWindowOpen";
0	PowaAuras.Sound[13] = "AuctionWindowClose";
0	PowaAuras.Sound[14] = "TellMessage";
0	PowaAuras.Sound[15] = "igBackPackOpen";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "Для просмотра настроек введите /powa.",
	
0		aucune = "Нету",
0		aucun = "Нету",
0		largeur = "Ширина",
0		hauteur = "Высота",
0		mainHand = "правая",
0		offHand = "левая",
0		bothHands = "Обе",
	
0		DebuffType =
0		{
0			Magic = "Магия",
0			Disease = "Болезнь",
0			Curse = "Проклятие",
0			Poison = "Яд",
0		},
		
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "Контроль",
0			[PowaAuras.DebuffCatType.Silence] = "Молчание",
0			[PowaAuras.DebuffCatType.Snare] = "Ловушка",
0			[PowaAuras.DebuffCatType.Stun] = "Оглушение",
0			[PowaAuras.DebuffCatType.Root] = "Корни",
0			[PowaAuras.DebuffCatType.Disarm] = "Разоружение",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Бафф",
0			[PowaAuras.BuffTypes.Debuff] = "Дебафф",
0			[PowaAuras.BuffTypes.AoE] = "Масс дебафф",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Тип дебаффов",
0			[PowaAuras.BuffTypes.Enchant] = "Усиление оружия",
0			[PowaAuras.BuffTypes.Combo] = "Приёмы в серии",
0			[PowaAuras.BuffTypes.ActionReady] = "Применимое действие",
0			[PowaAuras.BuffTypes.Health] = "Здоровье",
0			[PowaAuras.BuffTypes.Mana] = "Мана",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "Ярость/Энергия/Руны",
0			[PowaAuras.BuffTypes.Aggro] = "Угроза",
0			[PowaAuras.BuffTypes.PvP] = "PvP",
0			[PowaAuras.BuffTypes.Stance] = "Стойка",
0			[PowaAuras.BuffTypes.SpellAlert] = "Оповещение о заклинаниях", 
0			[PowaAuras.BuffTypes.OwnSpell] = "Моё заклинание",
0			[PowaAuras.BuffTypes.StealableSpell] = "Крадущее заклинание", 
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Очищающее заклинание", 
0		},
		
		-- main
0		nomEnable = "Активировать Power Auras",
0		aideEnable = "Включить все эффекты Power Auras",
0		nomDebug = "Активировать сообщения отладки",
0		aideDebug = "Включить сообщения отладки",
0		ListePlayer = "Страница",
0		ListeGlobal = "Глобальное",
0		aideMove = "Переместить эффект сюда.",
0		aideCopy = "Копировать эффект сюда.",
0		nomRename = "Переименовать",
0		aideRename = "Переименовать выбранную страницу эффектов.",
0		nomTest = "Тест",
0		nomHide = "Скрыть все",
0		nomEdit = "Править",
0		nomNew = "Новое",
0		nomDel = "Удалить",
0		nomImport = "Импорт", 
0		nomExport = "Экспорт",
0		nomImportSet = "Имп. набора", 
0		nomExportSet = "Эксп. набора", 
0		aideImport = "Нажмите Ctrl-V чтобы вставить строку-ауры и нажмите \'Принять\'.",
0		aideExport = "Нажмите Ctrl-C чтобы скопировать строку-ауры.",
0		aideImportSet = "Нажмите Ctrl-V чтобы вставить строку-набора-аур и нажмите \'Принять\', это сотрёт все ауры на этой странице.",
0		aideExportSet = "Нажмите Ctrl-C чтобы скопировать все ауры на этой странице.",
0		aideDel = "Удалить выбранный эффект (Чтобы кнопка заработала, удерживайте CTRL)",
0		nomMove = "Переместить",
0		nomCopy = "Копировать",
0		nomPlayerEffects = "Эффекты персонажа",
0		nomGlobalEffects = "Глобальные\nэффекты",
0		aideEffectTooltip = "([Shift-клик] - вкл/выкл эффект)",
	
		-- editor
0		nomSound = "Проигрываемый звук",
0		aideSound = "Проиграть звук при начале.",
0		nomCustomSound = "или звуковой файл:",
0		aideCustomSound = "Введите название звукового файла, который поместили в папку Sounds, ПРЕЖДЕ чем запустили игру. Поддерживаются mp3 и WAV. Например: 'cookie.mp3' ;)",
		
0		nomTexture = "Текстура",
0		aideTexture = "Выбор отображаемой текстуры. Вы можете легко заменить текстуры путем изменения файлов Aura#.tga в директории модификации.",
	
0		nomAnim1 = "Главная анимация",
0		nomAnim2 = "Вторичная анимация",
0		aideAnim1 = "Оживить текстуры или нет, с различными эффектами.",
0		aideAnim2 = "Эта анимация будет показана с меньшей прозрачностью, чем основная анимация. Внимание, чтобы не перегружать экран, в одно и то же время будет показана только одна вторичная анимация.",
	
0		nomDeform = "Деформация",
0		aideDeform = "Вытягивание текстуры по ширине или по высоте.",
	
0		aideColor = "Кликните тут, чтобы изменить цвет текстуры.",
0		aideFont = "Нажмите сюда, чтобы выбрать шрифт. Нажмите OK, чтобы применить выбранное.",
0		aideMultiID = "Здесь введите идентификаторы (ID) других аур для объединения проверки. Несколько ID должны разделяться с помощью '/'. ID аура можно найти в виде [#], в первой строке подсказки ауры. А лучше на http://ru.wowhead.com", 
0		aideTooltipCheck = "Also check the tooltip starts with this text",
	
0		aideBuff = "Здесь введите название баффа, или часть названия, который должен активировать/дезактивировать эффект. Вы можете ввести несколько названий, если они порядочно разделены (К примеру: Супер бафф/Сила)",
0		aideBuff2 = "Здесь введите название дебаффа, или часть названия, который должен активировать/дезактивировать эффект. Вы можете ввести несколько названий, если они порядочно разделены (К примеру: Тёмная болезнь/Чума)",
0		aideBuff3 = "Здесь введите тип дебаффа, который должен активировать/дезактивировать эффект (Яд, Болезнь, Проклятие, Магия или отсутствует). Вы также можете ввести несколько типов дебаффов.",
0		aideBuff4 = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
0		aideBuff5 = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
0		aideBuff6 = "Вы можете ввести количество приёмов в серии, которое активирует данный эффект (пример : 1 или 1/2/3 или 0/4/5 и т.д...) ",
0		aideBuff7 = "Здесь введите название или часть названия, какого-либо действия с ваших понелей команд. Эффект активируется при использовании этого действия.",
0		aideBuff8 = "Здесь введите название, или часть названия заклинания из вашей книги заклинаний. Вы можете ввести идентификатор(id) заклинания [12345].",
		
0		aideSpells = "Здесь введите название способности, которое вызовет оповещение.",
0		aideStacks = "Здесь введите оператор и значение стопки, которые должны активировать/дезактивировать эффект. Это работает только с оператором! К примеру: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
	
0		aideStealableSpells = "Здесь введите название крадущего заклинания, которое вызовет оповещение (используйте * для любого крадущего заклинания).", 
0		aidePurgeableSpells = "Здесь введите название очищающего заклинания, которое вызовет оповещение (используйте * для любого очищающего заклинания).", 
	
0		aideUnitn = "Здесь введите название существа/игрока, который должен активировать/дезактивировать эффект. Можно ввести только имена, если они находятся в вашей группе или рейде.",
0		aideUnitn2 = "Только в группе/рейде.",    
	
0		aideMaxTex = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
0		aideAddEffect = "Добавить эффект в редактор.",
0		aideWowTextures = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
0		aideTextAura = "Отметив тут, вы можете ввести используемый текст вместо текстуры.",
0		aideRealaura = "Реальная аура",
0		aideCustomTextures = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
0		aideRandomColor = "Отметив это, вы устанавливаете использование случайного цвета каждый раз при активации эффекта.",
	
0		aideTexMode = "Снимите этот флажок, чтобы использовать полупрозрачность текстур. По умолчанию, темные цвета будут более прозрачными.",
	
0		nomActivationBy = "Активация :",
	
0		nomOwnTex = "Своя текстуру",
0		aideOwnTex = "Используйте де/бафф или способность вместо текстур.",
0		nomStacks = "Стопка",
	
0		nomUpdateSpeed = "Скорость обновления",
0		nomSpeed = "Скорость анимации",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "Начало анимации",
0		nomEnd = "Конец анимации",
0		nomSymetrie = "Симметрия",
0		nomAlpha = "Прозрачность",
0		nomPos = "Позиция",
0		nomTaille = "Размер",
	
0		nomExact = "Точное название",
0		nomGCD = "Глоб. восстанов.",
0		nomThreshold = "Порог",
0		aideThreshInv = "Инверсия логики порога значений. Здоровье/Мана: по умолчанию = сообщать при малом количестве / отмечено = сообщать при большем количестве. Энергия/Ярость/Сила: по умолчанию = сообщать при большем количестве / отмечено = сообщать при малом количестве",
0		nomThreshInv = "</>",
0		nomStance = "Стойка",
	
0		nomMine = "Применяемое мною",
0		aideMine = "Отметив это, будет происходить проверка только баффов/дебаффав применяемых игроком.",
0		nomDispellable = "Могу рассеять",
0		aideDispellable = "Check to show only buffs that are dispellable", --- untranslated
0		nomCanInterrupt = "Может быть прерван",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted", --- untranslated
		
0		nomPlayerSpell = "Player Casting", --- untranslated
0		aidePlayerSpell = "Check if Player is casting a spell", --- untranslated
	
0		nomCheckTarget = "Враждебная цель",
0		nomCheckFriend = "Дружелюбная цель",
0		nomCheckParty = "Участник группы",
0		nomCheckFocus = "Фокус",
0		nomCheckRaid = "Участник рейда",
0		nomCheckGroupOrSelf = "Рейд/Группу или себя",
0		nomCheckGroupAny = "Любой", 
0		nomCheckOptunitn = "Название юнита",
		
0		aideTarget = "Отметив это, будет происходить проверка только враждебной цели.",
0		aideTargetFriend = "Отметив это, будет происходить проверка только дружеской цели.",
0		aideParty = "Отметив это, будет происходить проверка только участников группы.",
0		aideGroupOrSelf = "Отметив это, будет происходить проверка группы или рейда или вас.",
0		aideFocus = "Отметив это, будет происходить проверка только фокуса.",
0		aideRaid = "Отметив это, будет происходить проверка только участника рейда.",
0		aideGroupAny = "Отметив это, будет происходить проверка баффов у 'любого' участника группы/рейда. Без отметки: Будет подразумеваться что 'Все' участники с баффами.",
0		aideExact = "Отметив это, будет происходить проверка точного названия баффа/дебаффа/действия.",
0		aideOptunitn = "Отметив это, будет происходить проверка только определённого персонажа у группе/рейде.",	
0		aideGCD = "Отметив это, аура будет мигать при активном глобальном восстановлении.",
0		aideStance = "Выберите в какая стойка, форма или аура вызовет событие.",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin", --- untranslated
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends", --- untranslated
	
0		nomCheckShowTimer = "Показать",
0		nomTimerDuration = "Длительность",
0		aideTimerDuration = "Отображать таймер симулирующий длительность баффа/дебаффа на цели (0 - дезактивировать)",
0		aideShowTimer = "Отображение таймера для этого эффекта.",
0		aideSelectTimer = "Выберите, который таймер будет отображать длительность.",
0		aideSelectTimerBuff = "Выберите, который таймер будет отображать длительность (this one is reserved for player's buffs)",
0		aideSelectTimerDebuff = "Выберите, который таймер будет отображать длительность (this one is reserved for player's debuffs)",
	
0		nomCheckShowStacks = "Показать",
	
0		nomCheckInverse = "Инвертировать",
0		aideInverse = "Инвертировать логику отображение этого эффекта только когда бафф/дебафф неактивен.",	
		
0		nomCheckIgnoreMaj = "Игнор верхнего регистра",	
0		aideIgnoreMaj = "Если отметите это, будет игнорироваться верхний/нижний регистр строчных букв в названиях баффов/дебаффов.",
		
0		nomDuration = "Длина анимации:",
0		aideDuration = "После истечения этого времени, данный эффект исчезнет (0 - дезактивировать)",
		
0		nomCentiemes = "Показывать сотую часть",
0		nomDual = "Показывать 2 таймера",
0		nomHideLeadingZeros = "Убрать нули",
0		nomTransparent = "Исп. прозрачные текстуры",
0		nomUpdatePing = "Animate on refresh", --- untranslated
0		nomClose = "Закрыть",
0		nomEffectEditor = "Редактор эффектов",
0		nomAdvOptions = "Опции",
0		nomMaxTex = "Доступно максимум текстур",
0		nomTabAnim = "Анимация",
0		nomTabActiv = "Активация",
0		nomTabSound = "Звук",
0		nomTabTimer = "Таймер",
0		nomTabStacks = "Стопки",
0		nomWowTextures = "Текстуры WoW",
0		nomCustomTextures = "Свои текстуры",
0		nomTextAura = "Текст ауры",
0		nomRealaura = "Реальные ауры",
0		nomRandomColor = "Случайные цвета",
0		nomTexMode = "Сияние",
	
0		nomTalentGroup1 = "Спек 1",
0		aideTalentGroup1 = "Отображать данный эффект только когда у вас активирован основной набор талантов.",
0		nomTalentGroup2 = "Спек 2",
0		aideTalentGroup2 = "Отображать данный эффект только когда у вас активирован второстепенный набор талантов.",
		
0		nomReset = "Сброс позиции редактора",	
0		nomPowaShowAuraBrowser = "Показать окно просмотра аур",
		
0		nomDefaultTimerTexture = "Стандартная текстура таймера",
0		nomTimerTexture = "Текстура таймера",
0		nomDefaultStacksTexture = "Стандартная текстура стопки",
0		nomStacksTexture = "Текстура стопки",
		
0		Enabled = "Включено",
0		Default = "По умолчанию",
	
0		Ternary = {
0			combat = "В бою",
0			inRaid = "В рейде",
0			inParty = "В группе",
0			isResting = "Отдых",
0			ismounted = "Верхом",
0			inVehicle = "В транспорте",
0			isAlive= "Живой",
0		},
	
0		nomWhatever = "Игнорировать",
0		aideTernary = "Установите в каком состоянии, будет отображаться эта ауры.",
0		TernaryYes = {
0			combat = "Только когда в бою",
0			inRaid = "Только когда в рейде",
0			inParty = "Только когда в группе",
0			isResting = "Только когда вы отдыхаете",
0			ismounted = "Только когда на средстве передвижения",
0			inVehicle = "Только когда в транспорте",
0			isAlive= "Только когда жив",
0		},
0		TernaryNo = {
0			combat = "Только когда НЕ в бою",
0			inRaid = "Только когда НЕ в рейде",
0			inParty = "Только когда НЕ в группе",
0			isResting = "Только когда НЕ на отдыхе",
0			ismounted = "Только когда НЕ на средстве передвижения",
0			inVehicle = "Только когда НЕ в транспорте",
0			isAlive= "Только когда мёртв",
0		},
0		TernaryAide = {
0			combat = "Эффект изменен статусом боя.",
0			inRaid = "Эффект изменен статусом участия в рейде.",
0			inParty = "Эффект изменен статусом участия в группе.",
0			isResting = "Эффект изменен статусом отдыха.",
0			ismounted = "Эффект изменен статусом - на средстве передвижения.",
0			inVehicle = "Эффект изменен статусом - в транспорте.",
0			isAlive= "Эффект изменен статусом - живой.",
0		},
	
0		nomTimerInvertAura = "Инвертировать ауру когда время ниже",
0		aidePowaTimerInvertAuraSlider = "Инвертировать ауру когда длительность меньше чем этот предел (0 - дезактивировать)",
0		nomTimerHideAura = "Скрыть ауру и таймер если время выше",
0		aidePowaTimerHideAuraSlider = "Скрыть ауру и таймер когда длительность больше чем этот предел (0 - дезактивировать)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end

==============================================================================
..\localisation_zhCN.lua
==============================================================================
1	﻿if (GetLocale() == "zhCN") then
	
0	PowaAuras.Anim[0] = "[无]";
0	PowaAuras.Anim[1] = "静止";
0	PowaAuras.Anim[2] = "闪光效果";
0	PowaAuras.Anim[3] = "生长效果";
0	PowaAuras.Anim[4] = "脉搏效果";
0	PowaAuras.Anim[5] = "气泡效果";
0	PowaAuras.Anim[6] = "水滴效果";
0	PowaAuras.Anim[7] = "漏电效果";
0	PowaAuras.Anim[8] = "收缩效果";
0	PowaAuras.Anim[9] = "火焰效果";
0	PowaAuras.Anim[10] = "盘旋效果";
	
0	PowaAuras.BeginAnimDisplay[0] = "[无]";
0	PowaAuras.BeginAnimDisplay[1] = "由小放大";
0	PowaAuras.BeginAnimDisplay[2] = "由大渐小";
0	PowaAuras.BeginAnimDisplay[3] = "逐渐清晰";
0	PowaAuras.BeginAnimDisplay[4] = "左边进入";
0	PowaAuras.BeginAnimDisplay[5] = "左上进入";
0	PowaAuras.BeginAnimDisplay[6] = "上部进入";
0	PowaAuras.BeginAnimDisplay[7] = "右上进入";
0	PowaAuras.BeginAnimDisplay[8] = "右边进入";
0	PowaAuras.BeginAnimDisplay[9] = "右下进入";
0	PowaAuras.BeginAnimDisplay[10] = "下部进入";
0	PowaAuras.BeginAnimDisplay[11] = "左下进入";
0	PowaAuras.BeginAnimDisplay[12] = "弹跳进入";
	
0	PowaAuras.EndAnimDisplay[0] = "[无]";
0	PowaAuras.EndAnimDisplay[1] = "放大消失";
0	PowaAuras.EndAnimDisplay[2] = "缩小消失";
0	PowaAuras.EndAnimDisplay[3] = "淡化消失";
0	PowaAuras.EndAnimDisplay[4] = "Spin";
0	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
0	PowaAuras.Sound[0] = "[无]";
0	PowaAuras.Sound[1] = "升级";
0	PowaAuras.Sound[2] = "抬取金币";
0	PowaAuras.Sound[3] = "点击小地图";
0	PowaAuras.Sound[4] = "发现新区域";
0	PowaAuras.Sound[5] = "接到任务";
0	PowaAuras.Sound[6] = "任务完成";
0	PowaAuras.Sound[7] = "写任务";
0	PowaAuras.Sound[8] = "钓鱼";
0	PowaAuras.Sound[9] = "PVP事件";
0	PowaAuras.Sound[10] = "团队检查";
0	PowaAuras.Sound[11] = "团队警告";
0	PowaAuras.Sound[12] = "打开拍卖行";
0	PowaAuras.Sound[13] = "关闭拍卖行";
0	PowaAuras.Sound[14] = "消消话";
0	PowaAuras.Sound[15] = "打开背包";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "输入 /powa 打开特效编辑器.",
	
0		aucune = "无",
0		aucun = "无",
0		largeur = "宽度",
0		hauteur = "高度",
0		mainHand = "主手",
0		offHand = "副手",
0		bothHands = "双手",
	
0		DebuffType =
0		{
0			Magic   = "魔法",
0			Disease = "疾病",
0			Curse   = "诅咒",
0			Poison  = "中毒",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC", --- need confirm this translation. by doomiris
0			[PowaAuras.DebuffCatType.Silence] = "沉默",
0			[PowaAuras.DebuffCatType.Snare] = "诱捕",
0			[PowaAuras.DebuffCatType.Stun] = "昏迷",
0			[PowaAuras.DebuffCatType.Root] = "无法行动",
0			[PowaAuras.DebuffCatType.Disarm] = "缴械",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE法术",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff类型",
0			[PowaAuras.BuffTypes.Enchant] = "武器强化",
0			[PowaAuras.BuffTypes.Combo] = "连击点数",
0			[PowaAuras.BuffTypes.ActionReady] = "技能冷却",
0			[PowaAuras.BuffTypes.Health] = "生命值",
0			[PowaAuras.BuffTypes.Mana] = "魔法值",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "怒气/能量/符文能量", 
0			[PowaAuras.BuffTypes.Aggro] = "获得仇恨",
0			[PowaAuras.BuffTypes.PvP] = "PvP标志",
0			[PowaAuras.BuffTypes.Stance] = "姿态",
0			[PowaAuras.BuffTypes.SpellAlert] = "法术预警",  
0			[PowaAuras.BuffTypes.OwnSpell] = "自己技能书内的法术",  
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
0		},
		
		-- main
0		nomEnable = "启用",
0		aideEnable = "启用/禁用所有PowerAuras特效",
	
0		nomDebug = "调试模式",
0		aideDebug = "打开调试模式后,将在聊天窗口显示特效的触发条件等信息",
0		ListePlayer = "分类",
0		ListeGlobal = "全局",
0		aideMove = "移动特效",
0		aideCopy = "复制特效",
0		nomRename = "重命名",
0		aideRename = "重命名我的特效分类名",
0		nomTest = "测试",
0		nomHide = "全部隐藏",
0		nomEdit = "编辑",
0		nomNew = "新建",
0		nomDel = "删除",
0		nomImport = "导入", 
0		nomExport = "导出", 
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set", 
0		aideImport = "把特效字串粘贴(Ctrl+v)在此编辑框内,然后点击\'接受\'按钮",
0		aideExport = "复制(Ctrl+c)此编辑框内的特效字串,与其它人分享你的特效", 
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "删除所选特效(必须按住Ctrl键才能使用此功能)",
0		nomMove = "移动",
0		nomCopy = "复制",
0		nomPlayerEffects = "我的特效",
0		nomGlobalEffects = "通用特效",
0		aideEffectTooltip = "按住Shift键点击图标以启用/禁用该特效",
	
		-- editor
0		nomSound = "播放声音",
0		aideSound = "特效触发时播放声音",
0		nomCustomSound = "自定义声音文件:",
0		aideCustomSound = "输入声音文件名称,如cookie.mp3 注意:你需要在游戏启动前把声音文件放入Sounds文件夹下,目前仅支持mp3和wav格式.",
	
0		nomTexture = "当前材质",
0		aideTexture = "显示特效使用的材质.你可以修改相应文件夹内的.tga 文件来增加特效",
	
0		nomAnim1 = "动画效果",
0		nomAnim2 = "辅助效果",
0		aideAnim1 = "是否为所选材质使用动画效果",
0		aideAnim2 = "此动画效果以较低不透明度显示,为了不过多占用屏幕同一时间只显示一个辅助效果",
	
0		nomDeform = "拉伸",
0		aideDeform = "在高度或宽度方向拉伸材质",
	
0		aideColor = "点击此处修改材质颜色",
0		aideFont = "点击此处来选择字体,点击OK按钮使你的选择生效", 
0		aideMultiID = "此处输入其它特效的ID,以执行联合检查.多个ID号须用'/'分隔. 特效ID可以在某个特效的鼠标提示中第一行找到,如:[2],2就是此特效ID", 
0		aideTooltipCheck = "此处输入用于激活特效的某个状态的鼠标提示文字",
	
0		aideBuff = "此处输入用于激活特效的buff的名字,或名字中的几个连续文字.如果使用分隔符,也可以输入多个buff的名字.例如输入: 能量灌注/奥术能量",
0		aideBuff2 = "此处输入用于激活特效的debuff的名字,或名字中的几个连续文字.如果使用分隔符,也可以输入多个debuff的名字.例如输入: 堕落治疗/燃烧刺激",
0		aideBuff3 = "此处输入用于激活特效的debuff的类型名称,或名称中的几个连续文字.如果使用分隔符,也可以输入多个debuff类型的名称.例如输入: 魔法/诅咒/中毒/疾病",
0		aideBuff4 = "此处输入用于激活特效的AOE法术的名字,AOE法术名字可以在战斗记录中找到.例如输入:邪恶光环/火焰之雨/暴风雪",
0		aideBuff5 = "此处输入用于激活特效的武器临时附魔效果.另外你可以通过前置'main/'或者'off/'来指明主副手位置(例如: main/致残毒药,表示检测主手上的这种毒药)", 
0		aideBuff6 = "此处输入用于激活特效的连击点数.例如输入: 1或者1/2/3或者0/4/5等等自由组合",
0		aideBuff7 = "此处输入激活特效的动作条上的动作名,或名字中的几个连续文字,当此动作完全冷却时此效果触发.例如输入:赞达拉英雄护符/法力之潮图腾/心灵专注",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
0		aideSpells = "此处输入用于激活法术预警特效的法术名称", 
0		aideStacks = "输入用于激活特效的操作符及叠加数量，只能输入一个操作符，例如：'<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", 
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
	
0		aideUnitn = "此处输入用于激活特效的特定成员名称,必须处于同一团队",
0		aideUnitn2 = "仅用于团队/队伍模式",    
	
0		aideMaxTex = "定义特效编辑器使用的材质数量,如果你增加了自定义材质请修改此值.",
0		aideAddEffect = "新增加一个特效",
0		aideWowTextures = "使用游戏内置材质",
0		aideTextAura = "使用文字做为特效材质(图形材质将被禁用)", 
0		aideRealaura = "清晰光环",
0		aideCustomTextures = "使用自定义材质,例如: Flamme.tga(自定义材质需保存在custom文件夹下)",--- untraslated (needs update to match enGB string) --- no error found by doomiris
0		aideRandomColor = "每次激活时使用随机颜色",
	
0		aideTexMode = "材质透明度反向显示",
		
0		nomActivationBy = "激活条件",
	
0		nomOwnTex = "使用技能图标", 
0		aideOwnTex = "使用buff/debuff或技能的默认图标做为材质", 
0		nomStacks = "叠加", --no longer used?
	
0		nomUpdateSpeed = "更新速度",
0		nomSpeed = "运动速度",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "进场效果",
0		nomEnd = "结束效果",
0		nomSymetrie = "对称性",
0		nomAlpha = "不透明度",
0		nomPos = "位置",
0		nomTaille = "大小",
	
0		nomExact = "精确匹配名称",
0		nomGCD = "公共冷却",
0		nomThreshold = "触发极限",
0		aideThreshInv = "选中此项可反转触发逻辑. 生命值/法力值: 默认=低于指定值时触发特效 / 选中此项后=高于指定值时触发特效. 能量/怒气/符文能量: 默认=高于指定值时触发特效 / 选中此项后=低于指定值时触发特效",
0		nomThreshInv = "</>", 
0		nomStance = "姿态",
	
0		nomMine = "由自己施放的", 
0		aideMine = "选中此项则仅检测由玩家施放的buff/debuff", 
0		nomDispellable = "自己可以驱散的",
0		aideDispellable = "Check to show only buffs that are dispellable",
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
0		nomPlayerSpell = "Player Casting",
0		aidePlayerSpell = "Check if Player is casting a spell",
	
0		nomCheckTarget = "敌方目标",
0		nomCheckFriend = "友方目标",
0		nomCheckParty = "团队目标",
0		nomCheckFocus = "焦点目标",
0		nomCheckRaid = "团队成员",
0		nomCheckGroupOrSelf = "团队/小队或自己",
0		nomCheckGroupAny = "任何人", 
0		nomCheckOptunitn = "特定成员",
	
0		aideTarget = "此buff/debuff仅存在于敌方目标上",
0		aideTargetFriend = "此buff/debuff仅存在于友方目标上",
0		aideParty = "此buff/debuff仅存在于小队中",
0		aideGroupOrSelf = "选中此项后将仅对团队或小队成员(包括自己)进行检测",
0		aideFocus = "此buff/debuff仅存在焦点目标上",
0		aideRaid = "此buff/debuff仅存在于团队中",
0		aideGroupAny = "选中此项后,当任何一个小队/团队成员有此buff/debuff就触发特效. 不选中此项(默认状态),则检查到所有人都有此buff/debuff才触发特效", 
0		aideOptunitn = "此buff/debuff仅存在于团队/小队中的特定成员身上",
0		aideExact = "选中此项将精确匹配buff/debuff名称",
0		aideGCD = "选中此项后'动作冷却'功能将检测公共冷却.需要注意的是,如果一个技能只有公共冷却,则会触发特效",
0		aideStance = "选择用于触发特效的姿态",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
0		nomCheckShowTimer = "显示",
0		nomTimerDuration = "延迟消失",
0		aideTimerDuration = "目标上的buff/debuff计时器延迟到此时间结束后再消失(0为禁用)",
0		aideShowTimer = "为此效果显示计时器",
0		aideSelectTimer = "选择使用何种计时器来显示持续时间",
0		aideSelectTimerBuff = "选择使用何种计时器来显示持续时间(仅用于玩家buff)",
0		aideSelectTimerDebuff = "选择使用何种计时器来显示持续时间(仅用于玩家debuff)",
	
0		nomCheckShowStacks = "Show",
	
0		nomCheckInverse = "不存在时激活",
0		aideInverse = "选中此项后,仅当buff/debuff不存在时显示此特效",	
	
0		nomCheckIgnoreMaj = "忽略大小写",	
0		aideIgnoreMaj = "选中此项将忽略buff/debuff名字的大小写字母(供英文玩家使用,中国玩家不需要修改此项)",
	
0		nomDuration = "延迟消失",
0		aideDuration = "特效延迟到此时间结束后再消失(0为禁用)",
	
0		nomCentiemes = "显示百分位",
0		nomDual = "显示两个计时器",
0		nomHideLeadingZeros = "隐藏前置零位,如:08秒显示为8秒",
0		nomTransparent = "使用透明材质",
0		nomUpdatePing = "Animate on refresh",
0		nomClose = "关闭",
0		nomEffectEditor = "特效编辑器",
0		nomAdvOptions = "选项",
0		nomMaxTex = "最大可用材质",
0		nomTabAnim = "动画",
0		nomTabActiv = "条件",
0		nomTabSound = "声音",
0		nomTabTimer = "计时器",
0		nomTabStacks = "层数", --add this line according to EN loc by doomiris
0		nomWowTextures = "使用内置材质",
0		nomCustomTextures = "使用自定义材质",
0		nomTextAura = "文字材质", 
0		nomRealaura = "清晰光环",
0		nomRandomColor = "随机颜色",
0		nomTexMode = "光晕效果",
	
0		nomTalentGroup1 = "主天赋",
0		aideTalentGroup1 = "选中此项后,仅当你处于主天赋状态下才触发此特效",
0		nomTalentGroup2 = "副天赋",
0		aideTalentGroup2 = "选中此项后,仅当你处于副天赋状态下才触发此特效",
		
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
..\localisation_zhTW.lua
==============================================================================
1	﻿if (GetLocale() == "zhTW") then
	
0	PowaAuras.Anim[0] = "[無]";
0	PowaAuras.Anim[1] = "靜止";
0	PowaAuras.Anim[2] = "閃光效果";
0	PowaAuras.Anim[3] = "生長效果";
0	PowaAuras.Anim[4] = "脈搏效果";
0	PowaAuras.Anim[5] = "氣泡效果";
0	PowaAuras.Anim[6] = "水滴效果";
0	PowaAuras.Anim[7] = "漏電效果";
0	PowaAuras.Anim[8] = "收縮效果";
0	PowaAuras.Anim[9] = "火焰效果";
0	PowaAuras.Anim[10] = "盤旋效果";
	
0	PowaAuras.BeginAnimDisplay[0] = "[無]";
0	PowaAuras.BeginAnimDisplay[1] = "由小放大";
0	PowaAuras.BeginAnimDisplay[2] = "由大漸小";
0	PowaAuras.BeginAnimDisplay[3] = "逐漸清晰";
0	PowaAuras.BeginAnimDisplay[4] = "左邊進入";
0	PowaAuras.BeginAnimDisplay[5] = "左上進入";
0	PowaAuras.BeginAnimDisplay[6] = "上部進入";
0	PowaAuras.BeginAnimDisplay[7] = "右上進入";
0	PowaAuras.BeginAnimDisplay[8] = "右邊進入";
0	PowaAuras.BeginAnimDisplay[9] = "右下進入";
0	PowaAuras.BeginAnimDisplay[10] = "下部進入";
0	PowaAuras.BeginAnimDisplay[11] = "左下進入";
0	PowaAuras.BeginAnimDisplay[12] = "彈跳進入";
	
0	PowaAuras.EndAnimDisplay[0] = "[無]";
0	PowaAuras.EndAnimDisplay[1] = "放大消失";
0	PowaAuras.EndAnimDisplay[2] = "縮小消失";
0	PowaAuras.EndAnimDisplay[3] = "淡化消失";
0	PowaAuras.EndAnimDisplay[4] = "Spin";
0	PowaAuras.EndAnimDisplay[5] = "Spin In";
	
0	PowaAuras.Sound[0] = "[無]";
0	PowaAuras.Sound[1] = "升級";
0	PowaAuras.Sound[2] = "擡取金幣";
0	PowaAuras.Sound[3] = "點擊小地圖";
0	PowaAuras.Sound[4] = "發現新區域";
0	PowaAuras.Sound[5] = "接到任務";
0	PowaAuras.Sound[6] = "任務完成";
0	PowaAuras.Sound[7] = "寫任務";
0	PowaAuras.Sound[8] = "釣魚";
0	PowaAuras.Sound[9] = "PVP事件";
0	PowaAuras.Sound[10] = "團隊檢查";
0	PowaAuras.Sound[11] = "團隊警告";
0	PowaAuras.Sound[12] = "打開拍賣行";
0	PowaAuras.Sound[13] = "關閉拍賣行";
0	PowaAuras.Sound[14] = "消消話";
0	PowaAuras.Sound[15] = "打開背包";
	
0	PowaAuras:MergeTables(PowaAuras.Text, 
0	{
0		welcome = "輸入 /powa 打開特效編輯器.",			
	
0		aucune = "無",
0		aucun = "無",
0		largeur = "寬度",
0		hauteur = "高度",
0		mainHand = "主手",
0		offHand = "副手",
0		bothHands = "雙手",
	
0		DebuffType =
0		{
0			Magic = "魔法",
0			Disease = "疾病",
0			Curse = "詛咒",
0			Poison = "中毒",
0		},
	
0		DebuffCatType =
0		{
0			[PowaAuras.DebuffCatType.CC] = "CC",
0			[PowaAuras.DebuffCatType.Silence] = "沈默",
0			[PowaAuras.DebuffCatType.Snare] = "誘捕",
0			[PowaAuras.DebuffCatType.Stun] = "昏迷",
0			[PowaAuras.DebuffCatType.Root] = "無法行動",
0			[PowaAuras.DebuffCatType.Disarm] = "繳械",
0			[PowaAuras.DebuffCatType.PvE] = "PvE",
0		},
		
0		AuraType =
0		{
0			[PowaAuras.BuffTypes.Buff] = "Buff",
0			[PowaAuras.BuffTypes.Debuff] = "Debuff",
0			[PowaAuras.BuffTypes.AoE] = "AOE法術",
0			[PowaAuras.BuffTypes.TypeDebuff] = "Debuff類型",
0			[PowaAuras.BuffTypes.Enchant] = "武器強化",
0			[PowaAuras.BuffTypes.Combo] = "連擊點數",
0			[PowaAuras.BuffTypes.ActionReady] = "技能冷卻",
0			[PowaAuras.BuffTypes.Health] = "生命值",
0			[PowaAuras.BuffTypes.Mana] = "魔法值",
0			[PowaAuras.BuffTypes.EnergyRagePower] = "怒氣/能量/符文能量",
0			[PowaAuras.BuffTypes.Aggro] = "獲得仇恨",
0			[PowaAuras.BuffTypes.PvP] = "PvP標誌",
0			[PowaAuras.BuffTypes.Stance] = "姿態",
0			[PowaAuras.BuffTypes.SpellAlert] = "法術預警",
0			[PowaAuras.BuffTypes.OwnSpell] = "來自自己技能書內的法術", 
0			[PowaAuras.BuffTypes.StealableSpell] = "Stealable Spell",
0			[PowaAuras.BuffTypes.PurgeableSpell] = "Purgeable Spell",
0		},
		
		-- main
0		nomEnable = "啟用",
0		aideEnable = "啟用/禁用所有PowerAuras特效",
	
0		nomDebug = "調試模式",
0		aideDebug = "打開調試模式後,將在聊天窗口顯示特效的觸發條件等信息",
0		ListePlayer = "分類",
0		ListeGlobal = "全局",
0		aideMove = "移動特效",
0		aideCopy = "復制特效",
0		nomRename = "重命名",
0		aideRename = "重命名我的特效分類名",
0		nomTest = "測試",
0		nomHide = "全部隱藏",
0		nomEdit = "編輯",
0		nomNew = "新建",
0		nomDel = "刪除",
0		nomImport = "導入", 
0		nomExport = "導出", 
0		nomImportSet = "Import Set", 
0		nomExportSet = "Export Set",
0		aideImport = "把特效字串粘貼(Ctrl+v)在此編輯框內,然後點擊\'接受\'按鈕",
0		aideExport = "復制(Ctrl+c)此編輯框內的特效字串,與其它人分享你的特效", 
0		aideImportSet = "Press Ctrl-V to paste the Aura-Set-string and press \'Accept\' this will erase all auras on this page",
0		aideExportSet = "Press Ctrl-C to copy all the Auras on this page for sharing.",
0		aideDel = "刪除所選特效(必須按住Ctrl鍵才能使用此功能)",
0		nomMove = "移動",
0		nomCopy = "復制",
0		nomPlayerEffects = "我的特效",
0		nomGlobalEffects = "通用特效",
0		aideEffectTooltip = "按住Shift鍵點擊圖標以啟用/禁用該特效",
	
		-- editor
0		nomSound = "播放聲音",
0		aideSound = "特效觸發時播放聲音",
0		nomCustomSound = "自定義聲音文件:",	
0		aideCustomSound = "輸入聲音文件名稱,如cookie.mp3 註意:你需要在遊戲啟動前把聲音文件放入Sounds文件夾下,目前僅支持mp3和wav格式.",
	
0		nomTexture = "當前材質",
0		aideTexture = "顯示特效使用的材質.你可以修改相應文件夾內的.tga 文件來增加特效",
	
0		nomAnim1 = "動畫效果",
0		nomAnim2 = "輔助效果",
0		aideAnim1 = "是否為所選材質使用動畫效果",
0		aideAnim2 = "此動畫效果以較低不透明度顯示,為了不過多占用屏幕同一時間只顯示一個輔助效果",
	
0		nomDeform = "拉伸",
0		aideDeform = "在高度或寬度方向拉伸材質",
	
0		aideColor = "點擊此處修改材質顏色",
0		aideFont = "點擊此處來選擇字體,點擊OK按鈕使你的選擇生效", 
0		aideMultiID = "此處輸入其它特效的ID,以執行聯合檢查.多個ID號須用'/'分隔. 特效ID可以在某個特效的鼠標提示中第一行找到,如:[2],2就是此特效ID", 
0		aideTooltipCheck = "此處輸入用於激活特效的某個狀態的鼠標提示文字",
	
0		aideBuff = "此處輸入用於激活特效的buff的名字,或名字中的幾個連續文字.如果使用分隔符,也可以輸入多個buff的名字.例如輸入: 能量灌註/奧術能量",
0		aideBuff2 = "此處輸入用於激活特效的debuff的名字,或名字中的幾個連續文字.如果使用分隔符,也可以輸入多個debuff的名字.例如輸入: 墮落治療/燃燒刺激",
0		aideBuff3 = "此處輸入用於激活特效的debuff的類型名稱,或名稱中的幾個連續文字.如果使用分隔符,也可以輸入多個debuff類型的名稱.例如輸入: 魔法/詛咒/中毒/疾病",
0		aideBuff4 = "此處輸入用於激活特效的AOE法術的名字,AOE法術名字可以在戰鬥記錄中找到.例如輸入:邪惡光環/火焰之雨/暴風雪",
0		aideBuff5 = "此處輸入用於激活特效的武器臨時附魔效果.另外你可以通過前置'main/'或者'off/'來指明主副手位置(例如: main/致殘毒藥,表示檢測主手上的這種毒藥)", 
0		aideBuff6 = "此處輸入用於激活特效的連擊點數.例如輸入: 1或者1/2/3或者0/4/5等等自由組合",
0		aideBuff7 = "此處輸入激活特效的動作條上的動作名,或名字中的幾個連續文字,當此動作完全冷卻時此效果觸發.例如輸入:贊達拉英雄護符/法力之潮圖騰/心靈專註",
0		aideBuff8 = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
		
0		aideSpells = "此處輸入用於激活法術預警特效的法術名稱", 
0		aideStacks = "輸入用於激活特效的操作符及疊加數量，只能輸入一個操作符，例如：'<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'", 
	
0		aideStealableSpells = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
0		aidePurgeableSpells = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
	
0		aideUnitn = "此處輸入用於激活特效的特定成員名稱,必須處於同一團隊",
0		aideUnitn2 = "僅用於團隊/隊伍模式",    
	
0		aideMaxTex = "定義特效編輯器使用的材質數量,如果你增加了自定義材質請修改此值.",
0		aideAddEffect = "新增加一個特效",
0		aideWowTextures = "使用遊戲內置材質",
0		aideTextAura = "使用文字做為特效材質(圖形材質將被禁用)", 
0		aideRealaura = "清晰光環",
0		aideCustomTextures = "使用自定義材質,例如: Flamme.tga(自定義材質需保存在custom文件夾下)",--- untraslated (needs update to match enGB string) --- no error found by doomiris
0		aideRandomColor = "每次激活時使用隨機顏色",
	
0		aideTexMode = "材質透明度反向顯示",
		
0		nomActivationBy = "激活條件",
	
0		nomOwnTex = "使用技能圖標", 
0		aideOwnTex = "使用buff/debuff或技能的默認圖標做為材質", 
0		nomStacks = "疊加", --no longer used?
	
0		nomUpdateSpeed = "更新速度",
0		nomSpeed = "運動速度",
0		nomFPS = "Global Animation FPS",
0		nomTimerUpdate = "Timer update speed",
0		nomBegin = "進場效果",
0		nomEnd = "結束效果",
0		nomSymetrie = "對稱性",
0		nomAlpha = "不透明度",
0		nomPos = "位置",
0		nomTaille = "大小",
	
0		nomExact = "精確匹配名稱",
0		nomGCD = "公共冷卻",
0		nomThreshold = "觸發極限",
0		aideThreshInv = "選中此項可反轉觸發邏輯. 生命值/法力值: 默認=低於指定值時觸發特效 / 選中此項後=高於指定值時觸發特效. 能量/怒氣/符文能量: 默認=高於指定值時觸發特效 / 選中此項後=低於指定值時觸發特效",
0		nomThreshInv = "</>", 
0		nomStance = "姿態",
	
0		nomMine = "由自己施放的", 
0		aideMine = "選中此項則僅檢測由玩家施放的buff/debuff", 
0		nomDispellable = "自己可以驅散的",
0		aideDispellable = "Check to show only buffs that are dispellable",
0		nomCanInterrupt = "Can be Interrupted",
0		aideCanInterrupt = "Check to show only for spells that can be Interrupted",
	
0		nomPlayerSpell = "Player Casting",
0		aidePlayerSpell = "Check if Player is casting a spell",
	
0		nomCheckTarget = "敵方目標",
0		nomCheckFriend = "友方目標",
0		nomCheckParty = "團隊目標",
0		nomCheckFocus = "焦點目標",
0		nomCheckRaid = "團隊成員",
0		nomCheckGroupOrSelf = "團隊/小隊或自己",
0		nomCheckGroupAny = "任何人", 
0		nomCheckOptunitn = "特定成員",
	
0		aideTarget = "此buff/debuff僅存在於敵方目標上",
0		aideTargetFriend = "此buff/debuff僅存在於友方目標上",
0		aideParty = "此buff/debuff僅存在於小隊中",
0		aideGroupOrSelf = "選中此項後將僅對團隊或小隊成員(包括自己)進行檢測",
0		aideFocus = "此buff/debuff僅存在焦點目標上",
0		aideRaid = "此buff/debuff僅存在於團隊中",
0		aideGroupAny = "選中此項後,當任何一個小隊/團隊成員有此buff/debuff就觸發特效. 不選中此項(默認狀態),則檢查到所有人都有此buff/debuff才觸發特效", 
0		aideOptunitn = "此buff/debuff僅存在於團隊/小隊中的特定成員身上",
0		aideExact = "選中此項將精確匹配buff/debuff名稱",
0		aideGCD = "選中此項後'動作冷卻'功能將檢測公共冷卻.需要註意的是,如果一個技能只有公共冷卻,則會觸發特效",
0		aideStance = "選擇用於觸發特效的姿態",
	
0		aideShowSpinAtBeginning= "At the end of the begin animation show a 360 degree spin",
0		nomCheckShowSpinAtBeginning = "Show Spin after begin animation ends",
	
0		nomCheckShowTimer = "顯示",
0		nomTimerDuration = "延遲消失",
0		aideTimerDuration = "目標上的buff/debuff計時器延遲到此時間結束後再消失(0為禁用)",
0		aideShowTimer = "為此效果顯示計時器",
0		aideSelectTimer = "選擇使用何種計時器來顯示持續時間",
0		aideSelectTimerBuff = "選擇使用何種計時器來顯示持續時間(僅用於玩家buff)",
0		aideSelectTimerDebuff = "選擇使用何種計時器來顯示持續時間(僅用於玩家debuff)",
	
0		nomCheckShowStacks = "Show",
	
0		nomCheckInverse = "不存在時激活",
0		aideInverse = "選中此項後,僅當buff/debuff不存在時顯示此特效",	
	
0		nomCheckIgnoreMaj = "忽略大小寫",	
0		aideIgnoreMaj = "選中此項將忽略buff/debuff名字的大小寫字母(供英文玩家使用,中國玩家不需要修改此項)",
	
0		nomDuration = "延遲消失",
0		aideDuration = "特效延遲到此時間結束後再消失(0為禁用)",
	
0		nomCentiemes = "顯示百分位",
0		nomDual = "顯示兩個計時器",
0		nomHideLeadingZeros = "隱藏前置零位,如:08秒顯示為8秒",
0		nomTransparent = "使用透明材質",
0		nomUpdatePing = "Animate on refresh",
0		nomClose = "關閉",
0		nomEffectEditor = "特效編輯器",
0		nomAdvOptions = "選項",
0		nomMaxTex = "最大可用材質",
0		nomTabAnim = "動畫",
0		nomTabActiv = "條件",
0		nomTabSound = "聲音",
0		nomTabTimer = "計時器",
0		nomTabStacks = "層數", --add this line according to EN loc by doomiris
0		nomWowTextures = "使用內置材質",
0		nomCustomTextures = "使用自定義材質",
0		nomTextAura = "文字材質", 
0		nomRealaura = "清晰光環",
0		nomRandomColor = "隨機顏色",
0		nomTexMode = "光暈效果",
	
0		aideTalentGroup1 = "選中此項後,僅當你處於主天賦狀態下才觸發此特效",
0		aideTalentGroup1 = "Show this effect only when you are in your primary talent spec.",
0		nomTalentGroup2 = "副天賦",
0		aideTalentGroup2 = "選中此項後,僅當你處於副天賦狀態下才觸發此特效",
	
0		nomReset = "Reset Editor Positions",	
0		nomPowaShowAuraBrowser = "Show Aura Browser",
		
0		nomDefaultTimerTexture = "Default Timer Texture",
0		nomTimerTexture = "Timer Texture",
0		nomDefaultStacksTexture = "Default Stacks Texture",
0		nomStacksTexture = "Stacks Texture",
		
0		Enabled = "Enabled",
0		Default = "Default",
	
0		Ternary = {
0			combat = "In Combat",
0			inRaid = "In Raid",
0			inParty = "In Party",
0			isResting = "Resting",
0			ismounted = "Mounted",
0			inVehicle = "In Vehicle",
0			isAlive= "Alive",
0		},
	
0		nomWhatever = "Ignored",
0		aideTernary = "Sets how the status effects how this aura is shown.",
0		TernaryYes = {
0			combat = "Only When In Combat",
0			inRaid = "Only When In Raid",
0			inParty = "Only When In Party",
0			isResting = "Only When Resting",
0			ismounted = "Only When Mounted",
0			inVehicle = "Only When In Vehicle",
0			isAlive= "Only When Alive",
0		},
0		TernaryNo = {
0			combat = "Only When Not in Combat",
0			inRaid = "Only When Not in Raid",
0			inParty = "Only When Not in Party",
0			isResting = "Only When Not Resting",
0			ismounted = "Only When Not Mounted",
0			inVehicle = "Only When Not in Vehicle",
0			isAlive= "Only When Dead",
0		},
0		TernaryAide = {
0			combat = "Effect modified by Combat status.",
0			inRaid = "Effect modified by Raid status.",
0			inParty = "Effect modified by Party status.",
0			isResting = "Effect modified by Resting status.",
0			ismounted = "Effect modified by Mounted status.",
0			inVehicle = "Effect modified by Vehicle status.",
0			isAlive= "Effect modified by Alive status.",
0		},
	
0		nomTimerInvertAura = "Invert Aura When Time Below",
0		aidePowaTimerInvertAuraSlider = "Invert the aura when the duration is less than this limit (0 to deactivate)",
0		nomTimerHideAura = "Hide Aura & Timer Until Time Above",
0		aidePowaTimerHideAuraSlider = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
	
0		aideTimerRounding = "When checked will round the timer up",
0		nomTimerRounding = "Round Timer Up",
	
0		aideGTFO = "Use GTFO (Boss) spell matches for AoE detection",
0		nomGTFO = "Use GTFO for AoE",
	
		
		-- Diagnostic reason text, these have substitutions (using $1, $2 etc) to allow for different sententance constructions
0		nomReasonShouldShow = "Should show because $1",
0		nomReasonWontShow   = "Won't show because $1",
		
0		nomReasonMulti = "All multiples match $1", --$1=Multiple match ID list
		
0		nomReasonDisabled = "Power Auras Disabled",
		
0		nomReasonBuffPresent = "$1 has $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 has Debuff Misery")
0		nomReasonBuffMissing = "$1 doesn't have $2 $3", --$1=Target $2=BuffType, $3=BuffName (e.g. "Unit4 doesn't have Debuff Misery")
0		nomReasonBuffFoundButIncomplete = "$2 $3 found for $1 but\n$4", --$1=Target $2=BuffType, $3=BuffName, $4=IncompleteReason (e.g. "Debuff Sunder Armor found for Target but\nStacks<=2")
		
0		nomReasonOneInGroupHasBuff     = "$1 has $2 $3",            --$1=GroupId   $2=BuffType, $3=BuffName (e.g. "Raid23 has Buff Blessing of Kings")
0		nomReasonNotAllInGroupHaveBuff = "Not all in $1 have $2 $3", --$1=GroupType $2=BuffType, $3=BuffName (e.g. "Not all in Raid have Buff Blessing of Kings")
0		nomReasonAllInGroupHaveBuff    = "All in $1 have $2 $3",     --$1=GroupType $2=BuffType, $3=BuffName (e.g. "All in Raid have Buff Blessing of Kings")
0		nomReasonNoOneInGroupHasBuff   = "No one in $1 has $2 $3",  --$1=GroupType $2=BuffType, $3=BuffName (e.g. "No one in Raid has Buff Blessing of Kings")
	
0		nomReasonBuffPresentTimerInvert = "Buff present, timer invert",
0		nomReasonBuffFound              = "Buff present",
0		nomReasonStacksMismatch         = "Stacks = $1 expecting $2", --$1=Actual Stack count, $2=Expected Stack logic match (e.g. ">=0")
	
0		nomReasonAuraMissing = "Aura missing",
0		nomReasonAuraOff     = "Aura off",
0		nomReasonAuraBad     = "Aura bad",
		
0		nomReasonNotForTalentSpec = "Aura not active for this talent spec",
		
0		nomReasonPlayerDead     = "Player is DEAD",
0		nomReasonPlayerAlive    = "Player is Alive",
0		nomReasonNoTarget       = "No Target",
0		nomReasonTargetPlayer   = "Target is you",
0		nomReasonTargetDead     = "Target is Dead",
0		nomReasonTargetAlive    = "Target is Alive",
0		nomReasonTargetFriendly = "Target is Friendly",
0		nomReasonTargetNotFriendly = "Target not Friendly",
		
0		nomReasonNotInCombat = "Not in combat",
0		nomReasonInCombat = "In combat",
		
0		nomReasonInParty = "In Party",
0		nomReasonInRaid = "In Raid",
0		nomReasonNotInParty = "Not in Party",
0		nomReasonNotInRaid = "Not in Raid",
0		nomReasonNoFocus = "No focus",	
0		nomReasonNoCustomUnit = "Can't find custom unit not in party, raid or with pet unit=$1",
	
0		nomReasonNotMounted = "Not Mounted",
0		nomReasonMounted = "Mounted",		
0		nomReasonNotInVehicle = "Not In Vehicle",
0		nomReasonInVehicle = "In Vehicle",		
0		nomReasonNotResting = "Not Resting",
0		nomReasonResting = "Resting",		
0		nomReasonStateOK = "State OK",
	
0		nomReasonInverted        = "$1 (inverted)", -- $1 is the reason, but the inverted flag is set so the logic is reversed
		
0		nomReasonSpellUsable     = "Spell $1 usable",
0		nomReasonSpellNotUsable  = "Spell $1 not usable",
0		nomReasonSpellNotReady   = "Spell $1 Not Ready, on cooldown, timer invert",
0		nomReasonSpellNotEnabled = "Spell $1 not enabled ",
0		nomReasonSpellNotFound   = "Spell $1 not found",
		
0		ReasonStat = {
0			Health     = {MatchReason="$1 Health low",          NoMatchReason="$1 Health not low enough"},
0			Mana       = {MatchReason="$1 Mana low",            NoMatchReason="$1 Mana not low enough"},
0			RageEnergy = {MatchReason="$1 EnergyRagePower low", NoMatchReason="$1 EnergyRagePower not low enough"},
0			Aggro      = {MatchReason="$1 has aggro",           NoMatchReason="$1 does not have aggro"},
0			PvP        = {MatchReason="$1 PvP flag set",        NoMatchReason="$1 PvP flag not set"},
0		},
	
0	});
	
	end
	

==============================================================================
GlobalStrings/enUS.lua
==============================================================================
	-- AUTOMATICALLY GENERATED -- DO NOT EDIT!
	
2	ABANDON_PET = "Are you sure you want to permanently abandon your pet?"; -- Confirmation dialog
2	ABANDON_QUEST = "Abandon Quest"; -- Quit the currently selected quest
2	ABANDON_QUEST_CONFIRM = "Abandon \"%s\"?";
2	ABANDON_QUEST_CONFIRM_WITH_ITEMS = "Abandon \"%s\", destroying %s?";
2	ABILITIES = "Abilities"; -- The player's abilities ''
2	ABILITYBOOK_BUTTON = "Abilities";
2	ABSORB = "Absorb";
2	ABSORB_TRAILER = " (%d absorbed)"; -- Appended to attack strings in the combat log when damage is absorbed. (NOTE SPACE AT BEGINNING)
2	ACCEPT = "Accept"; -- Generic "accept"
2	ACCEPT_ALT = "Accept"; -- Alternate "accept" for localization
2	ACHIEVEMENT = "Achievement Announce";
2	ACHIEVEMENTS = "Achievements";
2	ACHIEVEMENTS_COMPLETED = "Achievements Earned";
2	ACHIEVEMENTS_COMPLETED_CATEGORY = "%s Achievements Earned";
2	ACHIEVEMENT_BROADCAST = "%s has earned the achievement %s!";
2	ACHIEVEMENT_BROADCAST_SELF = "You have earned the achievement %s!";
2	ACHIEVEMENT_BUTTON = "Achievements";
2	ACHIEVEMENT_SUMMARY_CATEGORY = "Summary";
2	ACHIEVEMENT_TITLE = "Achievement Points";
2	ACHIEVEMENT_TOOLTIP_COMPLETE = "Achievement earned by %1$s on %2$d/%3$02d/20%4$02d"; -- 1 - name 2 - month 3 - day 4 - year
2	ACHIEVEMENT_TOOLTIP_IN_PROGRESS = "Achievement in progress by %s";
2	ACHIEVEMENT_UNLOCKED = "Achievement Earned";
2	ACHIEVEMENT_UNLOCKED_CHAT_MSG = "Achievement Earned: %s"; -- Chat message that shows up when you have over the max achievement toasts trying to display
2	ACTIONBARS_LABEL = "ActionBars";
2	ACTIONBARS_SUBTEXT = "ActionBars are banks of hotkeys that allow you to quickly access abilities and inventory items. Here you can activate additional ActionBars and control their behaviors.";
2	ACTIONBAR_LABEL = "Action Bars";
2	ACTION_DAMAGE_SHIELD = "damages";
2	ACTION_DAMAGE_SHIELD_FULL_TEXT = "%1$s %2$s reflects %9$s %7$s damage to %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_FULL_TEXT_NO_SOURCE = "%2$s reflects %9$s %7$s damage to %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_MISSED = "missed";
2	ACTION_DAMAGE_SHIELD_MISSED_BLOCK = "(Blocked)";
2	ACTION_DAMAGE_SHIELD_MISSED_BLOCK_FULL_TEXT = "%1$s %2$s was blocked by %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_MISSED_BLOCK_FULL_TEXT_NO_SOURCE = "%2$s was blocked by %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_MISSED_BLOCK_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_DEFLECT = "(Deflected)";
2	ACTION_DAMAGE_SHIELD_MISSED_DEFLECT_FULL_TEXT = "%1$s %2$s was deflected by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_DEFLECT_FULL_TEXT_NO_SOURCE = "%2$s was deflected by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_DEFLECT_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_DODGE = "(Dodged)";
2	ACTION_DAMAGE_SHIELD_MISSED_DODGE_FULL_TEXT = "%1$s %2$s was dodged by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_DODGE_FULL_TEXT_NO_SOURCE = "%2$s was dodged by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_DODGE_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_EVADED = "(Evaded)";
2	ACTION_DAMAGE_SHIELD_MISSED_EVADED_FULL_TEXT = "%1$s %2$s was evaded by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_EVADED_FULL_TEXT_NO_SOURCE = "%2$s was evaded by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_EVADED_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_FULL_TEXT = "%1$s %2$s missed %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_FULL_TEXT_NO_SOURCE = "%2$s missed %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_IMMUNE = "(Immune)";
2	ACTION_DAMAGE_SHIELD_MISSED_IMMUNE_FULL_TEXT = "%1$s %2$s failed. %4$s was immune.";
2	ACTION_DAMAGE_SHIELD_MISSED_IMMUNE_FULL_TEXT_NO_SOURCE = "%2$s failed. %4$s was immune.";
2	ACTION_DAMAGE_SHIELD_MISSED_IMMUNE_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_MISS = "(Missed)";
2	ACTION_DAMAGE_SHIELD_MISSED_MISS_FULL_TEXT = "%1$s %2$s misses %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_MISS_FULL_TEXT_NO_SOURCE = "%2$s misses %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_MISS_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_PARRY = "(Parried)";
2	ACTION_DAMAGE_SHIELD_MISSED_PARRY_FULL_TEXT = "%1$s %2$s was parried by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_PARRY_FULL_TEXT_NO_SOURCE = "%2$s was parried by %4$s.";
2	ACTION_DAMAGE_SHIELD_MISSED_PARRY_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_MISSED_RESIST = "(Resisted)";
2	ACTION_DAMAGE_SHIELD_MISSED_RESIST_FULL_TEXT = "%1$s %2$s was fully resisted by %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_MISSED_RESIST_FULL_TEXT_NO_SOURCE = "%2$s was fully resisted by %4$s.%6$s";
2	ACTION_DAMAGE_SHIELD_MISSED_RESIST_POSSESSIVE = "1";
2	ACTION_DAMAGE_SHIELD_POSSESSIVE = "1";
2	ACTION_DAMAGE_SPLIT = "shared damage";
2	ACTION_DAMAGE_SPLIT_FULL_TEXT = "%1$s %2$s causes %9$s damage to %4$s.";
2	ACTION_DAMAGE_SPLIT_POSSESSIVE = "0";
2	ACTION_ENCHANT_APPLIED = "enchanted";
2	ACTION_ENCHANT_APPLIED_FULL_TEXT = "%1$s cast %2$s on %4$s %5$s.";
2	ACTION_ENCHANT_APPLIED_POSSESSIVE = "0";
2	ACTION_ENCHANT_REMOVED = "enchant faded";
2	ACTION_ENCHANT_REMOVED_FULL_TEXT = "%2$s fades from %4$s %5$s.";
2	ACTION_ENCHANT_REMOVED_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE = "damaged";
2	ACTION_ENVIRONMENTAL_DAMAGE_DROWNING = "Drowning";
2	ACTION_ENVIRONMENTAL_DAMAGE_DROWNING_FULL_TEXT = "%4$s is drowning and loses %9$s health.";
2	ACTION_ENVIRONMENTAL_DAMAGE_DROWNING_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_FALLING = "Falling";
2	ACTION_ENVIRONMENTAL_DAMAGE_FALLING_FULL_TEXT = "%4$s falls and loses %9$s health.";
2	ACTION_ENVIRONMENTAL_DAMAGE_FALLING_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_FATIGUE = "Fatigue";
2	ACTION_ENVIRONMENTAL_DAMAGE_FATIGUE_FULL_TEXT = "%4$s is exhausted and loses %9$s health.";
2	ACTION_ENVIRONMENTAL_DAMAGE_FATIGUE_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_FIRE = "Fire";
2	ACTION_ENVIRONMENTAL_DAMAGE_FIRE_FULL_TEXT = "%4$s suffers %9$s fire damage.";
2	ACTION_ENVIRONMENTAL_DAMAGE_FIRE_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_FULL_TEXT = "%4$s loses %9$s health from environmental damage.";
2	ACTION_ENVIRONMENTAL_DAMAGE_LAVA = "Lava";
2	ACTION_ENVIRONMENTAL_DAMAGE_LAVA_FULL_TEXT = "%4$s loses %9$s health from swimming in lava. %6$s";
2	ACTION_ENVIRONMENTAL_DAMAGE_LAVA_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_POSSESSIVE = "0";
2	ACTION_ENVIRONMENTAL_DAMAGE_SLIME = "Slime";
2	ACTION_ENVIRONMENTAL_DAMAGE_SLIME_FULL_TEXT = "%4$s loses %9$s health for swimming in slime. %6$s";
2	ACTION_ENVIRONMENTAL_DAMAGE_SLIME_POSSESSIVE = "0";
2	ACTION_PARTY_KILL = "killed";
2	ACTION_PARTY_KILL_FULL_TEXT = "%1$s has slain %4$s!";
2	ACTION_PARTY_KILL_POSSESSIVE = "0";
2	ACTION_RANGED = "Shot";
2	ACTION_RANGE_DAMAGE = "hit";
2	ACTION_RANGE_DAMAGE_FULL_TEXT = "%1$s ranged shot hit %4$s for %5$s.%6$s";
2	ACTION_RANGE_DAMAGE_FULL_TEXT_NO_SOURCE = "A ranged shot hit %4$s for %5$s.%6$s";
2	ACTION_RANGE_DAMAGE_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED = "missed";
2	ACTION_RANGE_MISSED_ABSORB = "(Absorbed)";
2	ACTION_RANGE_MISSED_ABSORB_FULL_TEXT = "%1$s shot was absorbed by %4$s.%6$s";
2	ACTION_RANGE_MISSED_ABSORB_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_BLOCK = "(Blocked)";
2	ACTION_RANGE_MISSED_BLOCK_FULL_TEXT = "%1$s shot was blocked by %4$s.%6$s";
2	ACTION_RANGE_MISSED_BLOCK_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_DEFLECT = "(Deflected)";
2	ACTION_RANGE_MISSED_DEFLECT_FULL_TEXT = "%1$s shot was deflected by %4$s.";
2	ACTION_RANGE_MISSED_DEFLECT_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_DODGE = "(Dodged)";
2	ACTION_RANGE_MISSED_DODGE_FULL_TEXT = "%1$s shot was dodged by %4$s.";
2	ACTION_RANGE_MISSED_DODGE_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_EVADE = "(Evaded)";
2	ACTION_RANGE_MISSED_EVADE_FULL_TEXT = "%1$s shot was evaded by %4$s.";
2	ACTION_RANGE_MISSED_EVADE_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_FULL_TEXT = "%1$s shot misses %4$s.";
2	ACTION_RANGE_MISSED_IMMUNE = "(Immune)";
2	ACTION_RANGE_MISSED_IMMUNE_FULL_TEXT = "%1$s shot failed. %4$s was immune.";
2	ACTION_RANGE_MISSED_IMMUNE_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_MISS = "(Missed)";
2	ACTION_RANGE_MISSED_MISS_FULL_TEXT = "%1$s shot misses %4$s.";
2	ACTION_RANGE_MISSED_MISS_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_PARRY = "(Parried)";
2	ACTION_RANGE_MISSED_PARRY_FULL_TEXT = "%1$s shot was parried by %4$s.";
2	ACTION_RANGE_MISSED_PARRY_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_POSSESSIVE = "1";
2	ACTION_RANGE_MISSED_RESIST = "(Resisted)";
2	ACTION_RANGE_MISSED_RESIST_FULL_TEXT = "%1$s shot was fully resisted by %4$s.%6$s";
2	ACTION_RANGE_MISSED_RESIST_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_APPLIED = "applied";
2	ACTION_SPELL_AURA_APPLIED_BUFF = "applied";
2	ACTION_SPELL_AURA_APPLIED_BUFF_FULL_TEXT = "%4$s gains %1$s %2$s."; -- %1$s %2$s strikes %4$s for %5$s.%6$s
2	ACTION_SPELL_AURA_APPLIED_BUFF_FULL_TEXT_NO_SOURCE = "%4$s gains %2$s."; -- %1$s %2$s strikes %4$s for %5$s.%6$s
2	ACTION_SPELL_AURA_APPLIED_BUFF_MASTER = "2";
2	ACTION_SPELL_AURA_APPLIED_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_APPLIED_DEBUFF = "afflicted";
2	ACTION_SPELL_AURA_APPLIED_DEBUFF_FULL_TEXT = "%4$s is afflicted by %1$s %2$s."; -- %1$s
2	ACTION_SPELL_AURA_APPLIED_DEBUFF_FULL_TEXT_NO_SOURCE = "%4$s is afflicted by %2$s."; -- %1$s
2	ACTION_SPELL_AURA_APPLIED_DEBUFF_MASTER = "1";
2	ACTION_SPELL_AURA_APPLIED_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_APPLIED_DOSE = "stacked";
2	ACTION_SPELL_AURA_APPLIED_DOSE_BUFF = "stacked";
2	ACTION_SPELL_AURA_APPLIED_DOSE_BUFF_FULL_TEXT = "%4$s gains %1$s %2$s (%9$s).";
2	ACTION_SPELL_AURA_APPLIED_DOSE_BUFF_FULL_TEXT_NO_SOURCE = "%4$s gains %2$s (%9$s).";
2	ACTION_SPELL_AURA_APPLIED_DOSE_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_APPLIED_DOSE_DEBUFF = "afflicted";
2	ACTION_SPELL_AURA_APPLIED_DOSE_DEBUFF_FULL_TEXT = "%4$s is afflicted by %1$s %2$s (%9$s).";
2	ACTION_SPELL_AURA_APPLIED_DOSE_DEBUFF_FULL_TEXT_NO_SOURCE = "%4$s is afflicted by %2$s (%9$s).";
2	ACTION_SPELL_AURA_APPLIED_DOSE_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_APPLIED_MASTER = "2";
2	ACTION_SPELL_AURA_APPLIED_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_BROKEN = "broke";
2	ACTION_SPELL_AURA_BROKEN_BUFF = "broke";
2	ACTION_SPELL_AURA_BROKEN_BUFF_FULL_TEXT = "%1$s broke %4$s %2$s."; -- OLD: %1$s %2$s was broken by %4$s.
2	ACTION_SPELL_AURA_BROKEN_BUFF_FULL_TEXT_NO_SOURCE = "%1$s %2$s was broken by someone.";
2	ACTION_SPELL_AURA_BROKEN_BUFF_POSSESSIVE = "0";
2	ACTION_SPELL_AURA_BROKEN_DEBUFF = "broke";
2	ACTION_SPELL_AURA_BROKEN_DEBUFF_FULL_TEXT = "%1$s broke %4$s %2$s."; -- OLD: %1$s %2$s was broken by %4$s.
2	ACTION_SPELL_AURA_BROKEN_DEBUFF_FULL_TEXT_NO_SOURCE = "%1$s %2$s was broken by someone.";
2	ACTION_SPELL_AURA_BROKEN_DEBUFF_POSSESSIVE = "0";
2	ACTION_SPELL_AURA_BROKEN_SPELL_BUFF = "broke";
2	ACTION_SPELL_AURA_BROKEN_SPELL_BUFF_FULL_TEXT = "%1$s broke %4$s %2$s with %5$s.";
2	ACTION_SPELL_AURA_BROKEN_SPELL_BUFF_FULL_TEXT_NO_SOURCE = "%5$s broke %4$s %2$s.";
2	ACTION_SPELL_AURA_BROKEN_SPELL_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_BROKEN_SPELL_DEBUFF = "broke";
2	ACTION_SPELL_AURA_BROKEN_SPELL_DEBUFF_FULL_TEXT = "%1$s broke %4$s %2$s with %5$s.";
2	ACTION_SPELL_AURA_BROKEN_SPELL_DEBUFF_FULL_TEXT_NO_SOURCE = "%5$s broke %4$s %2$s.";
2	ACTION_SPELL_AURA_BROKEN_SPELL_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REFRESH = "refreshed";
2	ACTION_SPELL_AURA_REFRESH_BUFF = "refreshed";
2	ACTION_SPELL_AURA_REFRESH_BUFF_FULL_TEXT = "%1$s %2$s is refreshed on %4$s.";
2	ACTION_SPELL_AURA_REFRESH_BUFF_FULL_TEXT_NO_SOURCE = "%2$s is refreshed on %4$s.";
2	ACTION_SPELL_AURA_REFRESH_BUFF_MASTER = "2";
2	ACTION_SPELL_AURA_REFRESH_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REFRESH_DEBUFF = "refreshed";
2	ACTION_SPELL_AURA_REFRESH_DEBUFF_FULL_TEXT = "%1$s %2$s is refreshed on %4$s.";
2	ACTION_SPELL_AURA_REFRESH_DEBUFF_FULL_TEXT_NO_SOURCE = "%2$s is refreshed on %4$s.";
2	ACTION_SPELL_AURA_REFRESH_DEBUFF_MASTER = "1";
2	ACTION_SPELL_AURA_REFRESH_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REFRESH_MASTER = "2";
2	ACTION_SPELL_AURA_REMOVED = "removed";
2	ACTION_SPELL_AURA_REMOVED_BUFF = "faded";
2	ACTION_SPELL_AURA_REMOVED_BUFF_FULL_TEXT = "%1$s %2$s fades from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_BUFF_FULL_TEXT_NO_SOURCE = "%2$s fades from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REMOVED_DEBUFF = "dissipated";
2	ACTION_SPELL_AURA_REMOVED_DEBUFF_FULL_TEXT = "%1$s %2$s dissipates from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_DEBUFF_FULL_TEXT_NO_SOURCE = "%2$s dissipates from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REMOVED_DOSE = "reduced";
2	ACTION_SPELL_AURA_REMOVED_DOSE_BUFF = "reduced";
2	ACTION_SPELL_AURA_REMOVED_DOSE_BUFF_FULL_TEXT = "%1$s %2$s (%9$s) diminishes.";
2	ACTION_SPELL_AURA_REMOVED_DOSE_BUFF_FULL_TEXT_NO_SOURCE = "%2$s (%9$s) diminishes.";
2	ACTION_SPELL_AURA_REMOVED_DOSE_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REMOVED_DOSE_DEBUFF = "diminished";
2	ACTION_SPELL_AURA_REMOVED_DOSE_DEBUFF_FULL_TEXT = "%1$s %2$s (%9$s) subsides.";
2	ACTION_SPELL_AURA_REMOVED_DOSE_DEBUFF_FULL_TEXT_NO_SOURCE = "%2$s (%9$s) subsides.";
2	ACTION_SPELL_AURA_REMOVED_DOSE_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_AURA_REMOVED_FULL_TEXT = "%1$s %2$s was removed from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_FULL_TEXT_NO_SOURCE = "%1$s %2$s was removed from %4$s.";
2	ACTION_SPELL_AURA_REMOVED_POSSESSIVE = "1";
2	ACTION_SPELL_BUILDING_DAMAGE = "strikes";
2	ACTION_SPELL_BUILDING_DAMAGE_FULL_TEXT = "%1$s %2$s strikes %4$s for %5$s.%6$s";
2	ACTION_SPELL_BUILDING_DAMAGE_FULL_TEXT_NO_SOURCE = "%2$s strike %4$s for %5$s.%6$s";
2	ACTION_SPELL_BUILDING_DAMAGE_MASTER = "1";
2	ACTION_SPELL_BUILDING_DAMAGE_POSSESSIVE = "1";
2	ACTION_SPELL_BUILDING_HEAL = "repaired";
2	ACTION_SPELL_BUILDING_HEAL_FULL_TEXT = "%1$s %2$s repairs %4$s for %9$s.%6$s";
2	ACTION_SPELL_BUILDING_HEAL_FULL_TEXT_NO_SOURCE = "%2$s repairs %4$s for %9$s.%6$s";
2	ACTION_SPELL_BUILDING_HEAL_POSSESSIVE = "1";
2	ACTION_SPELL_CAST_FAILED = "failed";
2	ACTION_SPELL_CAST_FAILED_FULL_TEXT = "%1$s %2$s failed.%6$s";
2	ACTION_SPELL_CAST_FAILED_MASTER = "1";
2	ACTION_SPELL_CAST_FAILED_POSSESSIVE = "1";
2	ACTION_SPELL_CAST_START = "began to cast";
2	ACTION_SPELL_CAST_START_FULL_TEXT = "Something begins casting %2$s at %4$s.";
2	ACTION_SPELL_CAST_START_FULL_TEXT_NO_DEST = "%1$s begins casting %2$s.";
2	ACTION_SPELL_CAST_START_FULL_TEXT_NO_SOURCE = "%1$s begins casting %2$s at %4$s.";
2	ACTION_SPELL_CAST_START_MASTER = "2";
2	ACTION_SPELL_CAST_START_POSSESSIVE = "0";
2	ACTION_SPELL_CAST_SUCCESS = "cast";
2	ACTION_SPELL_CAST_SUCCESS_FULL_TEXT = "%1$s casts %2$s at %4$s.";
2	ACTION_SPELL_CAST_SUCCESS_FULL_TEXT_NO_DEST = "%1$s casts %2$s.";
2	ACTION_SPELL_CAST_SUCCESS_FULL_TEXT_NO_SOURCE = "Something cast %2$s at %4$s.";
2	ACTION_SPELL_CAST_SUCCESS_MASTER = "2";
2	ACTION_SPELL_CAST_SUCCESS_POSSESSIVE = "0";
2	ACTION_SPELL_CREATE = "created"; -- Created a trap, a soul well, etc.
2	ACTION_SPELL_CREATE_FULL_TEXT = "%1$s %2$s creates a %4$s.%6$s";
2	ACTION_SPELL_CREATE_FULL_TEXT_NO_SOURCE = "%2$s creates a %4$s.%6$s";
2	ACTION_SPELL_CREATE_POSSESSIVE = "1";
2	ACTION_SPELL_DAMAGE = "hit";
2	ACTION_SPELL_DAMAGE_FULL_TEXT = "%1$s %2$s hits %4$s for %5$s.%6$s";
2	ACTION_SPELL_DAMAGE_FULL_TEXT_NO_SOURCE = "%2$s hit %4$s for %5$s.%6$s";
2	ACTION_SPELL_DAMAGE_MASTER = "1";
2	ACTION_SPELL_DAMAGE_POSSESSIVE = "1";
2	ACTION_SPELL_DISPEL = "dispelled";
2	ACTION_SPELL_DISPEL_BUFF = "dispelled";
2	ACTION_SPELL_DISPEL_BUFF_FULL_TEXT = "%4$s %5$s is dispelled by %1$s %2$s.";
2	ACTION_SPELL_DISPEL_BUFF_FULL_TEXT_NO_SOURCE = "%4$s %5$s is dispelled by %2$s.";
2	ACTION_SPELL_DISPEL_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_DISPEL_DEBUFF = "cleansed";
2	ACTION_SPELL_DISPEL_DEBUFF_FULL_TEXT = "%4$s %5$s is cleansed by %1$s %2$s.";
2	ACTION_SPELL_DISPEL_DEBUFF_FULL_TEXT_NO_SOURCE = "%4$s %5$s cleansed by %2$s.";
2	ACTION_SPELL_DISPEL_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_DISPEL_FAILED = "dispel failed";
2	ACTION_SPELL_DISPEL_FAILED_FULL_TEXT = "%1$s %2$s fails to dispel %4$s %5$s.";
2	ACTION_SPELL_DISPEL_FAILED_FULL_TEXT_NO_SOURCE = "%2$s fails to dispel %4$s %5$s.";
2	ACTION_SPELL_DISPEL_FAILED_POSSESSIVE = "1";
2	ACTION_SPELL_DISPEL_POSSESSIVE = "1";
2	ACTION_SPELL_DRAIN = "drained";
2	ACTION_SPELL_DRAIN_FULL_TEXT = "%1$s %2$s drains %9$s %8$s from %4$s.";
2	ACTION_SPELL_DRAIN_FULL_TEXT_NO_SOURCE = " %2$s drains %9$s %8$s from %4$s.";
2	ACTION_SPELL_DRAIN_POSSESSIVE = "1";
2	ACTION_SPELL_DURABILITY_DAMAGE = "durability loss";
2	ACTION_SPELL_DURABILITY_DAMAGE_ALL = "full durability loss";
2	ACTION_SPELL_DURABILITY_DAMAGE_ALL_FULL_TEXT = "%1$s %2$s damages %4$s: all items damaged.";
2	ACTION_SPELL_DURABILITY_DAMAGE_ALL_POSSESSIVE = "1";
2	ACTION_SPELL_DURABILITY_DAMAGE_FULL_TEXT = "%1$s %2$s damages %4$s: $item damaged.";
2	ACTION_SPELL_DURABILITY_DAMAGE_POSSESSIVE = "1";
2	ACTION_SPELL_ENERGIZE = "energized";
2	ACTION_SPELL_ENERGIZE_FULL_TEXT = "%4$s gains %9$s %8$s from %1$s %2$s.";
2	ACTION_SPELL_ENERGIZE_FULL_TEXT_NO_SOURCE = "%4$s gains %9$s %8$s from %2$s.";
2	ACTION_SPELL_ENERGIZE_POSSESSIVE = "1";
2	ACTION_SPELL_ENERGIZE_RESULT = "%9$s %8$s Gained";
2	ACTION_SPELL_EXTRA_ATTACKS = "granted extra attacks";
2	ACTION_SPELL_EXTRA_ATTACKS_FULL_TEXT = "%1$s gains %9$s extra attacks through %2$s.";
2	ACTION_SPELL_EXTRA_ATTACKS_FULL_TEXT_NO_SOURCE = "%9$s extra attacks granted by %2$s.";
2	ACTION_SPELL_EXTRA_ATTACKS_POSSESSIVE = "1";
2	ACTION_SPELL_HEAL = "healed";
2	ACTION_SPELL_HEAL_FULL_TEXT = "%1$s %2$s heals %4$s for %9$s.%6$s";
2	ACTION_SPELL_HEAL_FULL_TEXT_NO_SOURCE = "%2$s heals %4$s for %9$s.%6$s";
2	ACTION_SPELL_HEAL_POSSESSIVE = "1";
2	ACTION_SPELL_INSTAKILL = "killed";
2	ACTION_SPELL_INSTAKILL_FULL_TEXT = "%1$s %2$s instantly kills %4$s.";
2	ACTION_SPELL_INSTAKILL_FULL_TEXT_NO_SOURCE = "%2$s instantly kills %4$s.";
2	ACTION_SPELL_INSTAKILL_POSSESSIVE = "1";
2	ACTION_SPELL_INTERRUPT = "interrupted";
2	ACTION_SPELL_INTERRUPT_FULL_TEXT = "%1$s %2$s interrupts %4$s %5$s.";
2	ACTION_SPELL_INTERRUPT_FULL_TEXT_NO_SOURCE = "%2$s interrupts %4$s %5$s.";
2	ACTION_SPELL_INTERRUPT_POSSESSIVE = "1";
2	ACTION_SPELL_LEECH = "drained";
2	ACTION_SPELL_LEECH_FULL_TEXT = "%1$s %2$s drains %9$s %8$s from %4$s. %1$s gains %10$s %8$s.";
2	ACTION_SPELL_LEECH_FULL_TEXT_NO_SOURCE = "%2$s drains %9$s %8$s from %4$s.";
2	ACTION_SPELL_LEECH_POSSESSIVE = "1";
2	ACTION_SPELL_LEECH_RESULT = "%10$s %8$s Gained";
2	ACTION_SPELL_MISSED = "missed";
2	ACTION_SPELL_MISSED_ABSORB = "Absorbed";
2	ACTION_SPELL_MISSED_ABSORB_FULL_TEXT = "%1$s %2$s was absorbed by %4$s.%6$s";
2	ACTION_SPELL_MISSED_ABSORB_FULL_TEXT_NO_SOURCE = "%2$s was absorbed by %4$s.%6$s";
2	ACTION_SPELL_MISSED_ABSORB_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_BLOCK = "Blocked";
2	ACTION_SPELL_MISSED_BLOCK_FULL_TEXT = "%1$s %2$s was blocked by %4$s.%6$s";
2	ACTION_SPELL_MISSED_BLOCK_FULL_TEXT_NO_SOURCE = "%2$s was blocked by %4$s.%6$s";
2	ACTION_SPELL_MISSED_BLOCK_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_DEFLECT = "Deflected";
2	ACTION_SPELL_MISSED_DEFLECT_FULL_TEXT = "%1$s %2$s was deflected by %4$s.";
2	ACTION_SPELL_MISSED_DEFLECT_FULL_TEXT_NO_SOURCE = "%2$s was deflected by %4$s.";
2	ACTION_SPELL_MISSED_DEFLECT_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_DODGE = "Dodged";
2	ACTION_SPELL_MISSED_DODGE_FULL_TEXT = "%1$s %2$s was dodged by %4$s.";
2	ACTION_SPELL_MISSED_DODGE_FULL_TEXT_NO_SOURCE = "%2$s was dodged by %4$s.";
2	ACTION_SPELL_MISSED_DODGE_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_EVADE = "Evaded";
2	ACTION_SPELL_MISSED_EVADE_FULL_TEXT = "%1$s %2$s was evaded by %4$s.";
2	ACTION_SPELL_MISSED_EVADE_FULL_TEXT_NO_SOURCE = "%2$s was evaded by %4$s.";
2	ACTION_SPELL_MISSED_EVADE_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_FULL_TEXT = "%1$s %2$s missed %4$s.";
2	ACTION_SPELL_MISSED_FULL_TEXT_NO_SOURCE = "%2$s missed %4$s.";
2	ACTION_SPELL_MISSED_IMMUNE = "Immune";
2	ACTION_SPELL_MISSED_IMMUNE_FULL_TEXT = "%1$s %2$s failed. %4$s was immune.";
2	ACTION_SPELL_MISSED_IMMUNE_FULL_TEXT_NO_SOURCE = "%2$s failed. %4$s was immune.";
2	ACTION_SPELL_MISSED_MISS = "Missed";
2	ACTION_SPELL_MISSED_MISS_FULL_TEXT = "%1$s %2$s misses %4$s.";
2	ACTION_SPELL_MISSED_MISS_FULL_TEXT_NO_SOURCE = "%2$s misses %4$s.";
2	ACTION_SPELL_MISSED_MISS_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_PARRY = "Parried";
2	ACTION_SPELL_MISSED_PARRY_FULL_TEXT = "%1$s %2$s was parried by %4$s.";
2	ACTION_SPELL_MISSED_PARRY_FULL_TEXT_NO_SOURCE = "%2$s was parried by %4$s.";
2	ACTION_SPELL_MISSED_PARRY_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_POSSESSIVE = "1";
2	ACTION_SPELL_MISSED_REFLECT = "reflected";
2	ACTION_SPELL_MISSED_REFLECT_FULL_TEXT = "%1$s %2$s was reflected by %4$s.";
2	ACTION_SPELL_MISSED_REFLECT_FULL_TEXT_NO_SOURCE = "%2$s was reflected by %4$s.";
2	ACTION_SPELL_MISSED_RESIST = "resisted";
2	ACTION_SPELL_MISSED_RESIST_FULL_TEXT = "%1$s %2$s was fully resisted by %4$s.%6$s";
2	ACTION_SPELL_MISSED_RESIST_FULL_TEXT_NO_SOURCE = "%2$s was fully resisted by %4$s.%6$s";
2	ACTION_SPELL_MISSED_RESIST_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_DAMAGE = "damaged";
2	ACTION_SPELL_PERIODIC_DAMAGE_FULL_TEXT = "%4$s suffers %5$s damage from %1$s %2$s.%6$s";
2	ACTION_SPELL_PERIODIC_DAMAGE_FULL_TEXT_NO_SOURCE = "%4$s suffers %5$s damage from %2$s.%6$s";
2	ACTION_SPELL_PERIODIC_DAMAGE_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_DRAIN = "drained";
2	ACTION_SPELL_PERIODIC_DRAIN_FULL_TEXT = "%1$s %2$s drains %9$s %8$s from %4$s.";
2	ACTION_SPELL_PERIODIC_DRAIN_FULL_TEXT_NO_SOURCE = "%2$s drains %9$s %8$s from %4$s.";
2	ACTION_SPELL_PERIODIC_DRAIN_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_ENERGIZE = "energized";
2	ACTION_SPELL_PERIODIC_ENERGIZE_FULL_TEXT = "%4$s gains %9$s %8$s from %1$s %2$s.";
2	ACTION_SPELL_PERIODIC_ENERGIZE_FULL_TEXT_NO_SOURCE = "%4$s gains %9$s %8$s from %2$s.";
2	ACTION_SPELL_PERIODIC_ENERGIZE_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_ENERGIZE_RESULT = "$extraAmount %8$s Gained";
2	ACTION_SPELL_PERIODIC_HEAL = "healed";
2	ACTION_SPELL_PERIODIC_HEAL_FULL_TEXT = "%4$s gains %9$s Health from %1$s %2$s.%6$s";
2	ACTION_SPELL_PERIODIC_HEAL_FULL_TEXT_NO_SOURCE = "%4$s gains %9$s health from %2$s.%6$s";
2	ACTION_SPELL_PERIODIC_HEAL_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_LEECH = "drained";
2	ACTION_SPELL_PERIODIC_LEECH_FULL_TEXT = "%1$s %2$s drains %9$s %8$s from %4$s. %1$s gains %10$s %8$s.";
2	ACTION_SPELL_PERIODIC_LEECH_FULL_TEXT_NO_SOURCE = "%2$s drains %9$s %8$s from %4$s. %1$s gains %10$s %8$s.";
2	ACTION_SPELL_PERIODIC_LEECH_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_LEECH_RESULT = "(%10$s %8$s Gained)";
2	ACTION_SPELL_PERIODIC_MISSED = "missed";
2	ACTION_SPELL_PERIODIC_MISSED_ABSORB = "(%1$s Absorbed)";
2	ACTION_SPELL_PERIODIC_MISSED_ABSORB_FULL_TEXT = "%1$s %2$s was absorbed by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_ABSORB_FULL_TEXT_NO_SOURCE = "%2$s was absorbed by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_ABSORB_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_BLOCK = "(Tick Blocked)";
2	ACTION_SPELL_PERIODIC_MISSED_BLOCK_FULL_TEXT = "%1$s %2$s was blocked by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_BLOCK_FULL_TEXT_NO_SOURCE = "%2$s was blocked by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_BLOCK_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_DEFLECTED = "(Tick Deflected)";
2	ACTION_SPELL_PERIODIC_MISSED_DEFLECTED_FULL_TEXT = "%1$s %2$s was deflected by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_DEFLECTED_FULL_TEXT_NO_SOURCE = "%2$s was deflected by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_DEFLECTED_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_DODGE = "(Tick Dodged)";
2	ACTION_SPELL_PERIODIC_MISSED_DODGE_FULL_TEXT = "%1$s %2$s was dodged by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_DODGE_FULL_TEXT_NO_SOURCE = "%2$s was dodged by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_DODGE_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_EVADED = "(Tick Evaded)";
2	ACTION_SPELL_PERIODIC_MISSED_EVADED_FULL_TEXT = "%1$s %2$s was evaded by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_EVADED_FULL_TEXT_NO_SOURCE = "%2$s was evaded by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_EVADED_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_FULL_TEXT = "%1$s %2$s does not affect %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_FULL_TEXT_NO_SOURCE = "%2$s does not affect %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_IMMUNE = "(Tick Immune)";
2	ACTION_SPELL_PERIODIC_MISSED_IMMUNE_FULL_TEXT = "%4$s was immune to %1$s %2$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_IMMUNE_FULL_TEXT_NO_SOURCE = "%4$s was immune to %2$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_IMMUNE_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_MISS = "(Tick Missed)";
2	ACTION_SPELL_PERIODIC_MISSED_MISS_FULL_TEXT = "%1$s %2$s missed %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_MISS_FULL_TEXT_NO_SOURCE = "%2$s missed %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_MISS_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_PARRY = "(Tick Parried)";
2	ACTION_SPELL_PERIODIC_MISSED_PARRY_FULL_TEXT = "%1$s %2$s was parried by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_PARRY_FULL_TEXT_NO_SOURCE = "%2$s was parried by %4$s for a moment.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_PARRY_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_POSSESSIVE = "1";
2	ACTION_SPELL_PERIODIC_MISSED_RESIST = "(Tick Resisted)";
2	ACTION_SPELL_PERIODIC_MISSED_RESIST_FULL_TEXT = "%1$s %2$s does not affect %4$s. %4$s resisted.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_RESIST_FULL_TEXT_NO_SOURCE = "%2$s does not affect %4$s. %4$s resisted.%6$s";
2	ACTION_SPELL_PERIODIC_MISSED_RESIST_POSSESSIVE = "1";
2	ACTION_SPELL_RESURRECT = "resurrected";
2	ACTION_SPELL_RESURRECT_FULL_TEXT = "%1$s %2$s resurrects %4$s.%6$s";
2	ACTION_SPELL_RESURRECT_FULL_TEXT_NO_SOURCE = "%2$s resurrects %4$s.%6$s";
2	ACTION_SPELL_RESURRECT_POSSESSIVE = "1";
2	ACTION_SPELL_STOLEN = "stole";
2	ACTION_SPELL_STOLEN_BUFF = "stole";
2	ACTION_SPELL_STOLEN_BUFF_FULL_TEXT = "%1$s %2$s steals %4$s %5$s.";
2	ACTION_SPELL_STOLEN_BUFF_FULL_TEXT_NO_SOURCE = "%2$s steals %4$s %5$s.";
2	ACTION_SPELL_STOLEN_BUFF_POSSESSIVE = "1";
2	ACTION_SPELL_STOLEN_BUFF__POSSESSIVE = "1";
2	ACTION_SPELL_STOLEN_DEBUFF = "stole";
2	ACTION_SPELL_STOLEN_DEBUFF_FULL_TEXT = "%1$s %2$s transfers %4$s $extraSpell to %1$s.";
2	ACTION_SPELL_STOLEN_DEBUFF_FULL_TEXT_NO_SOURCE = "%2$s transfers %4$s $extraSpell.";
2	ACTION_SPELL_STOLEN_DEBUFF_POSSESSIVE = "1";
2	ACTION_SPELL_STOLEN_FULL_TEXT = "%1$s %2$s steals %4$s %5$s.";
2	ACTION_SPELL_STOLEN_FULL_TEXT_NO_SOURCE = "%2$s steals %4$s %5$s.";
2	ACTION_SPELL_STOLEN_POSSESSIVE = "1";
2	ACTION_SPELL_SUMMON = "summoned";
2	ACTION_SPELL_SUMMON_FULL_TEXT = "%1$s %2$s summons %4$s.%6$s";
2	ACTION_SPELL_SUMMON_FULL_TEXT_NO_SOURCE = "%2$s summons %4$s.%6$s";
2	ACTION_SPELL_SUMMON_POSSESSIVE = "1";
2	ACTION_SWING = "Melee";
2	ACTION_SWING_DAMAGE = "hit";
2	ACTION_SWING_DAMAGE_FULL_TEXT = "%1$s melee swing hits %4$s for %5$s.%6$s";
2	ACTION_SWING_DAMAGE_FULL_TEXT_NO_SOURCE = "A melee swing hit %4$s for %5$s.%6$s";
2	ACTION_SWING_DAMAGE_POSSESSIVE = "1";
2	ACTION_SWING_MISSED = "missed";
2	ACTION_SWING_MISSED_ABSORB = "(Absorbed)";
2	ACTION_SWING_MISSED_ABSORB_FULL_TEXT = "%1$s attack was absorbed by %4$s.%6$s";
2	ACTION_SWING_MISSED_ABSORB_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_BLOCK = "(Blocked)";
2	ACTION_SWING_MISSED_BLOCK_FULL_TEXT = "%1$s attack was blocked by %4$s.%6$s";
2	ACTION_SWING_MISSED_BLOCK_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_DEFLECT = "(Deflected)";
2	ACTION_SWING_MISSED_DEFLECT_FULL_TEXT = "%1$s attack was deflected by %4$s.";
2	ACTION_SWING_MISSED_DEFLECT_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_DODGE = "(Dodged)";
2	ACTION_SWING_MISSED_DODGE_FULL_TEXT = "%1$s attack was dodged by %4$s.";
2	ACTION_SWING_MISSED_DODGE_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_EVADE = "(Evaded)";
2	ACTION_SWING_MISSED_EVADE_FULL_TEXT = "%1$s attack was evaded by %4$s.";
2	ACTION_SWING_MISSED_EVADE_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_FULL_TEXT = "%1$s attack misses %4$s.";
2	ACTION_SWING_MISSED_IMMUNE = "(Immune)";
2	ACTION_SWING_MISSED_IMMUNE_FULL_TEXT = "%1$s attack failed. %4$s was immune.";
2	ACTION_SWING_MISSED_IMMUNE_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_MISS = "(Missed)";
2	ACTION_SWING_MISSED_MISS_FULL_TEXT = "%1$s attack misses %4$s.";
2	ACTION_SWING_MISSED_MISS_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_PARRY = "(Parried)";
2	ACTION_SWING_MISSED_PARRY_FULL_TEXT = "%1$s attack was parried by %4$s.";
2	ACTION_SWING_MISSED_PARRY_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_POSSESSIVE = "1";
2	ACTION_SWING_MISSED_RESIST = "(Resisted)";
2	ACTION_SWING_MISSED_RESIST_FULL_TEXT = "%1$s attack was fully resisted by %4$s.%6$s";
2	ACTION_SWING_MISSED_RESIST_POSSESSIVE = "1";
2	ACTION_UNIT_DESTROYED = "destroyed";
2	ACTION_UNIT_DESTROYED_FULL_TEXT = "%4$s was destroyed.";
2	ACTION_UNIT_DESTROYED_POSSESSIVE = "0";
2	ACTION_UNIT_DIED = "died";
2	ACTION_UNIT_DIED_FULL_TEXT = "%4$s died.";
2	ACTION_UNIT_DIED_POSSESSIVE = "0";
2	ADD = "Add";
2	ADDITIONAL_COMMENTS = "Is there anything else you would like to tell us about? What could we have done to make this a better experience for you?";
2	ADDITIONAL_FILTERS = "Additional Filters";
2	ADDMEMBER = "Add Member";
2	ADDMEMBER_TEAM = "Add Member";
2	ADDONS = "AddOns"; -- Label for the Interface Options category
2	ADDON_ACTION_FORBIDDEN = "%s has been blocked from an action only available to the Blizzard UI.\nYou can disable this addon and reload the UI.";
2	ADDON_BANNED = "Banned";
2	ADDON_CORRUPT = "Corrupt";
2	ADDON_DEMAND_LOADED = "Only loadable on demand";
2	ADDON_DEP_BANNED = "Dependency banned";
2	ADDON_DEP_CORRUPT = "Dependency corrupt";
2	ADDON_DEP_DEMAND_LOADED = "Dependency only loadable on demand";
2	ADDON_DEP_DISABLED = "Dependency disabled";
2	ADDON_DEP_INCOMPATIBLE = "Dependency incompatible";
2	ADDON_DEP_INSECURE = "Dependency insecure";
2	ADDON_DEP_INTERFACE_VERSION = "Dependency out of date";
2	ADDON_DEP_MISSING = "Dependency missing";
2	ADDON_DISABLED = "Disabled";
2	ADDON_INCOMPATIBLE = "Incompatible";
2	ADDON_INSECURE = "Insecure";
2	ADDON_INTERFACE_VERSION = "Out of date";
2	ADDON_LOAD_FAILED = "Couldn't load %s: %s";
2	ADDON_MEM_KB_ABBR = "(%.0f KB) %s";
2	ADDON_MEM_MB_ABBR = "(%.2f MB) %s";
2	ADDON_MISSING = "Missing";
2	ADDON_UNKNOWN_ERROR = "Unknown load problem";
2	ADD_CHANNEL = "Enter channel name";
2	ADD_CHAT_CHANNEL = "Add a channel";
2	ADD_FILTER = "Add Filter";
2	ADD_FRIEND = "Add Friend"; -- Add a friend to your friends list
2	ADD_FRIEND_LABEL = "Enter name of friend to add:"; -- Editbox label for adding a friend
2	ADD_GUILDMEMBER_LABEL = "Add Guild Member:";
2	ADD_GUILDRANK_LABEL = "Add Guild Rank:";
2	ADD_IGNORE_LABEL = "Enter name of player to ignore\nor\nShift-Click a name from the chat window:"; -- Editbox label for ignoring a player
2	ADD_MUTE_LABEL = "Enter name of player to mute\nor\nShift-Click a name from the chat window:"; -- Editbox label for muting a player
2	ADD_RAIDMEMBER_LABEL = "Add Raid Member:";
2	ADD_RAID_MEMBER = "Add Member";
2	ADD_TEAMMEMBER_LABEL = "Add Team Member:";
2	ADVANCED_OPTIONS = "Advanced Options";
2	ADVANCED_OPTIONS_TOOLTIP = "Configure advanced interface options";
2	AFK = "AFK";
2	AGGRO_WARNING_DISPLAY = "Display Aggro Warning";
2	AGGRO_WARNING_IN_INSTANCE = "In Instance";
2	AGGRO_WARNING_IN_PARTY = "In Party";
2	AGILITY_COLON = "Agility:"; -- Character's agility, with colon
2	AGILITY_TOOLTIP = "Increases all characters’ chance to Critical Hit. The|namount of the bonus is higher per point on Rogues than|nother classes. Agility affects dodge. Rogues get more|nDodge per point of Agility than other classes. Agility|nadds directly to Armor."; -- Tooltip description for "Agility"
2	AIM_DOWN = "Aim Down";
2	AIM_UP = "Aim Up";
2	ALL = "All"; -- Generic All tag
2	ALLIED = "Allied"; -- Label for whether you're allied with a faction or not
2	ALL_INVENTORY_SLOTS = "All Slots"; -- Text for inventory slot filter in the tradeskills frame
2	ALL_SETTINGS = "All Settings"; -- All settings button in reset settings dialog
2	ALL_SUBCLASSES = "All Subclasses"; -- Text for subclass filter in the tradeskills frame
2	ALREADY_BOUND = "|cffff0000Conflicts with %s!|r";
2	ALREADY_LEARNED = "Already learned"; -- This service has already been learned
2	ALT_KEY = "ALT key";
2	ALWAYS = "Always";
2	ALWAYS_SHOW_MULTIBARS_TEXT = "Always Show ActionBars";
2	AMBIENCE_VOLUME = "Ambience"; -- Sound options tag
2	AMMOSLOT = "Ammo";
2	AMMO_DAMAGE_TEMPLATE = "Adds %g damage per second";
2	AMMO_SCHOOL_DAMAGE_TEMPLATE = "Adds %g %s damage per second";
2	AMOUNT_PAID_COLON = "Amount Paid:";
2	AMOUNT_RECEIVED_COLON = "Amount Received:";
2	AMOUNT_TO_SEND = "Amount to send:";
2	ANIMATION = "Animation";
2	ANISOTROPIC = "Texture Filtering";
2	APPEARANCE_LABEL = "Appearance";
2	APPEARANCE_SUBTEXT = "These options control the ranges and levels of detail used to draw effects and objects in the game.";
2	APPLY = "Apply";
2	AREA_SPIRIT_HEAL = "Resurrection in %d %s";
2	ARENA = "Arena";
2	ARENA_BANNER_VENDOR_GREETING = "Greetings! Choose the symbol and colors of your arena team.";
2	ARENA_BATTLES = "Arena Battles";
2	ARENA_CASUAL = "Skirmish";
2	ARENA_CHARTER_PURCHASE = "Purchase a Team Charter";
2	ARENA_CHARTER_TEMPLATE = "%s Team Petition";
2	ARENA_CHARTER_TURN_IN = "Turn in your Team Charter";
2	ARENA_COMPLETE_MESSAGE = "The battle has ended. This arena will close in %s";
2	ARENA_MASTER_NO_SEASON_TEXT = "So, you want to fight for the glory of victory in the games? Well, you're going to have to wait. The Steamwheedle Cartel is taking a break after the great excitement of last season! Come back next week for your shot at glory! Feel free to practice in the meantime, but the true fun will have to wait.";
2	ARENA_MASTER_TEXT = "Let the games begin!  The door is open to all who wish to find glory in the arena, and the Steamwheedle Cartel is prepared to accept your entry into the games.  If victory is your destiny, then register a team with an Arena Organizer, or join one that has already been registered!";
2	ARENA_OFF_SEASON_TEXT = "Arena Season %d has come to an end!|n|nDuring the week after the close of the arena season all titles and rewards will be awarded.|n|nBe sure to check with arena organizers for information about the start of Season %d!"; -- Displays on PVP panel, not Arena Masters
2	ARENA_PETITION_LEADER_INSTRUCTIONS = "Select a player you wish to invite and click <request signature>.   To create this team, turn it in to the arena team registrar when you have gotten the required number of signatures.";
2	ARENA_PETITION_MEMBER_INSTRUCTIONS = "Click the <Sign Charter> button to become a founding member of this arena team.";
2	ARENA_POINTS = "Arena Points";
2	ARENA_PRACTICE_BATTLE = "Practice Battle:";
2	ARENA_RATED = "Battle";
2	ARENA_RATED_BATTLE = "Rated Battle:";
2	ARENA_RATED_MATCH = "Rated Match";
2	ARENA_REGISTRAR_PURCHASE_TEXT = "To create an arena team you must purchase this charter, get the same number of unique player signatures as the size of your team, and return the charter to me.  Please enter the desired name for your arena team.";
2	ARENA_SPECTATOR = "You are in Spectator Mode. To abandon this battle, right click the Arena icon on the minimap and select 'Leave Arena'.";
2	ARENA_TEAM = "Arena Team";
2	ARENA_TEAM_2V2 = "2v2 Arena Team";
2	ARENA_TEAM_3V3 = "3v3 Arena Team";
2	ARENA_TEAM_5V5 = "5v5 Arena Team";
2	ARENA_TEAM_CAPTAIN = "Arena Team Captain";
2	ARENA_TEAM_INVITATION = "%s invites you to join the arena team: %s"; -- Notifies a player they have been invited to join an Arena Team.
2	ARENA_TEAM_LEAD_IN = "Visit an Arena Master to form a new Arena Team.";
2	ARENA_TEAM_RATING = "Team Rating";
2	ARENA_THIS_SEASON = "This Season"; -- "THIS SEASON" Label for Arena Team UI
2	ARENA_THIS_SEASON_TOGGLE = "View this Season's Stats";
2	ARENA_THIS_WEEK = "This Week"; -- "THIS WEEK" Label for Arena Team UI
2	ARENA_THIS_WEEK_TOGGLE = "View this Week's Stats";
2	ARMOR = "Armor"; -- Generic "armor"
2	ARMOR_COLON = "Armor:"; -- Character's armor modifier, with colon
2	ARMOR_TEMPLATE = "%d Armor"; -- Item's armor display template
2	ARMOR_TOOLTIP = "Decreases the amount of damage taken from physical attacks.  The amount of reduction is influenced by the level of the attacker.\nDamage reduction against a level %d attacker: %.1f%%"; -- Tooltip description for "Armor"
2	ASSIGNED_COLON = "Currently Assigned:"; -- Header for currently assigned quests, with colon
2	ASSIST_ATTACK = "Attack on Assist"; -- Option to automatically attack after an "assist" command
2	ATTACHMENT_TEXT = "Drag an item here to include it with your mail";
2	ATTACK = "Attack"; -- Attack a target
2	ATTACK_COLON = "Attack:";
2	ATTACK_POWER_COLON = "Power:";
2	ATTACK_POWER_TOOLTIP = "Attack Power";
2	ATTACK_SPEED = "Attack Speed";
2	ATTACK_SPEED_COLON = "Attack Speed (seconds):"; -- Character's attack speed modifier, with colon
2	ATTACK_SPEED_TOOLTIP1 = "Seconds per attack"; -- Tooltip for "Attack Speed"
2	ATTACK_TOOLTIP = "Attack Rating"; -- Tooltip description for "Attack"
2	ATTACK_TOOLTIP_SUBTEXT = "Your attack rating affects your chance to hit a target, and is based on the weapon skill of the weapon you are currently wielding.";
2	AT_WAR = "At War"; -- At war tag for faction that the player is at war us
2	AUCTIONS = "Auctions";
2	AUCTION_BUYOUT_ERROR = "(Must be >= the start price)";
2	AUCTION_CREATOR = "Seller";
2	AUCTION_DURATION = "Auction Duration";
2	AUCTION_DURATION_ERROR = "(Auction will be set to 5 mins)";
2	AUCTION_EXPIRED_MAIL_SUBJECT = "Auction expired: %s"; -- %s is the item name
2	AUCTION_HOUSE_CUT_COLON = "Auction House Cut:";
2	AUCTION_INVOICE_FUNDS_DELAY = "Estimated delivery time %s"; -- Shows on auction house temporary invoice
2	AUCTION_INVOICE_FUNDS_NOT_YET_SENT = "Amount not yet sent"; -- Shows up centered on temporary invoice on auction house.
2	AUCTION_INVOICE_MAIL_SUBJECT = "Sale Pending: %s"; -- %s is the name of the item that sold
2	AUCTION_INVOICE_PENDING_FUNDS_COLON = "Amount Pending:";
2	AUCTION_ITEM = "Auction Item";
2	AUCTION_ITEM_INCOMING_AMOUNT = "Incoming Amount"; -- Label for the amount of money pending
2	AUCTION_ITEM_SOLD = "%s - Sold"; -- Used in the auction frame when an item has sold
2	AUCTION_ITEM_TEXT = "Drag an item here to auction it";
2	AUCTION_ITEM_TIME_UNTIL_DELIVERY = "%s Until Delivery"; -- Used to tell when
2	AUCTION_OUTBID_MAIL_SUBJECT = "Outbid on %s"; -- %s is the item name
2	AUCTION_REMOVED_MAIL_SUBJECT = "Auction cancelled: %s";
2	AUCTION_SOLD_MAIL_SUBJECT = "Auction successful: %s"; -- %s is the item name
2	AUCTION_TIME_LEFT1 = "Short";
2	AUCTION_TIME_LEFT1_DETAIL = "Less than 30 mins";
2	AUCTION_TIME_LEFT2 = "Medium";
2	AUCTION_TIME_LEFT2_DETAIL = "Between 30 mins and 2 hrs";
2	AUCTION_TIME_LEFT3 = "Long";
2	AUCTION_TIME_LEFT3_DETAIL = "Between 2 hrs and 12 hrs";
2	AUCTION_TIME_LEFT4 = "Very Long";
2	AUCTION_TIME_LEFT4_DETAIL = "Greater than 12 hrs";
2	AUCTION_TITLE = "%s's Auctions";
2	AUCTION_TOOLTIP_BID_PREFIX = "Price per unit:";
2	AUCTION_TOOLTIP_BUYOUT_PREFIX = "Buyout price per unit:";
2	AUCTION_WON_MAIL_SUBJECT = "Auction won: %s"; -- %s is the item name
2	AURAS = "Auras";
2	AURAS_COMBATLOG_TOOLTIP = "Shows message about beneficial and harmful state effects.";
2	AURA_END = "<%s> fades";
2	AUTOFOLLOWSTART = "Following %s.";
2	AUTOFOLLOWSTOP = "You stop following %s.";
2	AUTOFOLLOWSTOPCOMBAT = "You stop moving to attack %s";
2	AUTO_ADD_DISABLED_GROUPED_TOOLTIP = "You cannot automatically add more members to your group if your group is already full, or you are not the leader.";
2	AUTO_ADD_DISABLED_QUEUED_TOOLTIP = "You cannot automatically add more members to your group if you are already looking for a group to join.";
2	AUTO_ADD_MEMBERS = "Auto Add Members"; -- Label to automatically add members to your group in the LFM Frame
2	AUTO_ADD_TOOLTIP = "Automatically add members to your group. Only works for dungeons.";
2	AUTO_DISMOUNT_FLYING_TEXT = "Auto Dismount in Flight";
2	AUTO_FOLLOW_SPEED = "Auto Follow Speed";
2	AUTO_JOIN = "Auto Join";
2	AUTO_JOIN_DISABLED_TOOLTIP = "You cannot automatically join a group if you are currently automatically looking for more people to add to your group.";
2	AUTO_JOIN_GUILD_CHANNEL = "Auto Join Guild Recruitment Channel";
2	AUTO_JOIN_TOOLTIP = "Automatically places you in a group that matches your criteria. Only works for dungeons.";
2	AUTO_JOIN_VOICE = "Auto Join Voice Chat";
2	AUTO_LOOT_DEFAULT_TEXT = "Auto Loot";
2	AUTO_LOOT_KEY_TEXT = "Auto Loot Key";
2	AUTO_QUEST_WATCH_TEXT = "Automatic Quest Tracking";
2	AUTO_RANGED_COMBAT_TEXT = "Auto Attack/Auto Shot";
2	AUTO_SELF_CAST_KEY_TEXT = "Self Cast Key";
2	AUTO_SELF_CAST_TEXT = "Auto Self Cast";
2	AVAILABLE = "Available"; -- Generic available tag
2	AVAILABLE_QUESTS = "Available Quests"; -- Header for currently available quests
2	AVAILABLE_SERVICES = "Available Services";
2	AVERAGE_WAIT_TIME = "Average Wait Time:";
2	BACK = "Back";
2	BACKGROUND = "Background"; -- Title in the chat preferences menu
2	BACKPACK_TOOLTIP = "Backpack"; -- Backpack tooltip
2	BACKSLOT = "Back"; -- Back slot
2	BAGSLOT = "Bag"; -- Bag slot
2	BAGSLOTTEXT = "Bag Slots"; -- label for bags
2	BAGS_ONLY = "Only bags can go here!"; -- The player can only put bags in this slot
2	BANKSLOTPURCHASE = "Purchase"; -- Purchase button label
2	BANKSLOTPURCHASE_LABEL = "Do you wish to purchase space for an additional bag?";
2	BANK_BAG = "Bag Slot"; -- Bag slot
2	BANK_BAG_PURCHASE = "Purchasable Bag Slot"; -- Bank slot that is not yet opened
2	BARBERSHOP = "Barber Shop";
2	BASIC_OPTIONS_TOOLTIP = "Configure basic interface options";
2	BATTLEFIELDMINIMAP_OPACITY_LABEL = "Change Opacity";
2	BATTLEFIELDMINIMAP_OPTIONS_LABEL = "Zone Map Options";
2	BATTLEFIELDS = "Battlegrounds";
2	BATTLEFIELD_CONFIRM_STATUS = "(Ready to Enter)";
2	BATTLEFIELD_FULL = "%s (Full)";
2	BATTLEFIELD_GROUP_JOIN = "Join as Group";
2	BATTLEFIELD_IN_BATTLEFIELD = "You are in %s\n|cffffffff<Left-Click To Show Score>\n<Shift-Click To Show Zone Map>|r";
2	BATTLEFIELD_IN_QUEUE = "You are in the queue for %s\nAverage wait time: %s (Last 10 players)\nTime in queue: %s";
2	BATTLEFIELD_JOIN = "Join Battle";
2	BATTLEFIELD_LEVEL = "Level Range:";
2	BATTLEFIELD_MINIMAP = "Zone Map";
2	BATTLEFIELD_MINIMAP_SHOW_ALWAYS = "Always Show";
2	BATTLEFIELD_MINIMAP_SHOW_BATTLEGROUNDS = "Show in Battlegrounds";
2	BATTLEFIELD_MINIMAP_SHOW_NEVER = "Never Show";
2	BATTLEFIELD_NAME = "Battlefield Instance:";
2	BATTLEFIELD_QUEUE_CONFIRM = "You are eligible to enter %s\nYou will be removed from the queue in %s";
2	BATTLEFIELD_QUEUE_PENDING_REMOVAL = "You are eligible to enter %s\nYou are about to be removed from the queue.";
2	BATTLEFIELD_QUEUE_STATUS = "(In Queue)";
2	BATTLEGROUND = "Battleground";
2	BATTLEGROUND_COMPLETE_MESSAGE = "The battle has ended. This battleground will close in %s";
2	BATTLEGROUND_INSTANCE_TOOLTIP = "Join the queue to enter this battleground when space becomes available. This will result in a longer wait than selecting first available.";
2	BATTLEGROUND_LEADER = "Battleground Leader";
2	BATTLEGROUND_MESSAGE = "Battleground"; -- A message sent to the battleground
2	BATTLEGROUND_SILENCE = "Silence in Battleground";
2	BATTLEGROUND_UNSILENCE = "Unsilence in Battleground";
2	BENCHMARK_TAXI_AVERAGE_FPS = "Average FPS %.3f"; -- Average FPS 47.025
2	BENCHMARK_TAXI_MAX_FPS = "Maximum FPS %.3f"; -- Maximum FPS 67.111
2	BENCHMARK_TAXI_MIN_FPS = "Minimum FPS %.3f"; -- Minimum FPS 5.043
2	BENCHMARK_TAXI_MODE_OFF = "Taxi Time Test OFF";
2	BENCHMARK_TAXI_MODE_ON = "Taxi Time Test ON";
2	BENCHMARK_TAXI_RESULTS = "Taxi time test results:";
2	BENCHMARK_TAXI_TOTAL_TIME = "Total time %.3f seconds"; -- Total time 50.045 seconds
2	BENEFICIAL = "Beneficial";
2	BENEFICIAL_AURA_COMBATLOG_TOOLTIP = "Show when you gain or lose a beneficial aura.";
2	BG_SYSTEM_ALLIANCE = "Battleground Alliance";
2	BG_SYSTEM_HORDE = "Battleground Horde";
2	BG_SYSTEM_NEUTRAL = "Battleground Neutral";
2	BID = "Bid";
2	BIDS = "Bids";
2	BID_STATUS = "Bid Status";
2	BILLING_NAG_DIALOG = "Your play time expires in %d %s";
2	BILLING_NAG_WARNING = "Your play time expires in %d |4minute:minutes;";
2	BINDING_HEADER_ACTIONBAR = "Action Bar Functions";
2	BINDING_HEADER_BLANK = "  ";
2	BINDING_HEADER_CAMERA = "Camera Functions";
2	BINDING_HEADER_CHAT = "Chat Functions";
2	BINDING_HEADER_INTERFACE = "Interface Panel Functions";
2	BINDING_HEADER_ITUNES_REMOTE = "iTunes Remote";
2	BINDING_HEADER_MISC = "Miscellaneous Functions";
2	BINDING_HEADER_MOVEMENT = "Movement Keys";
2	BINDING_HEADER_MOVIE_RECORDING_SECTION = "Movie Recording";
2	BINDING_HEADER_MULTIACTIONBAR = "MultiActionBar Bindings";
2	BINDING_HEADER_RAID_TARGET = "Raid Targeting";
2	BINDING_HEADER_TARGETING = "Targeting Functions";
2	BINDING_HEADER_VEHICLE = "Vehicle Controls";
2	BINDING_HEADER_VOICE_CHAT = "Voice Chat";
2	BINDING_NAME_ACTIONBUTTON1 = "Action Button 1"; -- Keybinding name for ACTIONBUTTON1
2	BINDING_NAME_ACTIONBUTTON10 = "Action Button 10";
2	BINDING_NAME_ACTIONBUTTON11 = "Action Button 11";
2	BINDING_NAME_ACTIONBUTTON12 = "Action Button 12";
2	BINDING_NAME_ACTIONBUTTON2 = "Action Button 2"; -- Keybinding name for ACTIONBUTTON2
2	BINDING_NAME_ACTIONBUTTON3 = "Action Button 3";
2	BINDING_NAME_ACTIONBUTTON4 = "Action Button 4";
2	BINDING_NAME_ACTIONBUTTON5 = "Action Button 5";
2	BINDING_NAME_ACTIONBUTTON6 = "Action Button 6";
2	BINDING_NAME_ACTIONBUTTON7 = "Action Button 7";
2	BINDING_NAME_ACTIONBUTTON8 = "Action Button 8";
2	BINDING_NAME_ACTIONBUTTON9 = "Action Button 9";
2	BINDING_NAME_ACTIONPAGE1 = "Action Page 1";
2	BINDING_NAME_ACTIONPAGE2 = "Action Page 2";
2	BINDING_NAME_ACTIONPAGE3 = "Action Page 3";
2	BINDING_NAME_ACTIONPAGE4 = "Action Page 4";
2	BINDING_NAME_ACTIONPAGE5 = "Action Page 5";
2	BINDING_NAME_ACTIONPAGE6 = "Action Page 6";
2	BINDING_NAME_ALLNAMEPLATES = "Show All Name Plates";
2	BINDING_NAME_ASSISTTARGET = "Assist Target";
2	BINDING_NAME_ATTACKTARGET = "Attack Target";
2	BINDING_NAME_BONUSACTIONBUTTON1 = "Secondary Action Button 1";
2	BINDING_NAME_BONUSACTIONBUTTON10 = "Secondary Action Button 10";
2	BINDING_NAME_BONUSACTIONBUTTON2 = "Secondary Action Button 2";
2	BINDING_NAME_BONUSACTIONBUTTON3 = "Secondary Action Button 3";
2	BINDING_NAME_BONUSACTIONBUTTON4 = "Secondary Action Button 4";
2	BINDING_NAME_BONUSACTIONBUTTON5 = "Secondary Action Button 5";
2	BINDING_NAME_BONUSACTIONBUTTON6 = "Secondary Action Button 6";
2	BINDING_NAME_BONUSACTIONBUTTON7 = "Secondary Action Button 7";
2	BINDING_NAME_BONUSACTIONBUTTON8 = "Secondary Action Button 8";
2	BINDING_NAME_BONUSACTIONBUTTON9 = "Secondary Action Button 9";
2	BINDING_NAME_CAMERAZOOMIN = "Zoom In";
2	BINDING_NAME_CAMERAZOOMOUT = "Zoom Out";
2	BINDING_NAME_CHATBOTTOM = "Chat Bottom";
2	BINDING_NAME_CHATPAGEDOWN = "Chat Page Down";
2	BINDING_NAME_CHATPAGEUP = "Chat Page Up";
2	BINDING_NAME_COMBATLOGBOTTOM = "Combat Log Bottom";
2	BINDING_NAME_COMBATLOGPAGEDOWN = "Combat Log Page Down";
2	BINDING_NAME_COMBATLOGPAGEUP = "Combat Log Page Up";
2	BINDING_NAME_DISMOUNT = "Dismount";
2	BINDING_NAME_FLIPCAMERAYAW = "Flip Camera";
2	BINDING_NAME_FOCUSTARGET = "Focus Target";
2	BINDING_NAME_FOLLOWTARGET = "Follow Target";
2	BINDING_NAME_FRIENDNAMEPLATES = "Show Friendly Name Plates";
2	BINDING_NAME_ITUNES_BACKTRACK = "iTunes Back Track";
2	BINDING_NAME_ITUNES_NEXTTRACK = "iTunes Next Track";
2	BINDING_NAME_ITUNES_PLAYPAUSE = "iTunes Play/Pause";
2	BINDING_NAME_ITUNES_VOLUMEDOWN = "iTunes Volume Down";
2	BINDING_NAME_ITUNES_VOLUMEUP = "iTunes Volume Up";
2	BINDING_NAME_JUMP = "Jump";
2	BINDING_NAME_MASTERVOLUMEDOWN = "Master Volume Down";
2	BINDING_NAME_MASTERVOLUMEUP = "Master Volume Up";
2	BINDING_NAME_MINIMAPZOOMIN = "Minimap Zoom In";
2	BINDING_NAME_MINIMAPZOOMOUT = "Minimap Zoom Out";
2	BINDING_NAME_MOVEANDSTEER = "Move and Steer";
2	BINDING_NAME_MOVEBACKWARD = "Move Backward";
2	BINDING_NAME_MOVEFORWARD = "Move Forward";
2	BINDING_NAME_MOVIE_RECORDING_CANCEL = "Cancel Recording/Compression";
2	BINDING_NAME_MOVIE_RECORDING_COMPRESS = "Compress Movies";
2	BINDING_NAME_MOVIE_RECORDING_GUI = "Show/Hide User Interface";
2	BINDING_NAME_MOVIE_RECORDING_STARTSTOP = "Start/Stop Recording";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON1 = "BottomLeft Action Button 1";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON10 = "BottomLeft Action Button 10";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON11 = "BottomLeft Action Button 11";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON12 = "BottomLeft Action Button 12";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON2 = "BottomLeft Action Button 2";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON3 = "BottomLeft Action Button 3";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON4 = "BottomLeft Action Button 4";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON5 = "BottomLeft Action Button 5";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON6 = "BottomLeft Action Button 6";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON7 = "BottomLeft Action Button 7";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON8 = "BottomLeft Action Button 8";
2	BINDING_NAME_MULTIACTIONBAR1BUTTON9 = "BottomLeft Action Button 9";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON1 = "BottomRight Action Button 1";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON10 = "BottomRight Action Button 10";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON11 = "BottomRight Action Button 11";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON12 = "BottomRight Action Button 12";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON2 = "BottomRight Action Button 2";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON3 = "BottomRight Action Button 3";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON4 = "BottomRight Action Button 4";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON5 = "BottomRight Action Button 5";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON6 = "BottomRight Action Button 6";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON7 = "BottomRight Action Button 7";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON8 = "BottomRight Action Button 8";
2	BINDING_NAME_MULTIACTIONBAR2BUTTON9 = "BottomRight Action Button 9";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON1 = "Right Action Button 1";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON10 = "Right Action Button 10";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON11 = "Right Action Button 11";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON12 = "Right Action Button 12";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON2 = "Right Action Button 2";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON3 = "Right Action Button 3";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON4 = "Right Action Button 4";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON5 = "Right Action Button 5";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON6 = "Right Action Button 6";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON7 = "Right Action Button 7";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON8 = "Right Action Button 8";
2	BINDING_NAME_MULTIACTIONBAR3BUTTON9 = "Right Action Button 9";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON1 = "Right ActionBar 2 Button 1";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON10 = "Right ActionBar 2 Button 10";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON11 = "Right ActionBar 2 Button 11";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON12 = "Right ActionBar 2 Button 12";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON2 = "Right ActionBar 2 Button 2";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON3 = "Right ActionBar 2 Button 3";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON4 = "Right ActionBar 2 Button 4";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON5 = "Right ActionBar 2 Button 5";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON6 = "Right ActionBar 2 Button 6";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON7 = "Right ActionBar 2 Button 7";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON8 = "Right ActionBar 2 Button 8";
2	BINDING_NAME_MULTIACTIONBAR4BUTTON9 = "Right ActionBar 2 Button 9";
2	BINDING_NAME_NAMEPLATES = "Show Enemy Name Plates";
2	BINDING_NAME_NEXTACTIONPAGE = "Next Action Bar";
2	BINDING_NAME_NEXTVIEW = "Next View";
2	BINDING_NAME_OPENALLBAGS = "Open All Bags";
2	BINDING_NAME_OPENCHAT = "Open Chat";
2	BINDING_NAME_OPENCHATSLASH = "Open Chat Slash";
2	BINDING_NAME_PETATTACK = "Pet Attack";
2	BINDING_NAME_PITCHDECREMENT = "Pitch Decrement";
2	BINDING_NAME_PITCHDOWN = "Pitch Down";
2	BINDING_NAME_PITCHINCREMENT = "Pitch Increment";
2	BINDING_NAME_PITCHUP = "Pitch Up";
2	BINDING_NAME_PREVIOUSACTIONPAGE = "Previous Action Bar";
2	BINDING_NAME_PREVVIEW = "Previous View";
2	BINDING_NAME_PUSHTOTALK = "Push to Talk";
2	BINDING_NAME_RAIDTARGET1 = "Assign Star to Target";
2	BINDING_NAME_RAIDTARGET2 = "Assign Circle to Target";
2	BINDING_NAME_RAIDTARGET3 = "Assign Diamond to Target";
2	BINDING_NAME_RAIDTARGET4 = "Assign Triangle to Target";
2	BINDING_NAME_RAIDTARGET5 = "Assign Moon to Target";
2	BINDING_NAME_RAIDTARGET6 = "Assign Square to Target";
2	BINDING_NAME_RAIDTARGET7 = "Assign Cross to Target";
2	BINDING_NAME_RAIDTARGET8 = "Assign Skull to Target";
2	BINDING_NAME_RAIDTARGETNONE = "Clear Raid Target Icon";
2	BINDING_NAME_REPLY = "Chat Reply";
2	BINDING_NAME_REPLY2 = "Re-Whisper";
2	BINDING_NAME_RESETVIEW1 = "Reset View 1";
2	BINDING_NAME_RESETVIEW2 = "Reset View 2";
2	BINDING_NAME_RESETVIEW3 = "Reset View 3";
2	BINDING_NAME_RESETVIEW4 = "Reset View 4";
2	BINDING_NAME_RESETVIEW5 = "Reset View 5";
2	BINDING_NAME_SAVEVIEW1 = "Save View 1";
2	BINDING_NAME_SAVEVIEW2 = "Save View 2";
2	BINDING_NAME_SAVEVIEW3 = "Save View 3";
2	BINDING_NAME_SAVEVIEW4 = "Save View 4";
2	BINDING_NAME_SAVEVIEW5 = "Save View 5";
2	BINDING_NAME_SCREENSHOT = "Screen Shot";
2	BINDING_NAME_SETVIEW1 = "Set View 1";
2	BINDING_NAME_SETVIEW2 = "Set View 2";
2	BINDING_NAME_SETVIEW3 = "Set View 3";
2	BINDING_NAME_SETVIEW4 = "Set View 4";
2	BINDING_NAME_SETVIEW5 = "Set View 5";
2	BINDING_NAME_SHAPESHIFTBUTTON1 = "Special Action Button 1";
2	BINDING_NAME_SHAPESHIFTBUTTON10 = "Special Action Button 10";
2	BINDING_NAME_SHAPESHIFTBUTTON2 = "Special Action Button 2";
2	BINDING_NAME_SHAPESHIFTBUTTON3 = "Special Action Button 3";
2	BINDING_NAME_SHAPESHIFTBUTTON4 = "Special Action Button 4";
2	BINDING_NAME_SHAPESHIFTBUTTON5 = "Special Action Button 5";
2	BINDING_NAME_SHAPESHIFTBUTTON6 = "Special Action Button 6";
2	BINDING_NAME_SHAPESHIFTBUTTON7 = "Special Action Button 7";
2	BINDING_NAME_SHAPESHIFTBUTTON8 = "Special Action Button 8";
2	BINDING_NAME_SHAPESHIFTBUTTON9 = "Special Action Button 9";
2	BINDING_NAME_SITORSTAND = "Sit/Move Down";
2	BINDING_NAME_STOPATTACK = "Stop Attacking";
2	BINDING_NAME_STOPCASTING = "Stop Casting";
2	BINDING_NAME_STRAFELEFT = "Strafe Left";
2	BINDING_NAME_STRAFERIGHT = "Strafe Right";
2	BINDING_NAME_TARGETFOCUS = "Target Focus";
2	BINDING_NAME_TARGETLASTHOSTILE = "Target Last Hostile";
2	BINDING_NAME_TARGETLASTTARGET = "Target Last Target";
2	BINDING_NAME_TARGETNEARESTENEMY = "Target Nearest Enemy";
2	BINDING_NAME_TARGETNEARESTENEMYPLAYER = "Target Nearest Enemy Player";
2	BINDING_NAME_TARGETNEARESTFRIEND = "Target Nearest Friend";
2	BINDING_NAME_TARGETNEARESTFRIENDPLAYER = "Target Nearest Friendly Player";
2	BINDING_NAME_TARGETPARTYMEMBER1 = "Target Party Member 1";
2	BINDING_NAME_TARGETPARTYMEMBER2 = "Target Party Member 2";
2	BINDING_NAME_TARGETPARTYMEMBER3 = "Target Party Member 3";
2	BINDING_NAME_TARGETPARTYMEMBER4 = "Target Party Member 4";
2	BINDING_NAME_TARGETPARTYPET1 = "Target Party Pet 1";
2	BINDING_NAME_TARGETPARTYPET2 = "Target Party Pet 2";
2	BINDING_NAME_TARGETPARTYPET3 = "Target Party Pet 3";
2	BINDING_NAME_TARGETPARTYPET4 = "Target Party Pet 4";
2	BINDING_NAME_TARGETPET = "Target Pet";
2	BINDING_NAME_TARGETPREVIOUSENEMY = "Target Previous Enemy";
2	BINDING_NAME_TARGETPREVIOUSENEMYPLAYER = "Target Previous Enemy Player";
2	BINDING_NAME_TARGETPREVIOUSFRIEND = "Target Previous Friend";
2	BINDING_NAME_TARGETPREVIOUSFRIENDPLAYER = "Target Previous Friendly Player";
2	BINDING_NAME_TARGETSELF = "Target Self";
2	BINDING_NAME_TARGETTALKER = "Target Current Talker";
2	BINDING_NAME_TOGGLEABILITYBOOK = "Toggle Abilities";
2	BINDING_NAME_TOGGLEACHIEVEMENT = "Toggle Achievement Frame";
2	BINDING_NAME_TOGGLEACTIONBARLOCK = "Toggle ActionBar Lock";
2	BINDING_NAME_TOGGLEAUTORUN = "Toggle Autorun";
2	BINDING_NAME_TOGGLEAUTOSELFCAST = "Toggle Auto Self Cast";
2	BINDING_NAME_TOGGLEBACKPACK = "Toggle Backpack";
2	BINDING_NAME_TOGGLEBAG1 = "Toggle Bag 1";
2	BINDING_NAME_TOGGLEBAG2 = "Toggle Bag 2";
2	BINDING_NAME_TOGGLEBAG3 = "Toggle Bag 3";
2	BINDING_NAME_TOGGLEBAG4 = "Toggle Bag 4";
2	BINDING_NAME_TOGGLEBAG5 = "Toggle Bag 5";
2	BINDING_NAME_TOGGLEBATTLEFIELDMINIMAP = "Toggle Zone Map";
2	BINDING_NAME_TOGGLECHANNELPULLOUT = "Toggle Channel Pullout";
2	BINDING_NAME_TOGGLECHANNELTAB = "Toggle Channel Pane";
2	BINDING_NAME_TOGGLECHARACTER0 = "Toggle Character Pane";
2	BINDING_NAME_TOGGLECHARACTER1 = "Toggle Skill Pane";
2	BINDING_NAME_TOGGLECHARACTER2 = "Toggle Reputation Pane";
2	BINDING_NAME_TOGGLECHARACTER3 = "Toggle Pet Pane";
2	BINDING_NAME_TOGGLECHARACTER4 = "Toggle PVP Pane";
2	BINDING_NAME_TOGGLECHATTAB = "Toggle Chat Pane";
2	BINDING_NAME_TOGGLECOMBATLOG = "Toggle Combat Log";
2	BINDING_NAME_TOGGLECURRENCY = "Toggle Currency Frame";
2	BINDING_NAME_TOGGLEFPS = "Toggle Framerate Display";
2	BINDING_NAME_TOGGLEFRIENDSTAB = "Toggle Friends Pane";
2	BINDING_NAME_TOGGLEGAMEMENU = "Toggle Game Menu";
2	BINDING_NAME_TOGGLEGUILDTAB = "Toggle Guild Pane";
2	BINDING_NAME_TOGGLEIGNORETAB = "Toggle Ignore Pane";
2	BINDING_NAME_TOGGLEINSCRIPTION = "Toggle Spell Glyphs";
2	BINDING_NAME_TOGGLEKEYRING = "Toggle Keyring";
2	BINDING_NAME_TOGGLELFGPARENT = "Toggle LFG/LFM Frame";
2	BINDING_NAME_TOGGLELFGTAB = "Toggle LFG Pane";
2	BINDING_NAME_TOGGLELFMTAB = "Toggle LFM Pane";
2	BINDING_NAME_TOGGLEMINIMAP = "Toggle Minimap";
2	BINDING_NAME_TOGGLEMINIMAPROTATION = "Toggle Minimap Rotation";
2	BINDING_NAME_TOGGLEMUSIC = "Toggle Music";
2	BINDING_NAME_TOGGLEPETBOOK = "Toggle Pet Book";
2	BINDING_NAME_TOGGLEPVP = "Toggle PvP Frame";
2	BINDING_NAME_TOGGLEQUESTLOG = "Toggle Quest Log";
2	BINDING_NAME_TOGGLERAIDTAB = "Toggle Raid Pane";
2	BINDING_NAME_TOGGLERUN = "Toggle Run/Walk";
2	BINDING_NAME_TOGGLESELFMUTE = "Toggle Self Mute";
2	BINDING_NAME_TOGGLESHEATH = "Sheath/Unsheath Weapon";
2	BINDING_NAME_TOGGLESOCIAL = "Toggle Social Pane";
2	BINDING_NAME_TOGGLESOUND = "Toggle Sound"; -- Key binding tag
2	BINDING_NAME_TOGGLESPELLBOOK = "Toggle Spellbook";
2	BINDING_NAME_TOGGLESTATISTICS = "Toggle Statistics Frame";
2	BINDING_NAME_TOGGLETALENTS = "Toggle Talent Pane";
2	BINDING_NAME_TOGGLEUI = "Toggle User Interface"; -- Keybinding name for TOGGLEUI
2	BINDING_NAME_TOGGLEWHOTAB = "Toggle Who Pane";
2	BINDING_NAME_TOGGLEWORLDMAP = "Toggle World Map Pane";
2	BINDING_NAME_TOGGLEWORLDSTATESCORES = "Toggle Score Screen";
2	BINDING_NAME_TURNLEFT = "Turn Left";
2	BINDING_NAME_TURNRIGHT = "Turn Right";
2	BINDING_NAME_VEHICLEAIMDECREMENT = "Aim Decrement";
2	BINDING_NAME_VEHICLEAIMDOWN = "Aim Down";
2	BINDING_NAME_VEHICLEAIMINCREMENT = "Aim Increment";
2	BINDING_NAME_VEHICLEAIMUP = "Aim Up";
2	BINDING_NAME_VEHICLECAMERAZOOMIN = "Camera Zoom In";
2	BINDING_NAME_VEHICLECAMERAZOOMOUT = "Camera Zoom Out";
2	BINDING_NAME_VEHICLEEXIT = "Exit Vehicle";
2	BINDING_NAME_VEHICLENEXTSEAT = "Next Seat";
2	BINDING_NAME_VEHICLEPREVSEAT = "Previous Seat";
2	BIND_ENCHANT = "Enchanting this item will bind it to you.";
2	BIND_KEY_TO_COMMAND = "Press Key to Bind to Command -> %s";
2	BIND_ZONE_DISPLAY = "You are bound in %s."; -- The zone name where your character is bound
2	BLIZZARD_COMBAT_LOG_MENU_BOTH = "Show everything involving %s?";
2	BLIZZARD_COMBAT_LOG_MENU_EVERYTHING = "Show everything";
2	BLIZZARD_COMBAT_LOG_MENU_INCOMING = "What happened to %s?";
2	BLIZZARD_COMBAT_LOG_MENU_OUTGOING = "What did %s do?";
2	BLIZZARD_COMBAT_LOG_MENU_OUTGOING_ME = "What did %s do to you?";
2	BLIZZARD_COMBAT_LOG_MENU_RESET = "Reset";
2	BLIZZARD_COMBAT_LOG_MENU_REVERT = "Revert to Last Filter";
2	BLIZZARD_COMBAT_LOG_MENU_SAVE = "Save as a new filter";
2	BLIZZARD_COMBAT_LOG_MENU_SPELL_HIDE = "Hide messages like this one.";
2	BLIZZARD_COMBAT_LOG_MENU_SPELL_LINK = "Link %s to chat.";
2	BLIZZARD_COMBAT_LOG_MENU_SPELL_TYPE_HEADER = "Message Types";
2	BLOCK = "Block"; -- Block an attack
2	BLOCK_CHANCE = "Block Chance";
2	BLOCK_TRADES = "Block Trades";
2	BLOCK_TRAILER = " (%d blocked)"; -- Appended to attack strings in the combat log when damage is blocked. (NOTE SPACE AT BEGINNING)
2	BLUE_GEM = "Blue";
2	BONUS_DAMAGE = "Bonus Damage";
2	BONUS_HEALING = "Bonus Healing";
2	BONUS_HEALING_TOOLTIP = "Increases your healing by up to %d";
2	BONUS_HONOR = "Bonus honor:";
2	BONUS_TALENTS = "Bonus talents:";
2	BOSS = "Boss";
2	BREATH_LABEL = "Breath"; -- Used as the label for the breath status bar
2	BROWSE = "Browse";
2	BROWSE_AUCTIONS = "Browse Auctions";
2	BROWSE_NO_RESULTS = "No items found";
2	BROWSE_SEARCH_TEXT = "Choose search criteria and press \"Search\"";
2	BUFFERING = "Buffering";
2	BUFFER_DOUBLE = "Double";
2	BUG_BUTTON = "Bugs & Suggestions";
2	BUG_CATEGORY1 = "Character Classes";
2	BUG_CATEGORY2 = "Outdoor Zones";
2	BUG_CATEGORY3 = "Dungeons";
2	BUG_CATEGORY4 = "Cities";
2	BUG_CATEGORY5 = "User Interface";
2	BUG_CATEGORY6 = "Monsters - Balance/Abilities";
2	BUG_CATEGORY7 = "Monsters - Placement";
2	BUG_CATEGORY8 = "Quests & Story";
2	BUG_CATEGORY9 = "Art";
2	BUG_CATEGORY10 = "Sound";
2	BUG_CATEGORY11 = "Items";
2	BUG_CATEGORY12 = "Tradeskills";
2	BUG_CATEGORY13 = "Miscellaneous";
2	BUG_CATEGORY14 = "Player vs. Player";
2	BUG_CATEGORY15 = "Language Translation";
2	BUG_CATEGORY_CHOOSE = "--> Please Choose a Category";
2	BUG_CATEGORY_ERROR = "You must choose a category to submit your bug/suggestion.";
2	BUG_SUBMITTED = "Bug submitted";
2	BUG_SUBMIT_FAILED = "Bug submission failed";
2	BUILDING_DAMAGE = "Siege";
2	BUILDING_DAMAGE_COMBATLOG_TOOLTIP = "Show messages when a spell or ability deals damage to a destructible building.";
2	BUILDING_HEAL = "Repairs";
2	BUILDING_HEAL_COMBATLOG_TOOLTIP = "Show messages when a spell or ability repairs a building.";
2	BUYBACK = "Buyback";
2	BUYBACK_THIS_ITEM = "Buy Back This Item";
2	BUYOUT = "Buyout";
2	BUYOUT_AUCTION_CONFIRMATION = "Buyout auction for:";
2	BUYOUT_COST = "Buyout";
2	BUYOUT_PRICE = "Buyout Price";
2	BUY_GUILDBANK_TAB = "Buy New Guild Bank Tab";
2	BY_SOURCE = "By Source";
2	BY_SOURCE_COMBATLOG_TOOLTIP = "Line color based on caster.";
2	BY_TARGET = "By Target";
2	BY_TARGET_COMBATLOG_TOOLTIP = "Line color based on target.";
2	CALENDAR_ACCEPT_INVITATION = "Accept Invitation";
2	CALENDAR_ANNOUNCEMENT_CREATEDBY_PLAYER = "Created by %s"; -- %s=player name
2	CALENDAR_ANNOUNCEMENT_CREATEDBY_YOURSELF = "This is your announcement";
2	CALENDAR_AUTO_APPROVE = "Auto Approve Members";
2	CALENDAR_COPY_EVENT = "Copy Event";
2	CALENDAR_CREATE = "Create";
2	CALENDAR_CREATE_ANNOUNCEMENT = "Create Announcement";
2	CALENDAR_CREATE_ARENATEAM_EVENT = "Create Arena Team Event";
2	CALENDAR_CREATE_EVENT = "Create Event";
2	CALENDAR_CREATE_GUILD_ANNOUNCEMENT = "Create Guild Announcement";
2	CALENDAR_CREATE_GUILD_EVENT = "Create Guild Event";
2	CALENDAR_DECLINE_INVITATION = "Decline Invitation";
2	CALENDAR_DELETE_EVENT = "Delete Event";
2	CALENDAR_DELETE_EVENT_CONFIRM = "Are you sure you want to delete this event?";
2	CALENDAR_EDIT_ANNOUNCEMENT = "Edit Announcement";
2	CALENDAR_EDIT_EVENT = "Edit Event";
2	CALENDAR_ERROR = "%s";
2	CALENDAR_ERROR_ALREADY_INVITED_TO_EVENT_S = "%s has already been invited.";
2	CALENDAR_ERROR_ARENA_EVENTS_EXCEEDED = "Your arena team has reached the limit of created events.";
2	CALENDAR_ERROR_CREATEDATE_AFTER_MAX = "You cannot create events after %2$s %4$d."; -- 1=weekdayName 2=monthName 3=day 4=year 5=month
2	CALENDAR_ERROR_CREATEDATE_BEFORE_TODAY = "You cannot create events before today.";
2	CALENDAR_ERROR_DELETE_CREATOR_FAILED = "You cannot remove the creator of the event.";
2	CALENDAR_ERROR_EVENTS_EXCEEDED = "You have reached your limit of %d |4created event:created events."; -- %d=max number of created events
2	CALENDAR_ERROR_EVENT_INVALID = "Event not found.";
2	CALENDAR_ERROR_EVENT_LOCKED = "This event is locked.";
2	CALENDAR_ERROR_EVENT_PASSED = "This event has already occured.";
2	CALENDAR_ERROR_EVENT_THROTTLED = "The speed that events can be created is limited, please wait to create another event."; -- This is sent if the user somehow is able to create too many events per second.
2	CALENDAR_ERROR_EVENT_TIME_PASSED = "The time for this event has already passed.";
2	CALENDAR_ERROR_EVENT_WRONG_SERVER = "You cannot create events on this server.";
2	CALENDAR_ERROR_GUILD_EVENTS_EXCEEDED = "Your guild has reached the limit of %d |4created event:created events."; -- %d=max number of created events
2	CALENDAR_ERROR_IGNORED = "%s is ignoring you.";
2	CALENDAR_ERROR_INTERNAL = "Internal Calendar Error.";
2	CALENDAR_ERROR_INVALID_DATE = "Enter a valid date.";
2	CALENDAR_ERROR_INVALID_TIME = "Enter a valid time.";
2	CALENDAR_ERROR_INVITES_DISABLED = "You cannot invite players to this event.";
2	CALENDAR_ERROR_INVITES_EXCEEDED = "You cannot invite more than %d |4player:players; to this event."; -- %d=max number of invites
2	CALENDAR_ERROR_INVITE_THROTTLED = "The number of invites that can be sent is limited, please wait to send another invite."; -- This is sent if the user somehow is able to send too many invites per second.
2	CALENDAR_ERROR_INVITE_WRONG_SERVER = "You cannot invite players from another server.";
2	CALENDAR_ERROR_NEEDS_TITLE = "Enter a title.";
2	CALENDAR_ERROR_NOT_ALLIED = "You cannot invite players from the opposing alliance.";
2	CALENDAR_ERROR_NOT_INVITED = "You are not invited to this event.";
2	CALENDAR_ERROR_NO_INVITE = "Invite not found.";
2	CALENDAR_ERROR_OTHER_INVITES_EXCEEDED = "%s already has the maximum number of events. They need to remove one to be invited to another.";
2	CALENDAR_ERROR_PERMISSIONS = "You don't have permission to do that.";
2	CALENDAR_ERROR_RESTRICTED_LEVEL = "You need to have at least a level 20 character on your account.";
2	CALENDAR_ERROR_SELF_INVITES_EXCEEDED = "Maximum number of invites reached. Remove an old event to add an additional one.";
2	CALENDAR_EVENTNAME_FORMAT_END = "%s Ends"; -- %s = Event Name
2	CALENDAR_EVENTNAME_FORMAT_RAID_LOCKOUT = "%s Unlocks"; -- %s = Raid Name
2	CALENDAR_EVENTNAME_FORMAT_RAID_RESET = "%s Resets"; -- %s = Raid Name
2	CALENDAR_EVENTNAME_FORMAT_START = "%s Begins"; -- %s = Event Name
2	CALENDAR_EVENT_ALARM_MESSAGE = "%s begins in 15 minutes."; -- Alerts the player that an event they are invited to begins soon. %s = event title
2	CALENDAR_EVENT_CREATORNAME = "Created by %s";
2	CALENDAR_EVENT_DESCRIPTION = "Description";
2	CALENDAR_EVENT_NAME = "Name";
2	CALENDAR_EVENT_PICKER_TITLE = "Select an Event";
2	CALENDAR_EVENT_REMOVED_MAIL_BODY = "%s cancelled %s. (%s)"; -- Body text for mail sent when an event is removed.
2	CALENDAR_EVENT_REMOVED_MAIL_SUBJECT = "%s cancelled."; -- Subject header for mail sent when an event is removed.
2	CALENDAR_FILTERS = "Filters";
2	CALENDAR_FILTER_BATTLEGROUND = "Battleground Holidays"; -- Description of flag in the Player Calendar UI.
2	CALENDAR_FILTER_DARKMOON = "Darkmoon Faire"; -- Description of flag in the Player Calendar UI.
2	CALENDAR_FILTER_RAID_LOCKOUTS = "Active Raid Lockouts"; -- Description of flag in the Player Calendar UI.
2	CALENDAR_FILTER_RAID_RESETS = "Raid Resets"; -- Description of flag in the Player Calendar UI.
2	CALENDAR_FILTER_WEEKLY_HOLIDAYS = "Weekly Holidays"; -- Description of flag in the Player Calendar UI.
2	CALENDAR_INVITEDBY_PLAYER = "Invited by %s"; -- %s=player name
2	CALENDAR_INVITEDBY_YOURSELF = "This is your event";
2	CALENDAR_INVITELIST_CLEARMODERATOR = "Remove Moderator Status";
2	CALENDAR_INVITELIST_CREATORNAME = "%s (Creator)"; -- %s = player name
2	CALENDAR_INVITELIST_INVITETORAID = "Invite to Party or Raid";
2	CALENDAR_INVITELIST_MODERATORNAME = "%s (Moderator)"; -- %s = player name
2	CALENDAR_INVITELIST_SETINVITESTATUS = "Set Invite Status";
2	CALENDAR_INVITELIST_SETMODERATOR = "Grant Moderator Status";
2	CALENDAR_INVITE_ALL = "Invite All";
2	CALENDAR_INVITE_CONFIRMED = "Invite Confirmed/Accepted";
2	CALENDAR_INVITE_LABEL = "Who do you want to invite?";
2	CALENDAR_INVITE_MEMBERS = "Invite Members"; -- Text for the button that invites event invitees to a party or raid.
2	CALENDAR_INVITE_PLAYER = "Invite Player";
2	CALENDAR_LOCK_EVENT = "Lock Event";
2	CALENDAR_MASSINVITE_ARENA_HELP = "Invite arena team members:";
2	CALENDAR_MASSINVITE_GUILD_HELP = "Invite guild members who meet the following conditions:";
2	CALENDAR_MASSINVITE_GUILD_MINRANK = "Minimum Rank";
2	CALENDAR_MASS_INVITE = "Mass Invite";
2	CALENDAR_PASTE_EVENT = "Paste Event";
2	CALENDAR_PLAYER_NAME = "Player Name";
2	CALENDAR_RAID_LOCKOUT_DESCRIPTION = "Your %1$s instance unlocks at %2$s."; -- 1=name 2=formatted time
2	CALENDAR_RAID_RESET_DESCRIPTION = "%1$s resets at %2$s."; -- 1=name 2=formatted time
2	CALENDAR_REMOVE_INVITATION = "Remove Invitation";
2	CALENDAR_REPEAT_BIWEEKLY = "Biweekly";
2	CALENDAR_REPEAT_MONTHLY = "Monthly";
2	CALENDAR_REPEAT_NEVER = "Never";
2	CALENDAR_REPEAT_WEEKLY = "Weekly";
2	CALENDAR_SET_DESCRIPTION_LABEL = "Set the calendar event description:";
2	CALENDAR_STATUS_ACCEPTED = "Accepted";
2	CALENDAR_STATUS_CONFIRMED = "Confirmed";
2	CALENDAR_STATUS_DECLINED = "Declined";
2	CALENDAR_STATUS_INVITED = "Invited";
2	CALENDAR_STATUS_OUT = "Out";
2	CALENDAR_STATUS_STANDBY = "Standby";
2	CALENDAR_TEXTURE_PICKER_TITLE_DUNGEON = "Select a Dungeon";
2	CALENDAR_TEXTURE_PICKER_TITLE_RAID = "Select a Raid";
2	CALENDAR_TOOLTIP_AUTOAPPROVE = "If checked, invitees whom respond to this event will have their status approved automatically; otherwise, you will have to approve them manually.";
2	CALENDAR_TOOLTIP_AVAILABLEBUTTON = "Sets your status to Accepted for this event.";
2	CALENDAR_TOOLTIP_DECLINEBUTTON = "Sets your status to Declined for this event.";
2	CALENDAR_TOOLTIP_INVITEMEMBERS_BUTTON_PARTY = "Invite Accepted and Confirmed players to your Party.";
2	CALENDAR_TOOLTIP_INVITEMEMBERS_BUTTON_RAID = "Invite Accepted and Confirmed players to your Raid.";
2	CALENDAR_TOOLTIP_INVITE_TOTALS = "Confirmed/Accepted Invites";
2	CALENDAR_TOOLTIP_LOCKEVENT = "If checked, invitees will be unable to respond to this event.";
2	CALENDAR_TOOLTIP_MASSINVITE = "A Mass Invite will populate your invite list based on a filter.|n|nNOTE: A Mass Invite clears your current invite list.";
2	CALENDAR_TOOLTIP_REMOVEBUTTON = "Remove this event from your Calendar.";
2	CALENDAR_TYPE_DUNGEON = "Dungeon";
2	CALENDAR_TYPE_MEETING = "Meeting";
2	CALENDAR_TYPE_OTHER = "Other";
2	CALENDAR_TYPE_PVP = "PvP";
2	CALENDAR_TYPE_RAID = "Raid";
2	CALENDAR_UPDATE = "Update";
2	CALENDAR_VIEW_ANNOUNCEMENT = "View Announcement";
2	CALENDAR_VIEW_EVENT = "View Event";
2	CALENDAR_VIEW_EVENTTITLE_LOCKED = "|cff7f7f7f%s|r |cffffd200(Locked)|r"; -- %s is the name of the event. Locked means you cannot RSVP to the event.
2	CALENDAR_VIEW_EVENTTYPE = "%1$s - %2$s"; -- 1=event type name 2=icon name
2	CALENDAR_VIEW_EVENT_REMOVE = "Remove";
2	CALENDAR_VIEW_EVENT_SETSTATUS = "Set your status:";
2	CALIBRATION_TEXT = "Each of the 21 gray bars below should be distinct from one another. Adjust the gamma slider until you can distinguish between each shade of gray. If using the slider alone is not enough to achieve this, adjust your monitor's brightness and contrast settings until satisfied.";
2	CAMERA_ALWAYS = "Always";
2	CAMERA_FOLLOWING_STYLE = "Camera Following Style";
2	CAMERA_LABEL = "Camera";
2	CAMERA_LOCKED = "Locked";
2	CAMERA_MODE = "Detach Camera";
2	CAMERA_NEVER = "Never";
2	CAMERA_SMART = "Smart";
2	CAMERA_SUBTEXT = "These options allow you to modify the camera's behavior inside the game.";
2	CAMP_NOW = "Logout now"; -- Gives the time in minutes/seconds until you logout
2	CAMP_TIMER = "%d %s until logout"; -- Gives the time in minutes/seconds until you logout
2	CANCEL = "Cancel"; -- Generic "cancel"
2	CANCEL_AUCTION = "Cancel Auction";
2	CANCEL_AUCTION_CONFIRMATION = "You will lose your initial deposit by canceling this auction.";
2	CANCEL_AUCTION_CONFIRMATION_MONEY = "Canceling this auction will cost you your deposit and:";
2	CANT_AFFORD_ITEM = "You can't afford that."; -- The player tried to buy an item he couldn't afford
2	CANT_USE_ITEM = "You can't use that item."; -- The player tried to use an item he doesn't have requisites for
2	CAN_BIND_PTT = "Press Push-to-Talk button";
2	CAPSLOCK_KEY_TEXT = "Capslock";
2	CASH_ON_DELIVERY = "C.O.D.";
2	CAST_WHILE_MOVING = "%s Failed: Cannot cast while moving."; -- The player moved while casting a spell
2	CATEGORIES = "Categories";
2	CATEGORY = "Category"; -- generic "category"
2	CHANCE_TO_BLOCK = "%.2f%% chance to block";
2	CHANCE_TO_CRIT = "%.2f%% chance to crit";
2	CHANCE_TO_DODGE = "%.2f%% chance to dodge";
2	CHANCE_TO_PARRY = "%.2f%% chance to parry";
2	CHANGE_INSTANCE = "Change Instance";
2	CHANGE_MACRO_NAME_ICON = "Change Name/Icon";
2	CHANNEL = "Channel";
2	CHANNELING = "Channeling"; -- Channeling tag for the channeling bar
2	CHANNELPULLOUT_OPACITY_LABEL = "Change Opacity"; -- Option in the dropdown menu for the Channel Roster pullout that lets you change its opacity.
2	CHANNELPULLOUT_OPTIONS_LABEL = "Channel Pullout Options"; -- Title for mouseover tooltip for the Channel Pullout frame.
2	CHANNELS = "Channels";
2	CHANNEL_CATEGORY_CUSTOM = "Custom";
2	CHANNEL_CATEGORY_GROUP = "Group";
2	CHANNEL_CATEGORY_WORLD = "World";
2	CHANNEL_CHANNEL_NAME = "Channel Name";
2	CHANNEL_INVITE = "Who would you like to invite to %s?";
2	CHANNEL_JOIN_CHANNEL = "Join a Channel";
2	CHANNEL_NEW_CHANNEL = "New Channel";
2	CHANNEL_PASSWORD = "Enter a password for %s.";
2	CHANNEL_ROSTER = "Channel Roster"; -- Title for the floating roster of members in a voice chat session
2	CHARACTER = "Character"; -- Generic "character", as is the player's character
2	CHARACTER_BUTTON = "Character Info";
2	CHARACTER_INFO = "Character Info"; -- Screen that displays all of a character's information
2	CHARACTER_KEY_BINDINGS = "Key Bindings for %s"; -- Title text for the keybinding ui interface.  %s is the player's name
2	CHARACTER_POINTS1_COLON = "Talent Points:"; -- Character's character points
2	CHARACTER_POINTS2_COLON = "Skill Points:"; -- Character's skill points
2	CHARACTER_POINTS_CHANGED = "Character Points Changed";
2	CHARACTER_SHADOWS = "Character Shadows";
2	CHARACTER_SPECIFIC_KEYBINDINGS = "Character Specific Key Bindings";
2	CHARACTER_SPECIFIC_KEYBINDING_TOOLTIP = "Click this to toggle between general key bindings and key bindings specific to this character.";
2	CHARACTER_SPECIFIC_MACROS = "%s Specific Macros"; -- Title for character specific macros %s is the player's name
2	CHAT = "Chat";
2	CHATCONFIG_HEADER = "%s Config"; -- Template for the header of the chat configuration screen
2	CHATLOGDISABLED = "Chat logging disabled.";
2	CHATLOGENABLED = "Chat being logged to Logs\\WoWChatLog.txt";
2	CHAT_AFK_GET = "%s is Away From Keyboard:\32";
2	CHAT_ANNOUNCE = "Announce";
2	CHAT_ANNOUNCEMENTS_OFF_NOTICE = "|Hchannel:%d|h[%s]|h Channel announcements disabled by %s.";
2	CHAT_ANNOUNCEMENTS_ON_NOTICE = "|Hchannel:%d|h[%s]|h Channel announcements enabled by %s.";
2	CHAT_AUTO_JOIN = "Auto Join";
2	CHAT_BAN = "Ban";
2	CHAT_BANNED_NOTICE = "[%s] You are banned from that channel.";
2	CHAT_BATTLEGROUND_GET = "|Hchannel:Battleground|h[Battleground]|h %s:\32";
2	CHAT_BATTLEGROUND_LEADER_GET = "|Hchannel:Battleground|h[Battleground Leader]|h %s:\32";
2	CHAT_BATTLEGROUND_SEND = "Battleground:\32";
2	CHAT_BUBBLES_TEXT = "Chat Bubbles";
2	CHAT_CHANNELS = "Chat Channels";
2	CHAT_CHANNEL_GET = "%s:\32";
2	CHAT_CHANNEL_JOIN_GET = "%s joined channel."; -- another player joined
2	CHAT_CHANNEL_LEAVE_GET = "%s left channel."; -- another player left
2	CHAT_CHANNEL_LIST_GET = "|Hchannel:%d|h[%s]|h\32"; -- Channel user list, user list is the "message", this is the channel name.
2	CHAT_CHANNEL_OWNER_NOTICE = "|Hchannel:%d|h[%s]|h Channel owner is %s.";
2	CHAT_CHANNEL_SEND = "[%d. %s]:\32";
2	CHAT_COMBAT_MISC_INFO_GET = "";
2	CHAT_CONFIGURATION = "Settings";
2	CHAT_DEFAULT = "Default";
2	CHAT_DEFAULTS = "Chat Defaults";
2	CHAT_DEMOTE = "Demote";
2	CHAT_DND_GET = "%s does not wish to be disturbed:\32";
2	CHAT_EMOTE_GET = "%s\32"; -- Just the player's name for an emote, as in "Pimlet jumps up and down"
2	CHAT_EMOTE_SEND = "%s\32"; -- Just the player's name for an emote, as in "Pimlet jumps up and down"
2	CHAT_EMOTE_UNKNOWN = "makes some strange gestures.";
2	CHAT_FILTERED = "Unable to send chat to %s because your message contained reserved words.";
2	CHAT_FLAG_AFK = "<AFK>";
2	CHAT_FLAG_DND = "<DND>";
2	CHAT_FLAG_GM = "<GM>";
2	CHAT_GUILD_DEMOTE_SEND = "Demote"; -- Demote player within your guild
2	CHAT_GUILD_GET = "|Hchannel:Guild|h[Guild]|h %s:\32"; -- Guild message from player %s
2	CHAT_GUILD_INVITE_SEND = "Invite to guild: "; -- Invite a player to your guild
2	CHAT_GUILD_LEADER_SEND = "Set guild leader: "; -- Set player as the new guild leader
2	CHAT_GUILD_MOTD_SEND = "Guild MOTD: "; -- Set the guild MOTD
2	CHAT_GUILD_PROMOTE_SEND = "Promote "; -- Promote player within your guild
2	CHAT_GUILD_SEND = "Guild:\32"; -- Chat message to your guild
2	CHAT_GUILD_UNINVITE_SEND = "Remove from guild: "; -- Remove player from your guild
2	CHAT_HELP_TEXT_LINE1 = "Chat commands:";
2	CHAT_HELP_TEXT_LINE2 = "/#, /c, /csay - Send text to channel # (E.G. /1 Hi!)";
2	CHAT_HELP_TEXT_LINE3 = "/chat, /chathelp - This help";
2	CHAT_HELP_TEXT_LINE4 = "/join, /channel, /chan - Join a channel";
2	CHAT_HELP_TEXT_LINE5 = "/leave, /chatleave, /chatexit [channel] - Leave a channel (or all channels)";
2	CHAT_HELP_TEXT_LINE6 = "/chatlist, /chatwho, /chatinfo [channel] - List channels, or channel members";
2	CHAT_HELP_TEXT_LINE7 = "/password, /pass <channel> <password> - Change password";
2	CHAT_HELP_TEXT_LINE8 = "/owner <channel> [player] - Display or change channel owner";
2	CHAT_HELP_TEXT_LINE9 = "/mod, /moderator, /unmod, /unmoderator <channel> <player> - change a player's moderator status";
2	CHAT_HELP_TEXT_LINE10 = "/mute, /squelch, /unvoice, /unmute, /unsquelch, /voice <channel> <player> - change a player's permission";
2	CHAT_HELP_TEXT_LINE11 = "/cinvite, /chatinvite <channel> <player> - invite a player to a channel";
2	CHAT_HELP_TEXT_LINE12 = "/ckick <channel> <player> - kick a player off a channel";
2	CHAT_HELP_TEXT_LINE13 = "/ban, /unban <channel> <player> - ban/unban a player from a channel";
2	CHAT_HELP_TEXT_LINE14 = "/announce, /ann <channel> - toggle join/leave announcements on a channel";
2	CHAT_HELP_TEXT_LINE15 = "/moderate <channel> - toggle moderation on a channel";
2	CHAT_HELP_TEXT_LINE16 = "/afk, /dnd - Set your Away From Keyboard or Do Not Disturb flags";
2	CHAT_IGNORED = "%s is ignoring you.";
2	CHAT_INVALID_NAME_NOTICE = "Invalid channel name";
2	CHAT_INVITE_NOTICE = "%2$s has invited you to join the channel '%1$s'.";
2	CHAT_INVITE_NOTICE_POPUP = "%2$s has invited you to join the channel '%1$s'.";
2	CHAT_INVITE_SEND = "Invite "; -- Invite another player to a group
2	CHAT_INVITE_WRONG_FACTION_NOTICE = "Target is in the wrong alliance for %s.";
2	CHAT_JOIN = "Join";
2	CHAT_JOIN_HELP = "Type /join <channelname> [password] to create a channel or join an existing one.";
2	CHAT_KICK = "Kick";
2	CHAT_LABEL = "Chat";
2	CHAT_LEAVE = "Leave";
2	CHAT_LOCKED_TEXT = "Lock Chat Settings";
2	CHAT_MODERATE = "Moderate";
2	CHAT_MODERATION_OFF_NOTICE = "|Hchannel:%d|h[%s]|h Channel moderation disabled by %s.";
2	CHAT_MODERATION_ON_NOTICE = "|Hchannel:%d|h[%s]|h Channel moderation enabled by %s.";
2	CHAT_MONSTER_EMOTE_GET = ""; -- The emote text has %s embedded in it, so no formatting is necessary here.
2	CHAT_MONSTER_PARTY_GET = "|Hchannel:Party|h[Party]|h %s:\32"; -- Party message from NPC\Monster %s
2	CHAT_MONSTER_SAY_GET = "%s says:\32"; -- Monster chat form monster named %s
2	CHAT_MONSTER_WHISPER_GET = "%s whispers:\32"; -- Whisper from NPC\Monster %s
2	CHAT_MONSTER_YELL_GET = "%s yells:\32"; -- Monster yell form monster named %s
2	CHAT_MSG_ACHIEVEMENT = "Achievement Announce";
2	CHAT_MSG_AFK = "AFK";
2	CHAT_MSG_BATTLEGROUND = "Battleground";
2	CHAT_MSG_BATTLEGROUND_LEADER = "Battleground Leader";
2	CHAT_MSG_BG_SYSTEM_ALLIANCE = "Alliance zone message";
2	CHAT_MSG_BG_SYSTEM_HORDE = "Horde zone message";
2	CHAT_MSG_BG_SYSTEM_NEUTRAL = "Neutral zone message";
2	CHAT_MSG_CHANNEL_LIST = "Channel List";
2	CHAT_MSG_COMBAT_HONOR_GAIN = "Honor Gain";
2	CHAT_MSG_EMOTE = "Emote";
2	CHAT_MSG_FILTERED = "Chat Filtered Message";
2	CHAT_MSG_GUILD = "Guild";
2	CHAT_MSG_GUILD_ACHIEVEMENT = "Guild Announce";
2	CHAT_MSG_LOOT = "Item Loot";
2	CHAT_MSG_MONEY = "Money Loot";
2	CHAT_MSG_MONSTER_EMOTE = "Creature Emote";
2	CHAT_MSG_MONSTER_PARTY = "Creature Party";
2	CHAT_MSG_MONSTER_SAY = "Creature Say";
2	CHAT_MSG_MONSTER_WHISPER = "Creature Whisper";
2	CHAT_MSG_MONSTER_YELL = "Creature Yell";
2	CHAT_MSG_OFFICER = "Officer";
2	CHAT_MSG_PARTY = "Party";
2	CHAT_MSG_RAID = "Raid";
2	CHAT_MSG_RAID_BOSS_EMOTE = "Raid Boss Emote";
2	CHAT_MSG_RAID_LEADER = "Raid Leader";
2	CHAT_MSG_RAID_WARNING = "Raid Warning";
2	CHAT_MSG_RESTRICTED = "Restricted";
2	CHAT_MSG_SAY = "Say";
2	CHAT_MSG_SKILL = "Skill";
2	CHAT_MSG_SYSTEM = "System";
2	CHAT_MSG_TEXT_EMOTE = "Text Emote";
2	CHAT_MSG_WHISPER = "Incoming Whisper";
2	CHAT_MSG_WHISPER_INFORM = "Whisper";
2	CHAT_MSG_YELL = "Yell";
2	CHAT_MUTED_NOTICE = "|Hchannel:%d|h[%s]|h You do not have permission to speak.";
2	CHAT_NAME_TEMPLATE = "Chat %d"; -- Default names for chat windows
2	CHAT_NOT_IN_AREA_NOTICE = "[%s] You are not in the correct area for this channel."; -- The user is trying to send a chat to a zone specific channel, and they're not physically in that zone.
2	CHAT_NOT_IN_LFG_NOTICE = "[%s] You must be queued in looking for group before joining this channel."; -- The user must be in the looking for group system to join LFG chat channels.
2	CHAT_NOT_MEMBER_NOTICE = "Not on channel %s.";
2	CHAT_NOT_MODERATED_NOTICE = "%s is not moderated";
2	CHAT_NOT_MODERATOR_NOTICE = "Not a moderator of |Hchannel:%d|h[%s]|h.";
2	CHAT_NOT_OWNER_NOTICE = "|Hchannel:%d|h[%s]|h You are not the channel owner.";
2	CHAT_OFFICER_GET = "|Hchannel:o|h[Officer]|h %s:\32"; -- Officer chat from player %s. Replace o with whatever slash command starts officer chat
2	CHAT_OFFICER_SEND = "Officer:\32"; -- Chat message to officers in your guild
2	CHAT_OPTIONS_LABEL = "Chat Options";
2	CHAT_OWNER = "Make Owner";
2	CHAT_OWNER_CHANGED_NOTICE = "|Hchannel:%d|h[%s]|h Owner changed to %s.";
2	CHAT_PARTY_GET = "|Hchannel:Party|h[Party]|h %s:\32"; -- Party message from player %s
2	CHAT_PARTY_SEND = "Party:\32"; -- Chat message to your party
2	CHAT_PASSWORD = "Set Password";
2	CHAT_PASSWORD_CHANGED_NOTICE = "|Hchannel:%d|h[%s]|h Password changed by %s.";
2	CHAT_PASSWORD_NOTICE_POPUP = "Please enter a password for '%1$s'.";
2	CHAT_PLAYER_ALREADY_MEMBER_NOTICE = "|Hchannel:%d|h[%s]|h Player %s is already on the channel.";
2	CHAT_PLAYER_BANNED_NOTICE = "|Hchannel:%d|h[%s]|h Player %s banned by %s.";
2	CHAT_PLAYER_INVITED_NOTICE = "|Hchannel:%d|h[%s]|h You invited %s to join the channel";
2	CHAT_PLAYER_INVITE_BANNED_NOTICE = "|Hchannel:%d|h[%s]|h %s has been banned.";
2	CHAT_PLAYER_KICKED_NOTICE = "|Hchannel:%d|h[%s]|h Player %s kicked by %s.";
2	CHAT_PLAYER_NOT_BANNED_NOTICE = "|Hchannel:%d|h[%s]|h Player %s is not banned.";
2	CHAT_PLAYER_NOT_FOUND_NOTICE = "|Hchannel:%d|h[%s]|h Player %s was not found.";
2	CHAT_PLAYER_UNBANNED_NOTICE = "|Hchannel:%d|h[%s]|h Player %s unbanned by %s.";
2	CHAT_PROMOTE = "Promote";
2	CHAT_PROMOTE_SEND = "Promote "; -- Promote another player to leader of the party
2	CHAT_RAID_BOSS_EMOTE_GET = "";
2	CHAT_RAID_BOSS_WHISPER_GET = "";
2	CHAT_RAID_GET = "|Hchannel:raid|h[Raid]|h %s:\32"; -- Raid message from player %s
2	CHAT_RAID_LEADER_GET = "|Hchannel:raid|h[Raid Leader]|h %s:\32";
2	CHAT_RAID_SEND = "Raid:\32"; -- Chat message to your raid
2	CHAT_RAID_WARNING_GET = "[Raid Warning] %s:\32";
2	CHAT_RAID_WARNING_SEND = "Raid Warning:\32";
2	CHAT_RESTRICTED = "A trial account may only send whispers to characters that have you on their friends list.";
2	CHAT_SAY_GET = "%s says:\32"; -- Normal message from player %s
2	CHAT_SAY_SEND = "Say:\32"; -- Normal chat message
2	CHAT_SAY_UNKNOWN = "says something unintelligible.";
2	CHAT_SET_MODERATOR_NOTICE = "|Hchannel:%d|h[%s]|h Moderation privileges given to %s.";
2	CHAT_SET_SPEAK_NOTICE = "|Hchannel:%d|h[%s]|h Voice permission given to %s.";
2	CHAT_SET_VOICE_NOTICE = "|Hchannel:%d|h[%s]|h Chat permission given to %s.";
2	CHAT_SILENCE = "Silence in Channel";
2	CHAT_SUSPENDED_NOTICE = "Left Channel: |Hchannel:%d|h[%s]|h ";
2	CHAT_THROTTLED_NOTICE = "|Hchannel:%d|h[%s]|h The number of messages that can be sent to this channel is limited, please wait to send another message.";
2	CHAT_UNINVITE_SEND = "Uninvite "; -- Kick a player out of your party
2	CHAT_UNSET_MODERATOR_NOTICE = "|Hchannel:%d|h[%s]|h Moderation privileges removed from %s.";
2	CHAT_UNSET_SPEAK_NOTICE = "|Hchannel:%d|h[%s]|h %s lost voice permission.";
2	CHAT_UNSET_VOICE_NOTICE = "|Hchannel:%d|h[%s]|h %s lost chat permission.";
2	CHAT_UNSILENCE = "Unsilence in Channel";
2	CHAT_VOICE = "Voice Chat";
2	CHAT_VOICE_OFF = "Disable Voice";
2	CHAT_VOICE_OFF_NOTICE = "|Hchannel:%d|h[%s]|h Channel voice disabled by %s.";
2	CHAT_VOICE_ON = "Enable Voice";
2	CHAT_VOICE_ON_NOTICE = "|Hchannel:%d|h[%s]|h Channel voice enabled by %s.";
2	CHAT_WHISPER_GET = "%s whispers:\32"; -- Whisper from player %s
2	CHAT_WHISPER_INFORM_GET = "To %s:\32"; -- A whisper already sent to player %s
2	CHAT_WHISPER_SEND = "Tell %s:\32"; -- Whisper to a particular player
2	CHAT_WRONG_FACTION_NOTICE = "Wrong alliance for %s.";
2	CHAT_WRONG_PASSWORD_NOTICE = "Wrong password for %s.";
2	CHAT_YELL_GET = "%s yells:\32"; -- Yelled message from player %s
2	CHAT_YELL_SEND = "Yell:\32"; -- Yell a message
2	CHAT_YELL_UNKNOWN = "yells at his team members.";
2	CHAT_YELL_UNKNOWN_FEMALE = "yells at her team members.";
2	CHAT_YOU_CHANGED_NOTICE = "Changed Channel: |Hchannel:%d|h[%s]|h";
2	CHAT_YOU_JOINED_NOTICE = "Joined Channel: |Hchannel:%d|h[%s]|h"; -- You joined
2	CHAT_YOU_LEFT_NOTICE = "Left Channel: |Hchannel:%d|h[%s]|h"; -- You left
2	CHESTSLOT = "Chest"; -- Chest slot
2	CHOOSE_BOX = "Choose a box:";
2	CHOOSE_STATIONERY = "Choose Stationery";
2	CHOSEN_FOR_GMSURVEY = "You have been chosen to fill out a GM survey.";
2	CINEMATIC_SUBTITLES = "Cinematic Subtitles";
2	CLASS = "Class";
2	CLASS_SKILLS = "%s Skills:"; -- Skills specific to the characters class
2	CLEARED_AFK = "You are no longer AFK.";
2	CLEARED_DND = "You are no longer marked DND.";
2	CLEAR_AFK = "Auto Clear AFK";
2	CLEAR_ALL = "Clear All";
2	CLEAR_FOCUS = "Clear Focus";
2	CLICK_CAMERA_STYLE = "Click-to-Move Camera Style";
2	CLICK_FOR_DETAILS = "Click for details";
2	CLICK_TO_ENTER_COMMENT = "Click here to enter a comment";
2	CLICK_TO_LEARN = "Click to learn skill"; -- Tooltip in the skill frame for learn skill buttons
2	CLICK_TO_MOVE = "Click-to-Move";
2	CLIENT_LOGOUT_ALERT = "Some of your settings will not take effect until you log out and log back into the game.";
2	CLIENT_RESTART_ALERT = "Some of your settings will not take effect until you restart the game.";
2	CLOSE = "Close";
2	CLOSES_IN = "Time Left";
2	CLOSE_CHAT_WINDOW = "Remove Window";
2	CLOSE_LOG = "Close Log"; -- Close the quest log
2	COD = "C.O.D."; -- Cash on delivery
2	COD_AMOUNT = "Cash on Delivery Amount:";
2	COD_CONFIRMATION = "Accepting this item will cost:";
2	COD_INSUFFICIENT_MONEY = "You do not have enough money to pay the C.O.D. charges.";
2	COD_PAYMENT = "COD Payment: %s"; -- %s is the subject of the original mail
2	COINPICKUP_CANCEL = "Cancel";
2	COLOR = "Color";
2	COLORIZE = "Colorize:";
2	COLORS = "Colors";
2	COLOR_BY_SCHOOL = "Color-by-School";
2	COLOR_PICKER = "Color Picker";
2	COMBAT = "Combat";
2	COMBATLOGDISABLED = "Combat logging disabled.";
2	COMBATLOGENABLED = "Combat being logged to Logs\\WoWCombatLog.txt";
2	COMBATLOG_DEFAULTS = "Combat Log Defaults";
2	COMBATLOG_DISHONORGAIN = "%s dies, dishonorable kill.";
2	COMBATLOG_FILTER_STRING_CUSTOM_UNIT = "Custom Unit";
2	COMBATLOG_FILTER_STRING_FRIENDLY_UNITS = "Friends";
2	COMBATLOG_FILTER_STRING_HOSTILE_PLAYERS = "Enemy Players";
2	COMBATLOG_FILTER_STRING_HOSTILE_UNITS = "Enemy Units";
2	COMBATLOG_FILTER_STRING_ME = "Me";
2	COMBATLOG_FILTER_STRING_MY_PET = "Pet";
2	COMBATLOG_FILTER_STRING_NEUTRAL_UNITS = "Neutral";
2	COMBATLOG_FILTER_STRING_UNKNOWN_UNITS = "Unknown";
2	COMBATLOG_HIGHLIGHT_ABILITY = "Ability";
2	COMBATLOG_HIGHLIGHT_DAMAGE = "Damage";
2	COMBATLOG_HIGHLIGHT_KILL = "Kill";
2	COMBATLOG_HIGHLIGHT_SCHOOL = "School";
2	COMBATLOG_HONORAWARD = "You have been awarded %d honor points.";
2	COMBATLOG_HONORGAIN = "%s dies, honorable kill Rank: %s (%d Honor Points)";
2	COMBATLOG_UNKNOWN_UNIT = "Something";
2	COMBATLOG_XPGAIN_EXHAUSTION1 = "%s dies, you gain %d experience. (%s exp %s bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION1_GROUP = "%s dies, you gain %d experience. (%s exp %s bonus, +%d group bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION1_RAID = "%s dies, you gain %d experience. (%s exp %s bonus, -%d raid penalty)";
2	COMBATLOG_XPGAIN_EXHAUSTION2 = "%s dies, you gain %d experience. (%s exp %s bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION2_GROUP = "%s dies, you gain %d experience. (%s exp %s bonus, +%d group bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION2_RAID = "%s dies, you gain %d experience. (%s exp %s bonus, -%d raid penalty)";
2	COMBATLOG_XPGAIN_EXHAUSTION4 = "%s dies, you gain %d experience. (%s exp %s penalty)";
2	COMBATLOG_XPGAIN_EXHAUSTION4_GROUP = "%s dies, you gain %d experience. (%s exp %s penalty, +%d group bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION4_RAID = "%s dies, you gain %d experience. (%s exp %s penalty, -%d raid penalty)";
2	COMBATLOG_XPGAIN_EXHAUSTION5 = "%s dies, you gain %d experience. (%s exp %s penalty)";
2	COMBATLOG_XPGAIN_EXHAUSTION5_GROUP = "%s dies, you gain %d experience. (%s exp %s penalty, +%d group bonus)";
2	COMBATLOG_XPGAIN_EXHAUSTION5_RAID = "%s dies, you gain %d experience. (%s exp %s penalty, -%d raid penalty)";
2	COMBATLOG_XPGAIN_FIRSTPERSON = "%s dies, you gain %d experience.";
2	COMBATLOG_XPGAIN_FIRSTPERSON_GROUP = "%s dies, you gain %d experience. (+%d group bonus)";
2	COMBATLOG_XPGAIN_FIRSTPERSON_RAID = "%s dies, you gain %d experience. (-%d raid penalty)";
2	COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED = "You gain %d experience.";
2	COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED_GROUP = "You gain %d experience. (+%d group bonus)";
2	COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED_RAID = "You gain %d experience. (-%d raid penalty)";
2	COMBATLOG_XPGAIN_QUEST = "You gain %d experience. (%s exp %s bonus)";
2	COMBATLOG_XPLOSS_FIRSTPERSON_UNNAMED = "You lose %d experience.";
2	COMBATTEXT_LABEL = "Combat Text";
2	COMBATTEXT_SUBTEXT = "These options allow you to configure the floating combat text which can be displayed in the center of the screen, making it easier to follow battles.";
2	COMBAT_ENEMY = "Combat Enemy";
2	COMBAT_ERROR = "Combat Error";
2	COMBAT_FACTION_CHANGE = "Reputation";
2	COMBAT_HONOR_GAIN = "Honor";
2	COMBAT_LABEL = "Combat";
2	COMBAT_LOG = "Combat Log";
2	COMBAT_LOG_MENU_BOTH = "Show everything involving %s?";
2	COMBAT_LOG_MENU_EVERYTHING = "Show Everything";
2	COMBAT_LOG_MENU_INCOMING = "What happened to %s?";
2	COMBAT_LOG_MENU_OUTGOING = "What did %s do?";
2	COMBAT_LOG_MENU_OUTGOING_ME = "What did %s do to you?";
2	COMBAT_LOG_MENU_REVERT = "Revert to Last Filter";
2	COMBAT_LOG_MENU_SAVE = "Save as a new filter";
2	COMBAT_LOG_MENU_SPELL_HIDE = "Hide messages like this one.";
2	COMBAT_LOG_MENU_SPELL_LINK = "Link %s to chat.";
2	COMBAT_LOG_MENU_SPELL_TYPE_HEADER = "Message Types";
2	COMBAT_LOG_UNIT_YOU_ENABLED = "1";
2	COMBAT_MESSAGES = "Combat Messages";
2	COMBAT_MISC = "Combat Misc";
2	COMBAT_MISC_INFO = "Misc Info";
2	COMBAT_PARTY = "Combat Party";
2	COMBAT_RATING_NAME1 = "Weapon Skill";
2	COMBAT_RATING_NAME10 = "Crit Rating"; -- Ranged crit rating
2	COMBAT_RATING_NAME11 = "Crit Rating"; -- Spell Crit Rating
2	COMBAT_RATING_NAME15 = "Resilience";
2	COMBAT_RATING_NAME2 = "Defense Rating";
2	COMBAT_RATING_NAME24 = "Expertise";
2	COMBAT_RATING_NAME3 = "Dodge Rating";
2	COMBAT_RATING_NAME4 = "Parry Rating";
2	COMBAT_RATING_NAME5 = "Block Rating";
2	COMBAT_RATING_NAME6 = "Hit Rating";
2	COMBAT_RATING_NAME7 = "Hit Rating"; -- Ranged hit rating
2	COMBAT_RATING_NAME8 = "Hit Rating"; -- Spell hit rating
2	COMBAT_RATING_NAME9 = "Crit Rating"; -- Melee crit rating
2	COMBAT_SELF = "Combat Self";
2	COMBAT_SUBTEXT = "These options affect your character's behaviors in combat, and allow you to change the way combat is displayed in the UI.";
2	COMBAT_TEXT_COMBO_POINTS = "<%d Combo |4Point:Points;>";
2	COMBAT_TEXT_FLOAT_MODE_LABEL = "Combat Text Float Mode";
2	COMBAT_TEXT_HONOR_GAINED = "Honor %s";
2	COMBAT_TEXT_LABEL = "Floating Combat Text";
2	COMBAT_TEXT_RUNE_BLOOD = "Blood Rune";
2	COMBAT_TEXT_RUNE_DEATH = "Death Rune";
2	COMBAT_TEXT_RUNE_FROST = "Frost Rune";
2	COMBAT_TEXT_RUNE_UNHOLY = "Unholy Rune";
2	COMBAT_TEXT_SCROLL_ARC = "Arc";
2	COMBAT_TEXT_SCROLL_DOWN = "Scroll Down";
2	COMBAT_TEXT_SCROLL_DOWN_TEXT = "Scroll Text Down";
2	COMBAT_TEXT_SCROLL_UP = "Scroll Up";
2	COMBAT_TEXT_SHOW_AURAS_TEXT = "Auras";
2	COMBAT_TEXT_SHOW_AURA_FADE_TEXT = "Fading Auras";
2	COMBAT_TEXT_SHOW_COMBAT_STATE_TEXT = "Combat State";
2	COMBAT_TEXT_SHOW_COMBO_POINTS_TEXT = "Combo Points";
2	COMBAT_TEXT_SHOW_DODGE_PARRY_MISS_TEXT = "Dodges/Parries/Misses";
2	COMBAT_TEXT_SHOW_ENERGIZE_TEXT = "Energy Gains";
2	COMBAT_TEXT_SHOW_FRIENDLY_NAMES_TEXT = "Friendly Healer Names";
2	COMBAT_TEXT_SHOW_HONOR_GAINED_TEXT = "Honor Gained";
2	COMBAT_TEXT_SHOW_LOW_HEALTH_MANA_TEXT = "Low Mana & Health";
2	COMBAT_TEXT_SHOW_PERIODIC_ENERGIZE_TEXT = "Periodic Energy Gains";
2	COMBAT_TEXT_SHOW_REACTIVES_TEXT = "Reactive Spells & Abilities";
2	COMBAT_TEXT_SHOW_REPUTATION_TEXT = "Reputation Changes";
2	COMBAT_TEXT_SHOW_RESISTANCES_TEXT = "Damage Reduction";
2	COMBAT_THREAT_DECREASE_0 = "Changed Target!";
2	COMBAT_THREAT_DECREASE_1 = "Changed Target!";
2	COMBAT_THREAT_DECREASE_2 = "Losing Threat";
2	COMBAT_THREAT_INCREASE_1 = "High Threat";
2	COMBAT_THREAT_INCREASE_3 = "Attacking You!";
2	COMBAT_XP_GAIN = "Experience";
2	COMBAT_ZONE = "(Combat Zone)";
2	COMMAND = "Command"; -- Command label for keybinding UI
2	COMMENT = "Comment";
2	COMMENTS_COLON = "Comments:";
2	COMPANIONS = "Companions";
2	COMPARE_ACHIEVEMENTS = "Compare Achievements"; -- Used in the target dropdown menu for comparing achievements
2	COMPLAINT_ADDED = "Complaint Registered.";
2	COMPLETE = "Complete"; -- Generic "complete"
2	COMPLETE_QUEST = "Complete Quest"; -- Give items to a quest giver to complete a quest
2	CONFIRM_ACCEPT_PVP_QUEST = "Accepting this quest will flag you for PvP as long as the quest is in your log.  Do you wish to accept?";
2	CONFIRM_ACCEPT_SOCKETS = "One or more gems will be destroyed by socketing. Do you really want to socket the new gem(s)?";
2	CONFIRM_BATTLEFIELD_ENTRY = "You are now eligible to enter %s, choose an action:";
2	CONFIRM_BINDER = "Do you want to make %s your new home?";
2	CONFIRM_BUY_BANK_SLOT = "Do you want to purchase a bank slot for:";
2	CONFIRM_BUY_GUILDBANK_TAB = "Do you want to purchase a Guild Bank tab for:";
2	CONFIRM_COMBAT_FILTER_DEFAULTS = "Do you really want to reset your filters to their default values?";
2	CONFIRM_COMBAT_FILTER_DELETE = "Do you really want to delete this filter?";
2	CONFIRM_COMPLETE_EXPENSIVE_QUEST = "Completing this quest requires the following amount of gold. Are you sure you want to complete this quest?";
2	CONFIRM_DELETING_CHARACTER_SPECIFIC_BINDINGS = "Really switch to general key bindings?  All key bindings specific to this character will be permanantly deleted.";
2	CONFIRM_GLYPH_PLACEMENT = "Are you sure you want to inscribe this glyph?  The existing glyph will be lost.";
2	CONFIRM_GUILD_DISBAND = "Do you really want to disband your guild?";
2	CONFIRM_GUILD_LEAVE = "Really leave %s?";
2	CONFIRM_GUILD_PROMOTE = "Really promote %s to Guildmaster?";
2	CONFIRM_LEAVE_QUEUE = "Are you sure you would like to leave the meeting stone queue?";
2	CONFIRM_LOOT_DISTRIBUTION = "You wish to assign %s to %s.  Is this correct?";
2	CONFIRM_LOSE_BINDING_CHANGES = "You will lose any unsaved changes if you switch between general and character specific key bindings.";
2	CONFIRM_PET_UNLEARN = "Do you want to unlearn all of your pet's skills? The cost will increase each time you do it.";
2	CONFIRM_PURCHASE_TOKEN_ITEM = "Are you sure you wish to exchange %s for the following item?";
2	CONFIRM_REMOVE_GLYPH = "Are you sure you want to remove %s? This glyph will be permanently destroyed.";
2	CONFIRM_RESET_INSTANCES = "Do you really want to reset all of your instances?";
2	CONFIRM_RESET_INTERFACE_SETTINGS = "Do you want to reset all user interface and addon settings to their defaults, or only the settings for this category or addon?"; -- Message presented to users when they press the Defaults button in the interface options window
2	CONFIRM_RESET_SETTINGS = "Do you want to reset all settings to their defaults? This will immediately apply all settings.";
2	CONFIRM_SUMMON = "%s wants to summon you to %s.  The spell will be cancelled in %d %s.";
2	CONFIRM_TALENT_WIPE = "Do you want to unlearn all of your talents?  This will unsummon any controlled pet and the cost will increase each time.";
2	CONFIRM_TEAM_KICK = "Really remove %s from %s?";
2	CONFIRM_TEAM_LEAVE = "Really leave %s?";
2	CONFIRM_TEAM_PROMOTE = "Really promote %s to Team Captain?";
2	CONFIRM_XP_LOSS = "If you find your corpse, you can resurrect for no penalty.  If I resurrect you all of your items will take 25%% durability damage (equipped and inventory) and you will be afflicted by %s of Resurrection Sickness.";
2	CONFIRM_XP_LOSS_AGAIN = "Remember, if you find your corpse there is no penalty.  Are you sure you want to incur %s of Resurrection Sickness and have all your items take 25%% durability damage?";
2	CONFIRM_XP_LOSS_AGAIN_NO_SICKNESS = "Remember, if you find your corpse there is no penalty.  Are you sure you want to have all your items take 25% durability damage?";
2	CONFIRM_XP_LOSS_NO_SICKNESS = "If you find your corpse, you can resurrect for no penalty.  If I resurrect you all of your items will take 25%% durability damage (equipped and inventory).";
2	CONTAINER_SLOTS = "%d Slot %s"; -- # of slots and bag type
2	CONTESTED_TERRITORY = "(Contested Territory)";
2	CONTINENT = "Continent"; -- Label for "Continent" field in the world map
2	CONTINUE = "Continue";
2	CONTROLS_LABEL = "Controls";
2	CONTROLS_SUBTEXT = "These are general gameplay related controls that affect how your character interacts with objects and other players in the game world.";
2	CONVERT_TO_RAID = "Convert To Raid";
2	COOLDOWN_ON_LEAVE_COMBAT = "(Cooldown Starts Upon Leaving Combat)";
2	COOLDOWN_REMAINING = "Cooldown remaining:";
2	COPPER_AMOUNT = "%d Copper"; -- Lowest value coin denomination
2	COPPER_AMOUNT_TEXTURE = "%d\124TInterface\\MoneyFrame\\UI-CopperIcon:%d:%d:2:0\124t";
2	COPY_FILTER = "Copy Filter";
2	COPY_NAME = "Copy Name";
2	CORPSE = "Corpse";
2	CORPSE_RED = "|cffff2020Corpse|r"; -- Generic "corpse" in red
2	CORPSE_TOOLTIP = "Corpse of %s"; -- Tooltip for corpses
2	COSTS_LABEL = "Cost:"; -- Character point and money costs of a skill or bank slot
2	CRAFT_IS_MAKEABLE = "Have Materials"; -- Text for the filter that hides craft items that cannot be made due to lack of components.
2	CRAFT_IS_MAKEABLE_TOOLTIP = "Only show recipes that you have the materials to make."; -- Tooltip for the crafting UI and the "is makeable" filter.
2	CREATE = "Create"; -- Create a trade skill item
2	CREATED_ITEM = "%s creates: %s."; -- The first %s is the player name, the other %s is the item name.
2	CREATED_ITEM_MULTIPLE = "%s creates: %sx%d."; -- The first %s is the player name, the other %s is the item name, and the %d is the quantity of items created.
2	CREATE_ALL = "Create All";
2	CREATE_AUCTION = "Create Auction";
2	CREATE_MACROS = "Create Macros"; -- Title for the MacroFrame
2	CREATURE = "Creature";
2	CREATURE_MESSAGES = "Creature Messages";
2	CRUSHING_TRAILER = " (crushing)"; -- Appended to crushing blows in the combat log. (NOTE SPACE AT BEGINNING)
2	CR_BLOCK_TOOLTIP = "Block Rating of %d adds %.2f%% Block\nYour block stops %d damage.";
2	CR_CRIT_MELEE_TOOLTIP = "Crit rating %d (+%.2f%% crit chance)";
2	CR_CRIT_RANGED_TOOLTIP = "Crit rating %d (+%.2f%% crit chance)";
2	CR_DODGE_TOOLTIP = "Dodge Rating of %d adds %.2f%% Dodge|n|cff888888(Before diminishing returns)|r";
2	CR_EXPERTISE_TOOLTIP = "Reduces chance to be dodged or parried by %s\nExpertise rating %d (+%d expertise)";
2	CR_HASTE_RATING_TOOLTIP = "Haste rating %d (%.2f%% haste)";
2	CR_HIT_MELEE_TOOLTIP = "Increases your melee chance to hit a target of level %d by %.2f%%\n\nArmor penetration rating %d (Enemy armor reduced by up to %.2f%%).";
2	CR_HIT_RANGED_TOOLTIP = "Increases your ranged chance to hit a target of level %d by %.2f%%\n\nArmor penetration rating %d (Enemy Armor Reduced by up to %.2f%%).";
2	CR_HIT_SPELL_TOOLTIP = "Increases your spell chance to hit a target of level %d by %.2f%%.\n\nSpell Penetration %d (Reduces enemy resistances by %d)";
2	CR_PARRY_TOOLTIP = "Parry Rating of %d adds %.2f%% Parry|n|cff888888(Before diminishing returns)|r";
2	CTRL_KEY = "CTRL key";
2	CTRL_KEY_TEXT = "CTRL"; -- String so that the CTRL key can be localized
2	CURRENCY = "Currency";
2	CURRENTLY_EQUIPPED = "Currently Equipped"; -- Comparison tooltip text
2	CURRENT_BID = "Current Bid";
2	CURRENT_PET = "Current Pet:";
2	CURRENT_QUESTS = "Current Quests"; -- Header for currently assigned quests
2	CURRENT_SETTINGS = "These Settings"; -- These Settings button in Reset Setttings dialog.
2	CUSTOM = "Custom";
2	DAILY = "Daily";
2	DAILY_QUESTS_REMAINING = "You can only complete %d more daily |4quest:quests; today."; -- Appears in chat for daily reset quests
2	DAILY_QUEST_TAG_TEMPLATE = "Daily %s";
2	DAMAGE = "Damage"; -- Generic "damage"
2	DAMAGE_BONUS_TOOLTIP = "Increases weapon damage"; -- Tooltop for damage increasing stat
2	DAMAGE_COLON = "Damage:"; -- Character's damage modifier, with colon
2	DAMAGE_DONE_TOOLTIP = "The total amount of damage done.";
2	DAMAGE_NUMBER = "Damage Number";
2	DAMAGE_PER_SECOND = "Damage per Second:";
2	DAMAGE_SCHOOL2 = "Holy";
2	DAMAGE_SCHOOL3 = "Fire";
2	DAMAGE_SCHOOL4 = "Nature";
2	DAMAGE_SCHOOL5 = "Frost";
2	DAMAGE_SCHOOL6 = "Shadow";
2	DAMAGE_SCHOOL7 = "Arcane";
2	DAMAGE_SCHOOL_TEXT = "Damage School";
2	DAMAGE_SHIELD = "Damage Shields";
2	DAMAGE_SHIELD_COMBATLOG_TOOLTIP = "Show messages when a spell or ability deals damage in reaction to a melee swing, such as Thorns.";
2	DAMAGE_TEMPLATE = "%d - %d Damage"; -- Weapon damage template
2	DAMAGE_TEMPLATE_WITH_SCHOOL = "%d - %d %s Damage";
2	DAMAGE_TOOLTIP = "Weapon Damage"; -- Tooltip description for "Damage"
2	DATE_COMPLETED = "Completed: %s";
2	DAYS = "|4Day:Days;";
2	DAYS_ABBR = "%d |4Day:Days;";
2	DAY_ONELETTER_ABBR = "%d d";
2	DEAD = "Dead"; -- Generic "dead"
2	DEATHBINDALREADYBOUND = "You are already bound here!";
2	DEATHBIND_SUCCESSFUL = "Your soul is bound to this place."; -- Clicked on a bindstone
2	DEATHS = "Deaths"; -- Generic Deaths label
2	DEATHS_COMBATLOG_TOOLTIP = "Show messages when something dies.";
2	DEATHS_TOOLTIP = "Number of times you were killed.";
2	DEATH_CORPSE_SKINNED = "Insignia Taken - You can only resurrect at the graveyard";
2	DEATH_EFFECT = "Death Effect";
2	DEATH_RELEASE = "Release Spirit"; -- "Release" from your body after death before the timer expires
2	DEATH_RELEASE_NOTIMER = "You have died. Release to the nearest graveyard?";
2	DEATH_RELEASE_SPECTATOR = "You have died.  Release spirit to enter Spectator Mode.";
2	DEATH_RELEASE_TIMER = "%d %s until release"; -- Gives the time in minutes/seconds until you automaticaly release
2	DECLENSION_SET = "%s of %s";
2	DECLINE = "Decline"; -- Generic "decline"
2	DEDE = "German";
2	DEFAULT = "Default";
2	DEFAULTS = "Defaults";
2	DEFAULT_AFK_MESSAGE = "Away from Keyboard";
2	DEFAULT_AGILITY_TOOLTIP = "Increases attack power with ranged weapons.|nImproves chance to score a critical hit with all weapons.|nIncreases armor and chance to dodge attacks.";
2	DEFAULT_COMBATLOG_FILTER_NAME = "Filter %d";
2	DEFAULT_DND_MESSAGE = "Do not Disturb";
2	DEFAULT_INTELLECT_TOOLTIP = "Increases the rate at which weapon skills improve.";
2	DEFAULT_SPIRIT_TOOLTIP = "Increases health and mana regeneration rates.";
2	DEFAULT_STAMINA_TOOLTIP = "Increases health points.";
2	DEFAULT_STAT1_TOOLTIP = "Increases Attack Power by %d";
2	DEFAULT_STAT2_TOOLTIP = "Increases Critical Hit chance by %.2f%%|nIncreases Armor by %d";
2	DEFAULT_STAT3_TOOLTIP = "Increases Health by %d";
2	DEFAULT_STAT4_TOOLTIP = "Increases Mana by %d|nIncreases Spell Critical Hit by %.2f%%";
2	DEFAULT_STAT5_TOOLTIP = "Increases Health Regeneration by %d Per Second while not in combat";
2	DEFAULT_STATARMOR_TOOLTIP = "Reduces Physical Damage taken by %0.2f%%";
2	DEFAULT_STATDEFENSE_TOOLTIP = "Defense Rating %d (+%d Defense)|nIncreases chance to Dodge, Block and Parry by %.2f%%|nDecreases chance to be hit and critically hit by %.2f%%|n|cff888888(Before diminishing returns)|r";
2	DEFAULT_STATSPELLBONUS_TOOLTIP = "Bonus damage to spell attacks.";
2	DEFENSE = "Defense";
2	DEFENSE_COLON = "Defense:"; -- Character's defense modifier, with colon
2	DEFENSE_TOOLTIP = "Defense Rating"; -- Tooltip description for "Defense"
2	DEFLECT = "Deflect";
2	DELETE = "Delete";
2	DELETE_GOOD_ITEM = "Do you want to destroy %s?\n\nType \"DELETE\" into the field to confirm.";
2	DELETE_ITEM = "Do you want to destroy %s?"; -- %s is the item name
2	DELETE_ITEM_CONFIRM_STRING = "DELETE"; -- String to type in to confirm deletion of a blue item or better
2	DELETE_MAIL_CONFIRMATION = "Deleting this mail will also destroy %s";
2	DELETE_MONEY_CONFIRMATION = "Deleting this mail will also destroy:";
2	DEMOTE = "Demote";
2	DEPOSIT = "Deposit"; -- Used in the GuildBank Frame
2	DEPOSIT_COLON = "Deposit:";
2	DESKTOP_GAMMA = "Use desktop gamma";
2	DESTROY_GEM = "Gem to be destroyed";
2	DISABLE = "Disable";
2	DISABLE_ADDONS = "Disable AddOns";
2	DISABLE_SPAM_FILTER = "Disable Spam Filter";
2	DISGUISE = "Disguise";
2	DISHONORABLE_KILLS = "Dishonorable Kills";
2	DISPELS = "Dispels";
2	DISPEL_AURA_COMBATLOG_TOOLTIP = "Show when an aura is removed, broken, or stolen.";
2	DISPLAY = "Display";
2	DISPLAY_ACTIVE_CHANNEL = "Display Active Channel"; -- Item in dropdown menu that displays which channels can be displayed using the channel roster.
2	DISPLAY_CHANNEL_PULLOUT = "Display Chat Roster Pullout"; -- Basic tooltip for channel buttons that you can pull out to display the channel roster frame.
2	DISPLAY_FREE_BAG_SLOTS = "Show Free Bag Space"; -- UIOptionsFrame check button for whether or not to show how much bag space you have
2	DISPLAY_LABEL = "Display";
2	DISPLAY_ON_CHARACTER = "Display on Character";
2	DISPLAY_ON_CHAR_TOOLTIP = "Checking this will show any selected auction items on your character.\n\nCTRL-Left Clicking any equippable item in the game will also allow you to try it on your character.";
2	DISPLAY_OPTIONS = "Display Options"; -- Title in dropdown menus for frames, describes the group of options which lets you change the frame's appearance
2	DISPLAY_SUBTEXT = "These options affect whether certain UI and character elements are hidden or displayed.";
2	DK = "DK"; -- Abbreviation for "dishonorable kill"
2	DND = "DND";
2	DODGE = "Dodge"; -- Dodge an attack
2	DODGE_CHANCE = "Dodge Chance";
2	DONE = "Done";
2	DONE_BY = "Done By:";
2	DONE_TO = "Done To:";
2	DPS_TEMPLATE = "(%.1f damage per second)";
2	DRAINS = "Drains";
2	DRESSUP_FRAME = "Dressing Room";
2	DRESSUP_FRAME_INSTRUCTIONS = "CTRL-Left Click additional items to display them on your character";
2	DRUID_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	DRUNK_MESSAGE_ITEM_OTHER1 = "%s is looking sober from the %s."; -- The first %s is the player, and the second %s is the item.
2	DRUNK_MESSAGE_ITEM_OTHER2 = "%s seems a little tipsy from the %s."; -- The first %s is the player, and the second %s is the item.
2	DRUNK_MESSAGE_ITEM_OTHER3 = "%s is getting drunk off of %s."; -- The first %s is the player, and the second %s is the item.
2	DRUNK_MESSAGE_ITEM_OTHER4 = "%s is completely smashed from the %s."; -- The first %s is the player, and the second %s is the item.
2	DRUNK_MESSAGE_ITEM_SELF1 = "You feel sober after the %s."; -- %s is the item.
2	DRUNK_MESSAGE_ITEM_SELF2 = "You feel a little tipsy from the %s."; -- %s is the item.
2	DRUNK_MESSAGE_ITEM_SELF3 = "You're feeling drunk off of %s."; -- %s is the item.
2	DRUNK_MESSAGE_ITEM_SELF4 = "You feel completely smashed after that %s."; -- %s is the item.
2	DRUNK_MESSAGE_OTHER1 = "%s seems to be sobering up."; -- %s is the name of the player.
2	DRUNK_MESSAGE_OTHER2 = "%s looks tipsy."; -- %s is the name of the player.
2	DRUNK_MESSAGE_OTHER3 = "%s looks drunk."; -- %s is the name of the player.
2	DRUNK_MESSAGE_OTHER4 = "%s looks completely smashed."; -- %s is the name of the player.
2	DRUNK_MESSAGE_SELF1 = "You feel sober again.";
2	DRUNK_MESSAGE_SELF2 = "You feel tipsy.  Whee!";
2	DRUNK_MESSAGE_SELF3 = "You feel drunk.  Woah!";
2	DRUNK_MESSAGE_SELF4 = "You feel completely smashed.";
2	DUEL = "Duel";
2	DUEL_COUNTDOWN = "Duel starting: %d"; -- %d is the number of seconds until the beginning of the duel.
2	DUEL_OUTOFBOUNDS_TIMER = "Exiting duel area, you will forfeit in %d %s.";
2	DUEL_REQUESTED = "%s has challenged you to a duel.";
2	DUEL_WINNER_KNOCKOUT = "%1$s has defeated %2$s in a duel"; -- %1$s is the winner, %2$s is the loser
2	DUEL_WINNER_RETREAT = "%2$s has fled from %1$s in a duel"; -- %1$s is the winner, %2$s is the loser
2	DUNGEON_DIFFICULTY = "Dungeon Difficulty";
2	DUNGEON_DIFFICULTY1 = "Normal";
2	DUNGEON_DIFFICULTY2 = "Heroic";
2	DUNGEON_DIFFICULTY3 = "Epic";
2	DUNGEON_FLOOR_DALARAN1 = "Dalaran City";
2	DUNGEON_FLOOR_DALARAN2 = "The Underbelly";
2	DUNGEON_NAME_WITH_DIFFICULTY = "%1$s (%2$s)"; -- 1=dungeon name 2=difficulty name
2	DURABILITYDAMAGE_DEATH = "Your equipped items suffer a 10% durability loss.";
2	DURABILITY_TEMPLATE = "Durability %d / %d"; -- Item's durability display template
2	DYNAMIC = "Dynamic";
2	D_DAYS = "%d |4Day:Days;";
2	D_HOURS = "%d |4Hour:Hours;";
2	D_MINUTES = "%d |4Minute:Minutes;";
2	D_SECONDS = "%d |4Second:Seconds;";
2	EDIT_TICKET = "Save Changes";
2	EFFECTS_LABEL = "Effects";
2	EFFECTS_SUBTEXT = "These controls allow you to modify specific detail levels for many game elements and effects.";
2	ELITE = "Elite";
2	EMBLEM_BACKGROUND = "Background";
2	EMBLEM_BORDER = "Border";
2	EMBLEM_BORDER_COLOR = "Border Color";
2	EMBLEM_SYMBOL = "Icon";
2	EMBLEM_SYMBOL_COLOR = "Icon Color";
2	EMOTE = "Emote";
2	EMOTE100_CMD1 = "/tired";
2	EMOTE100_CMD2 = "/tired";
2	EMOTE101_CMD = "/victory";
2	EMOTE101_CMD1 = "/victory";
2	EMOTE101_CMD2 = "/victory";
2	EMOTE101_CMD3 = "/victory";
2	EMOTE102_CMD1 = "/wave";
2	EMOTE102_CMD2 = "/wave";
2	EMOTE103_CMD1 = "/welcome";
2	EMOTE103_CMD2 = "/welcome";
2	EMOTE104_CMD1 = "/whine";
2	EMOTE104_CMD2 = "/whine";
2	EMOTE105_CMD1 = "/whistle";
2	EMOTE105_CMD2 = "/whistle";
2	EMOTE106_CMD1 = "/work";
2	EMOTE106_CMD2 = "/work";
2	EMOTE107_CMD1 = "/yawn";
2	EMOTE107_CMD2 = "/yawn";
2	EMOTE107_CMD3 = "/yawn";
2	EMOTE108_CMD1 = "/boggle";
2	EMOTE108_CMD2 = "/boggle";
2	EMOTE109_CMD1 = "/calm";
2	EMOTE109_CMD2 = "/calm";
2	EMOTE109_CMD3 = "/calm";
2	EMOTE10_CMD1 = "/bleed";
2	EMOTE10_CMD2 = "/blood";
2	EMOTE10_CMD3 = "/bleed";
2	EMOTE10_CMD4 = "/blood";
2	EMOTE110_CMD1 = "/cold";
2	EMOTE110_CMD2 = "/cold";
2	EMOTE111_CMD1 = "/comfort";
2	EMOTE111_CMD2 = "/comfort";
2	EMOTE112_CMD1 = "/cuddle";
2	EMOTE112_CMD2 = "/spoon";
2	EMOTE112_CMD3 = "/cuddle";
2	EMOTE112_CMD4 = "/spoon";
2	EMOTE113_CMD1 = "/duck";
2	EMOTE113_CMD2 = "/duck";
2	EMOTE114_CMD1 = "/insult";
2	EMOTE114_CMD2 = "/insult";
2	EMOTE114_CMD3 = "/insult";
2	EMOTE115_CMD1 = "/introduce";
2	EMOTE115_CMD2 = "/introduce";
2	EMOTE116_CMD1 = "/jk";
2	EMOTE116_CMD2 = "/jk";
2	EMOTE117_CMD1 = "/lick";
2	EMOTE117_CMD2 = "/lick";
2	EMOTE118_CMD1 = "/listen";
2	EMOTE118_CMD2 = "/listen";
2	EMOTE119_CMD1 = "/lost";
2	EMOTE119_CMD2 = "/lost";
2	EMOTE11_CMD1 = "/blink";
2	EMOTE11_CMD2 = "/blink";
2	EMOTE120_CMD1 = "/mock";
2	EMOTE120_CMD2 = "/mock";
2	EMOTE121_CMD1 = "/ponder";
2	EMOTE121_CMD2 = "/ponder";
2	EMOTE122_CMD1 = "/pounce";
2	EMOTE122_CMD2 = "/pounce";
2	EMOTE123_CMD1 = "/praise";
2	EMOTE123_CMD2 = "/lavish";
2	EMOTE123_CMD3 = "/praise";
2	EMOTE123_CMD4 = "/lavish";
2	EMOTE124_CMD1 = "/purr";
2	EMOTE124_CMD2 = "/purr";
2	EMOTE125_CMD1 = "/puzzled";
2	EMOTE125_CMD2 = "/puzzled";
2	EMOTE126_CMD1 = "/raise";
2	EMOTE126_CMD2 = "/volunteer";
2	EMOTE126_CMD3 = "/raise";
2	EMOTE126_CMD4 = "/volunteer";
2	EMOTE127_CMD1 = "/ready";
2	EMOTE127_CMD2 = "/rdy";
2	EMOTE127_CMD3 = "/ready";
2	EMOTE127_CMD4 = "/rdy";
2	EMOTE128_CMD1 = "/shimmy";
2	EMOTE128_CMD2 = "/shimmy";
2	EMOTE129_CMD1 = "/shiver";
2	EMOTE129_CMD2 = "/shiver";
2	EMOTE12_CMD1 = "/blush";
2	EMOTE12_CMD2 = "/blush";
2	EMOTE130_CMD1 = "/shoo";
2	EMOTE130_CMD2 = "/pest";
2	EMOTE130_CMD3 = "/shoo";
2	EMOTE130_CMD4 = "/pest";
2	EMOTE131_CMD1 = "/slap";
2	EMOTE131_CMD2 = "/slap";
2	EMOTE132_CMD1 = "/smirk";
2	EMOTE132_CMD2 = "/smirk";
2	EMOTE133_CMD1 = "/sniff";
2	EMOTE133_CMD2 = "/sniff";
2	EMOTE134_CMD1 = "/snub";
2	EMOTE134_CMD2 = "/snub";
2	EMOTE135_CMD1 = "/soothe";
2	EMOTE135_CMD2 = "/soothe";
2	EMOTE136_CMD1 = "/stink";
2	EMOTE136_CMD2 = "/smell";
2	EMOTE136_CMD3 = "/stink";
2	EMOTE136_CMD4 = "/smell";
2	EMOTE137_CMD1 = "/taunt";
2	EMOTE137_CMD2 = "/taunt";
2	EMOTE138_CMD1 = "/tease";
2	EMOTE138_CMD2 = "/tease";
2	EMOTE139_CMD1 = "/thirsty";
2	EMOTE139_CMD2 = "/thirsty";
2	EMOTE13_CMD1 = "/bonk";
2	EMOTE13_CMD2 = "/doh";
2	EMOTE13_CMD3 = "/bonk";
2	EMOTE13_CMD4 = "/doh";
2	EMOTE140_CMD1 = "/veto";
2	EMOTE140_CMD2 = "/veto";
2	EMOTE141_CMD1 = "/snicker";
2	EMOTE141_CMD2 = "/snicker";
2	EMOTE142_CMD1 = "/tickle";
2	EMOTE142_CMD2 = "/tickle";
2	EMOTE143_CMD1 = "/stand";
2	EMOTE143_CMD2 = "/stand";
2	EMOTE144_CMD1 = "/violin";
2	EMOTE144_CMD2 = "/violin";
2	EMOTE145_CMD1 = "/smile";
2	EMOTE145_CMD2 = "/smile";
2	EMOTE146_CMD1 = "/rasp";
2	EMOTE146_CMD2 = "/rasp";
2	EMOTE147_CMD1 = "/growl";
2	EMOTE147_CMD2 = "/growl";
2	EMOTE148_CMD1 = "/bark";
2	EMOTE148_CMD2 = "/bark";
2	EMOTE149_CMD1 = "/pity";
2	EMOTE149_CMD2 = "/pity";
2	EMOTE14_CMD1 = "/bored";
2	EMOTE14_CMD2 = "/bored";
2	EMOTE150_CMD1 = "/scared";
2	EMOTE150_CMD2 = "/scared";
2	EMOTE151_CMD1 = "/flop";
2	EMOTE151_CMD2 = "/flop";
2	EMOTE152_CMD1 = "/love";
2	EMOTE152_CMD2 = "/love";
2	EMOTE153_CMD1 = "/moo";
2	EMOTE153_CMD2 = "/moo";
2	EMOTE154_CMD1 = "/commend";
2	EMOTE154_CMD2 = "/commend";
2	EMOTE155_CMD1 = "/train";
2	EMOTE155_CMD2 = "/train";
2	EMOTE156_CMD1 = "/helpme";
2	EMOTE156_CMD2 = "/helpme";
2	EMOTE157_CMD1 = "/incoming";
2	EMOTE157_CMD2 = "/incoming";
2	EMOTE158_CMD1 = "/openfire";
2	EMOTE158_CMD2 = "/openfire";
2	EMOTE159_CMD1 = "/charge";
2	EMOTE159_CMD2 = "/charge";
2	EMOTE15_CMD1 = "/bounce";
2	EMOTE15_CMD2 = "/bounce";
2	EMOTE160_CMD1 = "/flee";
2	EMOTE160_CMD2 = "/flee";
2	EMOTE161_CMD1 = "/attacktarget";
2	EMOTE161_CMD2 = "/attacktarget";
2	EMOTE162_CMD1 = "/oom";
2	EMOTE162_CMD2 = "/oom";
2	EMOTE163_CMD1 = "/followme";
2	EMOTE163_CMD2 = "/followme";
2	EMOTE164_CMD1 = "/wait";
2	EMOTE164_CMD2 = "/wait";
2	EMOTE165_CMD1 = "/flirt";
2	EMOTE165_CMD2 = "/flirt";
2	EMOTE166_CMD1 = "/healme";
2	EMOTE166_CMD2 = "/healme";
2	EMOTE167_CMD1 = "/silly";
2	EMOTE167_CMD2 = "/silly";
2	EMOTE168_CMD1 = "/wink";
2	EMOTE168_CMD2 = "/wink";
2	EMOTE169_CMD1 = "/pat";
2	EMOTE169_CMD2 = "/pat";
2	EMOTE16_CMD1 = "/brb";
2	EMOTE16_CMD2 = "/brb";
2	EMOTE170_CMD1 = "/golfclap";
2	EMOTE170_CMD2 = "/golfclap";
2	EMOTE171_CMD1 = "/mountspecial";
2	EMOTE171_CMD2 = "/mountspecial";
2	EMOTE17_CMD1 = "/bow";
2	EMOTE17_CMD2 = "/bow";
2	EMOTE18_CMD1 = "/burp";
2	EMOTE18_CMD2 = "/belch";
2	EMOTE18_CMD3 = "/burp";
2	EMOTE18_CMD4 = "/belch";
2	EMOTE19_CMD1 = "/bye";
2	EMOTE19_CMD2 = "/goodbye";
2	EMOTE19_CMD3 = "/farewell";
2	EMOTE19_CMD4 = "/bye";
2	EMOTE19_CMD5 = "/goodbye";
2	EMOTE19_CMD6 = "/farewell";
2	EMOTE1_CMD1 = "/agree";
2	EMOTE1_CMD2 = "/agree";
2	EMOTE20_CMD1 = "/cackle";
2	EMOTE20_CMD2 = "/cackle";
2	EMOTE21_CMD1 = "/cheer";
2	EMOTE21_CMD2 = "/cheer";
2	EMOTE21_CMD3 = "/woot";
2	EMOTE21_CMD4 = "/woot";
2	EMOTE22_CMD1 = "/chicken";
2	EMOTE22_CMD2 = "/flap";
2	EMOTE22_CMD3 = "/strut";
2	EMOTE22_CMD4 = "/chicken";
2	EMOTE22_CMD5 = "/flap";
2	EMOTE22_CMD6 = "/strut";
2	EMOTE23_CMD1 = "/chuckle";
2	EMOTE23_CMD2 = "/chuckle";
2	EMOTE24_CMD1 = "/clap";
2	EMOTE24_CMD2 = "/clap";
2	EMOTE25_CMD1 = "/confused";
2	EMOTE25_CMD2 = "/confused";
2	EMOTE26_CMD1 = "/congratulate";
2	EMOTE26_CMD2 = "/congrats";
2	EMOTE26_CMD3 = "/cong";
2	EMOTE26_CMD4 = "/congratulate";
2	EMOTE26_CMD5 = "/grats";
2	EMOTE26_CMD6 = "/cong";
2	EMOTE27_CMD1 = "/unused";
2	EMOTE27_CMD2 = "/unused";
2	EMOTE28_CMD1 = "/cough";
2	EMOTE28_CMD2 = "/cough";
2	EMOTE29_CMD1 = "/cower";
2	EMOTE29_CMD2 = "/fear";
2	EMOTE29_CMD3 = "/cower";
2	EMOTE29_CMD4 = "/fear";
2	EMOTE2_CMD1 = "/amaze";
2	EMOTE2_CMD2 = "/amaze";
2	EMOTE304_CMD1 = "/incoming";
2	EMOTE304_CMD3 = "/incoming";
2	EMOTE304_CMD4 = "/inc";
2	EMOTE306_CMD1 = "/retreat";
2	EMOTE306_CMD2 = "/retreat";
2	EMOTE306_CMD3 = "/flee";
2	EMOTE306_CMD4 = "/flee";
2	EMOTE30_CMD1 = "/crack";
2	EMOTE30_CMD2 = "/knuckles";
2	EMOTE30_CMD3 = "/crack";
2	EMOTE30_CMD4 = "/knuckles";
2	EMOTE31_CMD1 = "/cringe";
2	EMOTE31_CMD2 = "/cringe";
2	EMOTE32_CMD1 = "/cry";
2	EMOTE32_CMD2 = "/sob";
2	EMOTE32_CMD3 = "/weep";
2	EMOTE32_CMD4 = "/cry";
2	EMOTE32_CMD5 = "/sob";
2	EMOTE32_CMD6 = "/weep";
2	EMOTE33_CMD1 = "/curious";
2	EMOTE33_CMD2 = "/curious";
2	EMOTE34_CMD1 = "/curtsey";
2	EMOTE34_CMD2 = "/curtsey";
2	EMOTE35_CMD1 = "/dance";
2	EMOTE35_CMD2 = "/dance";
2	EMOTE368_CMD1 = "/blame";
2	EMOTE368_CMD2 = "/blame";
2	EMOTE369_CMD1 = "/blank";
2	EMOTE369_CMD2 = "/blank";
2	EMOTE36_CMD1 = "/drink";
2	EMOTE36_CMD2 = "/shindig";
2	EMOTE36_CMD3 = "/drink";
2	EMOTE36_CMD4 = "/shindig";
2	EMOTE370_CMD1 = "/brandish";
2	EMOTE370_CMD2 = "/brandish";
2	EMOTE371_CMD1 = "/breath";
2	EMOTE371_CMD2 = "/breath";
2	EMOTE372_CMD1 = "/disagree";
2	EMOTE372_CMD2 = "/disagree";
2	EMOTE373_CMD1 = "/doubt";
2	EMOTE373_CMD2 = "/doubt";
2	EMOTE374_CMD1 = "/embarrass";
2	EMOTE374_CMD2 = "/embarrass";
2	EMOTE375_CMD1 = "/encourage";
2	EMOTE375_CMD2 = "/encourage";
2	EMOTE376_CMD1 = "/enemy";
2	EMOTE376_CMD2 = "/enemy";
2	EMOTE377_CMD1 = "/eyebrow";
2	EMOTE377_CMD2 = "/eyebrow";
2	EMOTE377_CMD3 = "/brow";
2	EMOTE377_CMD4 = "/brow";
2	EMOTE37_CMD1 = "/drool";
2	EMOTE37_CMD2 = "/drool";
2	EMOTE380_CMD1 = "/highfive";
2	EMOTE380_CMD2 = "/highfive";
2	EMOTE381_CMD1 = "/absent";
2	EMOTE381_CMD2 = "/absent";
2	EMOTE382_CMD1 = "/arm";
2	EMOTE382_CMD2 = "/arm";
2	EMOTE383_CMD1 = "/awe";
2	EMOTE383_CMD2 = "/awe";
2	EMOTE384_CMD1 = "/backpack";
2	EMOTE384_CMD2 = "/backpack";
2	EMOTE384_CMD3 = "/pack";
2	EMOTE384_CMD4 = "/pack";
2	EMOTE385_CMD1 = "/badfeeling";
2	EMOTE385_CMD2 = "/badfeeling";
2	EMOTE385_CMD3 = "/bad";
2	EMOTE385_CMD4 = "/bad";
2	EMOTE386_CMD1 = "/challenge";
2	EMOTE386_CMD2 = "/challenge";
2	EMOTE387_CMD1 = "/chug";
2	EMOTE387_CMD2 = "/chug";
2	EMOTE389_CMD1 = "/ding";
2	EMOTE389_CMD2 = "/ding";
2	EMOTE38_CMD1 = "/eat";
2	EMOTE38_CMD2 = "/chew";
2	EMOTE38_CMD3 = "/feast";
2	EMOTE38_CMD4 = "/eat";
2	EMOTE38_CMD5 = "/chew";
2	EMOTE38_CMD6 = "/feast";
2	EMOTE390_CMD1 = "/facepalm";
2	EMOTE390_CMD2 = "/facepalm";
2	EMOTE390_CMD3 = "/palm";
2	EMOTE390_CMD4 = "/palm";
2	EMOTE391_CMD1 = "/faint";
2	EMOTE391_CMD2 = "/faint";
2	EMOTE392_CMD1 = "/go";
2	EMOTE392_CMD2 = "/go";
2	EMOTE393_CMD1 = "/going";
2	EMOTE393_CMD2 = "/going";
2	EMOTE394_CMD1 = "/glower";
2	EMOTE394_CMD2 = "/glower";
2	EMOTE395_CMD1 = "/headache";
2	EMOTE395_CMD2 = "/headache";
2	EMOTE396_CMD1 = "/hiccup";
2	EMOTE396_CMD2 = "/hiccup";
2	EMOTE398_CMD1 = "/hiss";
2	EMOTE398_CMD2 = "/hiss";
2	EMOTE399_CMD1 = "/holdhand";
2	EMOTE399_CMD2 = "/holdhand";
2	EMOTE39_CMD1 = "/eye";
2	EMOTE39_CMD2 = "/eye";
2	EMOTE3_CMD1 = "/angry";
2	EMOTE3_CMD2 = "/mad";
2	EMOTE3_CMD3 = "/angry";
2	EMOTE3_CMD4 = "/mad";
2	EMOTE401_CMD1 = "/hurry";
2	EMOTE401_CMD2 = "/hurry";
2	EMOTE402_CMD1 = "/idea";
2	EMOTE402_CMD2 = "/idea";
2	EMOTE403_CMD1 = "/jealous";
2	EMOTE403_CMD2 = "/jealous";
2	EMOTE404_CMD1 = "/luck";
2	EMOTE404_CMD2 = "/luck";
2	EMOTE405_CMD1 = "/map";
2	EMOTE405_CMD2 = "/map";
2	EMOTE406_CMD1 = "/mercy";
2	EMOTE406_CMD2 = "/mercy";
2	EMOTE407_CMD1 = "/mutter";
2	EMOTE407_CMD2 = "/mutter";
2	EMOTE408_CMD1 = "/nervous";
2	EMOTE408_CMD2 = "/nervous";
2	EMOTE409_CMD1 = "/offer";
2	EMOTE409_CMD2 = "/offer";
2	EMOTE40_CMD1 = "/fart";
2	EMOTE40_CMD2 = "/fart";
2	EMOTE410_CMD1 = "/pet";
2	EMOTE410_CMD2 = "/pet";
2	EMOTE411_CMD1 = "/pinch";
2	EMOTE411_CMD2 = "/pinch";
2	EMOTE413_CMD1 = "/proud";
2	EMOTE413_CMD2 = "/proud";
2	EMOTE414_CMD1 = "/promise";
2	EMOTE414_CMD2 = "/promise";
2	EMOTE415_CMD1 = "/pulse";
2	EMOTE415_CMD2 = "/pulse";
2	EMOTE416_CMD1 = "/punch";
2	EMOTE416_CMD2 = "/punch";
2	EMOTE417_CMD1 = "/pout";
2	EMOTE417_CMD2 = "/pout";
2	EMOTE418_CMD1 = "/regret";
2	EMOTE418_CMD2 = "/regret";
2	EMOTE41_CMD1 = "/fidget";
2	EMOTE41_CMD2 = "/impatient";
2	EMOTE41_CMD3 = "/fidget";
2	EMOTE41_CMD4 = "/impatient";
2	EMOTE420_CMD1 = "/revenge";
2	EMOTE420_CMD2 = "/revenge";
2	EMOTE421_CMD1 = "/rolleyes";
2	EMOTE421_CMD2 = "/rolleyes";
2	EMOTE421_CMD3 = "/eyeroll";
2	EMOTE421_CMD4 = "/eyeroll";
2	EMOTE422_CMD1 = "/ruffle";
2	EMOTE422_CMD2 = "/ruffle";
2	EMOTE423_CMD1 = "/sad";
2	EMOTE423_CMD2 = "/sad";
2	EMOTE424_CMD1 = "/scoff";
2	EMOTE424_CMD2 = "/scoff";
2	EMOTE425_CMD1 = "/scold";
2	EMOTE425_CMD2 = "/scold";
2	EMOTE426_CMD1 = "/scowl";
2	EMOTE426_CMD2 = "/scowl";
2	EMOTE427_CMD1 = "/search";
2	EMOTE427_CMD2 = "/search";
2	EMOTE428_CMD1 = "/shakefist";
2	EMOTE428_CMD2 = "/shakefist";
2	EMOTE428_CMD3 = "/fist";
2	EMOTE428_CMD4 = "/fist";
2	EMOTE429_CMD1 = "/shifty";
2	EMOTE429_CMD2 = "/shifty";
2	EMOTE42_CMD1 = "/flex";
2	EMOTE42_CMD2 = "/strong";
2	EMOTE42_CMD3 = "/flex";
2	EMOTE42_CMD4 = "/strong";
2	EMOTE430_CMD1 = "/shudder";
2	EMOTE430_CMD2 = "/shudder";
2	EMOTE431_CMD1 = "/signal";
2	EMOTE431_CMD2 = "/signal";
2	EMOTE432_CMD1 = "/silence";
2	EMOTE432_CMD2 = "/silence";
2	EMOTE432_CMD3 = "/shush";
2	EMOTE432_CMD4 = "/shush";
2	EMOTE433_CMD1 = "/sing";
2	EMOTE433_CMD2 = "/sing";
2	EMOTE434_CMD1 = "/smack";
2	EMOTE434_CMD2 = "/smack";
2	EMOTE435_CMD1 = "/sneak";
2	EMOTE435_CMD2 = "/sneak";
2	EMOTE436_CMD1 = "/sneeze";
2	EMOTE436_CMD2 = "/sneeze";
2	EMOTE437_CMD1 = "/snort";
2	EMOTE437_CMD2 = "/snort";
2	EMOTE438_CMD1 = "/squeal";
2	EMOTE438_CMD2 = "/squeal";
2	EMOTE43_CMD1 = "/frown";
2	EMOTE43_CMD2 = "/disappointed";
2	EMOTE43_CMD3 = "/disappointment";
2	EMOTE43_CMD4 = "/frown";
2	EMOTE43_CMD5 = "/disappointed";
2	EMOTE43_CMD6 = "/disappointment";
2	EMOTE440_CMD1 = "/suspicious";
2	EMOTE440_CMD2 = "/suspicious";
2	EMOTE441_CMD1 = "/think";
2	EMOTE441_CMD2 = "/think";
2	EMOTE442_CMD1 = "/truce";
2	EMOTE442_CMD2 = "/truce";
2	EMOTE443_CMD1 = "/twiddle";
2	EMOTE443_CMD2 = "/twiddle";
2	EMOTE444_CMD1 = "/warn";
2	EMOTE444_CMD2 = "/warn";
2	EMOTE445_CMD1 = "/snap";
2	EMOTE445_CMD2 = "/snap";
2	EMOTE446_CMD1 = "/charm";
2	EMOTE446_CMD2 = "/charm";
2	EMOTE447_CMD1 = "/coverears";
2	EMOTE447_CMD2 = "/coverears";
2	EMOTE448_CMD1 = "/crossarms";
2	EMOTE448_CMD2 = "/crossarms";
2	EMOTE449_CMD1 = "/look";
2	EMOTE449_CMD2 = "/look";
2	EMOTE44_CMD1 = "/gasp";
2	EMOTE44_CMD2 = "/gasp";
2	EMOTE44_CMD3 = "/gasp";
2	EMOTE450_CMD1 = "/object";
2	EMOTE450_CMD2 = "/object";
2	EMOTE450_CMD3 = "/objection";
2	EMOTE450_CMD4 = "/objection";
2	EMOTE450_CMD5 = "/holdit";
2	EMOTE450_CMD6 = "/holdit";
2	EMOTE451_CMD1 = "/sweat";
2	EMOTE451_CMD2 = "/sweat";
2	EMOTE45_CMD1 = "/gaze";
2	EMOTE45_CMD2 = "/gaze";
2	EMOTE46_CMD1 = "/giggle";
2	EMOTE46_CMD2 = "/giggle";
2	EMOTE47_CMD1 = "/glare";
2	EMOTE47_CMD2 = "/glare";
2	EMOTE48_CMD1 = "/gloat";
2	EMOTE48_CMD2 = "/gloat";
2	EMOTE49_CMD1 = "/greet";
2	EMOTE49_CMD2 = "/greetings";
2	EMOTE49_CMD3 = "/greet";
2	EMOTE49_CMD4 = "/greetings";
2	EMOTE4_CMD1 = "/apologize";
2	EMOTE4_CMD2 = "/sorry";
2	EMOTE4_CMD3 = "/apologize";
2	EMOTE4_CMD4 = "/sorry";
2	EMOTE50_CMD1 = "/grin";
2	EMOTE50_CMD2 = "/wicked";
2	EMOTE50_CMD3 = "/wickedly";
2	EMOTE50_CMD4 = "/grin";
2	EMOTE50_CMD5 = "/wicked";
2	EMOTE50_CMD6 = "/wickedly";
2	EMOTE51_CMD1 = "/groan";
2	EMOTE51_CMD2 = "/groan";
2	EMOTE52_CMD1 = "/grovel";
2	EMOTE52_CMD2 = "/peon";
2	EMOTE52_CMD3 = "/grovel";
2	EMOTE52_CMD4 = "/peon";
2	EMOTE53_CMD1 = "/guffaw";
2	EMOTE53_CMD2 = "/guffaw";
2	EMOTE54_CMD1 = "/hail";
2	EMOTE54_CMD2 = "/hail";
2	EMOTE55_CMD1 = "/happy";
2	EMOTE55_CMD2 = "/glad";
2	EMOTE55_CMD3 = "/yay";
2	EMOTE55_CMD4 = "/happy";
2	EMOTE55_CMD5 = "/glad";
2	EMOTE55_CMD6 = "/yay";
2	EMOTE56_CMD1 = "/hello";
2	EMOTE56_CMD2 = "/hi";
2	EMOTE56_CMD3 = "/hello";
2	EMOTE56_CMD4 = "/hi";
2	EMOTE57_CMD1 = "/hug";
2	EMOTE57_CMD2 = "/hug";
2	EMOTE58_CMD1 = "/hungry";
2	EMOTE58_CMD2 = "/food";
2	EMOTE58_CMD3 = "/hungry";
2	EMOTE58_CMD4 = "/food";
2	EMOTE58_CMD5 = "/pizza";
2	EMOTE58_CMD6 = "/pizza";
2	EMOTE59_CMD1 = "/kiss";
2	EMOTE59_CMD2 = "/blow";
2	EMOTE59_CMD3 = "/kiss";
2	EMOTE59_CMD4 = "/blow";
2	EMOTE5_CMD1 = "/applaud";
2	EMOTE5_CMD2 = "/bravo";
2	EMOTE5_CMD3 = "/applause";
2	EMOTE5_CMD4 = "/applaud";
2	EMOTE5_CMD5 = "/bravo";
2	EMOTE5_CMD6 = "/applause";
2	EMOTE60_CMD1 = "/kneel";
2	EMOTE60_CMD2 = "/kneel";
2	EMOTE60_CMD3 = "/kneel";
2	EMOTE61_CMD1 = "/laugh";
2	EMOTE61_CMD2 = "/lol";
2	EMOTE61_CMD3 = "/laugh";
2	EMOTE61_CMD4 = "/lol";
2	EMOTE62_CMD1 = "/laydown";
2	EMOTE62_CMD2 = "/liedown";
2	EMOTE62_CMD3 = "/lay";
2	EMOTE62_CMD4 = "/lie";
2	EMOTE62_CMD5 = "/laydown";
2	EMOTE62_CMD6 = "/liedown";
2	EMOTE62_CMD7 = "/lay";
2	EMOTE62_CMD8 = "/lie";
2	EMOTE63_CMD1 = "/massage";
2	EMOTE63_CMD2 = "/massage";
2	EMOTE64_CMD1 = "/moan";
2	EMOTE64_CMD2 = "/moan";
2	EMOTE65_CMD1 = "/moon";
2	EMOTE65_CMD2 = "/moon";
2	EMOTE66_CMD1 = "/mourn";
2	EMOTE66_CMD2 = "/mourn";
2	EMOTE67_CMD1 = "/no";
2	EMOTE67_CMD2 = "/no";
2	EMOTE68_CMD1 = "/nod";
2	EMOTE68_CMD2 = "/yes";
2	EMOTE68_CMD3 = "/nod";
2	EMOTE68_CMD4 = "/yes";
2	EMOTE69_CMD1 = "/nosepick";
2	EMOTE69_CMD2 = "/pick";
2	EMOTE69_CMD3 = "/nosepick";
2	EMOTE69_CMD4 = "/pick";
2	EMOTE6_CMD1 = "/bashful";
2	EMOTE6_CMD2 = "/bashful";
2	EMOTE70_CMD1 = "/panic";
2	EMOTE70_CMD2 = "/panic";
2	EMOTE71_CMD1 = "/peer";
2	EMOTE71_CMD2 = "/peer";
2	EMOTE72_CMD1 = "/plead";
2	EMOTE72_CMD2 = "/plead";
2	EMOTE73_CMD1 = "/point";
2	EMOTE73_CMD2 = "/point";
2	EMOTE74_CMD1 = "/poke";
2	EMOTE74_CMD2 = "/poke";
2	EMOTE75_CMD1 = "/pray";
2	EMOTE75_CMD2 = "/pray";
2	EMOTE76_CMD1 = "/roar";
2	EMOTE76_CMD2 = "/roar";
2	EMOTE76_CMD3 = "/rawr";
2	EMOTE76_CMD4 = "/rawr";
2	EMOTE77_CMD1 = "/rofl";
2	EMOTE77_CMD2 = "/rofl";
2	EMOTE78_CMD1 = "/rude";
2	EMOTE78_CMD2 = "/rude";
2	EMOTE79_CMD1 = "/salute";
2	EMOTE79_CMD2 = "/salute";
2	EMOTE7_CMD1 = "/beckon";
2	EMOTE7_CMD2 = "/beckon";
2	EMOTE80_CMD1 = "/scratch";
2	EMOTE80_CMD2 = "/cat";
2	EMOTE80_CMD3 = "/catty";
2	EMOTE80_CMD4 = "/scratch";
2	EMOTE80_CMD5 = "/cat";
2	EMOTE80_CMD6 = "/catty";
2	EMOTE81_CMD1 = "/sexy";
2	EMOTE81_CMD2 = "/sexy";
2	EMOTE82_CMD1 = "/shake";
2	EMOTE82_CMD2 = "/rear";
2	EMOTE82_CMD3 = "/shake";
2	EMOTE82_CMD4 = "/rear";
2	EMOTE83_CMD1 = "/shout";
2	EMOTE83_CMD2 = "/holler";
2	EMOTE83_CMD3 = "/holler";
2	EMOTE84_CMD1 = "/shrug";
2	EMOTE84_CMD2 = "/shrug";
2	EMOTE85_CMD1 = "/shy";
2	EMOTE85_CMD2 = "/shy";
2	EMOTE86_CMD1 = "/sigh";
2	EMOTE86_CMD2 = "/sigh";
2	EMOTE87_CMD1 = "/sit";
2	EMOTE87_CMD2 = "/sit";
2	EMOTE88_CMD1 = "/sleep";
2	EMOTE88_CMD2 = "/sleep";
2	EMOTE89_CMD1 = "/snarl";
2	EMOTE89_CMD2 = "/snarl";
2	EMOTE8_CMD1 = "/beg";
2	EMOTE8_CMD2 = "/beg";
2	EMOTE90_CMD1 = "/spit";
2	EMOTE90_CMD2 = "/spit";
2	EMOTE91_CMD1 = "/stare";
2	EMOTE91_CMD2 = "/stare";
2	EMOTE92_CMD1 = "/surprised";
2	EMOTE92_CMD2 = "/surprised";
2	EMOTE93_CMD1 = "/surrender";
2	EMOTE93_CMD2 = "/surrender";
2	EMOTE94_CMD1 = "/talk";
2	EMOTE94_CMD2 = "/talk";
2	EMOTE95_CMD1 = "/talkex";
2	EMOTE95_CMD2 = "/excited";
2	EMOTE95_CMD3 = "/talkex";
2	EMOTE95_CMD4 = "/excited";
2	EMOTE96_CMD1 = "/talkq";
2	EMOTE96_CMD2 = "/question";
2	EMOTE96_CMD3 = "/talkq";
2	EMOTE96_CMD4 = "/question";
2	EMOTE97_CMD1 = "/tap";
2	EMOTE97_CMD2 = "/tap";
2	EMOTE98_CMD1 = "/thank";
2	EMOTE98_CMD2 = "/thanks";
2	EMOTE98_CMD3 = "/ty";
2	EMOTE98_CMD4 = "/thank";
2	EMOTE98_CMD5 = "/thanks";
2	EMOTE98_CMD6 = "/ty";
2	EMOTE99_CMD1 = "/threaten";
2	EMOTE99_CMD2 = "/doom";
2	EMOTE99_CMD3 = "/threat";
2	EMOTE99_CMD4 = "/wrath";
2	EMOTE99_CMD5 = "/threaten";
2	EMOTE99_CMD6 = "/doom";
2	EMOTE99_CMD7 = "/threat";
2	EMOTE99_CMD8 = "/wrath";
2	EMOTE9_CMD1 = "/bite";
2	EMOTE9_CMD2 = "/bite";
2	EMOTE_MESSAGE = "Emote"; -- Text emote
2	EMOTE_STATE_KNEEL = "/kneel";
2	EMPTY = "Empty"; -- Generic "Empty" label
2	EMPTY_SOCKET = "Level %d Socket";
2	EMPTY_SOCKET_BLUE = "Blue Socket";
2	EMPTY_SOCKET_META = "Meta Socket";
2	EMPTY_SOCKET_NO_COLOR = "Prismatic Socket";
2	EMPTY_SOCKET_RED = "Red Socket";
2	EMPTY_SOCKET_YELLOW = "Yellow Socket";
2	EMPTY_STABLE_SLOT = "Empty Stable Slot";
2	ENABLE = "Enable";
2	ENABLE_ALL_SHADERS = "Enable All Shader Effects";
2	ENABLE_AMBIENCE = "Ambient Sounds";
2	ENABLE_BGSOUND = "Sound in Background";
2	ENABLE_DSP_EFFECTS = "Death Knight Voices"; -- Sound Option
2	ENABLE_EMOTE_SOUNDS = "Emote Sounds";
2	ENABLE_ERROR_SPEECH = "Error Speech"; -- Sound option tag
2	ENABLE_GROUP_SPEECH = "Enable Group Speech"; -- Sound option tag
2	ENABLE_HARDWARE = "Use Hardware"; -- Sound Option
2	ENABLE_MICROPHONE = "Enable Microphone";
2	ENABLE_MUSIC = "Music"; -- Sound options tag
2	ENABLE_MUSIC_LOOPING = "Loop Music";
2	ENABLE_REVERB = "Enable Reverb";
2	ENABLE_SOFTWARE_HRTF = "Headphone mode"; -- Sound Option
2	ENABLE_SOUND = "Enable Sound"; -- Sound options tag
2	ENABLE_SOUNDFX = "Sound Effects";
2	ENABLE_SOUND_AT_CHARACTER = "Sound at Character";
2	ENABLE_TUTORIAL_TEXT = "Display Tips";
2	ENABLE_VOICECHAT = "Enable Voice Chat";
2	ENCHANTS = "Enchants";
2	ENCHANT_AURA_COMBATLOG_TOOLTIP = "Show when a weapon enchantment is gained or removed.";
2	ENCHANT_CONDITION_AND = " and\32";
2	ENCHANT_CONDITION_EQUAL_COMPARE = "an equal number of %s and %s gems";
2	ENCHANT_CONDITION_EQUAL_VALUE = "exactly %d %s |4gem:gems;";
2	ENCHANT_CONDITION_LESS_VALUE = "less than %d %s |4gem:gems;";
2	ENCHANT_CONDITION_MORE_COMPARE = "more %s gems than %s gems";
2	ENCHANT_CONDITION_MORE_EQUAL_COMPARE = "at least as many %s gems as %s gems";
2	ENCHANT_CONDITION_MORE_VALUE = "at least %d %s |4gem:gems;";
2	ENCHANT_CONDITION_NOT_EQUAL_COMPARE = "a different number of %s and %s gems";
2	ENCHANT_CONDITION_NOT_EQUAL_VALUE = "any number but %d %s |4gem:gems;";
2	ENCHANT_CONDITION_REQUIRES = "Requires\32";
2	ENCHANT_ITEM_MIN_SKILL = "Enchantment Requires %s (%d)"; -- Required skill rank to use the item
2	ENCHANT_ITEM_REQ_SKILL = "Enchantment Requires %s"; -- Required skill to use the item
2	ENCHANT_SLOT = "Enchant/Unlock Slot";
2	ENCHSLOT_2HWEAPON = "2H Weapon"; -- Two Hand Weapon for Enchanting slot filter (2H for space & consistency with enchant spells)
2	ENCHSLOT_WEAPON = "Weapon"; -- Weapon for Enchanting slot filter
2	ENCLOSED_MONEY = "Enclosed amount";
2	ENCN = "Simplified Chinese (English speech)";
2	ENCRYPTED = "Encrypted"; -- Used in tooltips for encrypted items
2	ENEMY = "Enemy";
2	ENERGY = "Energy"; -- Generic "energy"
2	ENERGY_COST = "%d Energy";
2	ENERGY_COST_PER_TIME = "%d Energy, plus %d per sec";
2	ENGB = "English (EU)";
2	ENSCRIBE = "Enchant";
2	ENTERING_COMBAT = "Entering Combat";
2	ENTER_BATTLE = "Enter Battle";
2	ENTER_CODE = "Please enter code:";
2	ENTER_FILTER_NAME = "Enter filter name:";
2	ENTER_MACRO_LABEL = "Enter Macro Commands:";
2	ENTIRE_LINE = "Entire Line";
2	ENTIRE_LINE_COMBATLOG_TOOLTIP = "Color the entire line based on the selection below.";
2	ENTW = "Traditional Chinese (English speech)";
2	ENUS = "English (US)";
2	ENVIRONMENTAL_DAMAGE = "Environmental Damage";
2	ENVIRONMENTAL_DAMAGE_COMBATLOG_TOOLTIP = "Show messages when someone takes damage from falling, drowning or swimming in lava.";
2	ENVIRONMENT_DETAIL = "Environment Detail";
2	EQUIP_CONTAINER = "Equip Container"; -- Equip a container
2	EQUIP_NO_DROP = "Equipping this item will bind it to you."; -- Tells player he is about to equip a no drop item
2	ERRORS = "Errors";
2	ERROR_CANNOT_BIND = "|cffff0000Error! Cannot bind that button!|r";
2	ERROR_CAPS = "ERROR"; -- Generic "error", in all capitals
2	ERROR_SLASH_CHANGEACTIONBAR = "Appropriate format is /changeactionbar x where x is an action bar page number in the range %d to %d."; -- Usage text for the /changeactionbar slash command.
2	ERROR_SLASH_EQUIP_TO_SLOT = "Appropriate format is /equipslot x [item name] where x is an equippable item slot in the range %d to %d."; -- Usage text for the /equipslot command.
2	ERROR_SLASH_LOOT_SETTHRESHOLD = "Appropriate format is /threshold [item quality name] or /threshold x where x is an item quality number between %d and %d.";
2	ERROR_SLASH_SWAPACTIONBAR = "Appropriate format is /swapactionbar x y where x and y are action bar page numbers in the range %d to %d."; -- Usage text for the /swapactionbar slash command.
2	ERROR_SLASH_TEAM_CAPTAIN = "Appropriate format is /teamcaptain [2v2, 3v3, 5v5] [player name]";
2	ERROR_SLASH_TEAM_DISBAND = "Appropriate format is /teamdisband [2v2, 3v3, 5v5]";
2	ERROR_SLASH_TEAM_INVITE = "Appropriate format is /teaminvite [2v2, 3v3, 5v5] [player name]";
2	ERROR_SLASH_TEAM_QUIT = "Appropriate format is /teamquit [2v2, 3v3, 5v5]";
2	ERROR_SLASH_TEAM_UNINVITE = "Appropriate format is /teamremove [2v2, 3v3, 5v5] [player name]";
2	ERR_2HANDED_EQUIPPED = "Cannot equip that with a two-handed weapon.";
2	ERR_2HSKILLNOTFOUND = "You cannot dual-wield";
2	ERR_ABILITY_COOLDOWN = "Ability is not ready yet.";
2	ERR_ALREADY_INVITED_TO_ARENA_TEAM_S = "%s has already been invited to an arena team.";
2	ERR_ALREADY_INVITED_TO_GUILD_S = "%s has already been invited to a guild.";
2	ERR_ALREADY_IN_ARENA_TEAM = "You are already in an arena team of that size.";
2	ERR_ALREADY_IN_ARENA_TEAM_S = "%s is already in an arena team of that size.";
2	ERR_ALREADY_IN_GROUP_S = "%s is already in a group.";
2	ERR_ALREADY_IN_GUILD = "You are already in a guild.";
2	ERR_ALREADY_IN_GUILD_S = "%s is already in a guild.";
2	ERR_ALREADY_PICKPOCKETED = "Your target has already had its pockets picked";
2	ERR_ALREADY_TRADING = "You are already trading";
2	ERR_AMMO_ONLY = "Only ammo can go there.";
2	ERR_APPROACHING_NO_PLAY_TIME = "You have %s until you enter unhealthy time, at which point you will no longer receive experience or loot until you have logged out for 5 hours."; -- Sent every half hour in tired time
2	ERR_APPROACHING_NO_PLAY_TIME_2 = "You are in tired time, and your benefits have been reduced to 50% of normal. For the sake of your own health, please go offline and rest, do some exercise, and arrange your time properly."; -- Second 3.5, 4, 4.5 message
2	ERR_APPROACHING_PARTIAL_PLAY_TIME = "You have %s until you enter tired time.  Your rewards will be cut in half."; -- Sent every hour in normal time, plus once more at 15 minutes remaining
2	ERR_APPROACHING_PARTIAL_PLAY_TIME_2 = "Your accumulated online time is %s hours."; -- Second message at one hour and two hours
2	ERR_ARENA_EXPIRED_CAIS = "You may not queue while one or more of your team members is under the effect of restricted play.";
2	ERR_ARENA_NO_TEAM_II = "You are not in a %dv%d arena team.";
2	ERR_ARENA_TEAMS_LOCKED = "Arena teams are currently locked.";
2	ERR_ARENA_TEAM_CREATE_S = "%s created.  To disband, use /teamdisband [2v2, 3v3, 5v5].";
2	ERR_ARENA_TEAM_DISBANDED_S = "%s has disbanded %s.";
2	ERR_ARENA_TEAM_FOUNDER_S = "Congratulations, you are a founding member of %s!  To leave, use /teamquit [2v2, 3v3, 5v5].";
2	ERR_ARENA_TEAM_INTERNAL = "Internal arena team error";
2	ERR_ARENA_TEAM_INVITE_SS = "You have invited %s to join %s.";
2	ERR_ARENA_TEAM_JOIN_SS = "%s has joined %s.";
2	ERR_ARENA_TEAM_LEADER_CHANGED_SSS = "%s has made %s the new captain of %s.";
2	ERR_ARENA_TEAM_LEADER_IS_SS = "%s is the captain of %s.";
2	ERR_ARENA_TEAM_LEADER_LEAVE_S = "You must promote a new team captain using /teamcaptain before leaving the team.";
2	ERR_ARENA_TEAM_LEAVE_SS = "%s has left %s.";
2	ERR_ARENA_TEAM_LEVEL_TOO_LOW_I = "You must be level %d to form an arena team.";
2	ERR_ARENA_TEAM_NAME_EXISTS_S = "There is already an arena team named \"%s\".";
2	ERR_ARENA_TEAM_NAME_INVALID = "That name contains invalid characters, please enter a new name.";
2	ERR_ARENA_TEAM_NOT_ALLIED = "You cannot invite players from the opposing alliance.";
2	ERR_ARENA_TEAM_NOT_FOUND = "That arena team has gone offline.";
2	ERR_ARENA_TEAM_PERMISSIONS = "You don't have permission to do that.";
2	ERR_ARENA_TEAM_PLAYER_NOT_FOUND_S = "\"%s\" not found.";
2	ERR_ARENA_TEAM_PLAYER_NOT_IN_TEAM = "You are not in an arena team of that size.";
2	ERR_ARENA_TEAM_PLAYER_NOT_IN_TEAM_SS = "%s is not in %s.";
2	ERR_ARENA_TEAM_QUIT_S = "You are no longer a member of %s.";
2	ERR_ARENA_TEAM_REMOVE_SSS = "%s has been kicked out of %s by %s.";
2	ERR_ARENA_TEAM_TARGET_TOO_HIGH_S = "%s's level is too high to join your team.";
2	ERR_ARENA_TEAM_TARGET_TOO_LOW_S = "%s is not high enough level to join your team.";
2	ERR_ARENA_TEAM_TOO_MANY_MEMBERS_S = "%s is full.";
2	ERR_ARENA_TEAM_YOU_JOIN_S = "You have joined %s.  To leave, use /teamquit [2v2, 3v3, 5v5].";
2	ERR_ATTACK_CHARMED = "Can't attack while charmed.";
2	ERR_ATTACK_CONFUSED = "Can't attack while confused.";
2	ERR_ATTACK_DEAD = "Can't attack while dead.";
2	ERR_ATTACK_FLEEING = "Can't attack while fleeing.";
2	ERR_ATTACK_MOUNTED = "Can't attack while mounted.";
2	ERR_ATTACK_PACIFIED = "Can't attack while pacified.";
2	ERR_ATTACK_PREVENTED_BY_MECHANIC_S = "Can't attack while %s."; -- %s is the mechanic state that prevented the action (e.g. disoriented, frozen, etc.)
2	ERR_ATTACK_STUNNED = "Can't attack while stunned.";
2	ERR_AUCTION_BAG = "You cannot sell a non-empty bag.";
2	ERR_AUCTION_BID_INCREMENT = "Your bid increment is too small.";
2	ERR_AUCTION_BID_OWN = "You cannot bid on your own auction.";
2	ERR_AUCTION_BID_PLACED = "Bid accepted.";
2	ERR_AUCTION_BOUND_ITEM = "You cannot sell a soulbound item.";
2	ERR_AUCTION_CONJURED_ITEM = "You cannot auction a conjured item.";
2	ERR_AUCTION_DATABASE_ERROR = "Internal auction error.";
2	ERR_AUCTION_EXPIRED_S = "Your auction of %s has expired."; -- %s is the item name
2	ERR_AUCTION_HIGHER_BID = "There is already a higher bid on that item.";
2	ERR_AUCTION_LOOT_ITEM = "You cannot auction a lootable item.";
2	ERR_AUCTION_MIN_BID = "You must meet the min bid.";
2	ERR_AUCTION_OUTBID_S = "You have been outbid on %s."; -- %s is the item name
2	ERR_AUCTION_QUEST_ITEM = "You cannot sell a quest item.";
2	ERR_AUCTION_REMOVED = "Auction cancelled.";
2	ERR_AUCTION_REMOVED_S = "Your auction of %s has been cancelled by the seller.";
2	ERR_AUCTION_REPAIR_ITEM = "You must repair that item before you auction it.";
2	ERR_AUCTION_SOLD_S = "A buyer has been found for your auction of %s."; -- %s is the item name
2	ERR_AUCTION_STARTED = "Auction created.";
2	ERR_AUCTION_USED_CHARGES = "You cannot auction an item with used charges";
2	ERR_AUCTION_WON_S = "You won an auction for %s"; -- %s is the item name
2	ERR_AUCTION_WRAPPED_ITEM = "You cannot auction a wrapped item.";
2	ERR_AUTOFOLLOW_TOO_FAR = "Target is too far away.";
2	ERR_AUTOLOOT_MONEY_S = "You loot %s";
2	ERR_BADATTACKFACING = "You are facing the wrong way!"; -- Melee combat error
2	ERR_BADATTACKPOS = "You are too far away!"; -- Melee combat error
2	ERR_BAD_ON_USE_ENCHANT = "That item already has an activated ability";
2	ERR_BAD_PLAYER_NAME_S = "Cannot find player '%s'."; -- %s is the target's name
2	ERR_BAG_FULL = "That bag is full.";
2	ERR_BAG_IN_BAG = "Can't put non-empty bags in other bags.";
2	ERR_BANKSLOT_FAILED_TOO_MANY = "You've reached your limit of bag slots!";
2	ERR_BANKSLOT_INSUFFICIENT_FUNDS = "You can't afford that.";
2	ERR_BANKSLOT_NOTBANKER = "That unit is not a banker!";
2	ERR_BANK_FULL = "Your bank is full";
2	ERR_BATTLEDGROUND_QUEUED_FOR_RATED = "You cannot queue for another battle while queued for a rated arena match";
2	ERR_BATTLEGROUND_CANNOT_QUEUE_FOR_RATED = "You cannot queue for a rated match while queued for other battles";
2	ERR_BATTLEGROUND_NOT_IN_TEAM = "Your group is not in the same team";
2	ERR_BATTLEGROUND_TEAM_LEFT_QUEUE = "Your team has left the arena queue";
2	ERR_BATTLEGROUND_TOO_MANY_QUEUES = "You can only be queued for 3 battles at once";
2	ERR_BG_PLAYER_JOINED_SS = "|Hplayer:%s|h[%s]|h has joined the battle";
2	ERR_BG_PLAYER_LEFT_S = "%s has left the battle";
2	ERR_BUTTON_LOCKED = "That has already been used.";
2	ERR_CANNOTCREATEDIRECTORY = "Cannot create directory %s.";
2	ERR_CANNOTCREATEFILE = "Cannot create file %s.";
2	ERR_CANTATTACK_NOTSTANDING = "You have to be standing to attack anything!";
2	ERR_CANT_DO_THAT_IN_A_GROUP = "You can't do that while in a group.";
2	ERR_CANT_DO_THAT_WHILE_LFM = "You can't look for a group while looking for more.";
2	ERR_CANT_EQUIP_EVER = "You can never use that item.";
2	ERR_CANT_EQUIP_LEVEL_I = "You must reach level %d to use that item."; -- %d is the required level
2	ERR_CANT_EQUIP_RANK = "You don't have the required rank for that item";
2	ERR_CANT_EQUIP_RATING = "Your personal or team arena rating is too low for that item";
2	ERR_CANT_EQUIP_REPUTATION = "You don't have the required reputation for that item";
2	ERR_CANT_EQUIP_SKILL = "You aren't skilled enough to use that item.";
2	ERR_CANT_INTERACT_SHAPESHIFTED = "Can't speak while shapeshifted.";
2	ERR_CANT_SPEAK_LANGAGE = "You cannot speak that language.";
2	ERR_CANT_STACK = "This item cannot stack.";
2	ERR_CANT_SWAP = "These items can't be swapped.";
2	ERR_CANT_USE_DISARMED = "You cannot use an item that is disarmed."; -- This error message happens when you attempt to use an item that a monster has disarmed from you.
2	ERR_CANT_USE_ITEM = "You can't use that item.";
2	ERR_CANT_USE_ITEM_IN_ARENA = "You can't use that item in an arena.";
2	ERR_CANT_WRAP_BAGS = "Bags can't be wrapped.";
2	ERR_CANT_WRAP_BOUND = "Bound items can't be wrapped.";
2	ERR_CANT_WRAP_EQUIPPED = "Equipped items can't be wrapped.";
2	ERR_CANT_WRAP_STACKABLE = "Stackable items can't be wrapped.";
2	ERR_CANT_WRAP_UNIQUE = "Unique items can't be wrapped.";
2	ERR_CANT_WRAP_WRAPPED = "Wrapped items can't be wrapped.";
2	ERR_CHAT_PLAYER_AMBIGUOUS_S = "%s: More than one player matches, type more of their server name";
2	ERR_CHAT_PLAYER_NOT_FOUND_S = "No player named '%s' is currently playing.";
2	ERR_CHAT_RESTRICTED = "Trial accounts cannot send unlimited tells, you must wait before you can send tells to more players.";
2	ERR_CHAT_THROTTLED = "The number of messages that can be sent is limited, please wait to send another message."; -- This is sent if the user somehow is able to send too many whispers per second.
2	ERR_CHAT_WHILE_DEAD = "You can't chat when you're dead!";
2	ERR_CHAT_WRONG_FACTION = "You can only whisper to members of your alliance.";
2	ERR_CHEST_IN_USE = "That is already being used.";
2	ERR_CLICK_ON_ITEM_TO_FEED = "Click on an item to feed to your pet";
2	ERR_CLIENT_LOCKED_OUT = "You can't do that right now.";
2	ERR_COMBAT_DAMAGE_SSI = "%s hits %s for %d damage!"; -- Attacker, target, and damage
2	ERR_COMMAND_NEEDS_TARGET = "You must specify a target: /<command> <target's name>";
2	ERR_COMPLAINT_IN_SAME_GUILD = "You can not complain about another guild member."; -- Users will get this error if they try to complain about chat or mail from another member of their guild.
2	ERR_COMSAT_CONNECT_FAIL = "Cannot connect to voice chat service.";
2	ERR_COMSAT_DISCONNECT = "Connection lost to Voice Chat service.";
2	ERR_COMSAT_RECONNECT_ATTEMPT = "Voice Chat service restored!";
2	ERR_DANCE_CREATE_DUPLICATE = "You already have a dance by that name";
2	ERR_DANCE_DELETE_FAILED = "Failed to delete dance";
2	ERR_DANCE_SAVE_FAILED = "Failed to save dance";
2	ERR_DEATHBINDALREADYBOUND = "You are already bound here!";
2	ERR_DEATHBIND_SUCCESS_S = "%s is now your home.";
2	ERR_DECLINE_GROUP_S = "%s declines your group invitation.";
2	ERR_DESTROY_NONEMPTY_BAG = "You can only do that with empty bags.";
2	ERR_DISMOUNT_NOPET = "INTERNAL ERROR, YOU DON'T HAVE A PET TO DISMOUNT";
2	ERR_DISMOUNT_NOTMOUNTED = "You're not mounted!";
2	ERR_DISMOUNT_NOTYOURPET = "INTERNAL ERROR, DISMOUNTING A NON-PET";
2	ERR_DOOR_LOCKED = "The door is locked.";
2	ERR_DROP_BOUND_ITEM = "You can't drop a soulbound item.";
2	ERR_DUEL_CANCELLED = "Duel cancelled.";
2	ERR_DUEL_REQUESTED = "You have requested a duel.";
2	ERR_DUNGEON_DIFFICULTY_CHANGED_S = "Dungeon Difficulty set to %s.";
2	ERR_DUNGEON_DIFFICULTY_FAILED = "Unable to change Dungeon Difficulty";
2	ERR_EAT_WHILE_MOVNG = "You can't eat while moving.";
2	ERR_EMBLEMERROR_NOTABARDGEOSET = "Change back to your normal form first!"; -- Displayed when attempting to create a guild emblem while in shapeshift form
2	ERR_EQUIP_TRADE_ITEM = "That item is currently being traded";
2	ERR_EXHAUSTION_EXHAUSTED = "You feel exhausted.";
2	ERR_EXHAUSTION_NORMAL = "You feel normal.";
2	ERR_EXHAUSTION_RESTED = "You feel rested.";
2	ERR_EXHAUSTION_TIRED = "You feel tired.";
2	ERR_EXHAUSTION_WELLRESTED = "You feel well rested.";
2	ERR_FEIGN_DEATH_RESISTED = "Resisted";
2	ERR_FILTERING_YOU_S = "Unable to send chat to %s because your message contained reserved words.";
2	ERR_FISH_ESCAPED = "Your fish got away!";
2	ERR_FISH_NOT_HOOKED = "No fish are hooked.";
2	ERR_FOOD_COOLDOWN = "You are too full to eat more now.";
2	ERR_FRIEND_ADDED_S = "%s added to friends.";
2	ERR_FRIEND_ALREADY_S = "%s is already your friend.";
2	ERR_FRIEND_DB_ERROR = "Friend lookup database error.";
2	ERR_FRIEND_DELETED = "Friend removed because the character no longer exists."; -- A friend was automatically removed from the player's friend list because the character has been deleted.
2	ERR_FRIEND_ERROR = "Unknown friend response from server.";
2	ERR_FRIEND_LIST_FULL = "You don't have room for any more friends.";
2	ERR_FRIEND_NOT_FOUND = "Player not found.";
2	ERR_FRIEND_OFFLINE_S = "%s has gone offline.";
2	ERR_FRIEND_ONLINE_SS = "|Hplayer:%s|h[%s]|h has come online."; -- The name is passed in twice to accomodate player name links - "|Hplayer:%s|h[%s]|h" should not be localized.
2	ERR_FRIEND_REMOVED_S = "%s removed from friends list.";
2	ERR_FRIEND_SELF = "You can't put yourself on your friend list.";
2	ERR_FRIEND_WRONG_FACTION = "Friends must be part of your alliance."; -- Player tried to set an enemy player as a friend
2	ERR_GENERIC_NO_TARGET = "You have no target.";
2	ERR_GENERIC_NO_VALID_TARGETS = "No valid targets.";
2	ERR_GENERIC_STUNNED = "You are stunned"; -- Generic failure due to being stunned (not spell/loot)
2	ERR_GROUP_ACTION_THROTTLED = "You have attempted too many group actions in a short period of time.  Please wait momentarily before attempting further group actions.";
2	ERR_GROUP_DISBANDED = "Your group has been disbanded.";
2	ERR_GROUP_FULL = "Your party is full.";
2	ERR_GROUP_JOIN_BATTLEGROUND_DESERTERS = "You cannot join the battleground yet because you or one of your party members is flagged as a Deserter.";
2	ERR_GROUP_JOIN_BATTLEGROUND_FAIL = "Your group has joined a battleground queue, but you are not eligible";
2	ERR_GROUP_JOIN_BATTLEGROUND_S = "Your group has joined the queue for %s";
2	ERR_GROUP_JOIN_BATTLEGROUND_TOO_MANY = "Your group is too big to join that battleground";
2	ERR_GROUP_SWAP_FAILED = "Players in raid combat cannot change raid subgroups";
2	ERR_GUILDEMBLEM_COLORSPRESENT = "Your guild already has an emblem!";
2	ERR_GUILDEMBLEM_INVALIDVENDOR = "That's not an emblem vendor!";
2	ERR_GUILDEMBLEM_INVALID_TABARD_COLORS = "Invalid Guild Emblem colors.";
2	ERR_GUILDEMBLEM_NOGUILD = "You are not part of a guild!";
2	ERR_GUILDEMBLEM_NOTENOUGHMONEY = "You can't afford to do that.";
2	ERR_GUILDEMBLEM_NOTGUILDMASTER = "Only guild leaders can create emblems.";
2	ERR_GUILDEMBLEM_SAME = "Not saved, your tabard is already like that.";
2	ERR_GUILDEMBLEM_SUCCESS = "Guild Emblem saved.";
2	ERR_GUILD_ACCEPT = "You have joined the guild.";
2	ERR_GUILD_BANK_BOUND_ITEM = "You cannot store soulbound items in the guild bank";
2	ERR_GUILD_BANK_CONJURED_ITEM = "You cannot store conjured items in the guild bank";
2	ERR_GUILD_BANK_EQUIPPED_ITEM = "You must unequip that item first";
2	ERR_GUILD_BANK_FULL = "This guild bank tab is full";
2	ERR_GUILD_BANK_QUEST_ITEM = "You cannot store quest items in the guild bank";
2	ERR_GUILD_BANK_WRAPPED_ITEM = "You cannot store wrapped items in the guild bank";
2	ERR_GUILD_CREATE_S = "%s created.";
2	ERR_GUILD_DECLINE_S = "%s declines your guild invitation.";
2	ERR_GUILD_DEMOTE_SSS = "%s has demoted %s to %s."; -- demoter's name, player's name, new rank
2	ERR_GUILD_DISBANDED = "Guild has been disbanded.";
2	ERR_GUILD_DISBAND_S = "%s has disbanded the guild."; -- %s is the guild leader
2	ERR_GUILD_DISBAND_SELF = "You have disbanded the guild.";
2	ERR_GUILD_FOUNDER_S = "Congratulations, you are a founding member of %s!";
2	ERR_GUILD_INTERNAL = "Internal guild error.";
2	ERR_GUILD_INVITE_S = "You have invited %s to join your guild.";
2	ERR_GUILD_JOIN_S = "%s has joined the guild."; -- %s is the player's name
2	ERR_GUILD_LEADER_CHANGED_SS = "%s has made %s the new Guild Master.";
2	ERR_GUILD_LEADER_IS_S = "%s is the leader of your guild.";
2	ERR_GUILD_LEADER_LEAVE = "You must promote a new Guild Master using /gleader before leaving the guild.";
2	ERR_GUILD_LEADER_S = "%s has been promoted to Guild Master.";
2	ERR_GUILD_LEADER_SELF = "You are now the Guild Master.";
2	ERR_GUILD_LEAVE_RESULT = "You have left the guild.";
2	ERR_GUILD_LEAVE_S = "%s has left the guild."; -- %s is the player's name
2	ERR_GUILD_NAME_EXISTS_S = "There is already a guild named \"%s\".";
2	ERR_GUILD_NOT_ALLIED = "You cannot invite players from the opposing alliance";
2	ERR_GUILD_NOT_ENOUGH_MONEY = "The guild bank does not have enough money";
2	ERR_GUILD_PERMISSIONS = "You don't have permission to do that.";
2	ERR_GUILD_PLAYER_NOT_FOUND_S = "\"%s\" not found.";
2	ERR_GUILD_PLAYER_NOT_IN_GUILD = "You are not in a guild.";
2	ERR_GUILD_PLAYER_NOT_IN_GUILD_S = "%s is not in your guild.";
2	ERR_GUILD_PROMOTE_SSS = "%s has promoted %s to %s."; -- promoter's name, player's name, new rank
2	ERR_GUILD_QUIT_S = "You are no longer a member of %s.";
2	ERR_GUILD_RANKS_LOCKED = "Temporary guild error.  Please try again!";
2	ERR_GUILD_RANK_IN_USE = "That guild rank is currently in use.";
2	ERR_GUILD_RANK_TOO_HIGH_S = "%s's rank is too high";
2	ERR_GUILD_RANK_TOO_LOW_S = "%s is already at the lowest rank";
2	ERR_GUILD_REMOVE_SELF = "You have been kicked out of the guild.";
2	ERR_GUILD_REMOVE_SS = "%s has been kicked out of the guild by %s."; -- %s is the player's name, then remover's name
2	ERR_GUILD_WITHDRAW_LIMIT = "You cannot withdraw that much from the guild bank.";
2	ERR_IGNORE_ADDED_S = "%s is now being ignored.";
2	ERR_IGNORE_ALREADY_S = "%s is already being ignored.";
2	ERR_IGNORE_AMBIGUOUS = "That name is ambiguous, type more of the player's server name";
2	ERR_IGNORE_DELETED = "Ignore removed because the character no longer exists."; -- An ignore was automatically removed from the player's ignore list because the character being ignored has been deleted.
2	ERR_IGNORE_FULL = "You can't ignore any more players.";
2	ERR_IGNORE_NOT_FOUND = "Player not found.";
2	ERR_IGNORE_REMOVED_S = "%s is no longer being ignored.";
2	ERR_IGNORE_SELF = "You can't ignore yourself.";
2	ERR_IGNORING_YOU_S = "%s is ignoring you.";
2	ERR_INITIATE_TRADE_S = "You have requested to trade with %s."; -- %s is your trade target
2	ERR_INSPECT_S = "%s is inspecting you.";
2	ERR_INTERNAL_BAG_ERROR = "Internal Bag Error";
2	ERR_INVALID_ATTACK_TARGET = "You cannot attack that target.";
2	ERR_INVALID_FOLLOW_TARGET = "You can't follow that unit.";
2	ERR_INVALID_GLYPH_SLOT = "That is not a valid glyph slot.";
2	ERR_INVALID_INSPECT_TARGET = "You can't inspect that unit.";
2	ERR_INVALID_ITEM_TARGET = "That item is not a valid target.";
2	ERR_INVALID_PROMOTION_CODE = "Couldn't validate code, please try again.";
2	ERR_INVALID_RAID_TARGET = "You cannot raid target enemy players";
2	ERR_INVITED_ALREADY_IN_GROUP_SS = "|Hplayer:%s|h[%s]|h invited you to a group, but you could not accept because you are already in a group."; -- The name is passed in twice to accomodate player name links - "|Hplayer:%s|h[%s]|h" should not be localized.
2	ERR_INVITED_TO_ARENA_TEAM = "You have already been invited into an arena team.";
2	ERR_INVITED_TO_GROUP_SS = "|Hplayer:%s|h[%s]|h has invited you to join a group."; -- The name is passed in twice to accomodate player name links - "|Hplayer:%s|h[%s]|h" should not be localized.
2	ERR_INVITED_TO_GUILD = "You have already been invited into a guild.";
2	ERR_INVITED_TO_GUILD_SSS = "|Hplayer:%s|h[%s]|h invites you to join %s."; -- The name is passed in twice to accomodate player name links - "|Hplayer:%s|h[%s]|h" should not be localized.
2	ERR_INVITE_IN_COMBAT = "You cannot invite a player in raid combat";
2	ERR_INVITE_PLAYER_S = "You have invited %s to join your group."; -- %s is the target player's name
2	ERR_INVITE_RESTRICTED = "Trial accounts cannot invite characters into groups.";
2	ERR_INVITE_SELF = "You can't invite yourself to a group.";
2	ERR_INV_FULL = "Inventory is full.";
2	ERR_ITEM_CANT_BE_DESTROYED = "That item cannot be destroyed.";
2	ERR_ITEM_COOLDOWN = "Item is not ready yet.";
2	ERR_ITEM_LOCKED = "Item is locked.";
2	ERR_ITEM_MAX_COUNT = "You can't carry any more of those items.";
2	ERR_ITEM_MAX_COUNT_EQUIPPED_SOCKETED = "You have the maximum number of those gems socketed into equipped items.";
2	ERR_ITEM_MAX_COUNT_SOCKETED = "You have the maximum number of those gems in your inventory or socketed into items.";
2	ERR_ITEM_MAX_LIMIT_CATEGORY_COUNT_EXCEEDED_IS = "You can only carry %d %s";
2	ERR_ITEM_MAX_LIMIT_CATEGORY_SOCKETED_EXCEEDED_IS = "You can only equip %d items in the %s category";
2	ERR_ITEM_NOT_FOUND = "The item was not found.";
2	ERR_ITEM_UNIQUE_EQUIPABLE = "You cannot equip more than one of those.";
2	ERR_ITEM_UNIQUE_EQUIPPABLE = "You cannot equip more than one of those.";
2	ERR_ITEM_UNIQUE_EQUIPPABLE_SOCKETED = "You cannot socket more than one of those gems into a single item.";
2	ERR_JOINED_GROUP_S = "%s joins the party."; -- %s is the player's name
2	ERR_KILLED_BY_S = "%s has slain you.";
2	ERR_LEARN_ABILITY_S = "You have learned a new ability: %s."; -- %s is the ability name
2	ERR_LEARN_COMPANION_S = "You have added the pet %s to your collection."; -- %s is the companion name
2	ERR_LEARN_RECIPE_S = "You have learned how to create a new item: %s."; -- %s is the recipe name
2	ERR_LEARN_SPELL_S = "You have learned a new spell: %s."; -- %s is the spell name
2	ERR_LEFT_GROUP_S = "%s leaves the party.";
2	ERR_LEFT_GROUP_YOU = "You leave the group.";
2	ERR_LFG_LEADER_IS_LFM_S = "You can't do that while %s is looking for more members."; -- Error message when a member tries to set LFG when the leader is LFM.
2	ERR_LFG_PENDING = "You already have a pending match."; -- Error message when a pending player tries to invite another player.
2	ERR_LOGGING_OUT = "You are logging out";
2	ERR_LOGOUT_FAILED = "You can't logout now.";
2	ERR_LOOT_BAD_FACING = "You must be facing the corpse to loot it.";
2	ERR_LOOT_CANT_LOOT_THAT = "You don't meet the requirements to loot that item";
2	ERR_LOOT_CANT_LOOT_THAT_NOW = "You can't loot that item now.";
2	ERR_LOOT_DIDNT_KILL = "You don't have permission to loot that corpse.";
2	ERR_LOOT_GONE = "Already looted";
2	ERR_LOOT_LOCKED = "Someone is already looting that corpse.";
2	ERR_LOOT_MASTER_INV_FULL = "That player's inventory is full"; -- Master looter error
2	ERR_LOOT_MASTER_OTHER = "Can't assign item to that player"; -- Master looter error, "unknown" reason
2	ERR_LOOT_MASTER_UNIQUE_ITEM = "Player has too many of that item already"; -- Master looter error for unique items
2	ERR_LOOT_NOTSTANDING = "You need to be standing up to loot something!";
2	ERR_LOOT_NO_UI = "You can't loot right now.";
2	ERR_LOOT_PLAYER_NOT_FOUND = "Player not found";
2	ERR_LOOT_ROLL_PENDING = "That item is still being rolled for.";
2	ERR_LOOT_STUNNED = "You can't loot anything while stunned!";
2	ERR_LOOT_TOO_FAR = "You are too far away to loot that corpse.";
2	ERR_LOOT_WHILE_INVULNERABLE = "Cannot loot while invulnerable.";
2	ERR_MAIL_BAG = "You can't mail non-empty bags.";
2	ERR_MAIL_BOUND_ITEM = "You can't mail soulbound items.";
2	ERR_MAIL_CONJURED_ITEM = "You cannot mail conjured items";
2	ERR_MAIL_DATABASE_ERROR = "Internal mail database error.";
2	ERR_MAIL_INVALID_ATTACHMENT = "A mail attachment was invalid.";
2	ERR_MAIL_INVALID_ATTACHMENT_SLOT = "You cannot attach more than 12 items to mail.";
2	ERR_MAIL_QUEST_ITEM = "You can't mail quest items.";
2	ERR_MAIL_REACHED_CAP = "You have reached the in-game cap of unique mail recipients"; -- Stopping mail bots
2	ERR_MAIL_SENT = "Mail sent.";
2	ERR_MAIL_TARGET_NOT_FOUND = "Cannot find mail recipient.";
2	ERR_MAIL_TOO_MANY_ATTACHMENTS = "A mail included too many attachments.";
2	ERR_MAIL_TO_SELF = "You can't send mail to yourself.";
2	ERR_MAIL_WRAPPED_COD = "You can't send wrapped items C.O.D.";
2	ERR_MATACHMAKING_MEMBER_STILL_IN_QUEUE = "Looking for a new party in the LFG matchmaking system.";
2	ERR_MATCHMAKING_AUTOJOIN_FAILED = "Group no longer available.";
2	ERR_MATCHMAKING_AUTOJOIN_FAILED_NO_PLAYER = "Matched Player(s) have gone offline."; -- The system couldn't complete the match because the pending player(s) are offline.
2	ERR_MATCHMAKING_IN_PROGRESS = "You are still seeking more members through the LFG matchmaking system.";
2	ERR_MATCHMAKING_MADE_LEADER = "You are the party leader!";
2	ERR_MATCHMAKING_MEMBER_ADDED_S = "%s has been added to the group by the LFG matchmaking system.";
2	ERR_MATCHMAKING_MEMBER_STILL_IN_QUEUE = "Looking for a new party in the LFG matchmaking system.";
2	ERR_MATCHMAKING_MUST_BE_LEADER = "You must be the party leader to use LFM and autojoin.";
2	ERR_MATCHMAKING_NOT_LEADER = "Only the party leader can leave the LFM matchmaking system.";
2	ERR_MATCHMAKING_NO_RAID_GROUP = "You cannot use the LFG matchmaking system while in a raid group.";
2	ERR_MATCHMAKING_OTHER_MEMBER_LEFT = "Party member has left.  Looking for a new party in the LFG matchmaking system.";
2	ERR_MATCHMAKING_OTHER_TIMEDOUT = "Matchmaking timed out waiting for other player."; -- Chat message when the other player takes too long to respond to the pending request.
2	ERR_MATCHMAKING_PARTY_KICKED_FROM_QUEUE = "Party member removed from group - party removed from the matchmaking system."; -- Leader kicks a member out of the party, system removes the group.
2	ERR_MATCHMAKING_PENDING_INVITE_S = "The LFG system has matched you to a group for %s."; -- Chat message when the system has a pending match for the player.
2	ERR_MATCHMAKING_PENDING_MATCH_S = "The LFG system is waiting to complete the match for %s."; -- Player has accepted a pending match and is waiting for the system to complete the match.
2	ERR_MATCHMAKING_SUCCESS = "Your group is complete, you have left the LFG matchmaking system.";
2	ERR_MATCHMAKING_TIMEDOUT = "Matchmaking timed out."; -- Error message when the system boots the player for not accepting/canceling a pending match.
2	ERR_MEETING_STONE_GROUP_FULL = "You are already in a full group";
2	ERR_MEETING_STONE_INVALID_LEVEL = "You do not meet the level requirements of this meeting stone.";
2	ERR_MEETING_STONE_INVALID_TARGET = "No target selected";
2	ERR_MEETING_STONE_IN_PROGRESS = "You are still seeking more members through the meeting stone.";
2	ERR_MEETING_STONE_IN_QUEUE_S = "You are now in the queue to join a party for %s.";
2	ERR_MEETING_STONE_LEFT_QUEUE_S = "You have left the queue to join a party for %s.";
2	ERR_MEETING_STONE_MEMBER_ADDED_S = "%s has been added to the group by the meeting stone.";
2	ERR_MEETING_STONE_MEMBER_STILL_IN_QUEUE = "Looking for a new party in the meeting stone queue.";
2	ERR_MEETING_STONE_MUST_BE_LEADER = "You must be the party leader to interact with the meeting stone";
2	ERR_MEETING_STONE_NEED_PARTY = "You need to be in a party to use a meeting stone";
2	ERR_MEETING_STONE_NOT_FOUND = "Player not found.";
2	ERR_MEETING_STONE_NOT_LEADER = "Only the party leader can leave the meeting stone queue";
2	ERR_MEETING_STONE_NO_RAID_GROUP = "You cannot use a meeting stone while in a raid group";
2	ERR_MEETING_STONE_OTHER_MEMBER_LEFT = "Party member has left.  Looking for a new party in the meeting stone queue.";
2	ERR_MEETING_STONE_SUCCESS = "Your group is complete, you have left the meeting stone queue.";
2	ERR_MEETING_STONE_TARGET_INVALID_LEVEL = "Your target does not meet the level requirements of this meeting stone.";
2	ERR_MEETING_STONE_TARGET_NOT_IN_PARTY = "Your target is not in the party";
2	ERR_MOUNT_ALREADYMOUNTED = "You're already mounted.";
2	ERR_MOUNT_FORCEDDISMOUNT = "You dismount before continuing.";
2	ERR_MOUNT_INVALIDMOUNTEE = "You can't mount that unit.";
2	ERR_MOUNT_LOOTING = "You can't mount while looting!";
2	ERR_MOUNT_NOTMOUNTABLE = "That unit can't be mounted.";
2	ERR_MOUNT_NOTYOURPET = "That mount isn't your pet!";
2	ERR_MOUNT_OTHER = "UNKNOWN MOUNT ERROR";
2	ERR_MOUNT_RACECANTMOUNT = "You can't mount because of your race.";
2	ERR_MOUNT_SHAPESHIFTED = "You can't mount while shapeshifted.";
2	ERR_MOUNT_TOOFARAWAY = "That mount is too far away.";
2	ERR_MUST_EQUIP_ITEM = "You must equip that item to use it.";
2	ERR_MUST_REPAIR_DURABILITY = "You must repair that item's durability to use it."; -- This is the error message displayed when a player tries to use an item that has run out of durability.
2	ERR_NAME_CONSECUTIVE_SPACES = "Consecutive spaces are not allowed.  Enter a new name.";
2	ERR_NAME_DECLENSION_DOESNT_MATCH_BASE_NAME = "Your declensions must match your original name.  Enter a new name.";
2	ERR_NAME_INVALID = "That name contains invalid characters,  Enter a new name.";
2	ERR_NAME_INVALID_SPACE = "Names cannot start or end with a space.  Enter a new name.";
2	ERR_NAME_MIXED_LANGUAGES = "Names must use one language.  Enter a new name.";
2	ERR_NAME_NO_NAME = "Please enter a name.";
2	ERR_NAME_PROFANE = "That name contains mature language.  Enter a new name.";
2	ERR_NAME_RESERVED = "That name is reserved.  Enter a new name.";
2	ERR_NAME_RUSSIAN_CONSECUTIVE_SILENT_CHARACTERS = "Consecutive silent characters are not allowed. Create a new name."; -- This error only displays in Russian, so the english version doesn't matter. RUSSION LOCALIZATION - should rewrite as appropriate
2	ERR_NAME_RUSSIAN_SILENT_CHARACTER_AT_BEGINNING_OR_END = "Silent characters are now allowed at the beginning or end of a name. Create a new name."; -- This error only displays in Russian, so the english version doesn't matter. RUSSION LOCALIZATION - should rewrite as appropriate
2	ERR_NAME_THREE_CONSECUTIVE = "You cannot use the same letter three times consecutively.  Enter a new name.";
2	ERR_NAME_TOO_LONG = "That name is too long.  Enter a new name.";
2	ERR_NAME_TOO_SHORT = "That name is too short.  Enter a new name.";
2	ERR_NEWTAXIPATH = "New flight path discovered!";
2	ERR_NEW_LEADER_S = "%s is now the group leader."; -- Player %s is the new group leader
2	ERR_NEW_LEADER_YOU = "You are now the group leader.";
2	ERR_NEW_LOOT_MASTER_S = "%s is now the loot master.";
2	ERR_NOAMMO_S = "%s";
2	ERR_NOEMOTEWHILERUNNING = "You can't do that while moving!";
2	ERR_NOTYOURPET = "That is not your pet!";
2	ERR_NOT_A_BAG = "Not a bag.";
2	ERR_NOT_BARBER_SITTING = "You must be sitting in a barber chair";
2	ERR_NOT_DURING_ARENA_MATCH = "You can't do that while in an arena match";
2	ERR_NOT_ENOUGH_ARENA_POINTS = "You don't have enough arena points";
2	ERR_NOT_ENOUGH_GOLD = "Not enough gold";
2	ERR_NOT_ENOUGH_HONOR_POINTS = "You don't have enough honor points";
2	ERR_NOT_ENOUGH_MONEY = "You don't have enough money.";
2	ERR_NOT_EQUIPPABLE = "This item cannot be equipped.";
2	ERR_NOT_IN_BATTLEGROUND = "You are not in a battleground";
2	ERR_NOT_IN_COMBAT = "You can't do that while in combat";
2	ERR_NOT_IN_GROUP = "You aren't in a party.";
2	ERR_NOT_IN_RAID = "You are not in a raid group";
2	ERR_NOT_LEADER = "You are not the party leader.";
2	ERR_NOT_OWNER = "You don't own that item.";
2	ERR_NOT_SAME_ACCOUNT = "Artifacts can only be mailed to your own characters.";
2	ERR_NOT_WHILE_DISARMED = "You can't do that while disarmed";
2	ERR_NOT_WHILE_MOUNTED = "You can't do that while mounted.";
2	ERR_NOT_WHILE_SHAPESHIFTED = "You can't do that while shapeshifted.";
2	ERR_NO_ARENA_CHARTER = "You don't have that arena team charter.";
2	ERR_NO_ATTACK_TARGET = "There is nothing to attack.";
2	ERR_NO_BANK_HERE = "You are too far away from a bank.";
2	ERR_NO_BANK_SLOT = "You must purchase that bag slot first";
2	ERR_NO_GUILD_CHARTER = "You don't have a guild charter.";
2	ERR_NO_ITEMS_WHILE_SHAPESHIFTED = "Can't use items while shapeshifted.";
2	ERR_NO_PET = "You don't have a pet!";
2	ERR_NO_REPLY_TARGET = "You have nobody to reply to yet.";
2	ERR_NO_SLOT_AVAILABLE = "No equipment slot is available for that item.";
2	ERR_NULL_PETNAME = "Error, empty pet name entered.";
2	ERR_OBJECT_IS_BUSY = "That object is busy.";
2	ERR_ONLY_ONE_AMMO = "You can only equip one ammo pouch."; -- Only one ammo pouch at a time
2	ERR_ONLY_ONE_BOLT = "You can only equip one quiver."; -- Only one quiver at a time (crossbows)
2	ERR_ONLY_ONE_QUIVER = "You can only equip one quiver."; -- Only one quiver at a time
2	ERR_OUT_OF_ENERGY = "Not enough energy";
2	ERR_OUT_OF_FOCUS = "Not enough focus";
2	ERR_OUT_OF_HEALTH = "Not enough health";
2	ERR_OUT_OF_MANA = "Not enough mana";
2	ERR_OUT_OF_RAGE = "Not enough rage";
2	ERR_OUT_OF_RANGE = "Out of range.";
2	ERR_OUT_OF_RUNES = "Not enough runes";
2	ERR_OUT_OF_RUNIC_POWER = "Not enough runic power";
2	ERR_PASSIVE_ABILITY = "You can't put a passive ability in the action bar.";
2	ERR_PETITION_ALREADY_SIGNED = "You have already signed that charter.";
2	ERR_PETITION_ALREADY_SIGNED_OTHER = "You've already signed another guild charter"; -- You can only sign one
2	ERR_PETITION_CREATOR = "You can't sign your own charter.";
2	ERR_PETITION_DECLINED_S = "%s has declined to sign your petition.";
2	ERR_PETITION_FULL = "That petition is full";
2	ERR_PETITION_IN_GUILD = "You are already in a guild.";
2	ERR_PETITION_NOT_ENOUGH_SIGNATURES = "You need more signatures.";
2	ERR_PETITION_NOT_SAME_SERVER = "That player is not from your server";
2	ERR_PETITION_OFFERED_S = "You have requested %s's signature.";
2	ERR_PETITION_RESTRICTED_ACCOUNT = "Trial accounts may not sign guild charters.";
2	ERR_PETITION_SIGNED = "Charter signed.";
2	ERR_PETITION_SIGNED_S = "%s has signed your charter.";
2	ERR_PET_BROKEN = "Your pet has run away";
2	ERR_PET_LEARN_ABILITY_S = "Your pet has learned a new ability: %s."; -- %s is the ability name
2	ERR_PET_LEARN_SPELL_S = "Your pet has learned a new spell: %s."; -- %s is the spell name
2	ERR_PET_NOT_RENAMEABLE = "Your pet can't be renamed.";
2	ERR_PET_SPELL_AFFECTING_COMBAT = "Your pet is in combat.";
2	ERR_PET_SPELL_ALREADY_KNOWN_S = "Your pet already knows %s.";
2	ERR_PET_SPELL_DEAD = "Your pet is dead.";
2	ERR_PET_SPELL_NOT_BEHIND = "Your pet must be behind its target.";
2	ERR_PET_SPELL_OUT_OF_RANGE = "Your pet is out of range.";
2	ERR_PET_SPELL_ROOTED = "Your pet is unable to move.";
2	ERR_PET_SPELL_TARGETS_DEAD = "Your pet's target is dead.";
2	ERR_PET_SPELL_UNLEARNED_S = "Your pet has unlearned %s.";
2	ERR_PLAYERLIST_JOINED_BATTLE = "%d players have joined the battle: %s"; -- Displayed when several players join a BG at once. '4 players have joined the battle: foo, bar, man, dog'
2	ERR_PLAYERLIST_LEFT_BATTLE = "%d players have left the battle: %s"; -- Message displayed when several players leave a battle: '4 players have left the battle: Leeroy, Jenkins, Charge, Foo'
2	ERR_PLAYERS_JOINED_BATTLE_D = "%d players have joined the battle."; -- Displayed when multiple players join a battleground.
2	ERR_PLAYERS_LEFT_BATTLE_D = "%d players have left the battle."; -- Displayed when multiple players leave a battleground.
2	ERR_PLAYER_BUSY_S = "%s is busy right now.";
2	ERR_PLAYER_DEAD = "You can't do that when you're dead.";
2	ERR_PLAYER_DIED_S = "%s has died."; -- %s is the player's name
2	ERR_PLAYER_JOINED_BATTLE_D = "%s has joined the battle."; -- Displayed when a single player joins a battleground.
2	ERR_PLAYER_LEFT_BATTLE_D = "%s has left the battle."; -- Displayed when a single player leaves a battleground.
2	ERR_PLAYER_SILENCED = "A group leader has removed your voice privileges.";
2	ERR_PLAYER_SILENCED_ECHO = "You have removed the voice privileges of %s.";
2	ERR_PLAYER_UNSILENCED = "A group leader has restored your voice privileges.";
2	ERR_PLAYER_UNSILENCED_ECHO = "You have restored the voice privileges of %s.";
2	ERR_PLAYER_WRONG_FACTION = "Target is unfriendly.";
2	ERR_PLAY_TIME_EXCEEDED = "Maximum play time exceeded"; -- Sent when trying to loot anything after play time has been exceeded
2	ERR_POTION_COOLDOWN = "You cannot drink any more yet.";
2	ERR_PROFANE_CHAT_NAME = "You may not create custom channels with profane names.";
2	ERR_PROFICIENCY_GAINED_S = "You have gained %s proficiency.";
2	ERR_PROFICIENCY_NEEDED = "You do not have the required proficiency for that item.";
2	ERR_PURCHASE_LEVEL_TOO_LOW = "You must reach level %d to purchase that item."; -- %d is the level number.
2	ERR_PVP_TOGGLE_OFF = "PvP combat toggled off";
2	ERR_PVP_TOGGLE_ON = "PvP combat toggled on";
2	ERR_QUEST_ACCEPTED_S = "Quest accepted: %s"; -- %s is the quest name
2	ERR_QUEST_ADD_FOUND_SII = "%s: %d/%d"; -- %s is the object name
2	ERR_QUEST_ADD_ITEM_SII = "%s: %d/%d"; -- %s is the item name
2	ERR_QUEST_ADD_KILL_SII = "%s slain: %d/%d"; -- %s is the monster name
2	ERR_QUEST_ADD_PLAYER_KILL_SII = "Players slain: %d/%d";
2	ERR_QUEST_ALREADY_DONE = "You have completed that quest.";
2	ERR_QUEST_ALREADY_DONE_DAILY = "You have completed that daily quest today.";
2	ERR_QUEST_ALREADY_ON = "You are already on that quest";
2	ERR_QUEST_COMPLETE_S = "%s completed."; -- %s is the quest name
2	ERR_QUEST_FAILED_BAG_FULL_S = "%s failed: Inventory is full."; -- %s is the quest name
2	ERR_QUEST_FAILED_CAIS = "You cannot complete quests once you have reached tired time";
2	ERR_QUEST_FAILED_EXPANSION = "This quest requires an expansion enabled account.";
2	ERR_QUEST_FAILED_LOW_LEVEL = "You are not high enough level for that quest.";
2	ERR_QUEST_FAILED_MAX_COUNT_S = "%s failed: Duplicate item found."; -- %s is the quest name
2	ERR_QUEST_FAILED_MISSING_ITEMS = "You don't have the required items with you.  Check storage.";
2	ERR_QUEST_FAILED_NOT_ENOUGH_MONEY = "You don't have enough money for that quest";
2	ERR_QUEST_FAILED_S = "%s failed."; -- %s is the quest name
2	ERR_QUEST_FAILED_TOO_MANY_DAILY_QUESTS_I = "You have already completed %d daily quests today"; -- When trying to turn in a daily quest but already at limit
2	ERR_QUEST_FAILED_WRONG_RACE = "That quest is not available to your race.";
2	ERR_QUEST_LOG_FULL = "Your quest log is full.";
2	ERR_QUEST_MUST_CHOOSE = "You must choose a reward.";
2	ERR_QUEST_NEED_PREREQS = "You don't meet the requirements for that quest";
2	ERR_QUEST_OBJECTIVE_COMPLETE_S = "%s (Complete)"; -- %s is the objective text
2	ERR_QUEST_ONLY_ONE_TIMED = "You can only be on one timed quest at a time";
2	ERR_QUEST_PUSH_ACCEPTED_S = "%s has accepted your quest";
2	ERR_QUEST_PUSH_ALREADY_DONE_S = "%s has completed that quest";
2	ERR_QUEST_PUSH_BUSY_S = "%s is busy";
2	ERR_QUEST_PUSH_DECLINED_S = "%s has declined your quest";
2	ERR_QUEST_PUSH_INVALID_S = "%s is not eligible for that quest";
2	ERR_QUEST_PUSH_LOG_FULL_S = "%s's quest log is full";
2	ERR_QUEST_PUSH_NOT_DAILY_S = "That quest cannot be shared today";
2	ERR_QUEST_PUSH_NOT_IN_PARTY_S = "You are not in a party";
2	ERR_QUEST_PUSH_ONQUEST_S = "%s is already on that quest";
2	ERR_QUEST_PUSH_SUCCESS_S = "Sharing quest with %s...";
2	ERR_QUEST_PUSH_TIMER_EXPIRED_S = "Quest sharing timer has expired";
2	ERR_QUEST_REWARD_EXP_I = "Experience gained: %d."; -- %d is amount of xp gain
2	ERR_QUEST_REWARD_ITEM_MULT_IS = "Received %d of item: %s."; -- %d is how many of item received, %s is name of item received
2	ERR_QUEST_REWARD_ITEM_S = "Received item: %s."; -- %s is the item name
2	ERR_QUEST_REWARD_MONEY_S = "Received %s."; -- %s is string containing money amounts
2	ERR_QUEST_UNKNOWN_COMPLETE = "Objective Complete.";
2	ERR_RAID_GROUP_FULL = "The instance is full.";
2	ERR_RAID_GROUP_LOWLEVEL = "You are too low level to enter this instance.";
2	ERR_RAID_GROUP_ONLY = "You must be in a raid group to enter this instance.";
2	ERR_RAID_LEADER_READY_CHECK_START_S = "%s has initiated a ready check.";
2	ERR_RAID_MEMBER_ADDED_S = "%s has joined the raid group.";
2	ERR_RAID_MEMBER_REMOVED_S = "%s has left the raid group.";
2	ERR_RAID_YOU_JOINED = "You have joined a raid group.";
2	ERR_RAID_YOU_LEFT = "You have left the raid group.";
2	ERR_READY_CHECK_IN_PROGRESS = "You are already running a ready check";
2	ERR_READY_CHECK_THROTTLED = "You can't do that yet"; -- Appears when a player sends too many ready check requests to the server.
2	ERR_RECEIVE_ITEM_S = "%s received."; -- player was given an item called %s
2	ERR_REFER_A_FRIEND_DIFFERENT_FACTION = "You cannot grant levels to a character of the opposite faction";
2	ERR_REFER_A_FRIEND_GRANT_LEVEL_MAX_I = "You cannot grant levels to players level %d or higher";
2	ERR_REFER_A_FRIEND_INSUFFICIENT_GRANTABLE_LEVELS = "You have not earned enough levels to grant any more levels";
2	ERR_REFER_A_FRIEND_INSUF_EXPAN_LVL = "That player does not have the required expansion to access this area";
2	ERR_REFER_A_FRIEND_NOT_NOW = "You cannot grant that player a level right now.";
2	ERR_REFER_A_FRIEND_NOT_REFERRED_BY = "You were not referred by that player";
2	ERR_REFER_A_FRIEND_SUMMON_COOLDOWN = "You can only summon your friend once per hour";
2	ERR_REFER_A_FRIEND_SUMMON_LEVEL_MAX_I = "You cannot summon players above level %d";
2	ERR_REFER_A_FRIEND_SUMMON_OFFLINE_S = "%s is offline and cannot be summoned";
2	ERR_REFER_A_FRIEND_TARGET_TOO_HIGH = "That player's level is too high";
2	ERR_REFER_A_FRIEND_TOO_FAR = "That player is too far away";
2	ERR_RESTRICTED_ACCOUNT = "Trial accounts cannot perform that action";
2	ERR_SCALING_STAT_ITEM_LEVEL_EXCEEDED = "Your level is too high to use that item";
2	ERR_SET_LOOT_FREEFORALL = "Looting changed to Free for All.";
2	ERR_SET_LOOT_GROUP = "Looting changed to Group Loot.";
2	ERR_SET_LOOT_MASTER = "Looting changed to Master Looter.";
2	ERR_SET_LOOT_NBG = "Looting set to Need Before Greed.";
2	ERR_SET_LOOT_ROUNDROBIN = "Looting changed to Round Robin.";
2	ERR_SET_LOOT_THRESHOLD_S = "Loot threshold set to %s.";
2	ERR_SKILL_GAINED_S = "You have gained the %s skill."; -- %s is the skill name
2	ERR_SKILL_UP_SI = "Your skill in %s has increased to %d."; -- %s is the skill name, %d is the new rank
2	ERR_SLOT_EMPTY = "That slot is empty.";
2	ERR_SOCKETING_META_GEM_ONLY_IN_METASLOT = "Meta gems can only be placed in meta gem slots";
2	ERR_SOCKETING_REQUIRES_META_GEM = "That slot requires a meta gem";
2	ERR_SPECIFY_MASTER_LOOTER = "You must specify a loot master.";
2	ERR_SPELL_ALREADY_KNOWN_S = "You already know %s."; -- %s is the spell name
2	ERR_SPELL_COOLDOWN = "Spell is not ready yet.";
2	ERR_SPELL_FAILED_ALREADY_AT_FULL_HEALTH = "You are already at full Health";
2	ERR_SPELL_FAILED_ALREADY_AT_FULL_MANA = "You are already at full Mana";
2	ERR_SPELL_FAILED_ALREADY_AT_FULL_POWER_S = "You are already at full %s";
2	ERR_SPELL_FAILED_EQUIPPED_ITEM = "Must have the proper item equipped";
2	ERR_SPELL_FAILED_EQUIPPED_ITEM_CLASS_S = "%s";
2	ERR_SPELL_FAILED_NOTUNSHEATHED = "You have to be unsheathed to do that!";
2	ERR_SPELL_FAILED_REAGENTS = "%s";
2	ERR_SPELL_FAILED_REAGENTS_GENERIC = "Missing reagent";
2	ERR_SPELL_FAILED_S = "%s";
2	ERR_SPELL_FAILED_SHAPESHIFT_FORM_S = "%s";
2	ERR_SPELL_FAILED_TOTEMS = "%s";
2	ERR_SPELL_OUT_OF_RANGE = "Out of range.";
2	ERR_SPELL_UNLEARNED_S = "You have unlearned %s.";
2	ERR_SPLIT_FAILED = "Couldn't split those items.";
2	ERR_SYSTEM_DISABLED = "This system is currently disabled.";
2	ERR_TALENT_WIPE_ERROR = "You have not spent any talent points.";
2	ERR_TAME_FAILED = "%s.";
2	ERR_TARGET_LOGGING_OUT = "That player is logging out";
2	ERR_TARGET_NOT_IN_GROUP_S = "%s is not in your party.";
2	ERR_TARGET_NOT_IN_INSTANCE_S = "%s is not in your instance.";
2	ERR_TARGET_STUNNED = "Target is stunned"; -- Trade failure
2	ERR_TAXINOPATH = "The selected path doesn't exist!";
2	ERR_TAXINOPATHS = "You don’t know any flight locations connected to this one.";
2	ERR_TAXINOSUCHPATH = "There is no direct path to that destination!";
2	ERR_TAXINOTENOUGHMONEY = "You don't have enough money!";
2	ERR_TAXINOTSTANDING = "You need to be standing to go anywhere.";
2	ERR_TAXINOTVISITED = "You haven't reached that taxi node on foot yet!";
2	ERR_TAXINOVENDORNEARBY = "There is no taxi vendor nearby!";
2	ERR_TAXIPLAYERALREADYMOUNTED = "You are already mounted! Dismount first.";
2	ERR_TAXIPLAYERBUSY = "You are busy and can't use the taxi service now.";
2	ERR_TAXIPLAYERMOVING = "You are moving.";
2	ERR_TAXIPLAYERSHAPESHIFTED = "You can't take a taxi while shapeshifted!";
2	ERR_TAXISAMENODE = "You are already there!";
2	ERR_TAXITOOFARAWAY = "You are too far away from the taxi stand!";
2	ERR_TAXIUNSPECIFIEDSERVERERROR = "UNSPECIFIED TAXI SERVER ERROR";
2	ERR_TICKET_ALREADY_EXISTS = "You already have a GM ticket.";
2	ERR_TICKET_CREATE_ERROR = "Error creating GM ticket.";
2	ERR_TICKET_DB_ERROR = "Error retrieving GM ticket.";
2	ERR_TICKET_NO_TEXT = "You must enter text for your ticket.";
2	ERR_TICKET_TEXT_TOO_LONG = "Your ticket text was too long.";
2	ERR_TICKET_UPDATE_ERROR = "Error updating GM ticket.";
2	ERR_TOOBUSYTOFOLLOW = "You're too busy to follow anything!";
2	ERR_TOO_FAR_TO_ATTACK = "You are too far away from your victim!"; -- Player is too far from the target
2	ERR_TOO_FEW_TO_SPLIT = "Tried to split more than number in stack.";
2	ERR_TOO_MANY_CHAT_CHANNELS = "You can only be in 10 channels at a time.";
2	ERR_TOO_MANY_SOCKETS = "That item has too many sockets";
2	ERR_TOO_MANY_SPECIAL_BAGS = "You cannot equip another bag of that type";
2	ERR_TOO_MUCH_GOLD = "At gold limit"; -- When trading money to a player and the trade would put them over the gold limit
2	ERR_TRADE_BAG = "You can't trade non-empty bags.";
2	ERR_TRADE_BAG_FULL = "Trade failed, you don't have enough space.";
2	ERR_TRADE_BLOCKED_S = "%s has requested to trade.  You have refused.";
2	ERR_TRADE_BOUND_ITEM = "You can't trade a soulbound item.";
2	ERR_TRADE_CANCELLED = "Trade cancelled.";
2	ERR_TRADE_COMPLETE = "Trade complete.";
2	ERR_TRADE_EQUIPPED_BAG = "You can't trade equipped bags.";
2	ERR_TRADE_GROUND_ITEM = "You can't trade an item from the ground.";
2	ERR_TRADE_MAX_COUNT_EXCEEDED = "You have too many of a unique item.";
2	ERR_TRADE_QUEST_ITEM = "You can't trade a quest item.";
2	ERR_TRADE_REQUEST_S = "%s has requested to trade with you."; -- %s is the trade initiator
2	ERR_TRADE_SELF = "You can't trade with yourself.";
2	ERR_TRADE_TARGET_BAG_FULL = "Trade failed, target doesn't have enough space.";
2	ERR_TRADE_TARGET_DEAD = "You can't trade with dead players.";
2	ERR_TRADE_TARGET_MAX_COUNT_EXCEEDED = "Your trade partner has too many of a unique item.";
2	ERR_TRADE_TARGET_MAX_LIMIT_CATEGORY_COUNT_EXCEEDED_IS = "Your trade partner can only carry %d %s";
2	ERR_TRADE_TOO_FAR = "Trade target is too far away.";
2	ERR_TRADE_WRONG_REALM = "You may only trade conjured items to players from other realms";
2	ERR_UNHEALTHY_TIME = "You are in unhealthy time, you should log off now."; -- Sent every 15 minutes in unhealthy time.
2	ERR_UNINVITE_YOU = "You have been removed from the group.";
2	ERR_UNIT_NOT_FOUND = "Unknown unit.";
2	ERR_UNKNOWN_MACRO_OPTION_S = "Unknown macro option: %s";
2	ERR_USER_SQUELCHED = "Your chat and mail privileges have been temporarily suspended pending Game Master review.";
2	ERR_USE_BAD_ANGLE = "You aren't facing the right angle!";
2	ERR_USE_CANT_IMMUNE = "You can't do that while you are immune."; -- This is the error message when a player is under any kind of immunity effect and they are not allowed to do something because of it
2	ERR_USE_CANT_OPEN = "You can't open that.";
2	ERR_USE_DESTROYED = "That is destroyed.";
2	ERR_USE_LOCKED = "Item is locked.";
2	ERR_USE_LOCKED_WITH_ITEM_S = "Requires %s"; -- %s is the item required
2	ERR_USE_LOCKED_WITH_SPELL_KNOWN_SI = "Requires %s %d"; -- %s is the open lock skill required, %d is the required rank
2	ERR_USE_LOCKED_WITH_SPELL_S = "Requires %s"; -- %s is the open lock skill required
2	ERR_USE_OBJECT_MOVING = "Object is in motion.";
2	ERR_USE_PREVENTED_BY_MECHANIC_S = "Can't use while %s."; -- %s is the mechanic state that prevented the action (e.g. disoriented, frozen, etc.)
2	ERR_USE_SPELL_FOCUS = "Object is a spell focus.";
2	ERR_USE_TOO_FAR = "You are too far away.";
2	ERR_VENDOR_DOESNT_BUY = "You cannot sell items to this merchant";
2	ERR_VENDOR_HATES_YOU = "That merchant doesn't like you.";
2	ERR_VENDOR_MISSING_TURNINS = "You do not have the required items for that purchase";
2	ERR_VENDOR_NOT_INTERESTED = "The merchant doesn't want that item.";
2	ERR_VENDOR_SOLD_OUT = "That item is currently sold out.";
2	ERR_VENDOR_TOO_FAR = "You are too far away.";
2	ERR_VOICESESSION_FULL = "The voice session you are attempting to join is full.";
2	ERR_VOICE_CHAT_PARENTAL_DISABLE_ALL = "Voice Chat has been disabled by Parental Controls.";
2	ERR_VOICE_CHAT_PARENTAL_DISABLE_MIC = "Microphone has been disabled by Parental Controls.";
2	ERR_VOICE_IGNORE_ADDED_S = "%s is now being voice muted.";
2	ERR_VOICE_IGNORE_ALREADY_S = "%s is already being voice muted.";
2	ERR_VOICE_IGNORE_AMBIGUOUS = "That name is ambiguous, type more of the player's server name.";
2	ERR_VOICE_IGNORE_DELETED = "Voice mute removed because the character no longer exists.";
2	ERR_VOICE_IGNORE_FULL = "You can't voice mute any more players.";
2	ERR_VOICE_IGNORE_NOT_FOUND = "Player not found.";
2	ERR_VOICE_IGNORE_REMOVED_S = "%s is no longer being voice muted.";
2	ERR_VOICE_IGNORE_SELF = "You can't voice mute yourself.";
2	ERR_WRONG_BAG_TYPE = "That item doesn't go in that container.";
2	ERR_WRONG_BAG_TYPE_SUBCLASS = "Only %s can be placed in that.";
2	ERR_WRONG_DIRECTION_FOR_ATTACK = "You aren't facing the right way to attack!"; -- Player is not facing the target
2	ERR_WRONG_SLOT = "That item does not go in that slot.";
2	ERR_ZONE_EXPLORED = "Discovered: %s";
2	ERR_ZONE_EXPLORED_XP = "Discovered %s: %d experience gained";
2	ESES = "Spanish (EU)";
2	ESMX = "Spanish (Latin American)";
2	EVADE = "Evade"; -- Evade, first letter capitalized
2	EXAMPLE_SPELL_FIREBALL = "Fireball";
2	EXAMPLE_SPELL_FROSTBOLT = "Frostbolt"; -- A sample spell used in example text for configuring the combatlog
2	EXAMPLE_TARGET_MONSTER = "Monster"; -- Used in example text when configuring the combat log
2	EXAMPLE_TEXT = "Example Text:";
2	EXHAUSTION_LABEL = "Fatigue"; -- Used as the label for the exhaustion status bar
2	EXHAUST_TOOLTIP1 = "|cffffd200%s|r\n|cffffffff%d%% of normal experience\ngained from monsters.|r";
2	EXHAUST_TOOLTIP2 = "\n|cffff0000You should rest at an Inn.|r";
2	EXHAUST_TOOLTIP3 = "\n\nIn this condition, you can get\n%d more monster experience\nbefore the next rest state.";
2	EXHAUST_TOOLTIP4 = "\n\n|cffffd200Resting|r\n|cffffffffYou must rest for %d additional\nminutes to become|r |cffffd200Fully Rested|r|cffffffff.|r";
2	EXIT = "Exit"; -- Generic "exit"
2	EXIT_GAME = "Exit Game";
2	EXOTICS = "Exotic Weapons"; -- Exotic Weapons
2	EXPANSION_NAME0 = "Classic";
2	EXPANSION_NAME1 = "The Burning Crusade";
2	EXPANSION_NAME2 = "Wrath of the Lich King";
2	EXPERIENCE_COLON = "Experience:"; -- Character's experience, with colon
2	EXTRA_ATTACKS = "Extra Attacks";
2	English = "";
2	FACIAL_HAIR_EARRINGS = "Earrings";
2	FACIAL_HAIR_FEATURES = "Features";
2	FACIAL_HAIR_HAIR = "Hair";
2	FACIAL_HAIR_HORNS = "Horn Style";
2	FACIAL_HAIR_MARKINGS = "Markings";
2	FACIAL_HAIR_NORMAL = "Facial Hair";
2	FACIAL_HAIR_PIERCINGS = "Piercings";
2	FACIAL_HAIR_TUSKS = "Tusks";
2	FACING_WRONG_DIRECTION = "You aren't facing the right direction!"; -- The player is facing the wrong direction
2	FACTION = "Faction"; -- Generic faction label
2	FACTION_ALLIANCE = "Alliance";
2	FACTION_CONTROLLED_TERRITORY = "(%s Territory)"; -- Faction name
2	FACTION_HORDE = "Horde";
2	FACTION_INACTIVE = "Inactive";
2	FACTION_OTHER = "Other";
2	FACTION_STANDING_CHANGED = "You are now %s with %s.";
2	FACTION_STANDING_DECREASED = "Reputation with %s decreased by %d.";
2	FACTION_STANDING_DECREASED_GENERIC = "Reputation with %s decreased.";
2	FACTION_STANDING_INCREASED = "Reputation with %s increased by %d.";
2	FACTION_STANDING_INCREASED_BONUS = "Reputation with %s increased by %d. (+%.1f Refer-A-Friend bonus)";
2	FACTION_STANDING_INCREASED_GENERIC = "Reputation with %s increased.";
2	FACTION_STANDING_LABEL1 = "Hated"; -- "Hated" faction standing
2	FACTION_STANDING_LABEL1_FEMALE = "Hated"; -- "Hated" faction standing
2	FACTION_STANDING_LABEL2 = "Hostile"; -- "Hostile" faction standing
2	FACTION_STANDING_LABEL2_FEMALE = "Hostile"; -- "Hostile" faction standing
2	FACTION_STANDING_LABEL3 = "Unfriendly"; -- "Unfriendly" faction standing
2	FACTION_STANDING_LABEL3_FEMALE = "Unfriendly"; -- "Unfriendly" faction standing
2	FACTION_STANDING_LABEL4 = "Neutral"; -- "Neutral" faction standing
2	FACTION_STANDING_LABEL4_FEMALE = "Neutral"; -- "Neutral" faction standing
2	FACTION_STANDING_LABEL5 = "Friendly"; -- "Friendly" faction standing
2	FACTION_STANDING_LABEL5_FEMALE = "Friendly"; -- "Friendly" faction standing
2	FACTION_STANDING_LABEL6 = "Honored"; -- "Honored" faction standing
2	FACTION_STANDING_LABEL6_FEMALE = "Honored"; -- "Honored" faction standing
2	FACTION_STANDING_LABEL7 = "Revered"; -- "Revered" faction standing
2	FACTION_STANDING_LABEL7_FEMALE = "Revered"; -- "Revered" faction standing
2	FACTION_STANDING_LABEL8 = "Exalted"; -- "Exalted" faction standing
2	FACTION_STANDING_LABEL8_FEMALE = "Exalted"; -- "Exalted" faction standing
2	FAILED = "Failed"; -- Something failed
2	FAILURES = "Failures";
2	FAR = "Far"; -- Long distance for Far clip plane slider
2	FARCLIP = "View Distance";
2	FEAT_OF_STRENGTH_DESCRIPTION = "Feats of Strength are accomplishments that players will find very difficult if not impossible to earn.  Worth no points, Feats of Strength are a collection of past glories on Azeroth.";
2	FEEDPET_LOG_FIRSTPERSON = "Your pet begins eating the %s.";
2	FEEDPET_LOG_THIRDPERSON = "%s's pet begins eating a %s.";
2	FEETSLOT = "Feet"; -- Feet slot
2	FEMALE = "Female"; -- Generic "Female" gender tag
2	FILTER = "Filter";
2	FILTERS = "Filters";
2	FILTER_BY_ENEMIES_COMBATLOG_TOOLTIP = "Actions performed by hostile creatures and pets.";
2	FILTER_BY_FRIENDS_COMBATLOG_TOOLTIP = "Actions performed by friendly players, pets, and creatures.";
2	FILTER_BY_HOSTILE_PLAYERS_COMBATLOG_TOOLTIP = "Actions performed by hostile players.";
2	FILTER_BY_ME_COMBATLOG_TOOLTIP = "Actions performed by you, your traps, and your spells.";
2	FILTER_BY_NEUTRAL_COMBATLOG_TOOLTIP = "Actions performed by neutral creatures.";
2	FILTER_BY_PET_COMBATLOG_TOOLTIP = "Actions performed by your pets, summoned guardians, and charmed players.";
2	FILTER_BY_UNKNOWN_COMBATLOG_TOOLTIP = "Actions performed by undefined sources such as falling, acid, or lava.";
2	FILTER_NAME = "Filter Name";
2	FILTER_TO_FRIENDS_COMBATLOG_TOOLTIP = "Actions performed on friendly players, pets, and creatures.";
2	FILTER_TO_HOSTILE_COMBATLOG_TOOLTIP = "Actions performed on hostile pets and creatures.";
2	FILTER_TO_HOSTILE_PLAYERS_COMBATLOG_TOOLTIP = "Actions performed on hostile players.";
2	FILTER_TO_ME_COMBATLOG_TOOLTIP = "Actions performed on you.";
2	FILTER_TO_NEUTRAL_COMBATLOG_TOOLTIP = "Actions performed on neutral creatures.";
2	FILTER_TO_PET_COMBATLOG_TOOLTIP = "Actions performed on your pets, summoned guardians, and charmed players.";
2	FILTER_TO_UNKNOWN_COMBATLOG_TOOLTIP = "Actions performed on invisible targets.";
2	FINGER0SLOT = "Finger"; -- Finger slot
2	FINGER1SLOT = "Finger"; -- Finger slot
2	FIRST_AVAILABLE = "First Available";
2	FIRST_AVAILABLE_TOOLTIP = "Join the queue to enter the first available battleground. If you select \"first available\" and another party member enters a \"first available\" battleground, then your preference will be changed to that battleground.";
2	FIRST_NUMBER_CAP = " K"; -- This would be a space followed by K for english meaning 1000, other locales will have different character at different values
2	FIX_LAG = "Reduce Input Lag";
2	FLAG_COUNT_TEMPLATE = "x %d";
2	FLOOR = "Floor"; -- Dungeon Map Level
2	FLOOR_NUMBER = "Floor %d"; -- Dungeon Map Level
2	FOCUS = "Focus"; -- Generic "focus"
2	FOCUSTARGET = "Set Focus Target";
2	FOCUS_CAST_KEY_TEXT = "Focus Cast Key";
2	FOCUS_COST = "%d Focus";
2	FOCUS_COST_PER_TIME = "%d Focus, plus %d per sec";
2	FOCUS_TOKEN_NOT_FOUND = "<no focus>";
2	FOLLOW = "Follow";
2	FOLLOW_TERRAIN = "Follow Terrain";
2	FONT_SIZE = "Font Size";
2	FONT_SIZE_TEMPLATE = "%d pt";
2	FOOD_TIMER = "You are too full to eat more now."; -- The player is trying to eat food before the cooldown timer expires
2	FOREIGN_SERVER_LABEL = " (*)"; -- Indicates a player that is from another server
2	FORMATED_HOURS = "%d |4Hour:Hours;";
2	FORMATTING = "Formatting";
2	FPS_ABBR = "fps";
2	FRAMERATE_LABEL = "FPS:";
2	FREE_FOR_ALL_TERRITORY = "(PvP Area)";
2	FRFR = "French";
2	FRIENDLY = "Friendly";
2	FRIENDS = "Friends";
2	FRIENDS_LEVEL_TEMPLATE = "Level %d %s"; -- For "name location" in friends list
2	FRIENDS_LIST = "Friends List";
2	FRIENDS_LIST_NOTE_OFFLINE_TEMPLATE = "|cff999999(%s)|r"; -- For "name location" in friends list
2	FRIENDS_LIST_NOTE_TEMPLATE = "(%s)";
2	FRIENDS_LIST_OFFLINE_TEMPLATE = "|cff999999%s - Offline|r"; -- For "name location" in friends list
2	FRIENDS_LIST_TEMPLATE = "|cffffffff- %s|r %s"; -- For "name location <AFK>" in friends list
2	FROM = "From:";
2	FUEL = "Fuel";
2	FULLDATE = "%1$s, %2$s %3$d %4$d"; -- 1=weekdayName 2=monthName 3=day 4=year 5=month
2	FULLDATE_AND_TIME = "%1$s, %2$s"; -- 1=FULLDATE 2=[TIME_TWENTYFOURHOURS or TIME_TWELVEHOURAM or TIME_TWELVEHOURPM]
2	FULLDATE_MONTH_APRIL = "April";
2	FULLDATE_MONTH_AUGUST = "August";
2	FULLDATE_MONTH_DECEMBER = "December";
2	FULLDATE_MONTH_FEBRUARY = "February";
2	FULLDATE_MONTH_JANUARY = "January";
2	FULLDATE_MONTH_JULY = "July";
2	FULLDATE_MONTH_JUNE = "June";
2	FULLDATE_MONTH_MARCH = "March";
2	FULLDATE_MONTH_MAY = "May";
2	FULLDATE_MONTH_NOVEMBER = "November";
2	FULLDATE_MONTH_OCTOBER = "October";
2	FULLDATE_MONTH_SEPTEMBER = "September";
2	FULL_SCREEN_GLOW = "Full-Screen Glow Effect";
2	FULL_TEXT_COMBATLOG_TOOLTIP = "Show combat log entries as full sentences.";
2	GAME = "Game"; -- Label for the game options tab in the interface options window
2	GAMEFIELD_DESELECT_TEXT = "Sticky Targeting";
2	GAMEOPTIONS_MENU = "Options";
2	GAMES = "Games";
2	GAMETIME_TOOLTIP_CALENDAR_INVITES = "You have pending calendar invites.";
2	GAMETIME_TOOLTIP_TOGGLE_CALENDAR = "Click to show the calendar.";
2	GAMETIME_TOOLTIP_TOGGLE_CLOCK = "Click to show clock settings.";
2	GAME_SOUND_OUTPUT = "Game Sound Output";
2	GAME_VERSION_LABEL = "Version"; -- generic version
2	GAMMA = "Gamma";
2	GENERAL = "General"; -- Name for the general chat tab
2	GENERAL_LABEL = "General";
2	GENERAL_MACROS = "General Macros"; -- Header for general account macros
2	GENERAL_SUBTEXT = "These options allow you to change the size and detail in which your video hardware renders the game.";
2	GIVE_LOOT = "Give Loot To:";
2	GLANCING_TRAILER = " (glancing)"; -- Appended to glancing blows in the combat log. (NOTE SPACE AT BEGINNING)
2	GLOBAL_CHANNELS = "Global Channels";
2	GLYPHS = "Glyphs";
2	GLYPH_EMPTY = "Empty"; -- Glyph State
2	GLYPH_EMPTY_DESC = "Use a Glyph from your inventory to inscribe your spellbook.";
2	GLYPH_FILLED = "Filled"; -- Glyph state
2	GLYPH_INACTIVE = "Empty"; -- Glyph slot state
2	GLYPH_LOCKED = "Locked"; -- Glyph State
2	GLYPH_SLOT_REMOVE_TOOLTIP = "<Shift Right Click to Remove>";
2	GLYPH_SLOT_TOOLTIP1 = "Unlocked at level 15.";
2	GLYPH_SLOT_TOOLTIP2 = "Unlocked at level 15.";
2	GLYPH_SLOT_TOOLTIP3 = "Unlocked at level 50.";
2	GLYPH_SLOT_TOOLTIP4 = "Unlocked at level 30.";
2	GLYPH_SLOT_TOOLTIP5 = "Unlocked at level 70.";
2	GLYPH_SLOT_TOOLTIP6 = "Unlocked at level 80.";
2	GMSURVEYRATING1 = "Bad";
2	GMSURVEYRATING2 = "Poor";
2	GMSURVEYRATING3 = "Average";
2	GMSURVEYRATING4 = "Good";
2	GMSURVEYRATING5 = "Excellent";
2	GMSURVEY_BLOCK_TEXT = "Compared with other customer service experiences I have had:";
2	GMSURVEY_EXCELLENT = "5 (Excellent)";
2	GMSURVEY_POOR = "1 (Poor)";
2	GMSURVEY_REQUEST_TEXT = "Please answer the following questions:";
2	GMSURVEY_SUBMITTED = "Your survey has been submitted";
2	GMSURVEY_TITLE = "Game Master (GM) Customer Service Survey"; -- Header for the gm survey frame
2	GM_EMAIL_NAME = "Customer Support";
2	GM_SURVEY_NOT_APPLICABLE = "N/A";
2	GM_TICKET_ESCALATED = "Your ticket has been escalated.";
2	GM_TICKET_HIGH_VOLUME = "We are currently experiencing a high volume of petitions.";
2	GM_TICKET_SERVICE_SOON = "Your ticket will be serviced soon.";
2	GM_TICKET_UNAVAILABLE = "Wait time currently unavailable.";
2	GM_TICKET_WAIT_TIME = "Approximate time remaining:\n%s";
2	GOLD_AMOUNT = "%d Gold"; -- Highest value coin denomination
2	GOLD_AMOUNT_TEXTURE = "%d\124TInterface\\MoneyFrame\\UI-GoldIcon:%d:%d:2:0\124t";
2	GOLD_PER_DAY = "Max Gold/Day";
2	GOODBYE = "Goodbye"; -- Say "Goodbye" to an NPC
2	GOSSIP_OPTIONS = "Gossip Options";
2	GREED = "Greed";
2	GROUND_DENSITY = "Ground Clutter Density";
2	GROUND_RADIUS = "Ground Clutter Radius";
2	GROUP = "Group";
2	GROUPS = "Groups";
2	GROUP_INVITE = "Group Invite"; -- Invite a friend into your group
2	GUILD = "Guild";
2	GUILDADDRANK_BUTTON_TOOLTIP = "Click to add rank";
2	GUILDBANK_AVAILABLE_MONEY = "Available Amount:";
2	GUILDBANK_BUYTAB_MONEY_FORMAT = "%s purchased a guild bank tab for %s";
2	GUILDBANK_DEPOSIT = "Amount to deposit:";
2	GUILDBANK_DEPOSIT_FORMAT = "%s deposited %s";
2	GUILDBANK_DEPOSIT_MONEY_FORMAT = "%s deposited %s";
2	GUILDBANK_INFO_TITLE_FORMAT = "%s Info"; -- Used in the title text for info on tabs in the guild bank ui
2	GUILDBANK_LOG_QUANTITY = " x %d"; -- appended to log entries if they have more than one item in them
2	GUILDBANK_LOG_TITLE_FORMAT = "%s  Log"; -- Used for titles in the guild bank log
2	GUILDBANK_MOVE_FORMAT = "%s moved %s x %d from %s to %s";
2	GUILDBANK_NAME_CONFIG = "%s Config:";
2	GUILDBANK_POPUP_TEXT = "Enter Guild Bank Tab Name:";
2	GUILDBANK_REMAINING_MONEY = "Remaining Daily Withdrawals for %s:  |cffffffff%s|r";
2	GUILDBANK_REPAIR = "Remaining amount for today's Guild Bank repairs:";
2	GUILDBANK_REPAIR_MONEY_FORMAT = "%s withdrew %s for repairs";
2	GUILDBANK_TAB_COLON = "Guild Bank Tab:";
2	GUILDBANK_TAB_DEPOSIT_ONLY = "Deposit Only";
2	GUILDBANK_TAB_FULL_ACCESS = "Full Access";
2	GUILDBANK_TAB_LOCKED = "Locked";
2	GUILDBANK_TAB_NUMBER = "Tab%d";
2	GUILDBANK_TAB_WITHDRAW_ONLY = "Withdraw Only";
2	GUILDBANK_WITHDRAW = "Amount to withdraw:";
2	GUILDBANK_WITHDRAWFORTAB_MONEY_FORMAT = "%s withdrew %s to purchase a guild bank tab";
2	GUILDBANK_WITHDRAW_FORMAT = "%s |cffff2020withdrew|r %s";
2	GUILDBANK_WITHDRAW_MONEY_FORMAT = "%s |cffff2020withdrew|r %s";
2	GUILDCONTROL = "Guild Control";
2	GUILDCONTROL_ALLOWRANK = "Allow this rank to:";
2	GUILDCONTROL_DEPOSIT_ITEMS = "Deposit Items";
2	GUILDCONTROL_OPTION1 = "Guildchat Listen";
2	GUILDCONTROL_OPTION10 = "Edit Public Note";
2	GUILDCONTROL_OPTION11 = "View Officer Note";
2	GUILDCONTROL_OPTION12 = "Edit Officer Note";
2	GUILDCONTROL_OPTION13 = "Modify Guild Info";
2	GUILDCONTROL_OPTION14 = "Create Guild Event";
2	GUILDCONTROL_OPTION15 = "Repair";
2	GUILDCONTROL_OPTION15_TOOLTIP = "Use guild funds for repairs";
2	GUILDCONTROL_OPTION16 = "Gold";
2	GUILDCONTROL_OPTION16_TOOLTIP = "Withdraw gold from the guild bank";
2	GUILDCONTROL_OPTION17 = "Create Guild Event";
2	GUILDCONTROL_OPTION2 = "Guildchat Speak";
2	GUILDCONTROL_OPTION3 = "Officerchat Listen";
2	GUILDCONTROL_OPTION4 = "Officerchat Speak";
2	GUILDCONTROL_OPTION5 = "Promote";
2	GUILDCONTROL_OPTION6 = "Demote";
2	GUILDCONTROL_OPTION7 = "Invite Member";
2	GUILDCONTROL_OPTION8 = "Remove Member";
2	GUILDCONTROL_OPTION9 = "Set MOTD";
2	GUILDCONTROL_RANKLABEL = "Rank Label:";
2	GUILDCONTROL_SELECTRANK = "Select guild rank to modify:";
2	GUILDCONTROL_UPDATE_TEXT = "Update Tab Text";
2	GUILDCONTROL_VIEW_TAB = "View Tab";
2	GUILDCONTROL_WITHDRAW_GOLD = "Withdraw:";
2	GUILDCONTROL_WITHDRAW_ITEMS = "Withdraw Items(stacks/day):";
2	GUILDEVENT_TYPE_DEMOTE = "%s demotes %s to %s";
2	GUILDEVENT_TYPE_INVITE = "%s invites %s";
2	GUILDEVENT_TYPE_JOIN = "%s joins the guild";
2	GUILDEVENT_TYPE_PROMOTE = "%s promotes %s to %s";
2	GUILDEVENT_TYPE_QUIT = "%s leaves the guild";
2	GUILDEVENT_TYPE_REMOVE = "%s removes %s from the guild";
2	GUILDMEMBER_ALERT = "Guild Member Alert";
2	GUILDMOTD_BUTTON_TOOLTIP = "Click to View the Guild Message Of The Day";
2	GUILDNOTE_BUTTON_TOOLTIP = "Click to View your Guild's Message of the Day";
2	GUILDOFFICERNOTE_BUTTON_TOOLTIP = "Click to View the selected player's Officer's Note";
2	GUILDREMOVERANK_BUTTON_TOOLTIP = "Click to remove this rank";
2	GUILD_ACHIEVEMENT = "Guild Announce";
2	GUILD_BANK = "Guild Bank";
2	GUILD_BANK_LOG = "Log";
2	GUILD_BANK_LOG_TIME = "( %s ago )";
2	GUILD_BANK_MONEY_LOG = "Money Log";
2	GUILD_BANK_TAB_INFO = "Info";
2	GUILD_CHARTER = "Guild Charter";
2	GUILD_CHARTER_CREATOR = "Guild Master: %s";
2	GUILD_CHARTER_PURCHASE = "Purchase a Guild Charter";
2	GUILD_CHARTER_REGISTER = "Register a Guild Charter";
2	GUILD_CHARTER_TEMPLATE = "%s Guild Charter";
2	GUILD_CHARTER_TITLE = "Guild Name: %s";
2	GUILD_CHAT = "Guild Chat";
2	GUILD_CREST_DESIGN = "Design a Guild Crest";
2	GUILD_EVENT_LOG = "Log";
2	GUILD_FRAME_TITLE = "Guild Roster";
2	GUILD_HELP_TEXT_LINE1 = "For now, to create a guild type 'guildcreate <guild name>' in the console.";
2	GUILD_HELP_TEXT_LINE2 = "'/ginfo' gives some basic information about your guild";
2	GUILD_HELP_TEXT_LINE3 = "'/g <message>' sends a chat message to all members of your guild";
2	GUILD_HELP_TEXT_LINE4 = "'/o <message>' sends a chat message to all officers in your guild";
2	GUILD_HELP_TEXT_LINE5 = "'/ginvite <player>' invites another player to join your guild";
2	GUILD_HELP_TEXT_LINE6 = "'/gremove <player>' removes a player from your guild";
2	GUILD_HELP_TEXT_LINE7 = "'/gpromote <player>' promotes a player one rank within your guild";
2	GUILD_HELP_TEXT_LINE8 = "'/gdemote <player>' demotes a player one rank within your guild";
2	GUILD_HELP_TEXT_LINE9 = "'/gmotd <message>' sets the guild's message of the day";
2	GUILD_HELP_TEXT_LINE10 = "'/gquit' removes you from your guild";
2	GUILD_HELP_TEXT_LINE11 = "'/groster' gives an entire guild roster";
2	GUILD_HELP_TEXT_LINE12 = "'/gleader <player>' sets another player as the guild leader";
2	GUILD_HELP_TEXT_LINE13 = "'/gdisband' disbands your guild";
2	GUILD_INFORMATION = "Guild Information";
2	GUILD_INFO_EDITLABEL = "Click here to set message";
2	GUILD_INFO_TEMPLATE = "Guild created %d-%d-%d, %d players, %d accounts"; -- Guild creation date (m-d-y), # players and accounts
2	GUILD_INVITATION = "%s invites you to join the guild: %s"; -- Tells the player he has been invited to a guild
2	GUILD_LEAVE = "Leave Guild";
2	GUILD_MEMBER_OPTIONS = "Guild Member Options";
2	GUILD_MEMBER_TEMPLATE = "%s, %s"; -- Member name, rank
2	GUILD_MESSAGE = "Guild Chat"; -- Message to your guild
2	GUILD_MOTD = "Guild MOTD";
2	GUILD_MOTD_EDITLABEL = "Click here to set the Guild Message Of The Day.";
2	GUILD_MOTD_LABEL = "Guild Message Of The Day:";
2	GUILD_MOTD_LABEL2 = "Guild Message of the Day";
2	GUILD_MOTD_TEMPLATE = "Guild Message of the Day: %s"; -- %s is the guild MOTD
2	GUILD_NAME = "Guild Name";
2	GUILD_NAME_TEMPLATE = "Guild: %s"; -- Name of guild
2	GUILD_NOTES_LABEL = "Player Notes:";
2	GUILD_NOTE_EDITLABEL = "Click here to set a Public Note.";
2	GUILD_NOT_ALLIED_S = "%s is not part of your alliance.";
2	GUILD_OFFICERNOTES_LABEL = "Officer's Notes";
2	GUILD_OFFICERNOTE_EDITLABEL = "Click here to set an Officer's Note.";
2	GUILD_OFFICER_NOTE = "Guild Officer Note";
2	GUILD_ONLINE_LABEL = "Online";
2	GUILD_PETITION_LEADER_INSTRUCTIONS = "Select a player you wish to invite and click <request signature>.   To create this guild, turn it in to the guild registrar when you have filled the charter.";
2	GUILD_PETITION_MEMBER_INSTRUCTIONS = "Click the <Sign Charter> button to become a charter member of this guild.";
2	GUILD_PROMOTE = "Promote to Guildmaster";
2	GUILD_RANK0_DESC = "Guild Master";
2	GUILD_RANK1_DESC = "Officer";
2	GUILD_RANK2_DESC = "Veteran";
2	GUILD_RANK3_DESC = "Member";
2	GUILD_RANK4_DESC = "Initiate";
2	GUILD_REGISTRAR_PURCHASE_TEXT = "To create a guild you must purchase this charter, get 9 unique player signatures, and return the charter to me.  Please enter the desired name for your guild.";
2	GUILD_ROSTER_TEMPLATE = "%d players, %d accounts"; -- # players and accounts in the guild
2	GUILD_STATUS = "Guild Status";
2	GUILD_TEMPLATE = "%s of %s"; -- Character's rank and guild, as in "Guildmaster of Doomhammer's Slammers"
2	GUILD_TITLE_TEMPLATE = "%s of %s"; -- Guild rank, guild name
2	GUILD_TOTAL = "|cffffffff%d|r |4Guild Member:Guild Members;";
2	GUILD_TOTALONLINE = "(|cffffffff%d|r |cff00ff00Online|r)";
2	HAIR_HORNS_COLOR = "Horn Color";
2	HAIR_HORNS_STYLE = "Horn Style";
2	HAIR_NORMAL_COLOR = "Hair Color";
2	HAIR_NORMAL_STYLE = "Hair Style";
2	HANDSSLOT = "Hands"; -- Hands slot
2	HAPPINESS = "Happiness"; -- Generic "happiness"
2	HARASSMENT = "Harassment";
2	HARASSMENT_POLICY_TEXT = "For more information about our harassment policy please go to:\nwww.worldofwarcraft.com/policy/harassment.shtml";
2	HARASSMENT_TEXT = "Please select one of the following options:";
2	HARDWARE = "Hardware";
2	HARDWARE_CURSOR = "Hardware Cursor";
2	HARMFUL_AURA_COMBATLOG_TOOLTIP = "Show when you gain or lose a harmful aura.";
2	HATRED = "Hatred";
2	HAVE_MAIL = "You have unread mail";
2	HAVE_MAIL_FROM = "Unread mail from:";
2	HEADSLOT = "Head"; -- Head slot
2	HEAD_BOB = "Head Bob";
2	HEALING_DONE_TOOLTIP = "The total amount of healing done.";
2	HEALS = "Heals";
2	HEALTH = "Health"; -- Generic "Health" string
2	HEALTH_COLON = "Health:"; -- Character's health, with colon
2	HEALTH_COST = "%d Health";
2	HEALTH_COST_PER_TIME = "%d Health, plus %d per sec";
2	HEALTH_LOW = "Health Low";
2	HELPFRAME_ACCOUNT_BULLET1 = "Help setting up new accounts or making changes to existing accounts";
2	HELPFRAME_ACCOUNT_BULLET2 = "Canceling your World of Warcraft account";
2	HELPFRAME_ACCOUNT_BULLET3 = "Problems with Authentication Keys";
2	HELPFRAME_ACCOUNT_BULLET4 = "Payment options";
2	HELPFRAME_ACCOUNT_BULLET_TITLE1 = "Billing & Account services can help with these kinds of issues:";
2	HELPFRAME_ACCOUNT_BUTTON_TEXT = "Report Account/Billing Issue";
2	HELPFRAME_ACCOUNT_ENDTEXT = "For assistance with any issues like these, please contact Billing & Account Services:|n|nBy Phone at:  |cffffd200(800) 59-BLIZZARD|r|nBy Web at:  |cffffd200http://us.blizzard.com/support/index.xml?gameId=11|r|nBy Email at:  |cffffd200billing@blizzard.com|r |n|nWe also recommend you check the Account Management page at: |n|n|cffffd200www.worldofwarcraft.com/account|r |n|nOn the Account Management page, you can view your subscription information, add game cards, and access other important account functions and options.";
2	HELPFRAME_ACCOUNT_TEXT = "Having problems setting up your account or need to make changes to your billing options?";
2	HELPFRAME_ACCOUNT_TITLE = "Billing & Account Services";
2	HELPFRAME_BUG_BUTTON_DESCRIPTION = "Report a bug or error in the game";
2	HELPFRAME_BUG_BUTTON_TEXT = "Submit a Bug:";
2	HELPFRAME_CHARACTER_BULLET1 = "Ability/Attribute loss or distortion";
2	HELPFRAME_CHARACTER_BULLET2 = "Unable to log in to World of Warcraft";
2	HELPFRAME_CHARACTER_BULLET3 = "Skill level is showing as negative";
2	HELPFRAME_CHARACTER_BULLET4 = "Profession no longer listed";
2	HELPFRAME_CHARACTER_BULLET5 = "Talents malfunctioning or missing";
2	HELPFRAME_CHARACTER_BULLET_TITLE1 = "The following are examples of character issues:";
2	HELPFRAME_CHARACTER_BUTTON_TEXT = "Report Character Issue";
2	HELPFRAME_CHARACTER_TEXT = "Issues regarding abilities, professions, reputation, and talents";
2	HELPFRAME_CHARACTER_TITLE = "Character";
2	HELPFRAME_ENVIRONMENTAL_BULLET1 = "Unable to interact with a forge";
2	HELPFRAME_ENVIRONMENTAL_BULLET2 = "Able to walk/jump through a wall";
2	HELPFRAME_ENVIRONMENTAL_BULLET3 = "Getting ported to the wrong graveyard";
2	HELPFRAME_ENVIRONMENTAL_BULLET4 = "Falling through the world";
2	HELPFRAME_ENVIRONMENTAL_BULLET5 = "Player died and would like a port back to original location";
2	HELPFRAME_ENVIRONMENTAL_BULLET6 = "Inquiry of a location that is difficult to find";
2	HELPFRAME_ENVIRONMENTAL_BULLET_TITLE1 = "The following are examples of environmental issues:";
2	HELPFRAME_ENVIRONMENTAL_BULLET_TITLE2 = "The following are not considered environment issues:";
2	HELPFRAME_ENVIRONMENTAL_BUTTON_TEXT = "Report Environmental Issue";
2	HELPFRAME_ENVIRONMENTAL_TEXT = "Issues that deal with a character not being able to interact with the environment or operate in the environment";
2	HELPFRAME_ENVIRONMENTAL_TITLE = "Environmental";
2	HELPFRAME_GENERAL_BUTTON_DESCRIPTION = "Basic game play questions/information";
2	HELPFRAME_GENERAL_BUTTON_TEXT = "General Game Play Question:";
2	HELPFRAME_GMTALK_ISSUE1 = "This includes information about:  quests, non-player characters (NPCs), items, locations, or anything else that the player could possibly find out through exploration and/or interaction with the world or other players.";
2	HELPFRAME_GMTALK_ISSUE1_HEADER = "Game Hints";
2	HELPFRAME_GMTALK_ISSUE2 = "This includes information about:  an upcoming patch (what, when, how), upcoming content additions, game play changes, and future rule changes.";
2	HELPFRAME_GMTALK_ISSUE2_HEADER = "Meta-Game Hints";
2	HELPFRAME_GMTALK_ISSUE3 = "Most PVP issues can be resolved through the PVP game mechanics. GM's will not be able to assist in many cases.  The exceptions to this rule are any behaviors that fall under the World of Warcraft Harassment Policy.  For special rules designated for PvP activity, please go to:";
2	HELPFRAME_GMTALK_ISSUE3_HEADER = "PvP";
2	HELPFRAME_GMTALK_TEXT1 = "Game Masters are normally available to assist 24 hours a day. The next available Game Master will be able to assist you no matter which character you are currently playing on.  Please keep in mind wait times may vary, and there are some issues that Game Masters will |cffffd200NOT|r be able to assist you with.  Those issues include, but are |cffffd200NOT|r limited to the following:";
2	HELPFRAME_GMTALK_TEXT2 = "Additionally, we encourage all players to first utilize the forums and the website to pursue information about their respective issues at |cffffd200www.worldofwarcraft.com|r , and request that specific attention be paid to our game policies at |cffffd200www.worldofwarcraft.com/policy/|r .";
2	HELPFRAME_GMTALK_TITLE = "Talk to a Game Master";
2	HELPFRAME_GM_BUTTON_DESCRIPTION = "Contact a GM for personal assistance";
2	HELPFRAME_GM_BUTTON_TEXT = "Page a GM:";
2	HELPFRAME_GUILD_BULLET1 = "Unable to add/remove guild members";
2	HELPFRAME_GUILD_BULLET2 = "Not able to form a guild";
2	HELPFRAME_GUILD_BULLET3 = "Unable to reassign or rename ranks within the guild";
2	HELPFRAME_GUILD_BULLET_TITLE1 = "The following are examples of guild issues:";
2	HELPFRAME_GUILD_BUTTON_TEXT = "Report Guild Issue";
2	HELPFRAME_GUILD_TEXT = "Any problems associated with the creation or functionality of a guild";
2	HELPFRAME_GUILD_TITLE = "Guild";
2	HELPFRAME_HARASSMENT_BUTTON_DESCRIPTION = "Physical or Verbal actions which cause other players distress can be considered in this option";
2	HELPFRAME_HARASSMENT_BUTTON_TEXT = "Harassment:";
2	HELPFRAME_HOME_TEXT = "The following are the types of issues that a GM can assist with:"; -- Greeting text on the home tab of the HelpFrame
2	HELPFRAME_ITEM_BULLET1 = "Item lost after crashing";
2	HELPFRAME_ITEM_BULLET2 = "Weapon proc not activating";
2	HELPFRAME_ITEM_BULLET3 = "Enchantment or add-ons not working appropriately";
2	HELPFRAME_ITEM_BULLET4 = "Scammed items";
2	HELPFRAME_ITEM_BULLET5 = "Item accidentally sold to a vendor and was not able to repurchase";
2	HELPFRAME_ITEM_BULLET6 = "Inquiries about how to obtain an item";
2	HELPFRAME_ITEM_BULLET7 = "Requests for items";
2	HELPFRAME_ITEM_BULLET_TITLE1 = "The following are examples of item issues:";
2	HELPFRAME_ITEM_BULLET_TITLE2 = "The following are NOT considered item issues:";
2	HELPFRAME_ITEM_BUTTON_TEXT = "Report Item Issue";
2	HELPFRAME_ITEM_TEXT = "Issues regarding any problem dealing with item functionality or possession";
2	HELPFRAME_ITEM_TITLE = "Item";
2	HELPFRAME_NONQUEST_BULLET1 = "Creeps permanently evading";
2	HELPFRAME_NONQUEST_BULLET2 = "NPC is not pathing correctly";
2	HELPFRAME_NONQUEST_BULLET3 = "Creeps over-spawning or under-spawning";
2	HELPFRAME_NONQUEST_BULLET4 = "Vendor NPC not itemized or not responding";
2	HELPFRAME_NONQUEST_BULLET5 = "Request for Non-Quest NPC/Creep spawn or despawn";
2	HELPFRAME_NONQUEST_BULLET6 = "Request for Non-Quest NPC/Creep information";
2	HELPFRAME_NONQUEST_BULLET7 = "Problem with Quest related NPCs or Creeps";
2	HELPFRAME_NONQUEST_BULLET_TITLE1 = "The following are examples of Non-Quest NPC/Creep issues:";
2	HELPFRAME_NONQUEST_BULLET_TITLE2 = "The following are NOT considered Non-quest NPC/Creep issues:";
2	HELPFRAME_NONQUEST_BUTTON_TEXT = "Report Non-Quest NPC/Creep Issue";
2	HELPFRAME_NONQUEST_TEXT = "Issues that deal with NPCs and Creeps functioning or interacting incorrectly";
2	HELPFRAME_NONQUEST_TITLE = "Non-Quest NPC/Creep";
2	HELPFRAME_OPENTICKET_EDITTEXT = "Your Current Issue:";
2	HELPFRAME_OPENTICKET_TEXT = "Describe Your Issue:";
2	HELPFRAME_OTHER_BUTTON_DESCRIPTION = "Any issues that require GM assistance";
2	HELPFRAME_OTHER_BUTTON_TEXT = "Other Issues:";
2	HELPFRAME_QUEST_BULLET1 = "A quest related NPC or object is not functioning appropriately";
2	HELPFRAME_QUEST_BULLET2 = "Unable to acquire quest related items";
2	HELPFRAME_QUEST_BULLET3 = "Quest creep not dropping a required quest item";
2	HELPFRAME_QUEST_BULLET4 = "Request for Quest NPC/Creep information";
2	HELPFRAME_QUEST_BULLET5 = "Request for information that would simplify a quest";
2	HELPFRAME_QUEST_BULLET_TITLE1 = "The following are examples of Quest/Quest NPC issues:";
2	HELPFRAME_QUEST_BULLET_TITLE2 = "The following are NOT considered Quest/Quest NPC issues:";
2	HELPFRAME_QUEST_BUTTON_TEXT = "Report Quest/NPC Issue";
2	HELPFRAME_QUEST_TEXT = "An issue that results in the inability to initiate or complete a quest";
2	HELPFRAME_QUEST_TITLE = "Quest/Quest NPC";
2	HELPFRAME_REPORTISSUE_BULLET1 = "Harassment and Naming issues";
2	HELPFRAME_REPORTISSUE_BULLET2 = "Minor Bugs such as NPC and Graphical Issues";
2	HELPFRAME_REPORTISSUE_BULLET_TITLE1 = "Topics can include but are not limited to the following:";
2	HELPFRAME_REPORTISSUE_TEXT1 = "Unlike the \"Talk to a GM\" feature, this feature is for players to give the Game Master Department a heads up on issues that may be occurring in-game. There can be times when players come across something in-game they feel requires our attention but does not necessarily require a Game Master response. We encourage the use of this category for those occasions.";
2	HELPFRAME_REPORTISSUE_TEXT2 = "In addition there may be times when a Game Master will still need to contact players in order to gather further information. We apologize in advance for any interruption to game play that may ensue.";
2	HELPFRAME_REPORTISSUE_TITLE = "Report an Issue";
2	HELPFRAME_STUCK_BUTTON_DESCRIPTION = "Physically stuck in an area of the map";
2	HELPFRAME_STUCK_BUTTON_TEXT = "Stuck:";
2	HELPFRAME_STUCK_TEXT1 = "If you find yourself stuck and unable to move, please try the auto-unstuck feature prior to petitioning a GM. In most cases, this should solve the problem. Activating the auto-unstuck command will first attempt to use your hearthstone to port you back to your inn. If this is not possible, it will attempt to nudge your character out of position.\n\nPlease note this option can only be used every 5 minutes. Using the auto-unstuck option will log your character and location so that we can verify and fix the location in the future.";
2	HELPFRAME_STUCK_TITLE = "Character Stuck";
2	HELPFRAME_SUGGESTION_BUTTON_DESCRIPTION = "All general suggestions and feedback about the game";
2	HELPFRAME_SUGGESTION_BUTTON_TEXT = "Send a Suggestion:";
2	HELPFRAME_TECHNICAL_BULLET1 = "Decline in game performance (game becomes slow or choppy)";
2	HELPFRAME_TECHNICAL_BULLET2 = "Display errors (black boxes, flickering objects, distortions, etc)";
2	HELPFRAME_TECHNICAL_BULLET3 = "Cinematics or in-game movies not playing correctly";
2	HELPFRAME_TECHNICAL_BULLET4 = "Sound issues (no sound or music, static, looping effects, etc)";
2	HELPFRAME_TECHNICAL_BULLET5 = "Connection/disconnection problems";
2	HELPFRAME_TECHNICAL_BULLET6 = "Crashes or error messages of any kind occurring during gameplay";
2	HELPFRAME_TECHNICAL_BULLET7 = "Any other technical game issue";
2	HELPFRAME_TECHNICAL_BULLET_TITLE1 = "The following are examples of Technical issues:";
2	HELPFRAME_TECHNICAL_BULLET_TITLE2 = "You may find that a solution for your issue has already been posted on the Technical Support Forum, located on the World of Warcraft site at:\n\nwww.worldofwarcraft.com\n\nIf your technical issue is not addressed by the solutions posted there, please contact our Technical Support Department:\n\nBy Phone at:  (949) 955-1382\nBy Web at: http://us.blizzard.com/support/index.xml?gameId=11\nBy Email at:  wowtech@blizzard.com";
2	HELPFRAME_TECHNICAL_BUTTON_TEXT = "Report Technical Issue";
2	HELPFRAME_TECHNICAL_TEXT = "Our Technical Support team is available to help you with any technical issues that occur while you are using World of Warcraft.";
2	HELPFRAME_TECHNICAL_TITLE = "Technical Support";
2	HELPFRAME_WELCOME_TEXT1 = "For assistance with in-game support, please use the following options to submit a petition for GM assistance or report an issue."; -- This is part of the welcome page that shows up for regions without a Knowledge Base.
2	HELPFRAME_WELCOME_TITLE = "Customer Support"; -- This is part of the welcome page that shows up for regions without a Knowledge Base.
2	HELP_BUTTON = "Help Request";
2	HELP_FRAME_TITLE = "Customer Support";
2	HELP_LABEL = "Help";
2	HELP_SUBTEXT = "These options allow you to change the behavior of the help systems within the game.";
2	HELP_TEXT_LINE1 = "WoW help:";
2	HELP_TEXT_LINE2 = "- 'x' to sit/stand";
2	HELP_TEXT_LINE3 = "- To group/inspect/trade: target another player, right click their portrait";
2	HELP_TEXT_LINE4 = "- 'F1-F5' to target self/groupmates";
2	HELP_TEXT_LINE5 = "- 'Shift-1 through Shift-6' to access extra action bars.  Shift up/down and Shift-mousewheel also work.";
2	HELP_TEXT_LINE6 = "- 'Numlock' to autorun";
2	HELP_TEXT_LINE7 = "- 'z' to draw/sheathe your weapons";
2	HELP_TEXT_LINE8 = "- 'v' to see nearby targets.  Also useful for target selection";
2	HELP_TEXT_LINE9 = "- Tab to target nearest enemy";
2	HELP_TEXT_LINE10 = "- '1' or 't' to attack current target (selects nearest enemy if no current target)";
2	HELP_TEXT_LINE11 = "- 'PageUp/PageDown' to scroll chat pane";
2	HELP_TEXT_LINE12 = "- 'r' or '/r' to reply to the last tell";
2	HELP_TEXT_LINE13 = "- /who to get a list of players";
2	HELP_TEXT_LINE14 = "- /chat for a list of chat commands";
2	HELP_TEXT_LINE15 = "- For help with the new macro UI type /macrohelp";
2	HELP_TEXT_SIMPLE = "Type '/help' for a listing of a few commands.";
2	HELP_TICKET_ABANDON = "Abandon My Ticket";
2	HELP_TICKET_ABANDON_CONFIRM = "Really abandon current GM ticket?";
2	HELP_TICKET_EDIT = "Edit My Ticket";
2	HELP_TICKET_EDIT_ABANDON = "You currently have an open ticket. Please choose an option.";
2	HELP_TICKET_OPEN = "Open a Ticket";
2	HELP_TICKET_QUEUE_DISABLED = "GM Help Tickets are currently unavailable.";
2	HERTZ = "Hz";
2	HIDE = "Hide";
2	HIDE_OUTDOOR_WORLD_STATE_TEXT = "Hide Zone Objective Tracker";
2	HIDE_PARTY_INTERFACE_TEXT = "Hide Party Interface in Raid";
2	HIDE_PULLOUT_BG = "Hide Background";
2	HIGH = "High";
2	HIGHLIGHTING = "Highlighting:";
2	HIGHLIGHT_ABILITY_COMBATLOG_TOOLTIP = "Highlight ability names in combat messages.";
2	HIGHLIGHT_DAMAGE_COMBATLOG_TOOLTIP = "Highlight damage numbers in combat messages.";
2	HIGHLIGHT_KILL_COMBATLOG_TOOLTIP = "Highlights the entire line when you or a party member makes a kill.";
2	HIGHLIGHT_SCHOOL_COMBATLOG_TOOLTIP = "Highlight the school of a spell in combat messages.";
2	HIGH_BIDDER = "High Bidder";
2	HK = "HK"; -- Abbreviation for "honorable kill"
2	HOME = "Home";
2	HOME_INN = "your inn";
2	HONOR = "Honor";
2	HONORABLE_KILLS = "Honorable Kills";
2	HONORABLE_KILLS_TOOLTIP = "Enemy players that you or the group you are in did damage to before they died";
2	HONOR_CONTRIBUTION_POINTS = "Honor";
2	HONOR_ESTIMATED_TOOLTIP = "Honor Gained Today";
2	HONOR_GAINED = "Honor Gained";
2	HONOR_GAINED_TOOLTIP = "Total honor gained.";
2	HONOR_HIGHEST_RANK = "Highest Rank";
2	HONOR_LASTWEEK = "Last Week";
2	HONOR_LIFETIME = "Lifetime";
2	HONOR_POINTS = "Honor Points";
2	HONOR_STANDING = "Standing";
2	HONOR_THIS_SESSION = "Today";
2	HONOR_TODAY = "Today";
2	HONOR_YESTERDAY = "Yesterday";
2	HOSTILE = "Hostile";
2	HOURS = "|4Hour:Hours;";
2	HOURS_ABBR = "%d |4Hr:Hr;";
2	HOUR_ONELETTER_ABBR = "%d h";
2	HP = "HP"; -- Abbreviation for "health"
2	HP_TEMPLATE = "%d Health";
2	HUNTER_AGILITY_TOOLTIP = "Increases attack power with both melee and ranged weapons, and improves chance to score a critical hit with all weapons.|nIncreases armor and chance to dodge attacks.";
2	HUNTER_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	ICON_TAG_RAID_TARGET_CIRCLE1 = "rt2"; -- Shortcut icon tag for Raid Target 2 (Circle)
2	ICON_TAG_RAID_TARGET_CIRCLE2 = "rt2";
2	ICON_TAG_RAID_TARGET_CROSS1 = "rt7"; -- Shortcut icon tag for Raid Target 7 (cross)
2	ICON_TAG_RAID_TARGET_CROSS2 = "X";
2	ICON_TAG_RAID_TARGET_DIAMOND1 = "rt3"; -- Shortcut icon tag for Raid Target 3 (Diamond)
2	ICON_TAG_RAID_TARGET_DIAMOND2 = "rt3";
2	ICON_TAG_RAID_TARGET_MOON1 = "rt5"; -- Shortcut icon tag for Raid Target 5 (Moon)
2	ICON_TAG_RAID_TARGET_MOON2 = "rt5";
2	ICON_TAG_RAID_TARGET_SKULL1 = "rt8"; -- Shortcut icon tag for Raid Target 8 (Skull)
2	ICON_TAG_RAID_TARGET_SKULL2 = "rt8";
2	ICON_TAG_RAID_TARGET_SQUARE1 = "rt6"; -- Shortcut icon tag for Raid Target 6 (Square)
2	ICON_TAG_RAID_TARGET_SQUARE2 = "rt6";
2	ICON_TAG_RAID_TARGET_STAR1 = "rt1"; -- Shortcut icon tag for Raid Target 1 (Star)
2	ICON_TAG_RAID_TARGET_STAR2 = "rt1";
2	ICON_TAG_RAID_TARGET_TRIANGLE1 = "rt4"; -- Shortcut icon tag for Raid Target 4 (Triangle)
2	ICON_TAG_RAID_TARGET_TRIANGLE2 = "rt4";
2	ID = "ID";
2	IDLE_MESSAGE = "You have been inactive for some time and will be logged out of the game. If you wish to remain logged in, hit the cancel button.";
2	IGNORE = "Ignore";
2	IGNORED = "Ignored";
2	IGNORE_LIST = "Ignore List";
2	IGNORE_PLAYER = "Ignore Player"; -- Add a player to your ignore list
2	IGR_BILLING_NAG_DIALOG = "Your IGR's playtime is about to expire, you will be disconnected shortly.";
2	IMMUNE = "Immune"; -- Immune to a spell
2	INBOX = "Inbox";
2	INCOMPLETE = "Incomplete"; -- INCOMPLETE
2	INCREASE_POTENTIAL = "Increases potential in |cffffffff%s|r by |cffffffff%d|r";
2	INPUT_CHINESE = "CH";
2	INPUT_JAPANESE = "JP";
2	INPUT_KOREAN = "KO";
2	INPUT_ROMAN = "A";
2	INSCRIPTION = "Inscription";
2	INSPECT = "Inspect"; -- Player inspects another player
2	INSPECT_NOTIFY = "%s is inspecting you."; -- Tells the player that another player is inspecting him
2	INSTANCE = "INSTANCE";
2	INSTANCE_BOOT_TIMER = "You are not in this instance's group.  You will be teleported to %s in %d %s.";
2	INSTANCE_RESET_FAILED = "Cannot reset %s.  There are players still inside the instance.";
2	INSTANCE_RESET_FAILED_OFFLINE = "Cannot reset %s.  There are players offline in your party.";
2	INSTANCE_RESET_FAILED_ZONING = "Cannot reset %s.  There are players in your party attempting to zone into an instance.";
2	INSTANCE_RESET_SUCCESS = "%s has been reset.";
2	INSTANCE_SAVED = "You are now saved to this instance";
2	INSTANCE_SHUTDOWN_MESSAGE = "Not enough players. The game will end in %s"; -- Displayed when a battleground instance does not have the minimum number of players required
2	INTELLECT_COLON = "Intellect:"; -- Character's intellect, with colon
2	INTELLECT_TOOLTIP = "Increases Mana points as well as chance to Critical Hit\nwith magic spells. Intellect also grants a higher chance\nto increase melee skills. (It does not affect professions\nthough.)  "; -- Tooltip description for intellect
2	INTERFACE_ACTION_BLOCKED = "Interface action failed because of an AddOn";
2	INTERFACE_OPTIONS = "Interface Options"; -- Title the for Interface Options window!
2	INTERRUPT = "Interrupt"; -- Interrupt an attack
2	INTERRUPTED = "Interrupted"; -- Interrupted an attack
2	INTERRUPTS = "Interrupts";
2	INT_GENERAL_DURATION_DAYS = "%d |4day:days;";
2	INT_GENERAL_DURATION_HOURS = "%d |4hour:hours;";
2	INT_GENERAL_DURATION_MIN = "%d |4minute:minutes;";
2	INT_GENERAL_DURATION_SEC = "%d |4second:seconds;";
2	INT_SPELL_DURATION_DAYS = "%d |4day:days;";
2	INT_SPELL_DURATION_HOURS = "%d |4hour:hrs;";
2	INT_SPELL_DURATION_MIN = "%d min";
2	INT_SPELL_DURATION_SEC = "%d sec";
2	INT_SPELL_POINTS_SPREAD_TEMPLATE = "%d to %d";
2	INVENTORY_FULL = "Inventory is full."; -- The player's inventory is full
2	INVENTORY_TOOLTIP = "Inventory"; -- Inventory tooltip
2	INVERT_MOUSE = "Invert Mouse";
2	INVITATION = "%s invites you to a group."; -- Tells the player he has been invited to a group
2	INVITE = "Invite"; -- Generic "Invite"
2	INVTYPE_2HWEAPON = "Two-Hand"; -- Two-hand type
2	INVTYPE_AMMO = "Ammo";
2	INVTYPE_BAG = "Bag"; -- Bag type
2	INVTYPE_BODY = "Shirt"; -- Body type
2	INVTYPE_CHEST = "Chest"; -- Chest type
2	INVTYPE_CLOAK = "Back"; -- Cloak type
2	INVTYPE_FEET = "Feet"; -- Feet type
2	INVTYPE_FINGER = "Finger"; -- Finger type
2	INVTYPE_HAND = "Hands"; -- Hands type
2	INVTYPE_HEAD = "Head"; -- Head type
2	INVTYPE_HOLDABLE = "Held In Off-hand"; -- Holdable type
2	INVTYPE_LEGS = "Legs"; -- Legs type
2	INVTYPE_NECK = "Neck"; -- Neck type
2	INVTYPE_QUIVER = "Quiver";
2	INVTYPE_RANGED = "Ranged"; -- Ranged type
2	INVTYPE_RANGEDRIGHT = "Ranged";
2	INVTYPE_RELIC = "Relic";
2	INVTYPE_ROBE = "Chest"; -- Robe type
2	INVTYPE_SHIELD = "Off Hand"; -- Shield type
2	INVTYPE_SHOULDER = "Shoulder"; -- Shoulder type
2	INVTYPE_TABARD = "Tabard"; -- Tabard type
2	INVTYPE_THROWN = "Thrown";
2	INVTYPE_TRINKET = "Trinket"; -- Trinket type
2	INVTYPE_WAIST = "Waist"; -- Waist type
2	INVTYPE_WEAPON = "One-Hand"; -- One-hand type, either hand
2	INVTYPE_WEAPONMAINHAND = "Main Hand"; -- One-hand type, main hand
2	INVTYPE_WEAPONMAINHAND_PET = "Main Attack";
2	INVTYPE_WEAPONOFFHAND = "Off Hand"; -- One-hand type, off hand
2	INVTYPE_WRIST = "Wrist"; -- Wrist type
2	ITEMPRESENTINOFFHAND = "Cannot wield, there's something already in your second hand!";
2	ITEMS = "Items"; -- Generic "items"
2	ITEMSLOTTEXT = "Item Slots"; -- label for items
2	ITEM_ACCOUNTBOUND = "Account Bound";
2	ITEM_BIND_ON_EQUIP = "Binds when equipped"; -- Item will be bound when equipped
2	ITEM_BIND_ON_PICKUP = "Binds when picked up"; -- Item wil be bound when picked up
2	ITEM_BIND_ON_USE = "Binds when used"; -- Item will be bound when used
2	ITEM_BIND_QUEST = "Quest Item"; -- Item is a quest item (same logic as ON_PICKUP)
2	ITEM_BIND_TO_ACCOUNT = "Binds to account";
2	ITEM_CANT_BE_DESTROYED = "That item cannot be destroyed."; -- Attempted to destroy a NO_DESTROY item
2	ITEM_CLASSES_ALLOWED = "Classes: %s"; -- Lists the classes allowed to use this item
2	ITEM_CONJURED = "Conjured Item"; -- Item expires
2	ITEM_COOLDOWN_TIME = "Cooldown remaining: %s";
2	ITEM_COOLDOWN_TIME_DAYS = "Cooldown remaining: %d |4day:days;";
2	ITEM_COOLDOWN_TIME_HOURS = "Cooldown remaining: %d |4hour:hours;";
2	ITEM_COOLDOWN_TIME_MIN = "Cooldown remaining: %d min";
2	ITEM_COOLDOWN_TIME_SEC = "Cooldown remaining: %d sec";
2	ITEM_COOLDOWN_TOTAL = "(%s Cooldown)";
2	ITEM_COOLDOWN_TOTAL_DAYS = "(%d |4Day:Days; Cooldown)";
2	ITEM_COOLDOWN_TOTAL_HOURS = "(%d |4Hour:Hours; Cooldown)";
2	ITEM_COOLDOWN_TOTAL_MIN = "(%d Min Cooldown)";
2	ITEM_COOLDOWN_TOTAL_SEC = "(%d Sec Cooldown)";
2	ITEM_CREATED_BY = "|cff00ff00<Made by %s>|r"; -- %s is the creator of the item
2	ITEM_DISENCHANT_ANY_SKILL = "Disenchantable"; -- Items that can be disenchanted at any skill level
2	ITEM_DISENCHANT_MIN_SKILL = "Disenchanting requires %s (%d)"; -- Minimum enchanting skill needed to disenchant
2	ITEM_DISENCHANT_NOT_DISENCHANTABLE = "Cannot be disenchanted"; -- Items which cannot be disenchanted ever
2	ITEM_DURATION_DAYS = "Duration: %d |4day:days;";
2	ITEM_DURATION_HOURS = "Duration: %d |4hour:hrs;";
2	ITEM_DURATION_MIN = "Duration: %d min";
2	ITEM_DURATION_SEC = "Duration: %d sec";
2	ITEM_ENCHANT_DISCLAIMER = "Item will not be traded!"; -- Temporary string
2	ITEM_ENCHANT_TIME_LEFT_DAYS = "%s (%d |4day:days;)";
2	ITEM_ENCHANT_TIME_LEFT_HOURS = "%s (%d |4hour:hours;)";
2	ITEM_ENCHANT_TIME_LEFT_MIN = "%s (%d min)"; -- Enchantment name, followed by the time left in minutes
2	ITEM_ENCHANT_TIME_LEFT_SEC = "%s (%d sec)"; -- Enchantment name, followed by the time left in seconds
2	ITEM_LEVEL = "Level %d"; -- The actual level of the item
2	ITEM_LEVEL_AND_MIN = "Level %d (min %d)"; -- The level and minimum required level for an item
2	ITEM_LEVEL_RANGE = "Requires level %d to %d"; -- Item is only useable in the range of levels specified.
2	ITEM_LEVEL_RANGE_CURRENT = "Requires level %d to %d (%d)"; -- Item is only useable in the range of levels specified.
2	ITEM_LIMIT_CATEGORY = "Unique: %s (%d)";
2	ITEM_LIMIT_CATEGORY_MULTIPLE = "Unique Equipped: %s (%d)";
2	ITEM_LOOT = "Item Loot";
2	ITEM_MILLABLE = "Millable"; -- Item is millable
2	ITEM_MIN_LEVEL = "Requires Level %d"; -- Required level to use the item
2	ITEM_MIN_SKILL = "Requires %s (%d)"; -- Required skill rank to use the item
2	ITEM_MOD_AGILITY = "%c%d Agility"; -- Item adds %d to agility, %c is +/-
2	ITEM_MOD_ARMOR_PENETRATION_RATING = "Increases your armor penetration rating by %d.";
2	ITEM_MOD_ATTACK_POWER = "Increases attack power by %d.";
2	ITEM_MOD_BLOCK_RATING = "Increases your shield block rating by %d.";
2	ITEM_MOD_CRIT_MELEE_RATING = "Improves melee critical strike rating by %d.";
2	ITEM_MOD_CRIT_RANGED_RATING = "Improves ranged critical strike rating by %d.";
2	ITEM_MOD_CRIT_RATING = "Improves critical strike rating by %d.";
2	ITEM_MOD_CRIT_SPELL_RATING = "Improves spell critical strike rating by %d.";
2	ITEM_MOD_CRIT_TAKEN_MELEE_RATING = "Improves melee critical avoidance rating by %d.";
2	ITEM_MOD_CRIT_TAKEN_RANGED_RATING = "Improves ranged critical avoidance rating by %d.";
2	ITEM_MOD_CRIT_TAKEN_RATING = "Improves critical avoidance rating by %d.";
2	ITEM_MOD_CRIT_TAKEN_SPELL_RATING = "Improves spell critical avoidance rating by %d.";
2	ITEM_MOD_DEFENSE_SKILL_RATING = "Increases defense rating by %d."; -- Increases defense rating by %d
2	ITEM_MOD_DODGE_RATING = "Increases your dodge rating by %d.";
2	ITEM_MOD_EXPERTISE_RATING = "Increases your expertise rating by %d.";
2	ITEM_MOD_FERAL_ATTACK_POWER = "Increases attack power by %d in Cat, Bear, Dire Bear, and Moonkin forms only.";
2	ITEM_MOD_HASTE_MELEE_RATING = "Improves melee haste rating by %d.";
2	ITEM_MOD_HASTE_RANGED_RATING = "Improves ranged haste rating by %d.";
2	ITEM_MOD_HASTE_RATING = "Improves haste rating by %d.";
2	ITEM_MOD_HASTE_SPELL_RATING = "Improves spell haste rating by %d.";
2	ITEM_MOD_HEALTH = "%c%d Health"; -- Item adds %d to health, %c is +/-
2	ITEM_MOD_HIT_MELEE_RATING = "Improves melee hit rating by %d.";
2	ITEM_MOD_HIT_RANGED_RATING = "Improves ranged hit rating by %d.";
2	ITEM_MOD_HIT_RATING = "Improves hit rating by %d.";
2	ITEM_MOD_HIT_SPELL_RATING = "Improves spell hit rating by %d.";
2	ITEM_MOD_HIT_TAKEN_MELEE_RATING = "Improves melee hit avoidance rating by %d.";
2	ITEM_MOD_HIT_TAKEN_RANGED_RATING = "Improves ranged hit avoidance rating by %d.";
2	ITEM_MOD_HIT_TAKEN_RATING = "Improves hit avoidance rating by %d.";
2	ITEM_MOD_HIT_TAKEN_SPELL_RATING = "Improves spell hit avoidance rating by %d.";
2	ITEM_MOD_INTELLECT = "%c%d Intellect"; -- Item adds %d to intellect, %c is +/-
2	ITEM_MOD_MANA = "%c%d Mana"; -- Item adds %d to mana, %c is +/-
2	ITEM_MOD_MANA_REGENERATION = "Restores %d mana per 5 sec.";
2	ITEM_MOD_PARRY_RATING = "Increases your parry rating by %d.";
2	ITEM_MOD_RANGED_ATTACK_POWER = "Increases ranged attack power by %d.";
2	ITEM_MOD_RESILIENCE_RATING = "Improves your resilience rating by %d.";
2	ITEM_MOD_SPELL_DAMAGE_DONE = "Increases damage done by magical spells and effects by up to %d.";
2	ITEM_MOD_SPELL_HEALING_DONE = "Increases healing done by magical spells and effects by up to %d.";
2	ITEM_MOD_SPELL_POWER = "Increases spell power by %d.";
2	ITEM_MOD_SPIRIT = "%c%d Spirit"; -- Item adds %d to spirit, %c is +/-
2	ITEM_MOD_STAMINA = "%c%d Stamina"; -- Item adds %d to stamina, %c is +/-
2	ITEM_MOD_STRENGTH = "%c%d Strength"; -- Item adds %d to strength, %c is +/-
2	ITEM_MOUSE_OVER = "Mouse over icon for more info";
2	ITEM_NAMES = "Item Names";
2	ITEM_NAMES_SHOW_BRACES_COMBATLOG_TOOLTIP = "Show braces around item names.";
2	ITEM_NO_DROP = "No Drop"; -- This is a No Drop item
2	ITEM_OPENABLE = "<Right Click to Open>";
2	ITEM_PROPOSED_ENCHANT = "Will receive %s."; -- Enchantment proposed in trade
2	ITEM_PROSPECTABLE = "Prospectable"; -- Item is prospectable
2	ITEM_PURCHASED_COLON = "Item Purchased:";
2	ITEM_QUALITY0_DESC = "Poor";
2	ITEM_QUALITY1_DESC = "Common";
2	ITEM_QUALITY2_DESC = "Uncommon";
2	ITEM_QUALITY3_DESC = "Rare";
2	ITEM_QUALITY4_DESC = "Epic";
2	ITEM_QUALITY5_DESC = "Legendary";
2	ITEM_QUALITY6_DESC = "Artifact";
2	ITEM_QUANTITY_TEMPLATE = "%d %s"; -- Template so other languages can say "2 manly swords".
2	ITEM_RACES_ALLOWED = "Races: %s"; -- Lists the races allowed to use this item
2	ITEM_RANDOM_ENCHANT = "<Random enchantment>";
2	ITEM_READABLE = "<Right Click to Read>"; -- Tooltip text for readable items
2	ITEM_REQ_ARENA_RATING = "Requires personal and team arena rating of %d"; -- %d is the rating number required
2	ITEM_REQ_PURCHASE_GROUP = "Requires %s";
2	ITEM_REQ_REPUTATION = "Requires %s - %s"; -- Required faction reputation to use the item
2	ITEM_REQ_SKILL = "Requires %s"; -- Required skill to use the item
2	ITEM_RESIST_ALL = "%c%d to All Resistances"; -- Item adds %d to all resistances, %c is +/-
2	ITEM_RESIST_SINGLE = "%c%d %s Resistance"; -- Item adds %d to %s school resistance, first %c is +/-
2	ITEM_SET_BONUS = "Set: %s";
2	ITEM_SET_BONUS_GRAY = "(%d) Set: %s";
2	ITEM_SET_NAME = "%s (%d/%d)"; -- Set name (2/5)
2	ITEM_SIGNABLE = "<Right Click for Details>";
2	ITEM_SOCKETABLE = "<Shift Right Click to Socket>";
2	ITEM_SOCKETING = "Item Socketing";
2	ITEM_SOCKET_BONUS = "Socket Bonus: %s"; -- Tooltip tag for socketed item matched socket bonuses
2	ITEM_SOLD_COLON = "Item Sold:";
2	ITEM_SOULBOUND = "Soulbound"; -- Item is Soulbound
2	ITEM_SPELL_CHARGES = "%d |4Charge:Charges;"; -- Spell charges on an item
2	ITEM_SPELL_CHARGES_NONE = "No charges"; -- Used in the tooltip when charges = 0 on items that are not consumed
2	ITEM_SPELL_EFFECT = "Effect: %s"; -- Item can cast spell %s
2	ITEM_SPELL_KNOWN = "Already known";
2	ITEM_SPELL_TRIGGER_ONEQUIP = "Equip:";
2	ITEM_SPELL_TRIGGER_ONPROC = "Chance on hit:";
2	ITEM_SPELL_TRIGGER_ONUSE = "Use:";
2	ITEM_STARTS_QUEST = "This Item Begins a Quest"; -- Item is a quest giver
2	ITEM_SUFFIX_TEMPLATE = "%s %s"; -- Name, suffix
2	ITEM_TEXT_FROM = "From,";
2	ITEM_UNIQUE = "Unique"; -- Item is unique
2	ITEM_UNIQUE_EQUIPPABLE = "Unique-Equipped"; -- Only one allowed to be equipped at a time.
2	ITEM_UNIQUE_MULTIPLE = "Unique (%d)"; -- Item is unique
2	ITEM_UNSELLABLE = "No sell price";
2	ITEM_WRAPPED_BY = "|cff00ff00<Gift from %s>|r"; -- %s is the person who wrapped the gift
2	ITEM_WRITTEN_BY = "Written by %s";
2	ITEM_WRONG_CLASS = "That item can't be used by players of your class!";
2	ITEM_WRONG_RACE = "That item can't be used by players of your race!";
2	ITUNES_SHOW_ALL_TRACK_CHANGES = "Display all iTunes track changes";
2	ITUNES_SHOW_ALL_TRACK_CHANGES_TOOLTIP = "Show track names in a pop up window automatically when tracks change in iTunes.";
2	ITUNES_SHOW_FEEDBACK = "Display iTunes remote feedback";
2	ITUNES_SHOW_FEEDBACK_TOOLTIP = "Show track names in a pop up window when you change tracks using the iTunes remote.";
2	JOIN = "Join";
2	JOINED_PARTY = "%s joins the party."; -- Player %s has joined the party
2	JOIN_AS_GROUP = "Join as Group";
2	JOIN_AS_GROUP_TOOLTIP = "A group leader may select this option to add the entire group to the battleground queue. Your group will enter the battleground at the same time.";
2	JOIN_AS_PARTY = "Join as Party";
2	JOIN_NEW_CHANNEL = "Join New Channel";
2	KBASE_ARTICLE_COUNT = "%d - %d of %d articles";
2	KBASE_ARTICLE_ID = "Article Id: %d";
2	KBASE_CHARSTUCK = "Character Stuck";
2	KBASE_DEFAULT_SEARCH_TEXT = "Type your keywords here."; -- Initial text for knowledge base search field
2	KBASE_ERROR_LOAD_FAILURE = "The Knowledge Base is currently unavailable.  Please refer to http://us.blizzard.com/support/index.xml?gameId=11 for help with support issues, or submit a petition using the button below.";
2	KBASE_ERROR_NO_RESULTS = "There were no articles matching your search criteria.";
2	KBASE_GMTALK = "Talk to a GM";
2	KBASE_HOT_ISSUE = "Hot Issue";
2	KBASE_RECENTLY_UPDATED = "Recently Updated";
2	KBASE_REPORTISSUE = "Report Issue";
2	KBASE_SEARCH_RESULTS = "Search Results";
2	KBASE_TOP_ISSUES = "Top Issues"; -- Header for Article List
2	KEY1 = "Key 1"; -- Label for the first key in the keybinding UI
2	KEY2 = "Key 2"; -- Label for the second key in the keybinding UI
2	KEYBINDINGFRAME_MOUSEWHEEL_ERROR = "Can't bind mousewheel to actions with up and down states";
2	KEYRING = "Keyring"; -- Keyring bag name
2	KEY_APOSTROPHE = "'";
2	KEY_BACKSLASH = "\\";
2	KEY_BACKSPACE = "Backspace";
2	KEY_BACKSPACE_MAC = "Delete";
2	KEY_BINDING = "Key Binding";
2	KEY_BINDINGS = "Key Bindings"; -- Title for the key bindings frame
2	KEY_BINDINGS_MAC = "Bindings";
2	KEY_BOUND = "Key Bound Successfully";
2	KEY_BUTTON1 = "Left Mouse Button";
2	KEY_BUTTON2 = "Right Mouse Button";
2	KEY_BUTTON3 = "Middle Mouse";
2	KEY_BUTTON4 = "Mouse Button 4";
2	KEY_BUTTON5 = "Mouse Button 5";
2	KEY_COMMA = ",";
2	KEY_DELETE = "Delete";
2	KEY_DELETE_MAC = "Del";
2	KEY_DOWN = "Down Arrow";
2	KEY_END = "End";
2	KEY_ENTER = "Enter";
2	KEY_ENTER_MAC = "Return";
2	KEY_ESCAPE = "Escape";
2	KEY_HOME = "Home";
2	KEY_INSERT = "Insert";
2	KEY_INSERT_MAC = "Help";
2	KEY_LEFT = "Left Arrow";
2	KEY_LEFTBRACKET = "[";
2	KEY_MINUS = "-";
2	KEY_MOUSEWHEELDOWN = "Mouse Wheel Down";
2	KEY_MOUSEWHEELUP = "Mouse Wheel Up";
2	KEY_NUMLOCK = "Num Lock";
2	KEY_NUMLOCK_MAC = "Clear";
2	KEY_NUMPAD0 = "Num Pad 0";
2	KEY_NUMPAD1 = "Num Pad 1";
2	KEY_NUMPAD2 = "Num Pad 2";
2	KEY_NUMPAD3 = "Num Pad 3";
2	KEY_NUMPAD4 = "Num Pad 4";
2	KEY_NUMPAD5 = "Num Pad 5";
2	KEY_NUMPAD6 = "Num Pad 6";
2	KEY_NUMPAD7 = "Num Pad 7";
2	KEY_NUMPAD8 = "Num Pad 8";
2	KEY_NUMPAD9 = "Num Pad 9";
2	KEY_NUMPADDECIMAL = "Num Pad .";
2	KEY_NUMPADDIVIDE = "Num Pad /";
2	KEY_NUMPADMINUS = "Num Pad -";
2	KEY_NUMPADMULTIPLY = "Num Pad *";
2	KEY_NUMPADPLUS = "Num Pad +";
2	KEY_PAGEDOWN = "Page Down";
2	KEY_PAGEUP = "Page Up";
2	KEY_PAUSE = "Pause";
2	KEY_PAUSE_MAC = "F15";
2	KEY_PERIOD = ".";
2	KEY_PLUS = "+";
2	KEY_PRINTSCREEN = "Print Screen";
2	KEY_PRINTSCREEN_MAC = "F13";
2	KEY_RIGHT = "Right Arrow";
2	KEY_RIGHTBRACKET = "]";
2	KEY_SCROLLLOCK = "Scroll Lock";
2	KEY_SCROLLLOCK_MAC = "F14";
2	KEY_SEMICOLON = ";";
2	KEY_SLASH = "/";
2	KEY_SPACE = "Spacebar"; -- Spacebar
2	KEY_TAB = "Tab";
2	KEY_TILDE = "~";
2	KEY_UNBOUND_ERROR = "|cffff0000%s Function is Now Unbound!|r";
2	KEY_UP = "Up Arrow";
2	KILLING_BLOWS = "Killing Blows";
2	KILLING_BLOW_TOOLTIP = "Enemy players to whom you have personally delivered the killing blow.";
2	KILLS = "Kills"; -- Generic kills label
2	KILLS_COMBATLOG_TOOLTIP = "Show messages when a member of your party kills something.";
2	KILLS_PVP = "Kills";
2	KNOWLEDGEBASE_FRAME_TITLE = "Knowledge Base";
2	KNOWLEDGE_BASE = "Knowledge Base";
2	KNOWN_TALENTS_HEADER = "My Talents"; -- Header for talents already known by the player
2	KOKR = "Korean";
2	LABEL_NOTE = "Note";
2	LALT_KEY_TEXT = "Left ALT";
2	LANGUAGE = "Language";
2	LANGUAGES_LABEL = "Languages"; -- Label for Languages interface options category
2	LANGUAGES_SUBTEXT = "These options allow you to modify language settings for the game.";
2	LASTONLINE = "Last Online";
2	LASTONLINE_DAYS = "%d |4day:days;";
2	LASTONLINE_HOURS = "%d |4hour:hours;";
2	LASTONLINE_MINS = "< an hour";
2	LASTONLINE_MONTHS = "%d |4month:months;";
2	LASTONLINE_YEARS = "%d |4year:years;";
2	LAST_ONLINE_COLON = "Last Online:";
2	LATEST_UNLOCKED_ACHIEVEMENTS = "Recent Achievements"; -- Title for the summary page of the achievements frame
2	LATEST_UPDATED_STATS = "Latest Updated Statistics"; -- Title for the summary page of the achievement frame
2	LAUGH_WORD1 = "lol";
2	LAUGH_WORD2 = "rofl";
2	LAUGH_WORD3 = "hehe";
2	LAUGH_WORD4 = "haha";
2	LAUGH_WORD5 = "haha"; -- index 5
2	LAUGH_WORD6 = "haha";
2	LAUGH_WORD7 = "haha";
2	LAUGH_WORD8 = "haha";
2	LAUGH_WORD9 = "rofl";
2	LCTRL_KEY_TEXT = "Left CTRL";
2	LEARN_SKILL_TEMPLATE = "Learn %s"; -- Used in the SkillFrame to display skills that are learnable
2	LEAVE_ARENA = "Leave Arena";
2	LEAVE_BATTLEGROUND = "Leave Battleground";
2	LEAVE_QUEUE = "Leave Queue";
2	LEAVE_VEHICLE = "Leave Vehicle";
2	LEAVE_ZONE = "Leave %s";
2	LEAVING_COMBAT = "Leaving Combat";
2	LEFT_PARTY = "%s leaves the party."; -- Player %s has left the party
2	LEGSSLOT = "Legs"; -- Legs slot
2	LESS_THAN_ONE_MINUTE = "< 1 minute";
2	LEVEL = "Level"; -- Level of a monster, character or item
2	LEVEL_ABBR = "Lvl"; -- Level abbreviation
2	LEVEL_GAINED = "Level %d"; -- Indicates the required level to gain a skill line
2	LEVEL_GRANT = "%s wishes to grant you one level"; -- Refer-A-Friend level granting confirmation
2	LEVEL_RANGE = "Level Range";
2	LEVEL_REQUIRED = "Req level %d"; -- Level required to use an item
2	LEVEL_TOO_LOW = "You must reach level %d to equip this item."; -- The player is not high enough level to equip this item
2	LEVEL_UP = "Congratulations, you have reached level %d!"; -- Tell player when he levels up
2	LEVEL_UP_CHAR_POINTS = "You have gained %d talent |4point:points;.";
2	LEVEL_UP_HEALTH = "You have gained %d hit points.";
2	LEVEL_UP_HEALTH_MANA = "You have gained %d hit points and %d mana.";
2	LEVEL_UP_SKILL_POINTS = "You now have %d free |4profession:professions;.";
2	LEVEL_UP_STAT = "Your %s increases by %d."; -- %s is the stat name, %d is the increase amount
2	LFGWIZARD_TITLE = "Choose an Action";
2	LFG_BUTTON = "Looking For Group/Looking For More";
2	LFG_DISABLED_LFM_TOOLTIP = "You cannot Look For Group while Looking For More.";
2	LFG_DISABLED_PARTY_TOOLTIP = "You cannot Look For Group while in a party.";
2	LFG_LABEL = "I would like to join a group";
2	LFG_TITLE = "Looking For Group";
2	LFG_TYPE_BATTLEGROUND = "Battleground";
2	LFG_TYPE_DUNGEON = "Dungeon";
2	LFG_TYPE_HEROIC_DUNGEON = "Heroic Dungeon";
2	LFG_TYPE_NONE = "None";
2	LFG_TYPE_QUEST = "Quest (Group)";
2	LFG_TYPE_RAID = "Raid";
2	LFG_TYPE_ZONE = "Zone";
2	LFM_NAME_TEMPLATE = "%s - Level %s %s";
2	LFM_NUM_RAID_MEMBER_TEMPLATE = "%d members in raid group";
2	LFM_TITLE = "Looking For More";
2	LINK_TRADESKILL_TOOLTIP = "Click here to create a link to your profession.";
2	LOCALE_INFORMATION = "Locale Information"; -- UI Options Screen
2	LOCATION_COLON = "Location:";
2	LOCK = "Lock";
2	LOCKED = "Locked"; -- Used in tooltips for locked items
2	LOCKED_WITH_ITEM = "Requires %s"; -- A game object is locked with an item
2	LOCKED_WITH_SPELL = "Requires %s"; -- A game object is locked with a spell
2	LOCKED_WITH_SPELL_KNOWN = "Requires %s"; -- A game object is locked with a spell the player knows
2	LOCK_ACTIONBAR_TEXT = "Lock ActionBars";
2	LOCK_BATTLEFIELDMINIMAP = "Lock Zone Map";
2	LOCK_CHANNELPULLOUT_LABEL = "Lock Channel Roster"; -- Caption for option that locks/unlocks the position of the channel roster window.
2	LOCK_FOCUS_FRAME = "Lock Frame Position";
2	LOCK_WINDOW = "Lock Window";
2	LOGOUT = "Logout";
2	LOG_PERIODIC_EFFECTS = "Periodic Damage";
2	LOOKING = "Looking";
2	LOOKING_FOR_GROUP = "Looking For Group";
2	LOOKING_FOR_GROUP_LABEL = "I'm looking for a group for:";
2	LOOKING_FOR_GROUP_LABEL2 = "I'm also looking for a group for:";
2	LOOKING_FOR_GROUP_TEXT = "Let other players know what dungeon, raid, quest, or zone you are interested in.";
2	LOOKING_FOR_MORE = "Looking For More";
2	LOOKING_FOR_MORE_TEXT = "Find additional group members for a dungeon, raid, quest, or zone.";
2	LOOK_FOR_GROUP = "Look For Group";
2	LOOK_FOR_MORE = "Look For More";
2	LOOT = "Loot";
2	LOOTER = "Looter";
2	LOOT_FREE_FOR_ALL = "Loot: Free for All";
2	LOOT_GONE = "Item already looted.";
2	LOOT_GROUP_LOOT = "Loot: Group Loot";
2	LOOT_ITEM = "%s receives loot: %s."; -- The first %s is the player name, the other %s is the item name.
2	LOOT_ITEM_CREATED_SELF = "You create: %s.";
2	LOOT_ITEM_CREATED_SELF_MULTIPLE = "You create: %sx%d.";
2	LOOT_ITEM_MULTIPLE = "%s receives loot: %sx%d."; -- The first %s is the player name, the other %s is the item name, and the %d is the number of items they received.
2	LOOT_ITEM_PUSHED_SELF = "You receive item: %s.";
2	LOOT_ITEM_PUSHED_SELF_MULTIPLE = "You receive item: %sx%d.";
2	LOOT_ITEM_SELF = "You receive loot: %s.";
2	LOOT_ITEM_SELF_MULTIPLE = "You receive loot: %sx%d.";
2	LOOT_KEY_TEXT = "Loot Key";
2	LOOT_MASTER_LOOTER = "Loot: Master Looter";
2	LOOT_METHOD = "Loot Method";
2	LOOT_MONEY = "%s loots %s."; -- Tells player how much money a party member looted
2	LOOT_MONEY_SPLIT = "Your share of the loot is %s."; -- Tells player how much money the party looted
2	LOOT_NEED_BEFORE_GREED = "Loot: Need Before Greed";
2	LOOT_NEXT_PAGE = "Switch Page"; -- Tells player how much money the party looted
2	LOOT_NO_DROP = "Looting %s will bind it to you."; -- Tells player he is about to pick up a no drop item
2	LOOT_PROMOTE = "Promote to Master Looter";
2	LOOT_ROLL_ALL_PASSED = "Everyone passed on: %s";
2	LOOT_ROLL_GREED = "%s has selected Greed for: %s";
2	LOOT_ROLL_GREED_SELF = "You have selected Greed for: %s";
2	LOOT_ROLL_NEED = "%s has selected Need for: %s";
2	LOOT_ROLL_NEED_SELF = "You have selected Need for: %s";
2	LOOT_ROLL_PASSED = "%s passed on: %s";
2	LOOT_ROLL_PASSED_AUTO = "%s automatically passed on: %s because he cannot loot that item.";
2	LOOT_ROLL_PASSED_AUTO_FEMALE = "%s automatically passed on: %s because she cannot loot that item.";
2	LOOT_ROLL_PASSED_SELF = "You passed on: %s";
2	LOOT_ROLL_PASSED_SELF_AUTO = "You automatically passed on: %s because you cannot loot that item.";
2	LOOT_ROLL_ROLLED_GREED = "Greed Roll - %d for %s by %s"; -- First %s is item, second %s is player name
2	LOOT_ROLL_ROLLED_NEED = "Need Roll - %d for %s by %s"; -- First %s is item, second %s is player name
2	LOOT_ROLL_WON = "%s won: %s";
2	LOOT_ROLL_WON_NO_SPAM_GREED = "%1$s won: %3$s |cff818181(Greed - %2$d)|r";
2	LOOT_ROLL_WON_NO_SPAM_NEED = "%1$s won: %3$s |cff818181(Need - %2$d)|r";
2	LOOT_ROLL_YOU_WON = "You won: %s";
2	LOOT_ROLL_YOU_WON_NO_SPAM_GREED = "You won: %2$s |cff818181(Greed - %1$d)|r";
2	LOOT_ROLL_YOU_WON_NO_SPAM_NEED = "You won: %2$s |cff818181(Need - %1$d)|r";
2	LOOT_ROUND_ROBIN = "Loot: Round Robin";
2	LOOT_THRESHOLD = "Loot Threshold";
2	LOOT_UNDER_MOUSE_TEXT = "Open Loot Window at Mouse";
2	LOW = "Low";
2	LSHIFT_KEY_TEXT = "Left SHIFT";
2	MACRO = "Macro";
2	MACROFRAME_CHAR_LIMIT = "%d/255 Characters Used";
2	MACROS = "Macros";
2	MACRO_ACTION_FORBIDDEN = "A macro script has been blocked from an action only available to the Blizzard UI.";
2	MACRO_HELP_TEXT_LINE1 = "Macro Help:";
2	MACRO_HELP_TEXT_LINE2 = "- To bring up the macro UI type /macro or choose it from the chat command menu";
2	MACRO_HELP_TEXT_LINE3 = "- Use the macro UI to automate chat text, emotes, and slash commands";
2	MACRO_HELP_TEXT_LINE4 = "- To cast a spell from a macro use the following syntax:  /cast <name> (<subtext>)";
2	MACRO_HELP_TEXT_LINE5 = "- Shift click a spell in your spellbook with the macro UI open to add it to your macro";
2	MACRO_POPUP_CHOOSE_ICON = "Choose an Icon:";
2	MACRO_POPUP_TEXT = "Enter Macro Name (Max 16 Characters):"; -- Text for the macro popup
2	MAC_OPTIONS = "Mac Options";
2	MAGE_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	MAGIC_RESISTANCES_COLON = "Magic Resistances:"; -- Character's magical resistances, with colon
2	MAIL_COD_ERROR = "C.O.D. must be <= %d";
2	MAIL_LABEL = "Mail";
2	MAIL_LETTER_TOOLTIP = "Click to make a permanent\ncopy of this letter.";
2	MAIL_LOOT_KEY_TEXT = "Loot Mail Key";
2	MAIL_MULTIPLE_ITEMS = "Multiple items";
2	MAIL_REPLY_PREFIX = "RE:";
2	MAIL_RETURN = "Return";
2	MAIL_SUBJECT_LABEL = "Subject:";
2	MAIL_TO_LABEL = "To:";
2	MAINASSIST = "Main Assist";
2	MAINHANDSLOT = "Main Hand"; -- Main hand slot
2	MAINMENUBAR_FPS_LABEL = "Framerate: %.0f fps";
2	MAINMENUBAR_LATENCY_LABEL = "Latency: %.0f ms"; -- Latency label for the performance bar tooltip
2	MAINMENU_BUTTON = "Game Menu";
2	MAINTANK = "Main Tank";
2	MAIN_ASSIST = "Main Assist";
2	MAIN_MENU = "Options"; -- The main menu
2	MAIN_TANK = "Main Tank";
2	MAJOR_GLYPH = "Major Glyph";
2	MAKE_MODERATOR = "Make Moderator";
2	MALE = "Male"; -- Generic "Male" gender tag
2	MANA = "Mana"; -- Generic "mana"
2	MANAGE_ACCOUNT = "Manage Account";
2	MANAGE_ACCOUNT_URL = "http://signup.worldofwarcraft.com";
2	MANA_COLON = "Mana:"; -- Character's mana, with colon
2	MANA_COST = "%d Mana";
2	MANA_COST_PER_TIME = "%d Mana, plus %d per sec";
2	MANA_LOW = "Mana Low";
2	MANA_REGEN = "Mana Regen";
2	MANA_REGEN_FROM_SPIRIT = "Increases Mana Regeneration by %d Per 5 Seconds while not casting";
2	MANA_REGEN_TOOLTIP = "%d mana regenerated every 5 seconds while not casting\n%d mana regenerated every 5 seconds while casting";
2	MARKED_AFK = "You are now AFK.";
2	MARKED_AFK_MESSAGE = "You are now AFK: %s";
2	MARKED_DND = "You are now DND: %s.";
2	MASTERY_POINTS_SPENT = "Points spent in %s Talents:";
2	MASTER_LOOTER = "Master Looter";
2	MASTER_VOLUME = "Master Volume"; -- Sound options tag
2	MATCHMAKING_MATCH_S = "You have been matched to a group for %s."; -- Popup message when the LFG system finds a match.
2	MATCHMAKING_PENDING = "Waiting to complete the match....";
2	MAX_FOLLOW_DIST = "Max Camera Distance";
2	MAX_HP_TEMPLATE = "%d Max health";
2	MEETINGSTONE_LEVEL = "Level %d-%d";
2	MEETINGSTONE_TOOLTIP = "Looking for more for %s"; -- Displayed on the meeting stone minimap button letting you know which queue you are in.  suchas: Looking for more for Wailing Caverns
2	MELEE = "Melee";
2	MELEE_ATTACK = "Melee Attack";
2	MELEE_ATTACK_POWER = "Melee Attack Power";
2	MELEE_ATTACK_POWER_TOOLTIP = "Increases damage with melee weapons by %.1f damage per second.";
2	MELEE_COMBATLOG_TOOLTIP = "Shows natural melee swings.";
2	MELEE_CRIT_CHANCE = "Crit Chance";
2	MELEE_RANGE = "Melee Range";
2	MEMBERS = "Members";
2	MERCHANT = "Merchant";
2	MERCHANT_BUYBACK = "Merchant Buyback";
2	MERCHANT_PAGE_NUMBER = "Page %s of %s"; -- Text at the bottom of the merchant frame that tells you which page you're on.
2	MERCHANT_STOCK = "(%d)"; -- Label for the number of items in the stock of a merchant
2	MESSAGE_SOURCES = "Message Sources";
2	MESSAGE_TYPES = "Message Types";
2	META_GEM = "Meta";
2	MILLISECONDS_ABBR = "ms"; -- Milliseconds abbreviation
2	MINIMAP_LABEL = "Minimap";
2	MINIMAP_TRACKING_AUCTIONEER = "Auctioneer";
2	MINIMAP_TRACKING_BANKER = "Banker";
2	MINIMAP_TRACKING_BATTLEMASTER = "BattleMaster";
2	MINIMAP_TRACKING_FLIGHTMASTER = "FlightMaster";
2	MINIMAP_TRACKING_INNKEEPER = "Innkeeper";
2	MINIMAP_TRACKING_MAILBOX = "Mailbox";
2	MINIMAP_TRACKING_REPAIR = "Repair";
2	MINIMAP_TRACKING_STABLEMASTER = "StableMaster";
2	MINIMAP_TRACKING_TOOLTIP_NONE = "Click to choose tracking type";
2	MINIMAP_TRACKING_TRAINER_CLASS = "Class Trainer";
2	MINIMAP_TRACKING_TRAINER_PROFESSION = "Profession Trainers";
2	MINIMAP_TRACKING_TRIVIAL_QUESTS = "Low Level Quests";
2	MINIMAP_TRACKING_VENDOR_AMMO = "Ammunition";
2	MINIMAP_TRACKING_VENDOR_FOOD = "Food & Drink";
2	MINIMAP_TRACKING_VENDOR_POISON = "Poisons";
2	MINIMAP_TRACKING_VENDOR_REAGENT = "Reagents";
2	MINOR_GLYPH = "Minor Glyph";
2	MINUTES = "|4Minute:Minutes;"; -- Minutes of time
2	MINUTES_ABBR = "%d |4Min:Min;";
2	MINUTE_ONELETTER_ABBR = "%d m";
2	MISCELLANEOUS = "Miscellaneous";
2	MISS = "Miss"; -- Miss on an attack
2	MISSES = "Misses";
2	MODE = "Mode"; -- Label for the floating combat text display mode selection dropdown
2	MODIFIERS_COLON = "Modifiers:"; -- Character's statistical modifiers, with colon
2	MONEY = "Money";
2	MONEY_LOOT = "Money Loot";
2	MONSTER_BOSS_EMOTE = "Boss Emote";
2	MONSTER_BOSS_WHISPER = "Boss Whisper";
2	MONTH_APRIL = "April";
2	MONTH_AUGUST = "August";
2	MONTH_DECEMBER = "December";
2	MONTH_FEBRUARY = "February";
2	MONTH_JANUARY = "January";
2	MONTH_JULY = "July";
2	MONTH_JUNE = "June";
2	MONTH_MARCH = "March";
2	MONTH_MAY = "May";
2	MONTH_NOVEMBER = "November";
2	MONTH_OCTOBER = "October";
2	MONTH_SEPTEMBER = "September";
2	MORE_REAGENTS = "More Reagents";
2	MOTD_COLON = "MOTD:";
2	MOUNT = "Mount";
2	MOUNTS = "Mounts";
2	MOUSE_LABEL = "Mouse";
2	MOUSE_LOOK_SPEED = "Mouse Look Speed";
2	MOUSE_SENSITIVITY = "Mouse Sensitivity";
2	MOUSE_SUBTEXT = "These options allow you to change the way the mouse behaves inside the game.";
2	MOVE_FILTER_DOWN = "Move Filter Down";
2	MOVE_FILTER_UP = "Move Filter Up";
2	MOVE_TO_INACTIVE = "Move to Inactive";
2	MOVIE_RECORDING_AIC = "Apple Intermediate";
2	MOVIE_RECORDING_AIC_TOOLTIP = "Exclusive to MacOS X. This codec is the fastest to compress.";
2	MOVIE_RECORDING_CANCEL_CONFIRMATION = "Do you really want to cancel this movie? This will delete the uncompressed part of the movie. If you are currently recording, you will lose the entire movie.";
2	MOVIE_RECORDING_CODEC_TOOLTIP = "Changes the compression method.";
2	MOVIE_RECORDING_COMPRESSBUTTON = "Compress";
2	MOVIE_RECORDING_COMPRESSDIALOG = "Compress...";
2	MOVIE_RECORDING_COMPRESSING = "Compressing";
2	MOVIE_RECORDING_COMPRESSING_CANCEL_NEWBIE_TOOLTIP = "Cancel Compression";
2	MOVIE_RECORDING_COMPRESSING_CANCEL_TOOLTIP = "This will finish the compression early. You will lose the part that is still not compressed. The part that is currently compressed will be saved on your hard drive.";
2	MOVIE_RECORDING_COMPRESSION = "Compression";
2	MOVIE_RECORDING_COMPRESSION_STARTED = "Movie compression for \"%s\" started.";
2	MOVIE_RECORDING_COMPRESS_TOOLTIP = "This will search for uncompressed movies and ask you if you want to compress, delete or ignore them.";
2	MOVIE_RECORDING_DATA_RATE = "Recording Data Rate:";
2	MOVIE_RECORDING_DATA_RATE_TOOLTIP = "This is how much data needs to be written to your hard drive every second. If the game becomes very choppy while recording then it might be that the data rate is too high for your hard drive. The game will stop recording if it cannot write the data fast enough.";
2	MOVIE_RECORDING_DV = "DV";
2	MOVIE_RECORDING_DV_TOOLTIP = "DV is the primary codec for most camcorders and iMovie.";
2	MOVIE_RECORDING_ENABLE_COMPRESSION = "Compress After Recording";
2	MOVIE_RECORDING_ENABLE_COMPRESSION_TOOLTIP = "If this is checked, the movie will be compressed when you stop recording. Otherwise, you will need to use the compress button to finish processing the movies.";
2	MOVIE_RECORDING_ENABLE_CURSOR = "Record the Cursor";
2	MOVIE_RECORDING_ENABLE_CURSOR_TOOLTIP = "If this is checked, you will see the cursor in the movie. Regardless of this setting, you will see the cursor while playing.";
2	MOVIE_RECORDING_ENABLE_GUI = "Record the User Interface";
2	MOVIE_RECORDING_ENABLE_GUI_TOOLTIP = "If this is checked, you will see the user interface in the movie. Regardless of this setting, you will see the user interface while playing.";
2	MOVIE_RECORDING_ENABLE_ICON = "Show Recording Icon";
2	MOVIE_RECORDING_ENABLE_ICON_TOOLTIP = "If this is checked, you will see a movie camera icon appear on the minimap frame while recording. If the user interface is recorded, this will also appear in the movie.";
2	MOVIE_RECORDING_ENABLE_RECOVER = "Compress at Log In";
2	MOVIE_RECORDING_ENABLE_RECOVER_TOOLTIP = "If this is checked, the game will offer the choice of compressing, ignoring, or deleting any pending movies when you log in.";
2	MOVIE_RECORDING_ENABLE_SOUND = "Record Sound";
2	MOVIE_RECORDING_ENABLE_SOUND_TOOLTIP = "If this is checked, sound will be recorded in the movie.";
2	MOVIE_RECORDING_FPS_FOURTH = "1/4 Game Framerate";
2	MOVIE_RECORDING_FPS_HALF = "1/2 Game Framerate";
2	MOVIE_RECORDING_FPS_THIRD = "1/3 Game Framerate";
2	MOVIE_RECORDING_FRAMERATE = "Framerate";
2	MOVIE_RECORDING_FRAMERATE_TOOLTIP = "Changes the framerate of the movie. If you choose a fixed framerate, the game framerate will be capped to this while recording. Reduce to increase performance. ";
2	MOVIE_RECORDING_FULL_RESOLUTION = "Full resolution";
2	MOVIE_RECORDING_GUI_OFF = "Recording of the user interface is off.";
2	MOVIE_RECORDING_GUI_ON = "Recording of the user interface is on.";
2	MOVIE_RECORDING_H264 = "H.264";
2	MOVIE_RECORDING_H264_TOOLTIP = "This codec is supported natively by Apple devices like the iPod, iPhone and AppleTV. This codec has the best ratio quality/size but it is also the slowest to compress.";
2	MOVIE_RECORDING_MJPEG = "Motion JPEG";
2	MOVIE_RECORDING_MJPEG_TOOLTIP = "This codec is faster to compress than H.264 but it will generate a bigger file. ";
2	MOVIE_RECORDING_MPEG4 = "MPEG-4";
2	MOVIE_RECORDING_MPEG4_TOOLTIP = "MPEG-4 is supported by many digital cameras and iMovie.";
2	MOVIE_RECORDING_PIXLET = "Pixlet";
2	MOVIE_RECORDING_QUALITY_TOOLTIP = "Controls the movie quality. This will affect the final compression. Increasing the quality will also increase the amount of disk space used by the movie and the compression speed.";
2	MOVIE_RECORDING_RECORDING = "Recording Time: ";
2	MOVIE_RECORDING_RECORDING_STARTED = "Movie recording of \"%s\" started.";
2	MOVIE_RECORDING_RECORDING_STOPPED = "Movie recording of \"%s\" stopped.";
2	MOVIE_RECORDING_RECOVERING = "Recovering frame #";
2	MOVIE_RECORDING_RESOLUTION_TOOLTIP = "Changes the resolution of the movie. You can record a longer movie if the resolution is smaller.";
2	MOVIE_RECORDING_TIME = "Available Recording Time:";
2	MOVIE_RECORDING_TIME_TOOLTIP = "This is how long you can record a movie before you run out of disk space. The game will stop recording after that time.";
2	MOVIE_RECORDING_UNCOMPRESSED_RGB = "Uncompressed RGB";
2	MOVIE_RECORDING_WARNING_COMPRESSING = "You cannot start recording while compressing a movie.";
2	MOVIE_RECORDING_WARNING_DISK_FULL = "You don't have enough free space on your hard drive to record movies.";
2	MOVIE_RECORDING_WARNING_NO_MOVIE = "There is no movie to compress.";
2	MOVIE_RECORDING_WARNING_PERF = "Recording stopped - the movie recording settings may be too high for this system configuration.";
2	MOVIE_RECORDING_WARNING_REQUIREMENTS = "Your system doesn't presently meet the minimum requirements to record movies. MacOS X 10.4.9, Quicktime 7.1.6 and a shader capable graphic card are required.";
2	MP = "MP"; -- Abbreviation for "mana"
2	MULTISAMPLE = "Multisampling";
2	MULTISAMPLING_FORMAT_STRING = "%d-bit color %d-bit depth %dx multisample";
2	MUSIC_VOLUME = "Music"; -- Sound options tag
2	MUTE = "Mute";
2	MUTED = "Muted"; -- Game Tooltip for muted players.
2	MUTED_LIST = "Muted List";
2	MUTE_PLAYER = "Mute Player"; -- Add a player to your mute list
2	NAME = "Name";
2	NAMES_LABEL = "Names";
2	NAMES_SUBTEXT = "These options allow you to control which names are visible within the game field while you play.";
2	NAME_CHAT_WINDOW = "Enter chat window name";
2	NEAR = "Near"; -- Close-distance for farclip slider
2	NECKSLOT = "Neck"; -- Neck slot
2	NEED = "Need";
2	NET_PROMOTER_HIGH = "In a heartbeat";
2	NET_PROMOTER_LOW = "Not a chance";
2	NEVER = "Never";
2	NEW = "New";
2	NEWBIE_TOOLTIP_ABANDONQUEST = "Abandons the selected quest, removing it from the Quest Log. Any quest that you abandon can be accepted again at some later date. Associated quest items will remain in your inventory, and there is no penalty for abandoning a quest.";
2	NEWBIE_TOOLTIP_ACHIEVEMENT = "View information about your achievements and statistics.";
2	NEWBIE_TOOLTIP_ADDFRIEND = "Adds a player to your friends list. You will be notified whenever a friend logs on or off. Other players do not know whether they are on your friends list.";
2	NEWBIE_TOOLTIP_ADDMEMBER = "Adds a new player to the guild.";
2	NEWBIE_TOOLTIP_ADDTEAMMEMBER = "Adds a new player to the team.";
2	NEWBIE_TOOLTIP_ALLIANCE = "A proud member of the Alliance, opposed to members of the Horde (Orcs, Trolls, Tauren, Undead, Blood Elves).";
2	NEWBIE_TOOLTIP_AUTO_JOIN_VOICE = "Allows the automatic joining of\nvoice chat when not already\nin another voice chat session.";
2	NEWBIE_TOOLTIP_BATTLEFIELDMINIMAP_OPTIONS = "Right-click to get a list of customizable options for this window. Left-click and drag to move the window.";
2	NEWBIE_TOOLTIP_BATTLEFIELD_GROUP_JOIN = "If you are the leader of a group, this button will add your current group to the battleground queue. Your group will be guaranteed to get into the same battleground instance at the same time.  Any group member added after you click this button or a group member in a queue for another battleground will not be guaranteed entrance to the same battleground.";
2	NEWBIE_TOOLTIP_CHANNELPULLOUT_OPTIONS = "Right-click to get a list of customizable options for this window. Left-click and drag to move the window.";
2	NEWBIE_TOOLTIP_CHANNELTAB = "Allows you to view or modify your text and voice chat channels.";
2	NEWBIE_TOOLTIP_CHARACTER = "Information about your character, including equipment, combat statistics, skills, and reputation.";
2	NEWBIE_TOOLTIP_CHATMENU = "Commands used for communicating with others. With the Chat menu, you can talk to people standing nearby, send a private message to one person, chat with party members, wave at a friend, or create a macro.";
2	NEWBIE_TOOLTIP_CHATOPTIONS = "Right-click to get a list of customizable options for this window. Left-click and drag to move the window.";
2	NEWBIE_TOOLTIP_DEMOTE = "Demotes the selected player one rank lower.";
2	NEWBIE_TOOLTIP_DISHONORABLE_KILLS = "Each time you assist in killing a civilian in PvP that is too low of a level to give you experience (a gray level number), you will get a dishonorable kill.   Each dishonorable kill you get immediately reduces your overall ranking slightly, and each additional dishonorable kill you get during a single day has a larger effect than the last one.   Dishonorable kills are directly applied to your ranking.";
2	NEWBIE_TOOLTIP_DISPLAY_CHANNEL_PULLOUT = "Click and drag to display a roster window that lists players with voice chat enabled in this channel."; -- Newbie tooltip for channel buttons with voice sessions in the "Chat" pane of the friends frame.
2	NEWBIE_TOOLTIP_ENCHANTSLOT = "Drop an item into this slot to permit other players to unlock a container, or enchant or poison an item. An item placed in this slot will not be traded; rather, it will simply return to its owner's inventory.";
2	NEWBIE_TOOLTIP_ENTER_BATTLEGROUND = "Join the queue to enter this battleground when space becomes available.  This will result in a longer wait than selecting \"First Available\".";
2	NEWBIE_TOOLTIP_FIRST_AVAILABLE = "Join the queue to enter the first available battleground. If you select \"First Available\" and another party member enters a \"First Available\" battleground, then your preference will be changed to that battleground. ";
2	NEWBIE_TOOLTIP_FRAMERATE = "Indicates how smoothly the game animates. Low framerate can be improved by changing your video options.";
2	NEWBIE_TOOLTIP_FRIENDSTAB = "Allows you to manage a list of players you enjoy playing with. You receive notifications of friends logging on or off.";
2	NEWBIE_TOOLTIP_GROUPINVITE = "Invites the selected player to join a group.";
2	NEWBIE_TOOLTIP_GUILDCONTROL = "Allows you to customize the names of each rank in your guild, along with its privileges.";
2	NEWBIE_TOOLTIP_GUILDGROUPINVITE = "Invites the selected guild member to join a group.";
2	NEWBIE_TOOLTIP_GUILDPUBLICNOTE = "Click to view your public note. This is information that other players will see about you in the guild UI. If you click on the note itself, you will be able to edit it.";
2	NEWBIE_TOOLTIP_GUILDREMOVE = "Removes the selected player from the guild.";
2	NEWBIE_TOOLTIP_GUILDTAB = "Allows you to view information about your guild, and players in it. If you are an officer, you can also manage your guild from this tab.";
2	NEWBIE_TOOLTIP_GUILD_INFORMATION = "Click to see additional information about your guild. If you are an officer or the guild leader, you can put information here for your guild members to read.";
2	NEWBIE_TOOLTIP_GUILD_MEMBER_OPTIONS = "Right-click a guild member for more options.";
2	NEWBIE_TOOLTIP_HEALTHBAR = "The amount of health you currently have. If your health reaches zero, you will die. Health automatically regenerates when you are out of combat.";
2	NEWBIE_TOOLTIP_HELP = "Access the Online Knowledge Base or speak to a Game Master (GM) about a problem you are having. ";
2	NEWBIE_TOOLTIP_HONORABLE_KILLS = "Each time you or a group you are part of does damage to an enemy player in PvP that is subsequently killed you gain an honorable kill.   You only get an honorable kill if the target’s difficulty is green or better (the target would give you experience if it were a monster).    Only enemy players give honorable kills.";
2	NEWBIE_TOOLTIP_HONOR_CONTRIBUTION_POINTS = "Honor is what you gain by making honorable kills in PvP combat.   How much honor you gain per kill is determined by how much damage you (or your group) did to the player that was killed, with more damage done equaling more honor.   This honor gain is split amongst the members of your group or raid group.   Also you will gain less honor for killing the same player over and over again in a short period of time, so after a few kills of the same player you will get little or no honor from killing them.";
2	NEWBIE_TOOLTIP_HONOR_STANDING = "Standing is how you are doing compared to all other players on your side (Horde or Alliance).   If your standing is 150, then there were 149 players who gained more honor than you did during that time period. You must get at least 25 Honorable Kills in a week in order to be eligible to gain Standing and Rank.";
2	NEWBIE_TOOLTIP_HORDE = "A proud member of the Horde, opposed to members of the Alliance (Night Elves, Dwarves, Humans, Gnomes, Draenei).";
2	NEWBIE_TOOLTIP_IGNOREPLAYER = "Adds a player to your ignore list. You will no longer see messages or other text from players on your ignore list, nor will these players be able to communicate with you in any other way.";
2	NEWBIE_TOOLTIP_IGNORETAB = "Allows you to modify the list of players whom you are currently ignoring.";
2	NEWBIE_TOOLTIP_LATENCY = "The time it takes to talk with the game server. Consistently high (red) latencies may indicate a problem with your Internet connection.";
2	NEWBIE_TOOLTIP_LFGPARENT = "A tool to help you find a group to join or find additional players to complete your newly created or existing group.";
2	NEWBIE_TOOLTIP_LFMTAB = "Click here to look for members to add to your existing group.";
2	NEWBIE_TOOLTIP_MAINMENU = "Modify your settings, change your hotkeys or exit the game.";
2	NEWBIE_TOOLTIP_MANABAR0 = "The amount of mana you currently have. Players require mana in order to cast spells. Mana automatically regenerates if you have not cast a spell in the past five seconds.";
2	NEWBIE_TOOLTIP_MANABAR1 = "Warriors (and Druids in Bear Form or Dire Bear Form) require Rage in order to use their abilities.";
2	NEWBIE_TOOLTIP_MANABAR2 = "Hunters require focus to use their abilities.  Focus generates while standing still.";
2	NEWBIE_TOOLTIP_MANABAR3 = "Rogues (and Druids in Cat Form) require Energy in order to use their abilities.";
2	NEWBIE_TOOLTIP_MANABAR4 = "The amount of happiness your pet currently has. Content pets inflict normal damage on their enemies, whereas Happy pets inflict enhanced damage, and unhappy pets inflict reduced damage. Happiness goes down when your pet dies or as it grows hungry, while feeding your pet will increase its happiness.";
2	NEWBIE_TOOLTIP_MEMORY = "How much memory your AddOns are using. You can get to the addon management page from the character select screen.";
2	NEWBIE_TOOLTIP_MINIMAPTOGGLE = "Toggle display of the minimap.";
2	NEWBIE_TOOLTIP_MUTEPLAYER = "Adds a player to your mute list. You will no longer hear voice chat from players on your mute list.";
2	NEWBIE_TOOLTIP_PARTYOPTIONS = "If you belong to a party, you can right-click your portrait to bring up the Party Options menu. This menu will allow you to quit the party or see what looting rules the party is using. A party leader can add or remove party members, as well as change the party's looting rules.";
2	NEWBIE_TOOLTIP_PLAYEROPTIONS = "Right-click to bring up special commands for interacting with another player. You can inspect their equipment, issue a party invite, initiate a trade, or challenge a player to a duel. A group leader can promote or remove that player from the group.";
2	NEWBIE_TOOLTIP_PROMOTE = "Promotes the selected player one rank higher.";
2	NEWBIE_TOOLTIP_PVP = "View information about your honor and your arena team.";
2	NEWBIE_TOOLTIP_PVPFFA = "You can now attack and be attacked by any player in the game.";
2	NEWBIE_TOOLTIP_QUESTLOG = "A list of all the active quests you currently have. You can have up to 25 active quests at one time.";
2	NEWBIE_TOOLTIP_RAF_SUMMON_LINKED = "Click here to summon a linked party member.";
2	NEWBIE_TOOLTIP_RAIDTAB = "Allows you to view or modify your raid group. Raid groups are groups of more than 5 people used to defeat very difficult challenges at high levels.";
2	NEWBIE_TOOLTIP_RANK = "Rank is the final result of all the honor system calculations.  Based upon a comparison between your standing for the week versus your current rank, your rank may either rise, fall, or stay the same.  Higher level players rise more quickly in rank (and fall more slowly) than lower level players.  In addition, rank increases more quickly at low ranks than at high ranks.";
2	NEWBIE_TOOLTIP_RANK_POSITION = "Your position within the rank. This bar will tell you how close you are to attaining the next rank or falling to the previous rank. This will only be updated each week when ranking is updated.";
2	NEWBIE_TOOLTIP_REMOVEFRIEND = "Removes the selected player from your friends list.";
2	NEWBIE_TOOLTIP_SENDMESSAGE = "Sends a private message to the selected player.";
2	NEWBIE_TOOLTIP_SHAREQUEST = "Shares the selected quest with any party members who are eligible for the quest. Certain quests, such as those granted by items, cannot be shared.";
2	NEWBIE_TOOLTIP_SOCIAL = "Information about other people in the game. You can use the Social window to manage your friends list and ignore list, as well as see who is online.";
2	NEWBIE_TOOLTIP_SPELLBOOK = "To prepare a spell or ability for use, open the Spellbook & Abilities window, left-click the spell or ability and drag it down to your action bar.";
2	NEWBIE_TOOLTIP_STOPIGNORE = "Removes the selected player from your ignore list.";
2	NEWBIE_TOOLTIP_STOPWATCH_PLAYPAUSEBUTTON = "Play/Pause";
2	NEWBIE_TOOLTIP_STOPWATCH_RESETBUTTON = "Reset";
2	NEWBIE_TOOLTIP_TALENTS = "The array of talents available to enhance and specialize your character.";
2	NEWBIE_TOOLTIP_UNIT_DUEL = "Challenges the selected player to a duel. The first player to reach zero hit points loses the duel.";
2	NEWBIE_TOOLTIP_UNIT_FOLLOW = "Causes you to begin following the selected player. You will automatically continue to follow the player until this auto follow mode is disrupted.";
2	NEWBIE_TOOLTIP_UNIT_FREE_FOR_ALL = "Under free-for-all rules, all group members may loot a monster that they help the group to kill. Money is automatically divided between group members.";
2	NEWBIE_TOOLTIP_UNIT_GROUP_LOOT = "Under group loot rules, players take turns looting just like in round-robin with the exception that all group members will be eligible to roll for items over the loot threshold.";
2	NEWBIE_TOOLTIP_UNIT_INSPECT = "Inspects any armor and weapons that the selected player has equipped.";
2	NEWBIE_TOOLTIP_UNIT_INVITE = "Invites the selected player to join a group.";
2	NEWBIE_TOOLTIP_UNIT_LEAVE_PARTY = "Removes the player from their current party.";
2	NEWBIE_TOOLTIP_UNIT_LOOT_THRESHOLD = "Items of this quality or higher will be able to be rolled on by the group when looted from a monster.";
2	NEWBIE_TOOLTIP_UNIT_MASTER_LOOTER = "Under master-looter rules, the group leader is the only group member allowed to loot items at or above the threshold. Items below threshold and money are distributed via the round robin rules.";
2	NEWBIE_TOOLTIP_UNIT_NEED_BEFORE_GREED = "Under need-before-greed rules, loot is distributed round-robin style.  Any items over the loot threshold can only be rolled on by group members that can use the item.";
2	NEWBIE_TOOLTIP_UNIT_OPT_OUT_LOOT = "If enabled, you will only be able to receive loot by looting quest items, looting items that everyone passes on, or being given loot by the master looter.";
2	NEWBIE_TOOLTIP_UNIT_PET_ABANDON = "Abandons your pet, letting it return to the wild. Once you abandon a pet, you can never regain its companionship.";
2	NEWBIE_TOOLTIP_UNIT_PET_DISMISS = "Dismisses your controlled minion.";
2	NEWBIE_TOOLTIP_UNIT_PET_PAPERDOLL = "Information about your pet, including its combat statistics, spell resistances, and diet.";
2	NEWBIE_TOOLTIP_UNIT_PET_RENAME = "Gives your pet a new name that you specify. A pet can only be renamed once.";
2	NEWBIE_TOOLTIP_UNIT_PROMOTE = "Surrenders your leadership of the group, naming the selected player to succeed you.";
2	NEWBIE_TOOLTIP_UNIT_ROUND_ROBIN = "Under round-robin rules, group members take turns looting the monsters that they help the group to kill. Money is automatically divided between group members.";
2	NEWBIE_TOOLTIP_UNIT_TRADE = "Initiates a trade with the selected player.";
2	NEWBIE_TOOLTIP_UNIT_UNINVITE = "Removes the selected player from the group.";
2	NEWBIE_TOOLTIP_UNMUTE = "Removes the selected player from your mute list.";
2	NEWBIE_TOOLTIP_VOICE_CHAT_SELECTOR = "This menu allows you to select the Voice Chat channel you would like to listen and speak in.  Right click to see a list of available voice chat channels.";
2	NEWBIE_TOOLTIP_WHOTAB = "Allows you to locate other players in the world.";
2	NEWBIE_TOOLTIP_WORLDMAP = "As you explore a zone, more areas of interest will become visible on the world map. You can use left-click to zoom in, or right-click to zoom out.";
2	NEWBIE_TOOLTIP_XPBAR = "The amount of experience (XP) you have earned. The color of the XP bar indicates your rest state: light blue for Rested, and purple for Normal. Rested players earn twice the experience they would normally gain from slaying a monster. Characters become less rested when they kill monsters, and more rested by spending time at or logging out at an inn or city.";
2	NEW_ACHIEVEMENT_EARNED = "You have earned the achievement '%s'."; -- This will be the message when you get a new achievement.
2	NEW_CHAT_WINDOW = "Create New Window";
2	NEW_LEADER = "New Leader";
2	NEW_TITLE_EARNED = "You have earned the title '%s'."; -- This is when you earn new titles.
2	NEXT = "Next"; -- Generic "next"
2	NEXT_ABILITY = "Next Ability"; -- The next ability in a particular skill line
2	NO = "No"; -- Generic "no"
2	NONE = "None";
2	NONEQUIPSLOT = "Created Items"; -- Items created by enchanting
2	NONE_CAPS = "NONE"; -- "None", in all capitals
2	NONE_KEY = "None";
2	NORMAL_QUEST_DISPLAY = "|cff000000%s|r";
2	NOTE = "Public Note";
2	NOTE_COLON = "Note:";
2	NOTE_SUBMITTED = "Note submitted";
2	NOTE_SUBMIT_FAILED = "Note submission failed";
2	NOT_APPLICABLE = "N/A";
2	NOT_BOUND = "Not Bound";
2	NOT_ENOUGH_MANA = "You don't have enough mana to cast %s."; -- Tell player he doesn't have enough mana to cast a spell
2	NOT_IN_GROUP = "You are no longer in a party."; -- You have left the party
2	NOT_TAMEABLE = "Cannot be Tamed";
2	NOT_YET_SIGNED = "<not yet signed>";
2	NO_ATTACHMENTS = "No Attachments";
2	NO_BIDS = "No Bids";
2	NO_COMPLETED_ACHIEVEMENTS = "You have not earned any achievements recently";
2	NO_DAILY_QUESTS_REMAINING = "You cannot complete any more daily quests today."; -- Replaces DAILY_QUESTS_REMAINING when count is 0
2	NO_EMPTY_KEYRING_SLOTS_ERROR = "Your keyring is full.";
2	NO_EQUIPMENT_SLOTS_AVAILABLE = "No equipment slot is available for that item."; -- An item dropped on the player's picture rather than a particular slot can't be equipped
2	NO_GUILDBANK_TABS = "Your guild has not purchased any guild bank space.";
2	NO_RAID_INSTANCES_SAVED = "You are not saved to any instances";
2	NO_RESPONSE = "No Response";
2	NO_UPDATED_STATS_TEXT = "You have no recently updated stats";
2	NO_VIEWABLE_GUILDBANK_LOGS = "You do not have any permission to view any Guild Bank logs.";
2	NO_VIEWABLE_GUILDBANK_TABS = "You do not have permission to view any Guild Bank tabs.";
2	NO_VOICE_SESSIONS = "No Channel"; -- Line displayed in Channel Pullout Roster window when you don't belong to any channels with voice sessions.
2	NUMBER_OF_RESULTS_TEMPLATE = "Items %d - %d  ( %d total )";
2	NUM_FREE_SLOTS = "%d Empty |4Slot:Slots; (Total)";
2	NUM_GUILDBANK_TABS_PURCHASED = "(%d/%d tabs purchased)";
2	NUM_RAID_MEMBERS = "%d Raid Members";
2	OBJECT_ALPHA = "Object Alpha";
2	OFF = "Off";
2	OFFICER_CHAT = "Officer Chat";
2	OFFICER_NOTE_COLON = "Officer's Note";
2	OKAY = "Okay"; -- Generic "okay"
2	OLD_TITLE_LOST = "You have lost the title '%s'."; -- This is for when you lose titles.
2	ONLY_EMPTY_BAGS = "Only empty bags can be picked up!"; -- The player can only pick up empty bags
2	OPACITY = "Opacity";
2	OPENING = "Opening";
2	OPENMAIL = "Open Mail";
2	OPEN_LOCK_OTHER = "%s performs %s on %s.";
2	OPEN_LOCK_SELF = "You perform %s on %s.";
2	OPTIONAL = "optional";
2	OPTIONAL_PARENS = "(optional)";
2	OPTIONS_BRIGHTNESS = "Brightness";
2	OPTIONS_MENU = "Options Menu";
2	OPTIONS_SHADERS = "Shaders";
2	OPTION_LOGOUT_REQUIREMENT = "Requires logout to take effect.";
2	OPTION_RESTART_REQUIREMENT = "Requires game restart to take effect.";
2	OPTION_TOOLTIP_AGGRO_WARNING_DISPLAY1 = "Never show the aggro warning system.";
2	OPTION_TOOLTIP_AGGRO_WARNING_DISPLAY2 = "Only show the aggro warning system in instances.";
2	OPTION_TOOLTIP_AGGRO_WARNING_DISPLAY3 = "Only show the aggro warning system while in a party (including raids).";
2	OPTION_TOOLTIP_AGGRO_WARNING_DISPLAY4 = "Always show the aggro warning system.";
2	OPTION_TOOLTIP_ALWAYS_SHOW_MULTIBARS = "Check this option to always display extra actionbars.";
2	OPTION_TOOLTIP_AMBIENCE_VOLUME = "Adjusts the ambient sound volume.";
2	OPTION_TOOLTIP_ANIMATION = "PLACE_HOLDER";
2	OPTION_TOOLTIP_ANISOTROPIC = "Increases texture sharpness, particularly for textures in the distance.  Decrease to improve performance.";
2	OPTION_TOOLTIP_ASSIST_ATTACK = "Automatically attack a target when you acquire it by using \"/assist\".";
2	OPTION_TOOLTIP_AUTO_DISMOUNT_FLYING = "If enabled, your character will automatically dismount before casting while flying.";
2	OPTION_TOOLTIP_AUTO_FOLLOW_SPEED = "Adjust the camera movement speed in Always and Smart following styles.";
2	OPTION_TOOLTIP_AUTO_JOIN_GUILD_CHANNEL = "Check this option to automatically join the Guild Recruitment chat channel based upon whether or not you are in a guild.";
2	OPTION_TOOLTIP_AUTO_LOOT_ALT_KEY = "Use the \"ALT\" key to Loot when \"Auto Loot\" is checked, and to Auto Loot when it is not.";
2	OPTION_TOOLTIP_AUTO_LOOT_CTRL_KEY = "Use the \"CTRL\" key to Loot when \"Auto Loot\" is checked, and to Auto Loot when it is not.";
2	OPTION_TOOLTIP_AUTO_LOOT_DEFAULT = "Sets Auto Looting as the default action when clicking on lootable things. (Looting when this is checked, or Auto Looting when it is not, is performed by holding the Loot Key / Auto Loot Key)";
2	OPTION_TOOLTIP_AUTO_LOOT_KEY_TEXT = "Key to use to auto loot";
2	OPTION_TOOLTIP_AUTO_LOOT_NONE_KEY = "Do not apply a key.";
2	OPTION_TOOLTIP_AUTO_LOOT_SHIFT_KEY = "Use the \"SHIFT\" key to Loot when \"Auto Loot\" is checked, and to Auto Loot when it is not.";
2	OPTION_TOOLTIP_AUTO_QUEST_WATCH = "Quests are automatically watched for 5 minutes when you achieve a quest objective.";
2	OPTION_TOOLTIP_AUTO_RANGED_COMBAT = "If enabled, your character will automatically switch between auto attack and auto shot.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST = "When this is enabled, friendly target spells that you cast while you have a non friendly target or no target will automatically be self cast.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST_ALT_KEY = "Use the \"ALT\" key to cast friendly target spells on yourself even if an enemy is targeted, or there is no target.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST_CTRL_KEY = "Use the \"CTRL\" key to cast friendly target spells on yourself even if an enemy is targeted, or there is no target.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST_KEY_TEXT = "When held this key will allow self casting, even if an enemy is targeted.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST_NONE_KEY = "No key set.";
2	OPTION_TOOLTIP_AUTO_SELF_CAST_SHIFT_KEY = "Use the \"SHIFT\" key to cast friendly target spells on yourself even if an enemy is targeted, or there is no target.";
2	OPTION_TOOLTIP_BLOCK_TRADES = "Block all incoming trade requests.";
2	OPTION_TOOLTIP_CAMERA1 = "Set the camera to stay where placed, except when your character is moving.";
2	OPTION_TOOLTIP_CAMERA2 = "Set the camera to always prefer being behind your character.";
2	OPTION_TOOLTIP_CAMERA3 = "Set the camera to stay where set, and never auto adjust.";
2	OPTION_TOOLTIP_CAMERA_ALWAYS = "Set the camera to always prefer being behind your character.";
2	OPTION_TOOLTIP_CAMERA_NEVER = "Set the camera to stay where set, and never auto adjust.";
2	OPTION_TOOLTIP_CAMERA_SMART = "Set the camera to stay where placed, except when your character is moving.  (Recommended Mode)";
2	OPTION_TOOLTIP_CHARACTER_SHADOWS = "Enables character shadows for all characters within the game.  Disabling this can sometimes improve performance.";
2	OPTION_TOOLTIP_CHAT_BUBBLES = "Shows /say and /yell text in speech bubbles above characters' heads.";
2	OPTION_TOOLTIP_CHAT_LOCKED = "Locks all chat windows so they cannot accidentally be altered.";
2	OPTION_TOOLTIP_CINEMATIC_SUBTITLES = "Enables subtitles during the intro cinematic.";
2	OPTION_TOOLTIP_CLEAR_AFK = "Automatically exit AFK mode\nupon moving or talking.";
2	OPTION_TOOLTIP_CLICKCAMERA_LOCKED = "Sets the camera to always be aligned with your character when changing direction with click-to-move.";
2	OPTION_TOOLTIP_CLICKCAMERA_NEVER = "Sets the camera to not move when changing direction with click-to-move.";
2	OPTION_TOOLTIP_CLICKCAMERA_SMART = "Sets the camera to follow your character after a brief delay when changing direction with click-to-move. (Recommended Mode) ";
2	OPTION_TOOLTIP_CLICK_CAMERA1 = "Sets the camera to follow your character after a brief delay when changing direction with click-to-move. (Recommended Mode)";
2	OPTION_TOOLTIP_CLICK_CAMERA2 = "Sets the camera to always be aligned with your character when changing direction with click-to-move.";
2	OPTION_TOOLTIP_CLICK_CAMERA3 = "Sets the camera to not move when changing direction with click-to-move.";
2	OPTION_TOOLTIP_CLICK_CAMERA_STYLE = "Determines the way the camera follows the player while in Click-to-Move mode.";
2	OPTION_TOOLTIP_CLICK_TO_MOVE = "Use mouse clicks to move your character to destinations.";
2	OPTION_TOOLTIP_COMBAT_TEXT_MODE = "Sets the direction that combat text scrolls.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SCROLL_DOWN = "Scroll combat text down instead of up.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_AURAS = "Shows a message when the player gains or loses an aura.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_AURA_FADE = "Shows a message when an aura fades from the player.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_COMBAT_STATE = "Shows a message when you enter or leave combat. ";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_COMBO_POINTS = "Shows the number of combo points you have each time you acquire a new one.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_DODGE_PARRY_MISS = "Shows attacks against you that dodge, parry, or miss.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_ENERGIZE = "Shows all instant gains of mana, rage, and energy.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_FRIENDLY_NAMES = "Shows the name of a friendly caster when they cast a heal spell on you.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_HONOR_GAINED = "Shows the honor you gain from killing other players.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_LOW_HEALTH_MANA = "Shows a message when you fall below 20% mana or health.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_PERIODIC_ENERGIZE = "Shows all periodic gains of mana, rage, and energy.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_REACTIVES = "Shows when reactive class specific abilities and spells become available (e.g. Overpower for warriors).";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_REPUTATION = "Shows a message when the player gains or loses reputation with a faction.";
2	OPTION_TOOLTIP_COMBAT_TEXT_SHOW_RESISTANCES = "Shows when you resist taking damage from attacks or spells.";
2	OPTION_TOOLTIP_DEATH_EFFECT = "Uncheck to disable glowing effect while in ghost form. Disabling this can sometimes improve performance.";
2	OPTION_TOOLTIP_DESKTOP_GAMMA = "Use the same gamma settings as your desktop.";
2	OPTION_TOOLTIP_DISABLE_SPAM_FILTER = "Disables spam filtering on chat text.";
2	OPTION_TOOLTIP_DISPLAY_FREE_BAG_SLOTS = "Displays remaining inventory space on the backpack icon.";
2	OPTION_TOOLTIP_ENABLE_ALL_SHADERS = "Enables all pixel shaders.";
2	OPTION_TOOLTIP_ENABLE_AMBIENCE = "Enable ambient sounds.";
2	OPTION_TOOLTIP_ENABLE_BGSOUND = "Enable to allow sounds to play even when World of Warcraft is in the background.";
2	OPTION_TOOLTIP_ENABLE_DSP_EFFECTS = "Special voice modulation effects for Death Knights. Disable to improve performance.";
2	OPTION_TOOLTIP_ENABLE_EMOTE_SOUNDS = "Toggles emote sounds on and off.";
2	OPTION_TOOLTIP_ENABLE_ERROR_SPEECH = "Enables speech from errors (e.g. \"Target out of range\").";
2	OPTION_TOOLTIP_ENABLE_GROUP_SPEECH = "Enables speech from groupmates.";
2	OPTION_TOOLTIP_ENABLE_HARDWARE = "Enables the use of hardware for 3D sound management. This may alter your sound performance.";
2	OPTION_TOOLTIP_ENABLE_MICROPHONE = "Enables your microphone.";
2	OPTION_TOOLTIP_ENABLE_MUSIC = "Enable background music.";
2	OPTION_TOOLTIP_ENABLE_MUSIC_LOOPING = "Enable to continuously play background music.";
2	OPTION_TOOLTIP_ENABLE_REVERB = "Enables reverb sound effects.  This will affect performance.";
2	OPTION_TOOLTIP_ENABLE_SOFTWARE_HRTF = "Enables software emulation for headphone surround sound.";
2	OPTION_TOOLTIP_ENABLE_SOUND = "Enables or disables all sound.";
2	OPTION_TOOLTIP_ENABLE_SOUNDFX = "Enables or disables game sound effects.";
2	OPTION_TOOLTIP_ENABLE_SOUND_AT_CHARACTER = "Listen to sound from the character's point of view rather than the camera.";
2	OPTION_TOOLTIP_ENABLE_VOICECHAT = "Voice Chat is not monitored by Blizzard Entertainment, and your gameplay experience may change based on interaction with other players.";
2	OPTION_TOOLTIP_ENVIRONMENT_DETAIL = "Controls how far you can see objects. Decrease to improve performance.";
2	OPTION_TOOLTIP_FARCLIP = "Changes how far you can see. Decrease to improve performance.";
2	OPTION_TOOLTIP_FIX_LAG = "Enabling this reduces user interface lag, and may affect frame rates.\nChanging this option will restart the graphics engine.";
2	OPTION_TOOLTIP_FOCUS_CAST_ALT_KEY = "Use the \"ALT\" key to cast targeted spells on your Focus Target.";
2	OPTION_TOOLTIP_FOCUS_CAST_CTRL_KEY = "Use the \"CTRL\" key to cast targeted spells on your Focus Target.";
2	OPTION_TOOLTIP_FOCUS_CAST_NONE_KEY = "No key set.";
2	OPTION_TOOLTIP_FOCUS_CAST_SHIFT_KEY = "Use the \"SHIFT\" key to cast targeted spells on your Focus Target.";
2	OPTION_TOOLTIP_FOLLOW_TERRAIN = "Automatically change the camera angle based on the terrain. If your character climbs a slope, the camera will rotate upwards; if you descend, it will rotate downwards.";
2	OPTION_TOOLTIP_FULL_SCREEN_GLOW = "Enables a full screen effect that softens edges and lighting. Disabling this can sometimes improve performance.";
2	OPTION_TOOLTIP_GAMEFIELD_DESELECT = "Checking this will prevent the deselection of targets by clicking on the gamefield.  Targets can only be cleared by pressing escape or clicking another target.";
2	OPTION_TOOLTIP_GAMMA = "Controls the brightness of the game. Increase brightness until you can clearly see all 21 levels of gray bars below.";
2	OPTION_TOOLTIP_GROUND_DENSITY = "Controls the number of ground clutter items, like grass and foliage.  Decrease to improve performance.";
2	OPTION_TOOLTIP_GROUND_RADIUS = "Controls the draw distance of ground clutter items like grass and foliage.  Decrease to improve performance.";
2	OPTION_TOOLTIP_GUILDMEMBER_ALERT = "Show a message when your guild members login and logout.";
2	OPTION_TOOLTIP_HARDWARE_CURSOR = "Enable this option for the best performance unless you have cursor problems.";
2	OPTION_TOOLTIP_HEAD_BOB = "Simulate head bobbing when in first-person perspective.";
2	OPTION_TOOLTIP_HIDE_OUTDOOR_WORLD_STATE = "Checking this will hide the interface for tracking zone wide objectives.";
2	OPTION_TOOLTIP_HIDE_PARTY_INTERFACE = "Click this to hide your party's portraits and health bars.";
2	OPTION_TOOLTIP_INVERT_MOUSE = "Invert the way that the mouse affects camera pitch.";
2	OPTION_TOOLTIP_LOCALE = "Select which language you would like to play in.";
2	OPTION_TOOLTIP_LOCK_ACTIONBAR = "Prevents the user from picking up/dragging spells on the action bar. This function can be bound to a function key in the keybindings interface.";
2	OPTION_TOOLTIP_LOG_PERIODIC_EFFECTS = "Display damage caused by periodic effects such as Rend and Shadow Word: Pain.";
2	OPTION_TOOLTIP_LONG_RANGE_NAMEPLATE = "Turning this option on will increase the range at which name plates appear.";
2	OPTION_TOOLTIP_LOOT_KEY_TEXT = "Key to use to single loot a corpse";
2	OPTION_TOOLTIP_LOOT_UNDER_MOUSE = "When checked the loot window will open up under the current mouse location.";
2	OPTION_TOOLTIP_MASTER_VOLUME = "Adjusts the master sound volume.";
2	OPTION_TOOLTIP_MAX_FOLLOW_DIST = "Adjust the maximum distance the camera will follow behind you.";
2	OPTION_TOOLTIP_MOUSE_LOOK_SPEED = "Adjust the speed at which you turn the camera when using mouse look.";
2	OPTION_TOOLTIP_MOUSE_SENSITIVITY = "Adjust the speed at which the mouse cursor moves.";
2	OPTION_TOOLTIP_MULTISAMPLING = "Increase multisampling to smooth out model edges.";
2	OPTION_TOOLTIP_MUSIC_VOLUME = "Adjusts the background music volume.";
2	OPTION_TOOLTIP_OBJECT_ALPHA = "PLACE_HOLDER";
2	OPTION_TOOLTIP_PARTY_CHAT_BUBBLES = "Shows party chat text in speech bubbles above party members' heads.";
2	OPTION_TOOLTIP_PET_NAMEPLATES = "Toggles displaying of name plates on your pets, totems, and guardians.";
2	OPTION_TOOLTIP_PET_SPELL_DAMAGE = "Show spell damage caused by your pet.";
2	OPTION_TOOLTIP_PHONG_SHADING = "Enable this option for smooth lighting across characters.";
2	OPTION_TOOLTIP_PROFANITY_FILTER = "Enable mature language filtering.";
2	OPTION_TOOLTIP_PUSHTOTALK_SOUND = "Plays a small sound whenever you press your Push-to-Talk key.";
2	OPTION_TOOLTIP_REMOVE_CHAT_DELAY = "Check to show chat windows immediately upon mouseover.";
2	OPTION_TOOLTIP_ROTATE_MINIMAP = "Check this to rotate the entire minimap instead of the player arrow.";
2	OPTION_TOOLTIP_SCROLL_ARC = "Scrolls the text in arcs away from the player.";
2	OPTION_TOOLTIP_SCROLL_DOWN = "Scrolls combat text towards the bottom of the screen.";
2	OPTION_TOOLTIP_SCROLL_UP = "Scrolls combat text towards the top of the screen.";
2	OPTION_TOOLTIP_SECURE_ABILITY_TOGGLE = "When selected you will be protected from toggling your abilities off if accidently hitting the button more than once in a short period of time.";
2	OPTION_TOOLTIP_SHADOW_QUALITY = "Controls the quality of rendered character and environment shadows. Decrease to improve performance.";
2	OPTION_TOOLTIP_SHOW_BUFF_DURATION = "Toggle text counters for buff durations on and off.";
2	OPTION_TOOLTIP_SHOW_CASTABLE_BUFFS = "Show only Buffs the player can cast.  Only applies to raids.";
2	OPTION_TOOLTIP_SHOW_CHAT_ICONS = "Controls whether or not icon links in auto-joined chat channels (such as Trade) are displayed as icons.";
2	OPTION_TOOLTIP_SHOW_CLASS_COLOR_IN_V_KEY = "Toggles class colors in the background of Nameplate health bar for enemy players.";
2	OPTION_TOOLTIP_SHOW_CLOAK = "Uncheck this box to hide your character's cloak.";
2	OPTION_TOOLTIP_SHOW_CLOCK = "Displays the clock button on the minimap.";
2	OPTION_TOOLTIP_SHOW_COMBAT_HEALING = "Display amount of healing you did to the target.";
2	OPTION_TOOLTIP_SHOW_COMBAT_TEXT = "Checking this will enable additional combat messages to appear in the playfield.";
2	OPTION_TOOLTIP_SHOW_DAMAGE = "Display damage numbers over hostile creatures when damaged.";
2	OPTION_TOOLTIP_SHOW_DISPELLABLE_DEBUFFS = "Show only Debuffs that the player can dispel.  Only applies to raids.";
2	OPTION_TOOLTIP_SHOW_FULLSCREEN_STATUS = "Shows a screen edge flash when you have a fullscreen UI up and you are in combat.";
2	OPTION_TOOLTIP_SHOW_GUILD_NAMES = "Always display player guild names in the game world.";
2	OPTION_TOOLTIP_SHOW_HELM = "Uncheck this box to hide your character's helm.";
2	OPTION_TOOLTIP_SHOW_LOOT_SPAM = "Uncheck this to hide individual loot roll messages and only show the winner.";
2	OPTION_TOOLTIP_SHOW_LUA_ERRORS = "Shows error messages related to UI functionality.";
2	OPTION_TOOLTIP_SHOW_MULTIBAR1 = "Toggles an optional actionbar in the bottom left area of the screen.";
2	OPTION_TOOLTIP_SHOW_MULTIBAR2 = "Toggles an optional actionbar in the bottom right area of the screen.";
2	OPTION_TOOLTIP_SHOW_MULTIBAR3 = "Toggles an optional actionbar on the right side of the screen.";
2	OPTION_TOOLTIP_SHOW_MULTIBAR4 = "Toggles an additional optional actionbar on the right side of the screen.";
2	OPTION_TOOLTIP_SHOW_NEWBIE_TIPS = "Show detailed information about various user interface elements.  Advanced players may want to turn this off.";
2	OPTION_TOOLTIP_SHOW_NPC_NAMES = "Always display NPC names in the game world.";
2	OPTION_TOOLTIP_SHOW_NUMERIC_THREAT = "Check this to show threat on targets as a percentage.";
2	OPTION_TOOLTIP_SHOW_OTHER_TARGET_EFFECTS = "Display effects such as Silence and Snare on other players' targets.";
2	OPTION_TOOLTIP_SHOW_OWN_NAME = "Shows your character's name.";
2	OPTION_TOOLTIP_SHOW_PARTY_BACKGROUND = "Show a background behind party members.";
2	OPTION_TOOLTIP_SHOW_PARTY_PETS = "Show the portraits of your party members' pets.";
2	OPTION_TOOLTIP_SHOW_PARTY_TEXT = "Always display the text on health, mana, rage, or energy status bars on party members.";
2	OPTION_TOOLTIP_SHOW_PET_MELEE_DAMAGE = "Show damage caused by your pet.";
2	OPTION_TOOLTIP_SHOW_PLAYER_NAMES = "Always display player names in the game world.";
2	OPTION_TOOLTIP_SHOW_PLAYER_TITLES = "Always display player titles in the game world.";
2	OPTION_TOOLTIP_SHOW_QUEST_FADING = "Check this to make quest text appear instantly.";
2	OPTION_TOOLTIP_SHOW_RAID_RANGE = "Show the range of raid members when they are far away by fading out their health bars.";
2	OPTION_TOOLTIP_SHOW_TARGET_CASTBAR = "Show the spell that your current target is casting."; -- CVar text for the current target castbar
2	OPTION_TOOLTIP_SHOW_TARGET_CASTBAR_IN_V_KEY = "If the Name Plate is displayed for your current target, show the enemy cast bar with the target's health bar in the game field."; -- CVar text for the current target castbar
2	OPTION_TOOLTIP_SHOW_TARGET_EFFECTS = "Display effects such as Silence and Snare on your target.";
2	OPTION_TOOLTIP_SHOW_TARGET_OF_TARGET = "Toggles the display of the target of your target.";
2	OPTION_TOOLTIP_SHOW_TIPOFTHEDAY = "Uncheck this to hide the tip of the day in the load screens.";
2	OPTION_TOOLTIP_SHOW_TUTORIALS = "Display tutorials which help introduce you to WoW.";
2	OPTION_TOOLTIP_SHOW_UNIT_NAMES = "Display unit names in the game world.";
2	OPTION_TOOLTIP_SIMPLE_CHAT = "Sets up a main chat window and a combat log that cannot be reconfigured.";
2	OPTION_TOOLTIP_SMART_PIVOT = "Lets you free look when the camera is on the ground.";
2	OPTION_TOOLTIP_SOUND_CHANNELS = "Changes the number of active software sound channels.";
2	OPTION_TOOLTIP_SOUND_OUTPUT = "Selects where you would like to hear your game sounds.";
2	OPTION_TOOLTIP_SOUND_QUALITY = "Adjusts the quality of game sounds.\nDecrease to improve performance.";
2	OPTION_TOOLTIP_SOUND_VOLUME = "Adjusts the sound effect volume.";
2	OPTION_TOOLTIP_SPELL_DETAIL = "Controls the detail level of spell effects.  Decrease to improve performance.";
2	OPTION_TOOLTIP_STATUS_BAR = "Always display the text on your XP, health, mana, rage, energy, or happiness status bars.";
2	OPTION_TOOLTIP_STATUS_TEXT_PARTY = "Always display the text on your party's health, mana, rage, or energy bars."; -- Mouseover tooltip for the Party Status Text option in the UI Options frame.
2	OPTION_TOOLTIP_STATUS_TEXT_PERCENT = "Always display status text using percentage values."; -- Mouseover tooltip for the Status Text - Display Percentages option in the UI Options frame.
2	OPTION_TOOLTIP_STATUS_TEXT_PET = "Always display the text on your pet's health, mana, or focus bars."; -- Mouseover tooltip for the Pet Status Text option in the UI Options frame.
2	OPTION_TOOLTIP_STATUS_TEXT_PLAYER = "Always display the text on your character's health, mana, rage, or energy bars."; -- Mouseover tooltip for the Player Status Text option in the UI Options frame.
2	OPTION_TOOLTIP_STATUS_TEXT_TARGET = "Always display the text on your target's health, mana, rage, energy, or focus bars."; -- Mouseover tooltip for the Target Status Text option in the UI Options frame.
2	OPTION_TOOLTIP_STOP_AUTO_ATTACK = "Stop auto attacking when you switch targets.";
2	OPTION_TOOLTIP_TARGETOFTARGET1 = "Sets Target of Target to display when you are in a raid.";
2	OPTION_TOOLTIP_TARGETOFTARGET2 = "Sets Target of Target to display when you are in a party.";
2	OPTION_TOOLTIP_TARGETOFTARGET3 = "Sets Target of Target to display when solo.";
2	OPTION_TOOLTIP_TARGETOFTARGET4 = "Sets Target of Target to display when you are in a raid or a party.";
2	OPTION_TOOLTIP_TARGETOFTARGET5 = "Sets Target of Target to always display.";
2	OPTION_TOOLTIP_TARGETOFTARGET_ALWAYS = "Sets Target of Target to always display.";
2	OPTION_TOOLTIP_TARGETOFTARGET_PARTY = "Sets Target of Target to display when you are in a party.";
2	OPTION_TOOLTIP_TARGETOFTARGET_RAID = "Sets Target of Target to display when you are in a raid.";
2	OPTION_TOOLTIP_TARGETOFTARGET_RAID_AND_PARTY = "Sets Target of Target to display when you are in a raid or a party.";
2	OPTION_TOOLTIP_TARGETOFTARGET_SOLO = "Sets Target of Target to display when solo.";
2	OPTION_TOOLTIP_TERRAIN_HIGHLIGHTS = "Enables specular highlights on terrain and water. Disabling this can sometimes improve performance.";
2	OPTION_TOOLTIP_TERRAIN_TEXTURE = "Sets the terrain texture detail.";
2	OPTION_TOOLTIP_TEXTURE_DETAIL = "Controls the level of all texture detail. Decrease to improve performance.";
2	OPTION_TOOLTIP_TRILINEAR = "Enables high quality filtering of texture maps. Turn this feature off to increase performance.";
2	OPTION_TOOLTIP_TRIPLE_BUFFER = "Enables triple buffering of frames when vertical sync is enabled. Selecting triple buffering may improve your framerate.";
2	OPTION_TOOLTIP_UI_SCALE = "Changes the size of the game’s user interface.";
2	OPTION_TOOLTIP_UNIT_NAME_COMPANIONS = "Show companions' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_ENEMY = "Show enemy players' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_ENEMY_CREATIONS = "Show enemy creations' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_ENEMY_PETS = "Show enemy pets and minions' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_FRIENDLY = "Show friendly players' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_FRIENDLY_CREATIONS = "Show friendly creations' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_FRIENDLY_PETS = "Show friendly pets and minions' names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_GUILD = "Show players' guild names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_NPC = "Show NPC names in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_OWN = "Display your character's name in the game world.";
2	OPTION_TOOLTIP_UNIT_NAME_PLAYER_TITLE = "Show player titles in the game world.";
2	OPTION_TOOLTIP_USE_REFRESH = "Changes the monitor refresh rates. Higher rates flicker less.";
2	OPTION_TOOLTIP_USE_RESOLUTION = "Changes the screen resolution of the game. Decrease to improve performance.";
2	OPTION_TOOLTIP_USE_UBERTOOLTIPS = "Enable detailed tooltips in the lower right hand corner of the screen.";
2	OPTION_TOOLTIP_USE_UISCALE = "Check to use the UI Scale Slider, uncheck to use the system default scale.";
2	OPTION_TOOLTIP_USE_WEATHER_SHADER = "Uncheck this if weather effects are causing your computer to crash.";
2	OPTION_TOOLTIP_VERTEX_ANIMATION_SHADERS = "Enables the use of vertex shaders to speed animation. Enable this to maximize performance.";
2	OPTION_TOOLTIP_VERTICAL_SYNC = "Synchronizes your framerate to some fraction of your monitor's refresh rate. Enable this if you see excessive screen tearing in game.";
2	OPTION_TOOLTIP_VOICE_ACTIVATION_SENSITIVITY = "Adjusts the sensitivity of the microphone.";
2	OPTION_TOOLTIP_VOICE_AMBIENCE = "Adjusts the ambient sound volume during voice chat.";
2	OPTION_TOOLTIP_VOICE_INPUT = "Selects your microphone or the controller it is connected to.";
2	OPTION_TOOLTIP_VOICE_INPUT_VOLUME = "Adjusts the volume of your voice.";
2	OPTION_TOOLTIP_VOICE_MUSIC = "Adjusts the game music volume during voice chat.";
2	OPTION_TOOLTIP_VOICE_OUTPUT = "Selects where you would like to hear incoming voice chat.";
2	OPTION_TOOLTIP_VOICE_OUTPUT_VOLUME = "Adjusts the volume of others' voices.";
2	OPTION_TOOLTIP_VOICE_SOUND = "Adjusts the game sound volume during voice chat.";
2	OPTION_TOOLTIP_VOICE_TYPE1 = "Requires the pressing of a key before speaking in voice chat.";
2	OPTION_TOOLTIP_VOICE_TYPE2 = "Allows for the transmission of voice chat by just speaking.";
2	OPTION_TOOLTIP_WATER_COLLISION = "Set the camera to be above water when your character is above water, and below water when your character is below water.";
2	OPTION_TOOLTIP_WEATHER_DETAIL = "Controls the intensity of weather effects.  Decrease to improve performance.";
2	OPTION_TOOLTIP_WINDOWED_MAXIMIZED = "Check to maximize window and remove borders.";
2	OPTION_TOOLTIP_WINDOWED_MODE = "Check to play in a non-fullscreen window.\n\nIf this is checked the game will use your desktop gamma and you will not be able to adjust it via the slider below.";
2	OPTION_TOOLTIP_WINDOW_LOCK = "Enable this to prevent resizing the game window.";
2	OPTION_TOOLTIP_WORLD_LOD = "Check this to enable dynamic reduction of terrain polygon detail.  Check to increase performance.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY1 = "This will show the World PVP objectives when you are in PVP zones.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY2 = "This will show the World PVP objectives when you are near PVP points of interest.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY3 = "This will turn off the World PVP objectives.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY_ALWAYS = "This will show the World PVP objectives when you are in PVP zones.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY_DYNAMIC = "This will show the World PVP objectives when you are near PVP points of interest.";
2	OPTION_TOOLTIP_WORLD_PVP_DISPLAY_NEVER = "This will turn off the World PVP objectives.";
2	OPTION_TOOLTIP_XP_BAR = "Always display the text on your XP bar."; -- Mouseover tooltip for the XB bar text toggle in the UI Options frame.
2	OPT_OUT_LOOT_TITLE = "Pass on Loot: %s";
2	OPT_OUT_LOOT_TOGGLE_OFF = "You are now eligible for random loot.";
2	OPT_OUT_LOOT_TOGGLE_ON = "You are now passing on random loot.";
2	OTHER = "Other";
2	OTHER_MESSAGES = "Other Messages";
2	OUTBID = "Outbid";
2	OUTBID_BY = "Outbid by";
2	OUT_OF_ENERGY = "Not enough energy";
2	OUT_OF_FOCUS = "Not enough focus";
2	OUT_OF_HEALTH = "Not enough health";
2	OUT_OF_MANA = "Not enough mana";
2	OUT_OF_RAGE = "Not enough rage";
2	PAGE_NUMBER = "Page %d"; -- Generic page number, as in "Page 3"
2	PALADIN_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	PALADIN_STRENGTH_TOOLTIP = "Increases attack power with melee weapons.\nIncreases the amount of damage that can be blocked with a shield.";
2	PAPERDOLL_SELECT_TITLE = "Select a Title"; -- Title Dropdown Default Text
2	PARENS_TEMPLATE = "(%s)"; -- Generic template to add parentheses around a string
2	PARRIED = "Parried"; -- Parried an attack
2	PARRY = "Parry"; -- Parry an attack
2	PARRY_CHANCE = "Parry Chance";
2	PARTY = "Party";
2	PARTYRAID_LABEL = "Party & Raid";
2	PARTYRAID_SUBTEXT = "These options can be used to change the display and behavior of party and raid frames within the UI.";
2	PARTY_CHAT_BUBBLES_TEXT = "Party Chat Bubbles";
2	PARTY_INVITE = "Invite"; -- Invite a player to join your party
2	PARTY_LEAVE = "Leave party"; -- Leave your current party
2	PARTY_MESSAGE = "Party Chat"; -- Message to your party
2	PARTY_OPTIONS_LABEL = "Party Options";
2	PARTY_PROMOTE = "Promote to Leader"; -- Promote a party member to be the new leader
2	PARTY_QUEST_STATUS_NONE = "There are no nearby party members on this quest."; -- Indicates that a party member is out of range
2	PARTY_QUEST_STATUS_ON = "Nearby party members that are on this quest:"; -- Indicates if a party member is also on the quest
2	PARTY_SILENCE = "Silence in Party";
2	PARTY_UNINVITE = "Uninvite"; -- Kick a player out of the group
2	PARTY_UNSILENCE = "Unsilence in Party";
2	PASS = "Pass";
2	PASSIVE_PARENS = "(Passive)"; -- Passive label in parentheses
2	PASSWORD = "Password";
2	PERCENT_SYMBOL = "%%";
2	PERIODIC = "Periodic";
2	PERIODIC_MESSAGES = "Periodic Effects";
2	PET = "Pet"; -- Generic pet string
2	PETITION_CREATOR = "Created by %s";
2	PETITION_NUM_SIGNATURES = "%d |4signature:signatures;";
2	PETITION_TITLE = "Petition: %s";
2	PETS = "Pets"; -- Class Label for the Raid UI
2	PETTAME_ANOTHERSUMMONACTIVE = "You have an active summon already";
2	PETTAME_CANTCONTROLEXOTIC = "You are unable to control exotic creatures";
2	PETTAME_CREATUREALREADYOWNED = "Creature is already controlled";
2	PETTAME_DEAD = "Your pet is dead";
2	PETTAME_INTERNALERROR = "Internal pet error";
2	PETTAME_INVALIDCREATURE = "Creature not found";
2	PETTAME_NOPETAVAILABLE = "You do not have a pet to summon";
2	PETTAME_NOTDEAD = "Your pet is not dead";
2	PETTAME_NOTTAMEABLE = "Creature not tameable";
2	PETTAME_TOOHIGHLEVEL = "Creature is too high level for you to tame";
2	PETTAME_TOOMANY = "You have too many pets already";
2	PETTAME_UNITSCANTTAME = "You cannot tame creatures";
2	PETTAME_UNKNOWNERROR = "Unknown taming error";
2	PET_ABANDON = "Abandon"; -- Dismiss the pet permanently
2	PET_ACTION_ATTACK = "Attack"; -- Tells pet to attack
2	PET_ACTION_DISMISS = "Dismiss"; -- Dismisses your pet
2	PET_ACTION_FOLLOW = "Follow"; -- Tells pet to follow the player
2	PET_ACTION_WAIT = "Stay"; -- Tells pet to wait
2	PET_AGGRESSIVE = "Aggressive"; -- Set the pet to aggressive mode
2	PET_ATTACK = "Attack"; -- Tell the pet to attack your current target
2	PET_BONUS_TOOLTIP_ARMOR = "Increases your pet's Armor by %d";
2	PET_BONUS_TOOLTIP_INTELLECT = "Increases your pet's Intellect by %d";
2	PET_BONUS_TOOLTIP_RANGED_ATTACK_POWER = "Increases your pet's Attack Power by %d";
2	PET_BONUS_TOOLTIP_RESISTANCE = "Increases your pet's Resistance by %d";
2	PET_BONUS_TOOLTIP_SPELLDAMAGE = "Increases your pet's Spell Damage by %d";
2	PET_BONUS_TOOLTIP_STAMINA = "Increases your pet's Stamina by %d";
2	PET_BONUS_TOOLTIP_WARLOCK_SPELLDMG_FIRE = "Your Fire Damage increases your pet's Attack Power by %d and Spell Damage by %d";
2	PET_BONUS_TOOLTIP_WARLOCK_SPELLDMG_SHADOW = "Your Shadow Damage increases your pet's Attack Power by %d and Spell Damage by %d";
2	PET_DAMAGE_PERCENTAGE = "Causes %d%% of normal damage";
2	PET_DEFENSIVE = "Defensive"; -- Set the pet to defensive mode
2	PET_DIET_TEMPLATE = "Diet: %s";
2	PET_DISMISS = "Dismiss"; -- Release the pet
2	PET_FOLLOW = "Follow"; -- Tell the pet to follow you
2	PET_HAPPINESS1 = "Unhappy";
2	PET_HAPPINESS2 = "Content";
2	PET_HAPPINESS3 = "Happy";
2	PET_INFO = "Pet Info";
2	PET_MODE_AGGRESSIVE = "Aggressive"; -- Pet is in "aggressive" mode
2	PET_MODE_DEFENSIVE = "Defensive"; -- Pet is in "defensive" mode
2	PET_MODE_PASSIVE = "Passive"; -- Pet is in "passive" mode
2	PET_PAPERDOLL = "Pet Details";
2	PET_PASSIVE = "Passive"; -- Set the pet to passive mode
2	PET_RENAME = "Rename"; -- Rename the pet
2	PET_RENAME_CONFIRMATION = "Name your pet '%s'?";
2	PET_RENAME_LABEL = "Enter desired name of pet:";
2	PET_SPELLS_TEMPLATE = "Tamed Abilities: %s";
2	PET_SPELL_NOPATH = "No path available for your pet";
2	PET_TIME_LEFT_MINUTES = "%d min left";
2	PET_TIME_LEFT_SECONDS = "%d sec left";
2	PET_TYPE_DEMON = "Demon";
2	PET_TYPE_PET = "Pet";
2	PET_WAIT = "Stay"; -- Tell the pet to wait here
2	PHONG_SHADING = "Smooth Shading";
2	PHYSICAL_HARASSMENT = "Physical Harassment";
2	PHYSICAL_HARASSMENT_DESCRIPTION = "If the sole purpose or intent of any action is to continually upset, aggravate, or otherwise annoy another player, that action may be considered physical harassment or �grief play�.  Before reporting physical harassment, make sure that the situation that is being petitioned falls outside the realm of the PvP policy (www.worldofwarcraft.com/policy/pvp.shtml). ";
2	PHYSICAL_HARASSMENT_TEXT1 = "The following are NOT considered physical harassment:";
2	PHYSICAL_HARASSMENT_TEXT2 = "Attacking a creep or NPC that another player has already engaged";
2	PHYSICAL_HARASSMENT_TEXT3 = "Continually attacking and/or killing an NPC";
2	PHYSICAL_HARASSMENT_TEXT4 = "\"Spawn camping\" (\"claiming\" a spawn point in order to repeatedly attack a creep)";
2	PHYSICAL_HARASSMENT_TEXT5 = "\"Corpse camping\" (waiting by a player's corpse to attack them as they resurrect)";
2	PHYSICAL_HARASSMENT_TEXT6 = "\"Training\" (leading enemies to another player to force combat)";
2	PIXEL_SHADERS = "Special Effects";
2	PLAYBACK = "Playback";
2	PLAYED = "Played";
2	PLAYER = "Player";
2	PLAYERSTAT_BASE_STATS = "Base Stats"; -- Dropdown for the paperdoll frame
2	PLAYERSTAT_DEFENSES = "Defenses";
2	PLAYERSTAT_MELEE_COMBAT = "Melee";
2	PLAYERSTAT_RANGED_COMBAT = "Ranged";
2	PLAYERSTAT_SPELL_COMBAT = "Spell";
2	PLAYER_COUNT_ALLIANCE = "%d Alliance |4Player:Players;";
2	PLAYER_COUNT_HORDE = "%d Horde |4Player:Players;";
2	PLAYER_IS_PVP_AFK = "|cffff64ff%s (Inactive)|r";
2	PLAYER_LEVEL = "Level %s %s %s"; -- Character's level, race, and class
2	PLAYER_LEVEL_UP = "Level Up";
2	PLAYER_LIST_DELIMITER = ", "; -- Used to separate lists of player names in ERR_PLAYERLIST_LEFT_BATTLE
2	PLAYER_LOGOUT_FAILED = "Logout Failed";
2	PLAYER_LOGOUT_FAILED_ERROR = "You can't log out because you can't sit down right now."; -- logout failure. Right now being mounted is only way logging out can fail
2	PLAYER_MESSAGES = "Player Messages";
2	PLAYER_NOT_FOUND = "Can't find that player.";
2	PLAYER_OFFLINE = "Offline";
2	PLAYER_OPTIONS_LABEL = "Player Options";
2	PLAYER_SERVER_FIRST_ACHIEVEMENT = "|Hplayer:%s|h[%s]|h has earned the achievement $a!";
2	PLAYER_STATUS = "Player Status";
2	PLAYER_V_PLAYER = "Player vs. Player";
2	PLAYTIME_TIRED = "You have more than 3 hours of online time. You will receive 1/2 money and XP during this period. Your rest state will reset in %d hours of offline time. Please go rest. ";
2	PLAYTIME_TIRED_ABILITY = "You have more than 3 hours of online time. You cannot perform this action during this period. Your rest state will reset in %d hours of offline time. Please go rest. ";
2	PLAYTIME_UNHEALTHY = "You have more than 5 hours of online time. You will not be able to gain loot, XP, or complete quests.  Your rest state will reset in %d hours of offline time. Please log out to get rest and exercise.";
2	PLAYTIME_UNHEALTHY_ABILITY = "You have more than 5 hours of online time. You cannot perform this action. Your rest state will reset in %d hours of offline time. Please log out to get rest and exercise.";
2	PLUS_AMMO_DAMAGE_TEMPLATE = "+ %g damage per second";
2	PLUS_AMMO_SCHOOL_DAMAGE_TEMPLATE = "+ %g %s damage per second";
2	PLUS_DAMAGE_TEMPLATE = "+ %d - %d Damage";
2	PLUS_DAMAGE_TEMPLATE_WITH_SCHOOL = "+%d - %d %s Damage";
2	PLUS_SINGLE_DAMAGE_TEMPLATE = "+ %d Damage";
2	PLUS_SINGLE_DAMAGE_TEMPLATE_WITH_SCHOOL = "+%d %s Damage";
2	POTION_TIMER = "You cannot drink any more yet."; -- The player is trying to drink a potion before the cooldown timer expires
2	POWER_GAINS = "Power Gains";
2	POWER_GAINS_COMBATLOG_TOOLTIP = "Show messages when a spell or ability restores mana, energy, rage, focus, or happiness.";
2	PREFERENCES = "Preferences";
2	PREV = "Prev"; -- Abbreviation for "previous"
2	PREVIOUS = "Previous"; -- generic "previous"
2	PRIEST_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	PRIMARY = "Primary";
2	PRIMARY_SKILLS = "Primary Skills:"; -- A character's "primary skills"
2	PROC_EVENT0_DESC = "No Proc Trigger Assigned. Tell Kevin.";
2	PROC_EVENT1024_DESC = "when hit by spell";
2	PROC_EVENT128_DESC = "on swing";
2	PROC_EVENT16_DESC = "on dodge";
2	PROC_EVENT1_DESC = "on hit";
2	PROC_EVENT2048_DESC = "when hit by %s spell";
2	PROC_EVENT256_DESC = "on cast";
2	PROC_EVENT2_DESC = "when attacked";
2	PROC_EVENT32_DESC = "on parry";
2	PROC_EVENT3_DESC = "on hit or when attacked";
2	PROC_EVENT4_DESC = "on killing blow";
2	PROC_EVENT512_DESC = "on %s cast";
2	PROC_EVENT64_DESC = "on block";
2	PROC_EVENT8_DESC = "every tick";
2	PROFANITY_FILTER = "Mature Language Filter";
2	PROFESSION_CONFIRMATION1 = "You may only know two professions at any one time.  Would you like to learn |cffffd200%s|r as your first one?";
2	PROFESSION_CONFIRMATION2 = "You may only know two professions at any one time.  Would you like to learn |cffffd200%s|r as your second one?";
2	PROFFESSION_CONFIRMATION2 = "You may only learn two professions at any one time.  Would you like to learn %s as your second one?";
2	PROFICIENCIES = "Proficiencies:";
2	PROFICIENCIES_COLON = "Proficiencies:"; -- Character's proficiencies, with colon
2	PROFICIENCY_NEEDED = "You do not have the required proficiency for that item."; -- The player does not have a proficiency for that item type
2	PTT_BOUND = "Key Bound";
2	PUBLICNOTE_BUTTON_TOOLTIP = "Click to View Your Public Note";
2	PUBLIC_NOTE = "Public Note";
2	PURCHASE = "Purchase";
2	PURCHASED_BY_COLON = "Purchased By:";
2	PURCHASE_TAB_TEXT = "Do you wish to purchase this tab?";
2	PUSHTOTALK_SOUND_TEXT = "Push-to-Talk Sound";
2	PUSH_TO_TALK = "Push-to-Talk";
2	PVP = "PvP";
2	PVPFFA = "Free for All PVP";
2	PVP_DISABLED = "PvP Disabled";
2	PVP_ENABLED = "PvP";
2	PVP_FLAG = "Player vs. Player";
2	PVP_LABEL_ARENA = "ARENA:";
2	PVP_LABEL_HONOR = "HONOR:";
2	PVP_MEDAL1 = "Protector of Stormwind";
2	PVP_MEDAL2 = "Overlord of Orgrimmar";
2	PVP_MEDAL3 = "Thane of Ironforge";
2	PVP_MEDAL4 = "High Sentinel of Darnassus";
2	PVP_MEDAL5 = "Deathlord of the Undercity";
2	PVP_MEDAL6 = "Chieftain of Thunderbluff";
2	PVP_MEDAL7 = "Avenger of Gnomeregan";
2	PVP_MEDAL8 = "Voodoo Boss of Sen�jin";
2	PVP_MINIMAP = "Show PvP Minimap";
2	PVP_OPTIONS = "Player vs. Player";
2	PVP_POLICY_URL = "|cffffd200http://www.worldofwarcraft.com/policy/pvp.shtml|r";
2	PVP_RANK_0_0 = "Scout";
2	PVP_RANK_0_0_FEMALE = "Scout";
2	PVP_RANK_0_1 = "Private";
2	PVP_RANK_0_1_FEMALE = "Private";
2	PVP_RANK_10_0 = "Stone Guard";
2	PVP_RANK_10_0_FEMALE = "Stone Guard";
2	PVP_RANK_10_1 = "Knight";
2	PVP_RANK_10_1_FEMALE = "Knight";
2	PVP_RANK_11_0 = "Blood Guard";
2	PVP_RANK_11_0_FEMALE = "Blood Guard";
2	PVP_RANK_11_1 = "Knight-Lieutenant";
2	PVP_RANK_11_1_FEMALE = "Knight-Lieutenant";
2	PVP_RANK_12_0 = "Legionnaire";
2	PVP_RANK_12_0_FEMALE = "Legionnaire";
2	PVP_RANK_12_1 = "Knight-Captain";
2	PVP_RANK_12_1_FEMALE = "Knight-Captain";
2	PVP_RANK_13_0 = "Centurion";
2	PVP_RANK_13_0_FEMALE = "Centurion";
2	PVP_RANK_13_1 = "Knight-Champion";
2	PVP_RANK_13_1_FEMALE = "Knight-Champion";
2	PVP_RANK_14_0 = "Champion";
2	PVP_RANK_14_0_FEMALE = "Champion";
2	PVP_RANK_14_1 = "Lieutenant Commander";
2	PVP_RANK_14_1_FEMALE = "Lieutenant Commander";
2	PVP_RANK_15_0 = "Lieutenant General";
2	PVP_RANK_15_0_FEMALE = "Lieutenant General";
2	PVP_RANK_15_1 = "Commander";
2	PVP_RANK_15_1_FEMALE = "Commander";
2	PVP_RANK_16_0 = "General";
2	PVP_RANK_16_0_FEMALE = "General";
2	PVP_RANK_16_1 = "Marshal";
2	PVP_RANK_16_1_FEMALE = "Marshal";
2	PVP_RANK_17_0 = "Warlord";
2	PVP_RANK_17_0_FEMALE = "Warlord";
2	PVP_RANK_17_1 = "Field Marshal";
2	PVP_RANK_17_1_FEMALE = "Field Marshal";
2	PVP_RANK_18_0 = "High Warlord";
2	PVP_RANK_18_0_FEMALE = "High Warlord";
2	PVP_RANK_18_1 = "Grand Marshal";
2	PVP_RANK_18_1_FEMALE = "Grand Marshal";
2	PVP_RANK_19_0 = "Leader"; -- PvP Leader NPC
2	PVP_RANK_19_0_FEMALE = "Leader"; -- PvP Leader NPC
2	PVP_RANK_19_1 = "Leader"; -- PvP Leader NPC
2	PVP_RANK_19_1_FEMALE = "Leader"; -- PvP Leader NPC
2	PVP_RANK_1_0 = "Pariah";
2	PVP_RANK_1_0_FEMALE = "Pariah";
2	PVP_RANK_1_1 = "Pariah";
2	PVP_RANK_1_1_FEMALE = "Pariah";
2	PVP_RANK_2_0 = "Outlaw";
2	PVP_RANK_2_0_FEMALE = "Outlaw";
2	PVP_RANK_2_1 = "Outlaw";
2	PVP_RANK_2_1_FEMALE = "Outlaw";
2	PVP_RANK_3_0 = "Exiled";
2	PVP_RANK_3_0_FEMALE = "Exiled";
2	PVP_RANK_3_1 = "Exiled";
2	PVP_RANK_3_1_FEMALE = "Exiled";
2	PVP_RANK_4_0 = "Dishonored";
2	PVP_RANK_4_0_FEMALE = "Dishonored";
2	PVP_RANK_4_1 = "Dishonored";
2	PVP_RANK_4_1_FEMALE = "Dishonored";
2	PVP_RANK_5_0 = "Scout";
2	PVP_RANK_5_0_FEMALE = "Scout";
2	PVP_RANK_5_1 = "Private";
2	PVP_RANK_5_1_FEMALE = "Private";
2	PVP_RANK_6_0 = "Grunt";
2	PVP_RANK_6_0_FEMALE = "Grunt";
2	PVP_RANK_6_1 = "Corporal";
2	PVP_RANK_6_1_FEMALE = "Corporal";
2	PVP_RANK_7_0 = "Sergeant";
2	PVP_RANK_7_0_FEMALE = "Sergeant";
2	PVP_RANK_7_1 = "Sergeant";
2	PVP_RANK_7_1_FEMALE = "Sergeant";
2	PVP_RANK_8_0 = "Senior Sergeant";
2	PVP_RANK_8_0_FEMALE = "Senior Sergeant";
2	PVP_RANK_8_1 = "Master Sergeant";
2	PVP_RANK_8_1_FEMALE = "Master Sergeant";
2	PVP_RANK_9_0 = "First Sergeant";
2	PVP_RANK_9_0_FEMALE = "First Sergeant";
2	PVP_RANK_9_1 = "Sergeant Major";
2	PVP_RANK_9_1_FEMALE = "Sergeant Major";
2	PVP_RANK_LEADER = "Leader";
2	PVP_RATING = "Rating:";
2	PVP_REPORT_AFK = "Report player AFK";
2	PVP_REPORT_AFK_ALL = "Report all of the above";
2	PVP_REPORT_AFK_ALREADY_NOTIFIED = "Report AFK player: You have already reported this player.";
2	PVP_REPORT_AFK_GENERIC_FAILURE = "Report AFK player failed.";
2	PVP_REPORT_AFK_NOT_SAME_TEAM = "Report AFK player failed: You are not on the same team.";
2	PVP_REPORT_AFK_PLAYER_NOT_VALID = "Report AFK player failed: Not a valid player.";
2	PVP_REPORT_AFK_SUCCEEDED = "Report AFK player succeeded.";
2	PVP_REPORT_AFK_SYSTEM_DISABLED = "Notify system has been disabled.";
2	PVP_REPORT_AFK_SYSTEM_ENABLED = "Notify system has been enabled.";
2	PVP_REQUIRED_FOR_CAPTURE = "You must be flagged for PvP in order to help capture this objective.";
2	PVP_TEAMSIZE = "(%dv%d)";
2	PVP_TEAMTYPE = "%dv%d";
2	PVP_TOGGLE_OFF_VERBOSE = "You will be unflagged for PvP combat after five minutes of non-PvP action in friendly territory.";
2	PVP_TOGGLE_ON_VERBOSE = "You are now flagged for PvP combat and will remain so until toggled off.";
2	PVP_YOUR_RATING = "Your Rating";
2	PVP_ZONE_OBJECTIVES = "Show PvP Zone Objectives";
2	QUALITY = "Quality";
2	QUESTLOG_BUTTON = "Quest Log";
2	QUESTLOG_NO_QUESTS_TEXT = "No Active Quests";
2	QUESTS_COLON = "Quests:"; -- Header for the available quests, with colon
2	QUESTS_LABEL = "Quests";
2	QUESTS_SUBTEXT = "These options allow you to customize the behaviors of the game's quest interface.";
2	QUEST_ACCEPT = "%s is starting %s\nWould you like to as well?"; -- First %s is a player name, second %s is a quest title
2	QUEST_ACCEPT_LOG_FULL = "%s is starting %s\nYour quest log is full. You can join this\nquest if you make room in your quest log."; -- First %s is a player name, second %s is a quest title
2	QUEST_COMPLETE = "Quest completed"; -- Tells the player that a quest was completed
2	QUEST_DESCRIPTION = "Description"; -- Header for the quest description
2	QUEST_FACTION_NEEDED = "%s:  %s / %s"; -- faction name, current reaction, required reaction
2	QUEST_FACTION_NEEDED_NOPROGRESS = "%s:  %s"; -- faction name, required reaction
2	QUEST_FAILED = "Quest completion failed."; -- The player did something funny with quest items, causing the quest to fail
2	QUEST_FAILED_TAG = "- Failed"; -- Displayed next to a failed quest in the log
2	QUEST_HARD = "(Hard)"; -- Indicates that a quest may be difficult for the player
2	QUEST_ITEMS_NEEDED = "%s: %d/%d"; -- Lists items obtained for the selected quest
2	QUEST_ITEMS_NEEDED_NOPROGRESS = "%s x %d"; -- Lists items obtained for the selected quest
2	QUEST_LOG = "Quest Log"; -- Screen that shows info for a player's quests
2	QUEST_LOG_COUNT_TEMPLATE = "Quests: |cffffffff%d/%d|r";
2	QUEST_LOG_DAILY_COUNT_TEMPLATE = "Daily: |cffffffff%d/%d|r";
2	QUEST_LOG_DAILY_TOOLTIP = "You can only complete %d Daily quests each day.\nThe new day starts in %s.";
2	QUEST_MONSTERS_KILLED = "%s slain: %d/%d"; -- Lists the monsters killed for the selected quest
2	QUEST_MONSTERS_KILLED_NOPROGRESS = "%s x %d"; -- Lists the monsters killed for the selected quest
2	QUEST_OBJECTIVES = "Quest Objectives"; -- Header for the quest objectives
2	QUEST_OBJECTS_FOUND = "%s: %d/%d"; -- Lists the game objects found for the selected quest
2	QUEST_OBJECTS_FOUND_NOPROGRESS = "%s x %d"; -- Lists the game objects found for the selected quest
2	QUEST_PLAYERS_KILLED = "Players slain: %d/%d"; -- Lists the players killed for the selected quest
2	QUEST_PLAYERS_KILLED_NOPROGRESS = "Players x %d"; -- Lists the players killed for the selected quest
2	QUEST_REWARDS = "Rewards"; -- Quest rewards title
2	QUEST_SUGGESTED_GROUP_NUM = "Suggested Players [%d]"; -- used in the quest detail
2	QUEST_SUGGESTED_GROUP_NUM_TAG = "Group: %d"; -- used in the quest listing
2	QUEST_TIMERS = "Quest Timers"; -- Quest timers title
2	QUEST_TOOLTIP_ACTIVE = "You are on this quest";
2	QUEST_TOOLTIP_REQUIREMENTS = "Requirements:";
2	QUEST_WATCH_NO_OBJECTIVES = "This quest has no objectives to track";
2	QUEST_WATCH_TOOLTIP = "Shift-click a quest to add or remove a quest from your quest watch list.";
2	QUEST_WATCH_TOO_MANY = "You may only watch %d quests at a time";
2	QUEUE_TIME_UNAVAILABLE = "Unavailable";
2	QUICKBUTTON_NAME_DEFAULT = "Default";
2	QUICKBUTTON_NAME_EVERYTHING = "Everything";
2	QUICKBUTTON_NAME_EVERYTHING_TOOLTIP = "Show all combat messages.";
2	QUICKBUTTON_NAME_FRIENDS = "Friends";
2	QUICKBUTTON_NAME_KILLS = "Kills";
2	QUICKBUTTON_NAME_KILLS_TOOLTIP = "Show all deaths and kills.";
2	QUICKBUTTON_NAME_ME = "What happened to me?";
2	QUICKBUTTON_NAME_ME_TOOLTIP = "Show everything done to me.";
2	QUICKBUTTON_NAME_SELF = "Self";
2	QUICKBUTTON_NAME_SELF_TOOLTIP = "Show messages of actions done by you and done to you.";
2	QUICK_BUTTON_COMBATLOG_TOOLTIP = "Places a shortcut to this filter on the chat window.";
2	QUIT = "Quit";
2	QUIT_NOW = "Exit now"; -- Gives the time in minutes/seconds until you logout
2	QUIT_TIMER = "%d %s until exit";
2	RACE = "Race";
2	RACE_CLASS_ONLY = "%s Only"; -- An item can only be used by a certain race/class
2	RACIAL_SKILLS = "%s Skills:"; -- %s is the race
2	RAF_GRANT_LEVEL = "Grant a Level"; -- Used by the Refer-a-Friend system
2	RAF_SUMMON = "Summon Friend"; -- Used by the Refer-a-Friend system
2	RAF_SUMMON_LINKED = "Summon Linked Friend";
2	RAGE = "Rage"; -- Generic "rage"
2	RAGE_COST = "%d Rage";
2	RAGE_COST_PER_TIME = "%d Rage, plus %d per sec";
2	RAID = "Raid"; -- Generic "Raid" text
2	RAIDOPTIONS_MENU = "Raid Options";
2	RAID_AND_PARTY = "Raid & Party";
2	RAID_ASSISTANT = "Raid Assistant";
2	RAID_ASSISTANT_TOKEN = "(A)"; -- Token to denote a raid assistant
2	RAID_BOSS_MESSAGE = "Raid Boss";
2	RAID_CONTROL = "Raid Control";
2	RAID_DESCRIPTION = "Raids are groups of more than 5 people and are typically used to defeat unique challenges at high levels.\n\n|cffffffff- Raid members cannot earn credit toward most non-raid quests. Specifically, they will not receive non-raid quest credit for killing creatures or collecting items.\n\n- Raids grant substantially less experience for defeating monsters than normal groups.\n\n- Raids allow you to overcome challenges that might otherwise be nearly impossible.|r";
2	RAID_GROUPS = "Raid Groups";
2	RAID_INFO = "Raid Info";
2	RAID_INFORMATION = "Raid Information";
2	RAID_INFO_DESC = "Your saved raid instance status.";
2	RAID_INSTANCE_INFO_FMT = "%s (ID=%lx): %s";
2	RAID_INSTANCE_INFO_HDR = "Raid Instance Time Remaining:";
2	RAID_INSTANCE_WARNING_HOURS = "WARNING! %s is scheduled to reset in %d |4hour:hours;.";
2	RAID_INSTANCE_WARNING_MIN = "WARNING! %s is scheduled to reset in %d |4minute:minutes;!";
2	RAID_INSTANCE_WARNING_MIN_SOON = "WARNING! %s is scheduled to reset in %d |4minute:minutes;. Please exit the zone or you will be returned to your bind location!";
2	RAID_INSTANCE_WELCOME = "Welcome to %s. This raid instance is scheduled to reset in %s.";
2	RAID_INSTANCE_WELCOME_DH = "%s will be reset in %d days %d hours.";
2	RAID_INSTANCE_WELCOME_HM = "%s will be reset in %d hours %d minutes.";
2	RAID_LEADER = "Raid Leader";
2	RAID_LEADER_TOKEN = "(L)"; -- Token used to denote a raid leader
2	RAID_MEMBERS_AFK = "The following players are AFK: %s";
2	RAID_MEMBER_NOT_READY = "%s is not ready";
2	RAID_MESSAGE = "Raid";
2	RAID_SILENCE = "Silence in Raid";
2	RAID_TARGET_1 = "Star";
2	RAID_TARGET_2 = "Circle";
2	RAID_TARGET_3 = "Diamond";
2	RAID_TARGET_4 = "Triangle";
2	RAID_TARGET_5 = "Moon";
2	RAID_TARGET_6 = "Square";
2	RAID_TARGET_7 = "Cross";
2	RAID_TARGET_8 = "Skull";
2	RAID_TARGET_ICON = "Raid Target Icon";
2	RAID_TARGET_NONE = "None";
2	RAID_UNSILENCE = "Unsilence in Raid";
2	RAID_WARNING = "Raid Warning";
2	RAID_WARNING_MESSAGE = "Raid Warning";
2	RALT_KEY_TEXT = "Right ALT";
2	RANDOM_ROLL_RESULT = "%s rolls %d (%d-%d)"; -- Example: Jeremy rolls 4 (1-10)
2	RANGED = "Ranged";
2	RANGEDSLOT = "Ranged"; -- Ranged slot
2	RANGED_ATTACK = "Ranged Attack";
2	RANGED_ATTACK_POWER = "Ranged Attack Power";
2	RANGED_ATTACK_POWER_TOOLTIP = "Increases damage with ranged weapons by %.1f damage per second.";
2	RANGED_ATTACK_TOOLTIP = "Ranged Attack Rating";
2	RANGED_COMBATLOG_TOOLTIP = "Shows attacks from bows, guns, thrown weapons, and wands.";
2	RANGED_CRIT_CHANCE = "Crit Chance";
2	RANGED_DAMAGE_TOOLTIP = "Ranged Damage";
2	RANGE_DAMAGE_COMBATLOG_TOOLTIP = "Show ranged shots that deal full or partial damage.";
2	RANGE_MISSED_COMBATLOG_TOOLTIP = "Show ranged shots that fail to deal damage.";
2	RANK = "Rank";
2	RANK_COLON = "Rank:";
2	RANK_POSITION = "Rank Position";
2	RARITY = "Rarity";
2	RATING = "Rating";
2	RATINGS_MENU = "Rating";
2	RATINGS_TEXT = "The text for Korean Ratings.";
2	RATING_CHANGE_TOOLTIP = "Total rating change";
2	RCTRL_KEY_TEXT = "Right CTRL";
2	READY_CHECK = "Ready Check";
2	READY_CHECK_ALL_READY = "Everyone is Ready";
2	READY_CHECK_FINISHED = "Ready check finished";
2	READY_CHECK_MESSAGE = "%s has initiated a ready check.\n|cffffffffAre you ready?|r";
2	READY_CHECK_NO_AFK = "No players are AFK";
2	READY_CHECK_START = "Starting ready check...";
2	READY_CHECK_YOU_WERE_AFK = "You were AFK for a ready check";
2	RECOVER_CORPSE = "Resurrect now?";
2	RECOVER_CORPSE_INSTANCE = "You must enter the instance to recover your corpse";
2	RECOVER_CORPSE_TIMER = "%d %s until resurrection"; -- Gives the time in minutes/seconds until you can recover your corpse
2	RED_GEM = "Red";
2	REFLECT = "Reflect";
2	REFRESH = "Refresh";
2	REFRESH_RATE = "Refresh";
2	RELICSLOT = "Relic";
2	REMOVE = "Remove";
2	REMOVE_CHAT_DELAY_TEXT = "Remove Chat Hover Delay";
2	REMOVE_FRIEND = "Remove Friend"; -- Remove a friend from your friends list
2	REMOVE_GUILDMEMBER_LABEL = "Are you sure you want to remove %s from the guild?";
2	REMOVE_MODERATOR = "Remove Moderator";
2	RENAME_ARENA_TEAM = "Rename Team";
2	RENAME_ARENA_TEAM_LABEL = "Enter a new Arena Team name:";
2	RENAME_CHAT_WINDOW = "Rename Window";
2	RENAME_GUILD = "Rename Guild";
2	RENAME_GUILD_LABEL = "Enter new guild name:";
2	REPAIR_ALL_ITEMS = "Repair All Items";
2	REPAIR_AN_ITEM = "Repair an Item";
2	REPAIR_COST = "Repair cost:";
2	REPAIR_ITEMS = "Repair Items";
2	REPLACE_ENCHANT = "Do you want to replace \"%s\" with \"%s\"?";
2	REPLY_MESSAGE = "Reply"; -- Reply to the last player to send you a tell
2	REPORT_MULTIPLE_PVP_AFK_SENT = "Notification sent for all selected players.";
2	REPORT_PHYSICAL_HARASSMENT = "Report Physical Harassment";
2	REPORT_PVP_AFK_SENT = "Notification sent for %s.";
2	REPORT_SPAM = "Report Spam";
2	REPORT_SPAM_CONFIRMATION = "Are you sure you want to report %s for spamming?";
2	REPORT_VERBAL_HARASSMENT = "Report Verbal Harassment";
2	REPUTATION = "Reputation"; -- Character's reputation
2	REPUTATION_AT_WAR_DESCRIPTION = "This determines how you will interact with members of this faction. If you have at war checked then your default behavior will be to attack them. If you do not have it checked you will not be able to attack them. ";
2	REPUTATION_FACTION_DESCRIPTION = "These are the factions that you have interacted with.";
2	REPUTATION_MOVE_TO_INACTIVE = "Moves the reputation bar to the bottom of your list under the inactive heading. Useful for reputations you are no longer interested in tracking.";
2	REPUTATION_SHOW_AS_XP = "Displays this reputation bar along the bottom of your screen just above your action bar.";
2	REPUTATION_STANDING_DESCRIPTION = "The further to the right your standing bar is the closer you are to improving your reputation to the next tier with that faction. The Standing Levels in order are Hated, Hostile, Unfriendly, Neutral, Friendly, Honored, Revered and Exalted.";
2	REPUTATION_STATUS_AT_PEACE = "While this box is unchecked you are at peace.";
2	REPUTATION_STATUS_AT_WAR = "You are currently at war with this group.";
2	REPUTATION_STATUS_NOT_AT_PEACE = "While this box is checked you are at war.";
2	REPUTATION_STATUS_PERMANENT_AT_PEACE = "You cannot go to war with your own people!";
2	REPUTATION_STATUS_PERMANENT_AT_WAR = "You can never be at peace with the %s.";
2	REQUEST_SIGNATURE = "Request Signature";
2	REQUIRED_MONEY = "Required Money:";
2	REQUIRES_LABEL = "Requires:"; -- Requirements to train in a skill
2	REQUIRES_RUNIC_POWER = "Requires Runic Power";
2	RESET = "Reset";
2	RESETS_IN = "Resets in";
2	RESET_ALL_WINDOWS = "Reset Chat Windows";
2	RESET_CHAT_WINDOW = "This will reset your chat windows to default settings.\nYou will lose any custom settings.";
2	RESET_FAILED_NOTIFY = "The party leader has attempted to reset the instance you are in.  Please zone out to allow the instance to reset.";
2	RESET_INSTANCES = "Reset all instances";
2	RESET_TO_DEFAULT = "Reset To Default";
2	RESET_TUTORIALS = "Reset Tutorials";
2	RESILIENCE = "Resilience";
2	RESILIENCE_TOOLTIP = "Reduces periodic damage and chance to be critically hit by %.2f%%.\nReduces the effect of mana-drains and the damage of critical strikes by %.2f%%.";
2	RESIST = "Resist"; -- Resisted a spell
2	RESISTANCE0_NAME = "Armor"; -- Physical resistance
2	RESISTANCE1_NAME = "Holy Resistance"; -- Resistance to Holy Magic
2	RESISTANCE2_NAME = "Fire Resistance"; -- Resistance to Fire Magic
2	RESISTANCE3_NAME = "Nature Resistance"; -- Resistance to Nature Magic
2	RESISTANCE4_NAME = "Frost Resistance"; -- Resistance to Frost Magic
2	RESISTANCE5_NAME = "Shadow Resistance"; -- Resistance to Shadow Magic
2	RESISTANCE6_NAME = "Arcane Resistance"; -- Resistance to arcane magic
2	RESISTANCE_EXCELLENT = "Excellent";
2	RESISTANCE_FAIR = "Fair";
2	RESISTANCE_GOOD = "Good";
2	RESISTANCE_LABEL = "Resistance";
2	RESISTANCE_NONE = "None";
2	RESISTANCE_POOR = "Poor";
2	RESISTANCE_TEMPLATE = "%d %s";
2	RESISTANCE_TOOLTIP_SUBTEXT = "Increases the ability to resist %s-based attacks, spells and abilities.\nResistance against level %d: |cffffffff%s|r";
2	RESISTANCE_TYPE0 = "armor";
2	RESISTANCE_TYPE1 = "holy";
2	RESISTANCE_TYPE2 = "fire";
2	RESISTANCE_TYPE3 = "nature";
2	RESISTANCE_TYPE4 = "frost";
2	RESISTANCE_TYPE5 = "shadow";
2	RESISTANCE_TYPE6 = "arcane";
2	RESISTANCE_VERYGOOD = "Very Good";
2	RESIST_TRAILER = " (%d resisted)"; -- Appended to attack strings in the combat log when damage is resisted. (NOTE SPACE AT BEGINNING)
2	RESOLUTION = "Resolution"; -- Set resolution tag for the options screen
2	RESOLUTION_LABEL = "Resolution";
2	RESOLUTION_SUBTEXT = "These options allow you to change the size and detail in which your video hardware renders the game.";
2	RESURRECT = "Resurrections";
2	RESURRECTABLE = "Resurrectable";
2	RESURRECT_REQUEST = "%s wants to resurrect you.  You will be afflicted with resurrection sickness."; -- Another player is attempting to resurrect this player
2	RESURRECT_REQUEST_NO_SICKNESS = "%s wants to resurrect you";
2	RESURRECT_REQUEST_NO_SICKNESS_TIMER = "%s wants to resurrect you and will be able to in %d %s";
2	RESURRECT_REQUEST_TIMER = "%s wants to resurrect you and will be able to in %d %s.  You will be afflicted with resurrection sickness.";
2	RETRIEVING_ITEM_INFO = "Retrieving item information"; -- Tooltip text for items whose information is being retriving from the server.
2	RETURN_TO_GAME = "Return to Game";
2	RETURN_TO_WORLD = "Leave Battleground";
2	REWARD_AURA = "The following spell will be cast on you:";
2	REWARD_CHOICES = "You will be able to choose one of these rewards:"; -- Gives the player a list of possible quest reward choices
2	REWARD_CHOOSE = "Choose your reward:"; -- The player must choose one of these items
2	REWARD_ITEMS = "You will also receive:"; -- These items will always be given as a reward
2	REWARD_ITEMS_ONLY = "You will receive:"; -- Same as above, used when the player has no chosen items
2	REWARD_SPELL = "You will learn:";
2	REWARD_TITLE = "You shall be granted the title:";
2	REWARD_TRADESKILL_SPELL = "You will learn how to create:";
2	RIGHT_CLICK_MESSAGE = "|cffffffff<Right Click> for PvP Options|r";
2	ROGUE_AGILITY_TOOLTIP = "Increases attack power with both melee and ranged weapons, and improves the chance to score a critical hit with all weapons.|nIncreases armor and chance to dodge attacks.";
2	ROTATE_MINIMAP = "Rotate Minimap";
2	RSHIFT_KEY_TEXT = "Right SHIFT";
2	RUNES = "Runes";
2	RUNE_COST_BLOOD = "%d Blood";
2	RUNE_COST_FROST = "%d Frost";
2	RUNE_COST_ONGOING = "Ongoing";
2	RUNE_COST_UNHOLY = "%d Unholy";
2	RUNIC_POWER = "Runic Power"; -- Generic "runic power"
2	RUNIC_POWER_COST = "%d Runic Power";
2	RUNIC_POWER_COST_PER_TIME = "%d Runic Power, plus %d per sec";
2	RURU = "Russian";
2	RUSSIAN_DECLENSION = "Declensions";
2	RUSSIAN_DECLENSION_1 = "Genitive Case";
2	RUSSIAN_DECLENSION_2 = "Dative Case";
2	RUSSIAN_DECLENSION_3 = "Accusative Case";
2	RUSSIAN_DECLENSION_4 = "Instrumental Case";
2	RUSSIAN_DECLENSION_5 = "Prepositional Case";
2	RUSSIAN_DECLENSION_EXAMPLE_1 = "I always travel with %s.";
2	RUSSIAN_DECLENSION_EXAMPLE_2 = "First thing yesterday I bonked %s on the head.";
2	RUSSIAN_DECLENSION_EXAMPLE_3 = "Today I met %s again.";
2	RUSSIAN_DECLENSION_EXAMPLE_4 = "Now I am friends with %s.";
2	RUSSIAN_DECLENSION_EXAMPLE_5 = "Although I know nothing about %s.";
2	SALE_PRICE_COLON = "Sale Price:";
2	SANCTUARY_TERRITORY = "(Sanctuary)";
2	SAVE = "Save";
2	SAVE_CHANGES = "Save Changes";
2	SAY = "Say";
2	SAY_MESSAGE = "Say"; -- Normal chat message
2	SCORE_DAMAGE_DONE = "Damage Done";
2	SCORE_FLAGS_CAPTURED = "Flags\nCaptured";
2	SCORE_FLAGS_RETURNED = "Flags\nReturned";
2	SCORE_HEALING_DONE = "Healing Done";
2	SCORE_HONORABLE_KILLS = "Honorable\nKills";
2	SCORE_HONOR_GAINED = "Honor\nGained";
2	SCORE_KILLING_BLOWS = "Killing\nBlows";
2	SCORE_POWER_UPS = "Power Ups";
2	SCORE_RATING_CHANGE = "Rating\nChange";
2	SCREENSHOT_FAILURE = "Screen Capture Failed";
2	SCREENSHOT_SUCCESS = "Screen Captured";
2	SEARCH = "Search";
2	SEARCHING_FOR_ITEMS = "Searching for Items";
2	SECONDARY = "Secondary";
2	SECONDARYHANDSLOT = "Off Hand"; -- Off hand slot
2	SECONDARY_SKILLS = "Secondary Skills:"; -- A character's "secondary skills"
2	SECONDS = "|4Second:Seconds;"; -- Seconds of time
2	SECONDS_ABBR = "%d |4Sec:Sec;";
2	SECOND_NUMBER_CAP = " M"; -- This would be a space followed by M for english meaning 1,000,000, other locales will have different character at different values
2	SECOND_ONELETTER_ABBR = "%d s";
2	SECURE_ABILITY_TOGGLE = "Secure Ability Toggle";
2	SELECT_CATEGORY = "--> Select a Category";
2	SELFMUTED = "|cffff0000(Self muted)|r";
2	SENDMAIL = "Send Mail";
2	SENDMAIL_TEXT = "Add item and /or money here";
2	SEND_BUG = "Submit Bug"; -- Submit a bug to Q/A
2	SEND_LABEL = "Send";
2	SEND_MAIL_COST = "Postage:";
2	SEND_MESSAGE = "Send Message"; -- Send a message to a friend
2	SEND_MONEY = "Send Money";
2	SEND_MONEY_CONFIRMATION = "Really send %s the following amount?";
2	SEND_SUGGEST = "Send Suggestion"; -- Send a suggestion to Q/A
2	SERVER_CHANNELS = "Server Channels";
2	SERVER_FIRST_ACHIEVEMENT = "%s has earned the achievement $a!";
2	SERVER_MESSAGE_COLON = "Alert:"; -- Knowledge Base label for server messages
2	SERVER_MESSAGE_PREFIX = "[SERVER]"; -- String prefixed onto all server messages.
2	SETTINGS = "Settings";
2	SET_FOCUS = "Set Focus";
2	SET_FRIENDNOTE_LABEL = "Set Notes for %s:";
2	SET_GUILDMOTD_LABEL = "Set Guild Message Of The Day:";
2	SET_GUILDOFFICERNOTE_LABEL = "Set Officer Note:";
2	SET_GUILDPLAYERNOTE_LABEL = "Set Player Note:";
2	SET_MAIN_ASSIST = "Promote to Main Assist";
2	SET_MAIN_TANK = "Promote to Main Tank";
2	SET_RAID_ASSISTANT = "Promote to Assistant";
2	SET_RAID_LEADER = "Promote to Raid Leader";
2	SHADOW_QUALITY = "Shadow Quality";
2	SHAMAN_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	SHAMAN_STRENGTH_TOOLTIP = "Increases attack power with melee weapons.\nIncreases the amount of damage that can be blocked with a shield.";
2	SHARE_QUEST = "Share Quest";
2	SHARE_QUEST_TEXT = "Allows you to share a quest with a party\nmember if they are eligible for the quest.\nCertain quests, such as quests\ngranted by items, cannot be shared.";
2	SHIELDSLOT = "Shield"; -- Fake slot entry for enchanting UI and shields
2	SHIELD_BLOCK_TEMPLATE = "%d Block";
2	SHIFT_KEY = "SHIFT key";
2	SHIFT_KEY_TEXT = "SHIFT"; -- String to localize what the SHIFT key is called
2	SHIRTSLOT = "Shirt"; -- Body slot
2	SHORTDATE = "%2$d/%1$02d/%3$02d"; -- 1 - day 2 - month 3 - year
2	SHOULDERSLOT = "Shoulders"; -- Shoulder slot
2	SHOW_ALL_SPELL_RANKS = "Show all spell ranks";
2	SHOW_BATTLEFIELDMINIMAP_PLAYERS = "Show Teammates";
2	SHOW_BRACES = "Show Braces";
2	SHOW_BRACES_COMBATLOG_TOOLTIP = "Display braces around hyperlinks in combat log messages.";
2	SHOW_BUFFS = "Show Buffs"; -- For the raid pullout dropdown menu
2	SHOW_BUFF_DURATION_TEXT = "Buff Durations";
2	SHOW_CASTABLE_BUFFS_TEXT = "Castable Buffs";
2	SHOW_CHAT_ICONS = "Icons in Chat"; -- Text for option to display icon links as icons in chat channels
2	SHOW_CLASS_COLOR_IN_V_KEY = "Class Colors in Nameplates"; -- option to display class colors in the Nameplates (v-key)
2	SHOW_CLOAK = "Show Cloak";
2	SHOW_CLOCK = "Show Clock"; -- UIOptionsFrame check button for whether or not to show the clock part of the TimeManager UI
2	SHOW_COMBAT_HEALING = "Healing";
2	SHOW_COMBAT_TEXT_TEXT = "Enable Floating Combat Text";
2	SHOW_DAMAGE_TEXT = "Target Damage";
2	SHOW_DEBUFFS = "Show Debuffs"; -- For the raid pullout dropdown menu
2	SHOW_DISPELLABLE_DEBUFFS_TEXT = "Dispellable Debuffs";
2	SHOW_ENEMY_CAST = "Cast Bars"; -- Label for the group of UI options related to showing the Unit Cast Bars
2	SHOW_FACTION_ON_MAINSCREEN = "Show as Experience Bar";
2	SHOW_FREE_BAG_SLOTS_TEXT = "Show Free Bag Slots";
2	SHOW_FRIENDS_LIST = "Show Friends List";
2	SHOW_FULLSCREEN_STATUS_TEXT = "Screen Edge Flash";
2	SHOW_GUILD_NAMES = "Player Guild Names";
2	SHOW_HELM = "Show Helm";
2	SHOW_IGNORE_LIST = "Show Ignore List";
2	SHOW_LOOT_SPAM = "Detailed Loot Information";
2	SHOW_LUA_ERRORS = "Display Lua Errors";
2	SHOW_MULTIBAR1_TEXT = "Bottom Left Bar";
2	SHOW_MULTIBAR2_TEXT = "Bottom Right Bar";
2	SHOW_MULTIBAR3_TEXT = "Right Bar";
2	SHOW_MULTIBAR4_TEXT = "Right Bar 2";
2	SHOW_NEWBIE_TIPS_TEXT = "Beginner Tooltips";
2	SHOW_NPC_NAMES = "NPC Names";
2	SHOW_NUMERIC_THREAT = "Show Aggro Percentages";
2	SHOW_OFFLINE_MEMBERS = "Show Offline Members";
2	SHOW_ON_BACKPACK = "Show on Backpack"; -- Used in the token UI options to show a token type on the backpack
2	SHOW_OTHER_TARGET_EFFECTS = "Show for other players' targets";
2	SHOW_OWN_NAME = "Show Own Name";
2	SHOW_PARTY_BACKGROUND_TEXT = "Party Background";
2	SHOW_PARTY_PETS_TEXT = "Party Members' Pets";
2	SHOW_PARTY_TEXT_TEXT = "Numeric Party Health";
2	SHOW_PET_MELEE_DAMAGE = "Pet Damage";
2	SHOW_PET_NAMEPLATES = "Pet Name Plates";
2	SHOW_PET_SPELL_DAMAGE = "Show pet spell damage";
2	SHOW_PLAYER_NAMES = "Player Names";
2	SHOW_PLAYER_TITLES = "Player Titles";
2	SHOW_QUEST_FADING_TEXT = "Instant Quest Text";
2	SHOW_QUICK_BUTTON = "Show Quick Button";
2	SHOW_RAID_RANGE_TEXT = "Range in Raid Interface";
2	SHOW_TARGET = "Show Target";
2	SHOW_TARGET_CASTBAR = "On Targets"; -- CVar text for the current target castbar
2	SHOW_TARGET_CASTBAR_IN_V_KEY = "On Nameplates"; -- CVar text for the current target castbar
2	SHOW_TARGET_EFFECTS = "Target Effects";
2	SHOW_TARGET_OF_TARGET_TEXT = "Target of Target";
2	SHOW_TIMESTAMP = "Show Timestamp";
2	SHOW_TIPOFTHEDAY_TEXT = "Loading Screen Tips";
2	SHOW_TUTORIALS = "Tutorials";
2	SHOW_UNIT_NAMES = "Show Unit Names";
2	SIGN_CHARTER = "Sign Charter";
2	SILVER_AMOUNT = "%d Silver"; -- Mid value coin denomination
2	SILVER_AMOUNT_TEXTURE = "%d\124TInterface\\MoneyFrame\\UI-SilverIcon:%d:%d:2:0\124t";
2	SIMPLE_CHAT_TEXT = "Simple Chat";
2	SINGLE_DAMAGE_TEMPLATE = "%d Damage";
2	SINGLE_DAMAGE_TEMPLATE_WITH_SCHOOL = "%d %s Damage"; -- Weapon damage template, for weapons doing school damage
2	SINGLE_PAGE_RESULTS_TEMPLATE = "%d Items"; -- For the auctions and bids pages in the auction house.
2	SKILL = "Skill";
2	SKILLS = "Skills"; -- Generic "skills"
2	SKILLUPS = "Skill-ups";
2	SKILL_DESCRIPTION = "|cffffffff%s|r %s";
2	SKILL_INCREMENT_COST = "Costs %s%d|r Skill points to increase.";
2	SKILL_INCREMENT_COST_SINGULAR = "Costs %s%d|r Skill point to increase.";
2	SKILL_LEARNING_COST = "Learning this skill: %s%d|r Skill points.";
2	SKILL_LEARNING_COST_SINGULAR = "Learning this skill: %s%d|r Skill point.";
2	SKILL_LEVEL = "Skill Level"; -- Skill level in a particular skill line
2	SKILL_POINTS_TOOLTIP = "Skill points are used to learn specialized skills\nat various trainers throughout the world."; -- Tooltip description for skill points
2	SKILL_RANK_UP = "Your skill in %s has increased to %d."; -- Tells player when a skill rank goes up
2	SLASH_ACHIEVEMENTUI1 = "/ach";
2	SLASH_ACHIEVEMENTUI2 = "/ach";
2	SLASH_ACHIEVEMENTUI3 = "/achieve";
2	SLASH_ACHIEVEMENTUI4 = "/achieve";
2	SLASH_ACHIEVEMENTUI5 = "/achievement";
2	SLASH_ACHIEVEMENTUI6 = "/achievement";
2	SLASH_ACHIEVEMENTUI7 = "/achievements";
2	SLASH_ACHIEVEMENTUI8 = "/achievements";
2	SLASH_ASSIST1 = "/a"; -- Assist
2	SLASH_ASSIST2 = "/assist"; -- Assist
2	SLASH_ASSIST3 = "/a"; -- Assist
2	SLASH_ASSIST4 = "/assist"; -- Assist
2	SLASH_BATTLEGROUND1 = "/bg"; -- Send to battleground party
2	SLASH_BATTLEGROUND2 = "/battleground"; -- Send to battleground party
2	SLASH_BATTLEGROUND3 = "/bg";
2	SLASH_BATTLEGROUND4 = "/battleground";
2	SLASH_BENCHMARK1 = "/timetest";
2	SLASH_BENCHMARK2 = "/timetest";
2	SLASH_CALENDAR1 = "/calendar"; -- Toggles the player calendar.
2	SLASH_CALENDAR2 = "/calendar"; -- Toggles the player calendar.
2	SLASH_CANCELAURA1 = "/cancelaura";
2	SLASH_CANCELAURA2 = "/cancelaura";
2	SLASH_CANCELFORM1 = "/cancelform";
2	SLASH_CANCELFORM2 = "/cancelform";
2	SLASH_CAST1 = "/cast";
2	SLASH_CAST2 = "/spell";
2	SLASH_CAST3 = "/cast";
2	SLASH_CAST4 = "/spell";
2	SLASH_CASTRANDOM1 = "/castrandom";
2	SLASH_CASTRANDOM2 = "/castrandom";
2	SLASH_CASTSEQUENCE1 = "/castsequence";
2	SLASH_CASTSEQUENCE2 = "/castsequence";
2	SLASH_CHANGEACTIONBAR1 = "/changeactionbar";
2	SLASH_CHANGEACTIONBAR2 = "/changeactionbar";
2	SLASH_CHANNEL1 = "/c"; -- Send to channel (/# works too)
2	SLASH_CHANNEL2 = "/csay";
2	SLASH_CHANNEL3 = "/c"; -- Send to channel (/# works too)
2	SLASH_CHANNEL4 = "/csay";
2	SLASH_CHATLOG1 = "/chatlog"; -- enable/disable chat log file output
2	SLASH_CHATLOG2 = "/chatlog"; -- enable/disable chat log file output
2	SLASH_CHAT_AFK1 = "/afk"; -- Set your AFK flag
2	SLASH_CHAT_AFK2 = "/afk"; -- Set your AFK flag
2	SLASH_CHAT_ANNOUNCE1 = "/announce"; -- Turn join/leave announcments on/off
2	SLASH_CHAT_ANNOUNCE2 = "/ann";
2	SLASH_CHAT_ANNOUNCE3 = "/announce"; -- Turn join/leave announcments on/off
2	SLASH_CHAT_ANNOUNCE4 = "/ann";
2	SLASH_CHAT_BAN1 = "/ban"; -- Ban from channel
2	SLASH_CHAT_BAN2 = "/ban"; -- Ban from channel
2	SLASH_CHAT_CINVITE1 = "/cinvite"; -- Invite a player to a channel
2	SLASH_CHAT_CINVITE2 = "/chatinvite";
2	SLASH_CHAT_CINVITE3 = "/cinvite"; -- Invite a player to a channel
2	SLASH_CHAT_CINVITE4 = "/chatinvite";
2	SLASH_CHAT_DND1 = "/dnd"; -- Set your DND flag
2	SLASH_CHAT_DND2 = "/dnd"; -- Set your DND flag
2	SLASH_CHAT_DND3 = "/dnd"; -- Set your DND flag
2	SLASH_CHAT_HELP1 = "/chat"; -- Chat help
2	SLASH_CHAT_HELP2 = "/chathelp";
2	SLASH_CHAT_HELP3 = "/chat"; -- Chat help
2	SLASH_CHAT_HELP4 = "/chat"; -- Chat help
2	SLASH_CHAT_HELP5 = "/chathelp";
2	SLASH_CHAT_KICK1 = "/ckick"; -- Kick off a channel
2	SLASH_CHAT_KICK2 = "/ckick"; -- Kick off a channel
2	SLASH_CHAT_MODERATE1 = "/moderate"; -- Set a channel's moderated flag
2	SLASH_CHAT_MODERATE2 = "/moderate"; -- Set a channel's moderated flag
2	SLASH_CHAT_MODERATOR1 = "/mod"; -- Set a moderator
2	SLASH_CHAT_MODERATOR2 = "/moderator";
2	SLASH_CHAT_MODERATOR3 = "/mod"; -- Set a moderator
2	SLASH_CHAT_MODERATOR4 = "/moderator";
2	SLASH_CHAT_MUTE1 = "/mute"; -- Mute a player on a channel
2	SLASH_CHAT_MUTE2 = "/squelch";
2	SLASH_CHAT_MUTE3 = "/unvoice";
2	SLASH_CHAT_MUTE4 = "/mute"; -- Mute a player on a channel
2	SLASH_CHAT_MUTE5 = "/squelch";
2	SLASH_CHAT_MUTE6 = "/unvoice";
2	SLASH_CHAT_OWNER1 = "/owner"; -- Display or change channel owner
2	SLASH_CHAT_OWNER2 = "/owner"; -- Display or change channel owner
2	SLASH_CHAT_PASSWORD1 = "/password"; -- Set channel password
2	SLASH_CHAT_PASSWORD2 = "/pass";
2	SLASH_CHAT_PASSWORD3 = "/password"; -- Set channel password
2	SLASH_CHAT_PASSWORD4 = "/password"; -- Set channel password
2	SLASH_CHAT_PASSWORD5 = "/pass";
2	SLASH_CHAT_UNBAN1 = "/unban"; -- Unban
2	SLASH_CHAT_UNBAN2 = "/unban"; -- Unban
2	SLASH_CHAT_UNMODERATOR1 = "/unmod"; -- Remove a mod
2	SLASH_CHAT_UNMODERATOR2 = "/unmoderator";
2	SLASH_CHAT_UNMODERATOR3 = "/unmod"; -- Remove a mod
2	SLASH_CHAT_UNMODERATOR4 = "/unmoderator";
2	SLASH_CHAT_UNMUTE1 = "/unmute"; -- Give a player voice on a channel
2	SLASH_CHAT_UNMUTE2 = "/unsquelch";
2	SLASH_CHAT_UNMUTE3 = "/voice";
2	SLASH_CHAT_UNMUTE4 = "/unmute"; -- Give a player voice on a channel
2	SLASH_CHAT_UNMUTE5 = "/unsquelch";
2	SLASH_CHAT_UNMUTE6 = "/voice";
2	SLASH_CLEAR1 = "/clear"; -- Clears whatever chat window has focus
2	SLASH_CLEAR2 = "/clear";
2	SLASH_CLEARFOCUS1 = "/clearfocus";
2	SLASH_CLEARFOCUS2 = "/clearfocus";
2	SLASH_CLEARMAINASSIST1 = "/clearma";
2	SLASH_CLEARMAINASSIST2 = "/clearmainassist";
2	SLASH_CLEARMAINASSIST3 = "/clearma";
2	SLASH_CLEARMAINASSIST4 = "/clearmainassist";
2	SLASH_CLEARMAINTANK1 = "/clearmt";
2	SLASH_CLEARMAINTANK2 = "/clearmaintank";
2	SLASH_CLEARMAINTANK3 = "/clearmt";
2	SLASH_CLEARMAINTANK4 = "/clearmaintank";
2	SLASH_CLEARTARGET1 = "/cleartarget";
2	SLASH_CLEARTARGET2 = "/cleartarget";
2	SLASH_CLICK1 = "/click";
2	SLASH_CLICK2 = "/click";
2	SLASH_COMBATLOG1 = "/combatlog"; -- enable/disable combat log file output
2	SLASH_COMBATLOG2 = "/combatlog"; -- enable/disable combat log file output
2	SLASH_CONSOLE1 = "/console";
2	SLASH_CONSOLE2 = "/console";
2	SLASH_DISABLE_ADDONS1 = "/disableaddons"; -- Disables all UI AddOns and reloads the UI
2	SLASH_DISMOUNT1 = "/dismount";
2	SLASH_DISMOUNT2 = "/dismount";
2	SLASH_DUEL1 = "/duel";
2	SLASH_DUEL2 = "/duel";
2	SLASH_DUEL_CANCEL1 = "/yield";
2	SLASH_DUEL_CANCEL2 = "/concede";
2	SLASH_DUEL_CANCEL3 = "/forfeit";
2	SLASH_DUEL_CANCEL4 = "/yield";
2	SLASH_DUEL_CANCEL5 = "/concede";
2	SLASH_DUEL_CANCEL6 = "/forfeit";
2	SLASH_EMOTE1 = "/e"; -- Emote
2	SLASH_EMOTE2 = "/em"; -- Emote
2	SLASH_EMOTE3 = "/emote"; -- Emote
2	SLASH_EMOTE4 = "/me"; -- Emote
2	SLASH_EMOTE5 = "/e"; -- Emote
2	SLASH_EMOTE6 = "/em"; -- Emote
2	SLASH_EMOTE7 = "/emote"; -- Emote
2	SLASH_EMOTE8 = "/me"; -- Emote
2	SLASH_ENABLE_ADDONS1 = "/enableaddons"; -- Enables all UI AddOns and reloads the UI
2	SLASH_EQUIP1 = "/equip";
2	SLASH_EQUIP2 = "/eq";
2	SLASH_EQUIP3 = "/equip";
2	SLASH_EQUIP4 = "/eq";
2	SLASH_EQUIP_TO_SLOT1 = "/equipslot";
2	SLASH_EQUIP_TO_SLOT2 = "/equipslot";
2	SLASH_FOCUS1 = "/focus";
2	SLASH_FOCUS2 = "/focus";
2	SLASH_FOLLOW1 = "/f";
2	SLASH_FOLLOW2 = "/follow";
2	SLASH_FOLLOW3 = "/fol";
2	SLASH_FOLLOW4 = "/f";
2	SLASH_FOLLOW5 = "/follow";
2	SLASH_FOLLOW6 = "/fol";
2	SLASH_FOLLOW7 = "/f";
2	SLASH_FRIENDS1 = "/friends";
2	SLASH_FRIENDS2 = "/friend";
2	SLASH_FRIENDS3 = "/friends";
2	SLASH_FRIENDS4 = "/friend";
2	SLASH_GUILD1 = "/g"; -- Guild
2	SLASH_GUILD2 = "/gc"; -- Guild
2	SLASH_GUILD3 = "/gu"; -- Guild
2	SLASH_GUILD4 = "/guild"; -- Guild
2	SLASH_GUILD5 = "/g"; -- Guild
2	SLASH_GUILD6 = "/gc"; -- Guild
2	SLASH_GUILD7 = "/gu"; -- Guild
2	SLASH_GUILD8 = "/guild"; -- Guild
2	SLASH_GUILD9 = "/g";
2	SLASH_GUILD_DEMOTE1 = "/gdemote"; -- Guild demote
2	SLASH_GUILD_DEMOTE2 = "/guilddemote"; -- Guild demote
2	SLASH_GUILD_DEMOTE3 = "/gdemote"; -- Guild demote
2	SLASH_GUILD_DEMOTE4 = "/guilddemote"; -- Guild demote
2	SLASH_GUILD_DISBAND1 = "/gdisband"; -- Guild disband
2	SLASH_GUILD_DISBAND2 = "/guilddisband"; -- Guild disband
2	SLASH_GUILD_DISBAND3 = "/gdisband"; -- Guild disband
2	SLASH_GUILD_DISBAND4 = "/guilddisband"; -- Guild disband
2	SLASH_GUILD_HELP1 = "/ghelp"; -- Guild help
2	SLASH_GUILD_HELP2 = "/guildhelp"; -- Guild help
2	SLASH_GUILD_HELP3 = "/guildhelp"; -- Guild help
2	SLASH_GUILD_HELP4 = "/guildhelp"; -- Guild help
2	SLASH_GUILD_HELP5 = "/ghelp"; -- Guild help
2	SLASH_GUILD_INFO1 = "/ginfo"; -- Guild information
2	SLASH_GUILD_INFO2 = "/guildinfo"; -- Guild information
2	SLASH_GUILD_INFO3 = "/ginfo"; -- Guild information
2	SLASH_GUILD_INFO4 = "/guildinfo"; -- Guild information
2	SLASH_GUILD_INVITE1 = "/ginvite"; -- Guild invite
2	SLASH_GUILD_INVITE2 = "/guildinvite"; -- Guild invite
2	SLASH_GUILD_INVITE3 = "/ginvite"; -- Guild invite
2	SLASH_GUILD_INVITE4 = "/guildinvite"; -- Guild invite
2	SLASH_GUILD_LEADER1 = "/gleader"; -- Guild leader
2	SLASH_GUILD_LEADER2 = "/guildleader"; -- Guild leader
2	SLASH_GUILD_LEADER3 = "/gleader"; -- Guild leader
2	SLASH_GUILD_LEADER4 = "/guildleader"; -- Guild leader
2	SLASH_GUILD_LEADER_REPLACE = "/greplace"; -- Replace inactive guild leader
2	SLASH_GUILD_LEAVE1 = "/gquit"; -- Guild leave
2	SLASH_GUILD_LEAVE2 = "/guildquit"; -- Guild leave
2	SLASH_GUILD_LEAVE3 = "/gquit"; -- Guild leave
2	SLASH_GUILD_LEAVE4 = "/guildquit"; -- Guild leave
2	SLASH_GUILD_MOTD1 = "/gmotd"; -- Guild MOTD
2	SLASH_GUILD_MOTD2 = "/guildmotd"; -- Guild MOTD
2	SLASH_GUILD_MOTD3 = "/gmotd"; -- Guild MOTD
2	SLASH_GUILD_MOTD4 = "/guildmotd"; -- Guild MOTD
2	SLASH_GUILD_PROMOTE1 = "/gpromote"; -- Guild promote
2	SLASH_GUILD_PROMOTE2 = "/guildpromote"; -- Guild promote
2	SLASH_GUILD_PROMOTE3 = "/gpromote"; -- Guild promote
2	SLASH_GUILD_PROMOTE4 = "/guildpromote"; -- Guild promote
2	SLASH_GUILD_ROSTER1 = "/groster"; -- Guild roster
2	SLASH_GUILD_ROSTER2 = "/guildroster"; -- Guild roster
2	SLASH_GUILD_ROSTER3 = "/groster"; -- Guild roster
2	SLASH_GUILD_ROSTER4 = "/guildroster"; -- Guild roster
2	SLASH_GUILD_UNINVITE1 = "/gremove"; -- Guild uninvite
2	SLASH_GUILD_UNINVITE2 = "/guildremove"; -- Guild uninvite
2	SLASH_GUILD_UNINVITE3 = "/gremove"; -- Guild uninvite
2	SLASH_GUILD_UNINVITE4 = "/guildremove"; -- Guild uninvite
2	SLASH_GUILD_WHO1 = "/glist";
2	SLASH_GUILD_WHO2 = "/gwho";
2	SLASH_GUILD_WHO3 = "/whoguild";
2	SLASH_GUILD_WHO4 = "/glist";
2	SLASH_GUILD_WHO5 = "/gwho";
2	SLASH_GUILD_WHO6 = "/whoguild";
2	SLASH_HELP1 = "/h"; -- Help
2	SLASH_HELP2 = "/help"; -- Help
2	SLASH_HELP3 = "/?"; -- Help
2	SLASH_HELP4 = "/h"; -- Help
2	SLASH_HELP5 = "/h"; -- Help
2	SLASH_HELP6 = "/help"; -- Help
2	SLASH_IGNORE1 = "/ignore";
2	SLASH_IGNORE2 = "/ignore";
2	SLASH_INSPECT1 = "/ins"; -- Inspect
2	SLASH_INSPECT2 = "/inspect"; -- Inspect
2	SLASH_INSPECT3 = "/ins"; -- Inspect
2	SLASH_INSPECT4 = "/inspect"; -- Inspect
2	SLASH_INVITE1 = "/i"; -- Invite
2	SLASH_INVITE2 = "/inv"; -- Invite
2	SLASH_INVITE3 = "/invite"; -- Invite
2	SLASH_INVITE4 = "/i"; -- Invite
2	SLASH_INVITE5 = "/inv"; -- Invite
2	SLASH_INVITE6 = "/invite"; -- Invite
2	SLASH_INVITE7 = "/i";
2	SLASH_JOIN1 = "/join"; -- Join (chat channel)
2	SLASH_JOIN2 = "/channel";
2	SLASH_JOIN3 = "/chan";
2	SLASH_JOIN4 = "/join"; -- Join (chat channel)
2	SLASH_JOIN5 = "/join"; -- Join (chat channel)
2	SLASH_JOIN6 = "/channel";
2	SLASH_JOIN7 = "/chan";
2	SLASH_LEAVE1 = "/leave"; -- Leave (chat channel)
2	SLASH_LEAVE2 = "/chatleave";
2	SLASH_LEAVE3 = "/chatexit";
2	SLASH_LEAVE4 = "/leave"; -- Leave (chat channel)
2	SLASH_LEAVE5 = "/leave"; -- Leave (chat channel)
2	SLASH_LEAVE6 = "/chatleave";
2	SLASH_LEAVE7 = "/chatexit";
2	SLASH_LIST_CHANNEL1 = "/chatlist"; -- List channels or members
2	SLASH_LIST_CHANNEL2 = "/chatwho";
2	SLASH_LIST_CHANNEL3 = "/chatinfo";
2	SLASH_LIST_CHANNEL4 = "/chatlist"; -- List channels or members
2	SLASH_LIST_CHANNEL5 = "/chatlist"; -- List channels or members
2	SLASH_LIST_CHANNEL6 = "/chatwho";
2	SLASH_LIST_CHANNEL7 = "/chatinfo";
2	SLASH_LOGOUT1 = "/logout"; -- Logout
2	SLASH_LOGOUT2 = "/camp"; -- Logout
2	SLASH_LOGOUT3 = "/logout"; -- Logout
2	SLASH_LOGOUT4 = "/camp"; -- Logout
2	SLASH_LOOKINGFORGROUP1 = "/lfg";
2	SLASH_LOOKINGFORGROUP2 = "/lfg";
2	SLASH_LOOKINGFORMORE1 = "/lfm";
2	SLASH_LOOKINGFORMORE2 = "/lfm";
2	SLASH_LOOT_FFA1 = "/ffa";
2	SLASH_LOOT_FFA2 = "/ffa";
2	SLASH_LOOT_GROUP1 = "/group";
2	SLASH_LOOT_GROUP2 = "/group";
2	SLASH_LOOT_MASTER1 = "/master";
2	SLASH_LOOT_MASTER2 = "/master";
2	SLASH_LOOT_NEEDBEFOREGREED1 = "/needbeforegreed";
2	SLASH_LOOT_NEEDBEFOREGREED2 = "/needbeforegreed";
2	SLASH_LOOT_ROUNDROBIN1 = "/roundrobin";
2	SLASH_LOOT_ROUNDROBIN2 = "/roundrobin";
2	SLASH_LOOT_SETTHRESHOLD1 = "/threshold";
2	SLASH_LOOT_SETTHRESHOLD2 = "/threshold";
2	SLASH_MACRO1 = "/macro";
2	SLASH_MACRO2 = "/m";
2	SLASH_MACRO3 = "/m";
2	SLASH_MACRO4 = "/macro";
2	SLASH_MACROHELP1 = "/macrohelp";
2	SLASH_MACROHELP2 = "/macrohelp";
2	SLASH_MACROHELP3 = "/macrohelp";
2	SLASH_MAINASSISTOFF1 = "/maoff";
2	SLASH_MAINASSISTOFF2 = "/mainassistoff";
2	SLASH_MAINASSISTOFF3 = "/maoff";
2	SLASH_MAINASSISTOFF4 = "/mainassistoff";
2	SLASH_MAINASSISTON1 = "/ma";
2	SLASH_MAINASSISTON2 = "/mainassist";
2	SLASH_MAINASSISTON3 = "/ma";
2	SLASH_MAINASSISTON4 = "/mainassist";
2	SLASH_MAINTANKOFF1 = "/mtoff";
2	SLASH_MAINTANKOFF2 = "/maintankoff";
2	SLASH_MAINTANKOFF3 = "/mtoff";
2	SLASH_MAINTANKOFF4 = "/maintankoff";
2	SLASH_MAINTANKON1 = "/mt";
2	SLASH_MAINTANKON2 = "/maintank";
2	SLASH_MAINTANKON3 = "/mt";
2	SLASH_MAINTANKON4 = "/maintank";
2	SLASH_OFFICER1 = "/o"; -- Officer
2	SLASH_OFFICER2 = "/osay"; -- Officer
2	SLASH_OFFICER3 = "/o"; -- Officer
2	SLASH_OFFICER4 = "/osay"; -- Officer
2	SLASH_OFFICER5 = "/officer";
2	SLASH_OFFICER6 = "/officer";
2	SLASH_PARTY1 = "/p"; -- Party
2	SLASH_PARTY2 = "/party"; -- Party
2	SLASH_PARTY3 = "/p"; -- Party
2	SLASH_PARTY4 = "/party";
2	SLASH_PARTY5 = "/p";
2	SLASH_PET_AGGRESSIVE1 = "/petaggressive";
2	SLASH_PET_AGGRESSIVE2 = "/petaggressive";
2	SLASH_PET_ATTACK1 = "/petattack";
2	SLASH_PET_ATTACK2 = "/petattack";
2	SLASH_PET_AUTOCASTOFF1 = "/petautocastoff";
2	SLASH_PET_AUTOCASTOFF2 = "/petautocastoff";
2	SLASH_PET_AUTOCASTON1 = "/petautocaston";
2	SLASH_PET_AUTOCASTON2 = "/petautocaston";
2	SLASH_PET_AUTOCASTTOGGLE1 = "/petautocasttoggle";
2	SLASH_PET_AUTOCASTTOGGLE2 = "/petautocasttoggle";
2	SLASH_PET_DEFENSIVE1 = "/petdefensive";
2	SLASH_PET_DEFENSIVE2 = "/petdefensive";
2	SLASH_PET_FOLLOW1 = "/petfollow";
2	SLASH_PET_FOLLOW2 = "/petfollow";
2	SLASH_PET_PASSIVE1 = "/petpassive";
2	SLASH_PET_PASSIVE2 = "/petpassive";
2	SLASH_PET_STAY1 = "/petstay";
2	SLASH_PET_STAY2 = "/petstay";
2	SLASH_PLAYED1 = "/played"; -- Time played
2	SLASH_PLAYED2 = "/played"; -- Time played
2	SLASH_PROMOTE1 = "/pr"; -- Promote
2	SLASH_PROMOTE2 = "/promote"; -- Promote
2	SLASH_PROMOTE3 = "/pr"; -- Promote
2	SLASH_PROMOTE4 = "/promote"; -- Promote
2	SLASH_PVP1 = "/pvp";
2	SLASH_PVP2 = "/pvp";
2	SLASH_QUIT1 = "/quit"; -- Quit
2	SLASH_QUIT2 = "/exit"; -- Quit
2	SLASH_QUIT3 = "/quit"; -- Quit
2	SLASH_QUIT4 = "/exit"; -- Quit
2	SLASH_RAID1 = "/raid";
2	SLASH_RAID2 = "/raid";
2	SLASH_RAID3 = "/ra";
2	SLASH_RAID4 = "/rsay";
2	SLASH_RAID5 = "/ra";
2	SLASH_RAID6 = "/rsay";
2	SLASH_RAID_INFO1 = "/raidinfo"; -- Returns information about your saved raid instances
2	SLASH_RAID_INFO2 = "/raidinfo";
2	SLASH_RAID_WARNING1 = "/rw";
2	SLASH_RAID_WARNING2 = "/rw";
2	SLASH_RANDOM1 = "/random";
2	SLASH_RANDOM2 = "/rand";
2	SLASH_RANDOM3 = "/rnd";
2	SLASH_RANDOM4 = "/random";
2	SLASH_RANDOM5 = "/rand";
2	SLASH_RANDOM6 = "/rnd";
2	SLASH_RANDOM7 = "/roll";
2	SLASH_READYCHECK1 = "/readycheck";
2	SLASH_READYCHECK2 = "/readycheck";
2	SLASH_REMOVEFRIEND1 = "/removefriend";
2	SLASH_REMOVEFRIEND2 = "/remfriend";
2	SLASH_REMOVEFRIEND3 = "/removefriend";
2	SLASH_REMOVEFRIEND4 = "/remfriend";
2	SLASH_REPLY1 = "/r"; -- Reply
2	SLASH_REPLY2 = "/reply"; -- Reply
2	SLASH_REPLY3 = "/r"; -- Reply
2	SLASH_REPLY4 = "/reply"; -- Reply
2	SLASH_RESETCHAT1 = "/resetchat";
2	SLASH_RESETCHAT2 = "/resetchat";
2	SLASH_SAVEGUILDROSTER1 = "/saveguildroster";
2	SLASH_SAVEGUILDROSTER2 = "/saveguildroster";
2	SLASH_SAY1 = "/s"; -- Say
2	SLASH_SAY2 = "/say"; -- Say
2	SLASH_SAY3 = "/s"; -- Say
2	SLASH_SAY4 = "/say"; -- Say
2	SLASH_SCRIPT1 = "/script";
2	SLASH_SCRIPT2 = "/run";
2	SLASH_SCRIPT3 = "/script";
2	SLASH_SCRIPT4 = "/run";
2	SLASH_STARTATTACK1 = "/startattack";
2	SLASH_STARTATTACK2 = "/startattack";
2	SLASH_STOPATTACK1 = "/stopattack";
2	SLASH_STOPATTACK2 = "/stopattack";
2	SLASH_STOPCASTING1 = "/stopcasting";
2	SLASH_STOPCASTING2 = "/stopcasting";
2	SLASH_STOPMACRO1 = "/stopmacro";
2	SLASH_STOPMACRO2 = "/stopmacro";
2	SLASH_STOPWATCH1 = "/stopwatch"; -- Toggles the stopwatch part of the time manager interface.
2	SLASH_STOPWATCH2 = "/timer"; -- Toggles the stopwatch part of the time manager interface.
2	SLASH_STOPWATCH3 = "/sw"; -- Toggles the stopwatch part of the time manager interface.
2	SLASH_STOPWATCH4 = "/stopwatch";
2	SLASH_STOPWATCH5 = "/timer";
2	SLASH_STOPWATCH6 = "/sw";
2	SLASH_STOPWATCH_PARAM_PAUSE1 = "pause"; -- Used as a parameter to /stopwatch to make it pause.
2	SLASH_STOPWATCH_PARAM_PAUSE2 = "pause";
2	SLASH_STOPWATCH_PARAM_PLAY1 = "play"; -- Used as a parameter to /stopwatch to make it play.
2	SLASH_STOPWATCH_PARAM_PLAY2 = "play";
2	SLASH_STOPWATCH_PARAM_STOP1 = "stop"; -- Used as a parameter to /stopwatch to make it stop.
2	SLASH_STOPWATCH_PARAM_STOP2 = "clear"; -- Used as a parameter to /stopwatch to make it stop.
2	SLASH_STOPWATCH_PARAM_STOP3 = "reset"; -- Used as a parameter to /stopwatch to make it stop.
2	SLASH_STOPWATCH_PARAM_STOP4 = "stop";
2	SLASH_STOPWATCH_PARAM_STOP5 = "clear";
2	SLASH_STOPWATCH_PARAM_STOP6 = "reset";
2	SLASH_SWAPACTIONBAR1 = "/swapactionbar";
2	SLASH_SWAPACTIONBAR2 = "/swapactionbar";
2	SLASH_TARGET1 = "/target";
2	SLASH_TARGET2 = "/tar";
2	SLASH_TARGET3 = "/target";
2	SLASH_TARGET4 = "/tar";
2	SLASH_TARGET_EXACT1 = "/targetexact";
2	SLASH_TARGET_EXACT2 = "/targetexact";
2	SLASH_TARGET_LAST_ENEMY1 = "/targetlastenemy";
2	SLASH_TARGET_LAST_ENEMY2 = "/targetlastenemy";
2	SLASH_TARGET_LAST_FRIEND1 = "/targetlastfriend";
2	SLASH_TARGET_LAST_FRIEND2 = "/targetlastfriend";
2	SLASH_TARGET_LAST_TARGET1 = "/targetlasttarget";
2	SLASH_TARGET_LAST_TARGET2 = "/targetlasttarget";
2	SLASH_TARGET_NEAREST_ENEMY1 = "/targetenemy";
2	SLASH_TARGET_NEAREST_ENEMY2 = "/targetenemy";
2	SLASH_TARGET_NEAREST_ENEMY_PLAYER1 = "/targetenemyplayer";
2	SLASH_TARGET_NEAREST_ENEMY_PLAYER2 = "/targetenemyplayer";
2	SLASH_TARGET_NEAREST_FRIEND1 = "/targetfriend";
2	SLASH_TARGET_NEAREST_FRIEND2 = "/targetfriend";
2	SLASH_TARGET_NEAREST_FRIEND_PLAYER1 = "/targetfriendplayer";
2	SLASH_TARGET_NEAREST_FRIEND_PLAYER2 = "/targetfriendplayer";
2	SLASH_TARGET_NEAREST_PARTY1 = "/targetparty";
2	SLASH_TARGET_NEAREST_PARTY2 = "/targetparty";
2	SLASH_TARGET_NEAREST_RAID1 = "/targetraid";
2	SLASH_TARGET_NEAREST_RAID2 = "/targetraid";
2	SLASH_TEAM_CAPTAIN1 = "/teamcaptain"; -- Team Captain
2	SLASH_TEAM_CAPTAIN2 = "/tcaptain"; -- Team Captain
2	SLASH_TEAM_CAPTAIN3 = "/teamcaptain";
2	SLASH_TEAM_CAPTAIN4 = "/tcaptain";
2	SLASH_TEAM_DISBAND1 = "/teamdisband"; -- Team Disband
2	SLASH_TEAM_DISBAND2 = "/tdisband"; -- Team Disband
2	SLASH_TEAM_DISBAND3 = "/teamdisband";
2	SLASH_TEAM_DISBAND4 = "/tdisband";
2	SLASH_TEAM_INVITE1 = "/teaminvite"; -- Team Invite
2	SLASH_TEAM_INVITE2 = "/tinvite"; -- Team Invite
2	SLASH_TEAM_INVITE3 = "/teaminvite";
2	SLASH_TEAM_INVITE4 = "/tinvite";
2	SLASH_TEAM_QUIT1 = "/teamquit"; -- Team Quit
2	SLASH_TEAM_QUIT2 = "/tquit"; -- Team Quit
2	SLASH_TEAM_QUIT3 = "/teamquit";
2	SLASH_TEAM_QUIT4 = "/tquit";
2	SLASH_TEAM_UNINVITE1 = "/teamremove"; -- Team Uninvite
2	SLASH_TEAM_UNINVITE2 = "/tremove"; -- Team Uninvite
2	SLASH_TEAM_UNINVITE3 = "/teamremove";
2	SLASH_TEAM_UNINVITE4 = "/tremove";
2	SLASH_TIME1 = "/time"; -- Time
2	SLASH_TIME2 = "/time"; -- Time
2	SLASH_TOKEN1 = "/token";
2	SLASH_TOKEN2 = "/token";
2	SLASH_TOKEN3 = "/tk";
2	SLASH_TOKEN4 = "/tk";
2	SLASH_TRADE1 = "/tr"; -- Trade
2	SLASH_TRADE2 = "/trade"; -- Trade
2	SLASH_TRADE3 = "/tr"; -- Trade
2	SLASH_TRADE4 = "/trade"; -- Trade
2	SLASH_UNIGNORE1 = "/unignore";
2	SLASH_UNIGNORE2 = "/unignore";
2	SLASH_UNINVITE1 = "/u"; -- Uninvite
2	SLASH_UNINVITE2 = "/un"; -- Uninvite
2	SLASH_UNINVITE3 = "/kick"; -- Uninvite
2	SLASH_UNINVITE4 = "/uninvite"; -- Uninvite
2	SLASH_UNINVITE5 = "/u"; -- Uninvite
2	SLASH_UNINVITE6 = "/un"; -- Uninvite
2	SLASH_UNINVITE7 = "/uninvite"; -- Uninvite
2	SLASH_UNINVITE8 = "/kick";
2	SLASH_USE1 = "/use";
2	SLASH_USE2 = "/use";
2	SLASH_USERANDOM1 = "/userandom";
2	SLASH_USERANDOM2 = "/userandom";
2	SLASH_VOICEMACRO1 = "/v";
2	SLASH_VOICEMACRO2 = "/v";
2	SLASH_WHISPER1 = "/w"; -- Whisper
2	SLASH_WHISPER2 = "/whisper"; -- Whisper
2	SLASH_WHISPER3 = "/t"; -- Whisper
2	SLASH_WHISPER4 = "/tell"; -- Whisper
2	SLASH_WHISPER5 = "/send"; -- Whisper
2	SLASH_WHISPER6 = "/w"; -- Whisper
2	SLASH_WHISPER7 = "/whisper"; -- Whisper
2	SLASH_WHISPER8 = "/t"; -- Whisper
2	SLASH_WHISPER9 = "/tell"; -- Whisper
2	SLASH_WHISPER10 = "/send"; -- Whisper
2	SLASH_WHO1 = "/who"; -- Get a list of players
2	SLASH_WHO2 = "/who"; -- Get a list of players
2	SLASH_YELL1 = "/y"; -- Yell
2	SLASH_YELL2 = "/yell"; -- Yell
2	SLASH_YELL3 = "/sh"; -- Yell
2	SLASH_YELL4 = "/shout"; -- Yell
2	SLASH_YELL5 = "/y"; -- Yell
2	SLASH_YELL6 = "/yell"; -- Yell
2	SLASH_YELL7 = "/sh"; -- Yell
2	SLASH_YELL8 = "/shout"; -- yell
2	SLURRED_SPEECH = "%s ...hic!"; -- Used for drunken mumbles
2	SMART_PIVOT = "Smart Pivot";
2	SOCIALS = "Socials"; -- Chat options, called "socials"...
2	SOCIAL_BUTTON = "Social";
2	SOCIAL_LABEL = "Social";
2	SOCIAL_SUBTEXT = "These options allow you to control and modify your interactions with other players you encounter in Azeroth.";
2	SOCKET_GEMS = "Socket Gems";
2	SOCKET_ITEM_MIN_SKILL = "Socket Requires %s (%d)"; -- Required skill rank to use the item
2	SOCKET_ITEM_REQ_SKILL = "Socket Requires %s"; -- Required skill to use the item
2	SOLD_BY_COLON = "Sold By:";
2	SOLO = "Solo";
2	SORT_QUEST = "Sort Quest"; -- Text for the quest sorting tab
2	SOUNDOPTIONS_MENU = "Sound & Voice"; -- Title for sound options menu
2	SOUND_CHANNELS = "Sound Channels";
2	SOUND_LABEL = "Sound";
2	SOUND_OPTIONS = "Sound Options";
2	SOUND_QUALITY = "Sound Quality"; -- Label for a slider in the Sound Options panel which governs sound output quality.
2	SOUND_SUBTEXT = "These options control sound hardware and the types and volumes of sounds within the game.";
2	SOUND_VOLUME = "Sound"; -- Sound options tag
2	SPEAKERMODE = "Speaker Mode";
2	SPEAKERMODE_HEADPHONES = "Headphones";
2	SPEAKERMODE_STEREO = "Stereo";
2	SPEAKERMODE_SURROUND = "Surround Sound";
2	SPECIAL = "Special";
2	SPECIAL_SKILLS = "%s Skills:"; -- %s is the class specialization
2	SPEED = "Speed"; -- Generic "speed"
2	SPELLBOOK = "Spellbook"; -- The player's spellbook
2	SPELLBOOK_ABILITIES_BUTTON = "Spellbook & Abilities";
2	SPELLBOOK_BUTTON = "Spellbook";
2	SPELLDISMISSPETOTHER = "%s's %s is dismissed.";
2	SPELLDISMISSPETSELF = "Your %s is dismissed.";
2	SPELLHAPPINESSDRAINOTHER = "%s's %s loses %d happiness.";
2	SPELLHAPPINESSDRAINSELF = "Your %s loses %d happiness.";
2	SPELLS = "Spells"; -- Generic "spells"
2	SPELLS_COMBATLOG_TOOLTIP = "Shows messages about spells and special abilities.";
2	SPELL_BONUS = "Spell Bonus";
2	SPELL_BONUS_COLON = "Spell Bonus:";
2	SPELL_CASTING = "Spell Casting";
2	SPELL_CASTING_COMBATLOG_TOOLTIP = "Show messages about spell casting.";
2	SPELL_CAST_CHANNELED = "Channeled";
2	SPELL_CAST_FAILED_COMBATLOG_TOOLTIP = "Show messages when a spell cannot be cast or fails to cast.";
2	SPELL_CAST_START_COMBATLOG_TOOLTIP = "Show messages when a spell begins casting.";
2	SPELL_CAST_SUCCESS_COMBATLOG_TOOLTIP = "Show messages when a spell successfully completes.";
2	SPELL_CAST_TIME_INSTANT = "Instant cast"; -- Zero cast time
2	SPELL_CAST_TIME_INSTANT_NO_MANA = "Instant";
2	SPELL_CAST_TIME_MIN = "%.3g min cast"; -- How long it takes to cast a spell
2	SPELL_CAST_TIME_RANGED = "Attack speed +%.3g sec";
2	SPELL_CAST_TIME_SEC = "%.3g sec cast"; -- How long it takes to cast a spell
2	SPELL_COLOR_BY_SCHOOL_COMBATLOG_TOOLTIP = "Color spell names by school.";
2	SPELL_CREATE_COMBATLOG_TOOLTIP = "Show messages when a spell or ability creates an object.";
2	SPELL_CRIT_CHANCE = "Crit Chance";
2	SPELL_DAMAGE_COMBATLOG_TOOLTIP = "Show messages when a spell or ability deals damage.";
2	SPELL_DAMAGE_NUMBER_COMBATLOG_TOOLTIP = "Colorizes the damage number on non-melee swings.";
2	SPELL_DAMAGE_SCHOOL_COMBATLOG_TOOLTIP = "Color the damage school name. (e.g. shadow)";
2	SPELL_DETAIL = "Spell Detail";
2	SPELL_DRAIN_COMBATLOG_TOOLTIP = "Show messages when a spell or ability reduces mana, energy, rage, focus or happiness.";
2	SPELL_DURATION = "Lasts %s";
2	SPELL_DURATION_DAYS = "%.2f |4day:days;";
2	SPELL_DURATION_HOURS = "%.2f |4hour:hrs;";
2	SPELL_DURATION_MIN = "%.2f min";
2	SPELL_DURATION_SEC = "%.2f sec";
2	SPELL_DURATION_UNTIL_CANCELLED = "until cancelled";
2	SPELL_EQUIPPED_ITEM = "Requires %s";
2	SPELL_EQUIPPED_ITEM_NOSPACE = "Requires %s";
2	SPELL_EXTRA_ATTACKS_COMBATLOG_TOOLTIP = "Show messages when a spell or ability grants additional attacks, such as Windfury Weapon or Sword Specialization.";
2	SPELL_FAILED_AFFECTING_COMBAT = "You are in combat";
2	SPELL_FAILED_ALREADY_BEING_TAMED = "That creature is already being tamed";
2	SPELL_FAILED_ALREADY_HAVE_CHARM = "You already control a charmed creature";
2	SPELL_FAILED_ALREADY_HAVE_SUMMON = "You already control a summoned creature";
2	SPELL_FAILED_ALREADY_OPEN = "Already open";
2	SPELL_FAILED_ARTISAN_RIDING_REQUIREMENT = "Requires artisan riding skill"; -- Failure message for mounts with additional requirements (called through script)
2	SPELL_FAILED_AURA_BOUNCED = "A more powerful spell is already active";
2	SPELL_FAILED_BAD_IMPLICIT_TARGETS = "No target";
2	SPELL_FAILED_BAD_TARGETS = "Invalid target";
2	SPELL_FAILED_BM_OR_INVISGOD = "The spell cannot be cast on beastmaster or invis god targets.";
2	SPELL_FAILED_CANT_BE_CHARMED = "Target can't be charmed";
2	SPELL_FAILED_CANT_BE_DISENCHANTED = "Item cannot be disenchanted";
2	SPELL_FAILED_CANT_BE_DISENCHANTED_SKILL = "Your Enchanting skill is not high enough to disenchant that";
2	SPELL_FAILED_CANT_BE_MILLED = "You cannot mill that";
2	SPELL_FAILED_CANT_BE_PROSPECTED = "There are no gems in this";
2	SPELL_FAILED_CANT_CAST_ON_TAPPED = "Target is tapped";
2	SPELL_FAILED_CANT_DO_THAT_RIGHT_NOW = "You can't do that right now.";
2	SPELL_FAILED_CANT_DUEL_WHILE_INVISIBLE = "You can't start a duel while invisible";
2	SPELL_FAILED_CANT_DUEL_WHILE_STEALTHED = "You can't start a duel while stealthed";
2	SPELL_FAILED_CANT_STEALTH = "You are too close to enemies";
2	SPELL_FAILED_CASTER_AURASTATE = "You can't do that yet";
2	SPELL_FAILED_CASTER_DEAD = "You are dead";
2	SPELL_FAILED_CASTER_DEAD_FEMALE = "You are dead";
2	SPELL_FAILED_CAST_NOT_HERE = "You can't cast that here";
2	SPELL_FAILED_CHARMED = "Can't do that while charmed";
2	SPELL_FAILED_CHEST_IN_USE = "That is already being used";
2	SPELL_FAILED_CONFUSED = "Can't do that while confused";
2	SPELL_FAILED_CUSTOM_ERROR_1 = "Something bad happened, and we want to display a custom message!"; -- This is an internal message, to test the custom error messages.
2	SPELL_FAILED_CUSTOM_ERROR_10 = "You cannot summon another gargoyle yet."; -- Fires whenever the player has the summoned ghoul debuff on.
2	SPELL_FAILED_CUSTOM_ERROR_11 = "Requires Corpse Dust if the target is not dead and humanoid."; -- Fires whenever the player has the summoned ghoul debuff on.
2	SPELL_FAILED_CUSTOM_ERROR_12 = "Can only be placed near Shatterhorn"; -- Warns players that they're not close enough to Shatterhorn or that he hasn't spawned yet.
2	SPELL_FAILED_CUSTOM_ERROR_13 = "You must first select a Proto-Drake Egg.";
2	SPELL_FAILED_CUSTOM_ERROR_14_NONE = "You must be close to a marked tree.";
2	SPELL_FAILED_CUSTOM_ERROR_15 = "You must target a Fjord Turkey.";
2	SPELL_FAILED_CUSTOM_ERROR_16 = "You must target a Fjord Hawk.";
2	SPELL_FAILED_CUSTOM_ERROR_17 = "You are too far from the bouy.";
2	SPELL_FAILED_CUSTOM_ERROR_18 = "Must be used near an oil slick."; -- Informs player that they're too far from an oil slick or they have the wrong target.
2	SPELL_FAILED_CUSTOM_ERROR_19 = "You must be closer to the buoy!";
2	SPELL_FAILED_CUSTOM_ERROR_2 = "Alex broke your quest! Thank him later!"; -- AAA - Used for Furbolg Quest Test
2	SPELL_FAILED_CUSTOM_ERROR_20 = "You may only call for the aid of a Wyrmrest Vanquisher in Wyrmrest Temple, The Dragon Wastes, Galakrond's Rest or The Wicked Coil.";
2	SPELL_FAILED_CUSTOM_ERROR_21 = "That can only be used on a Ice Heart Jormungar Spawn.";
2	SPELL_FAILED_CUSTOM_ERROR_22 = "You must be closer to a sinkhole to use your map.";
2	SPELL_FAILED_CUSTOM_ERROR_23 = "You may only call down a stampede on Harold Lane.";
2	SPELL_FAILED_CUSTOM_ERROR_24 = "You may only use the Pouch of Crushed Bloodspore on Gammothra or other magnataur in the Bloodspore Plains and Gammoth.";
2	SPELL_FAILED_CUSTOM_ERROR_25 = "Requires the magmawyrm resurrection chamber in the back of the Maw of Neltharion.";
2	SPELL_FAILED_CUSTOM_ERROR_26 = "You may only call down a Wintergarde Gryphon in Wintergarde Keep or the Carrion Fields.";
2	SPELL_FAILED_CUSTOM_ERROR_27 = "What are you doing? Only aim that thing at Wilhelm!";
2	SPELL_FAILED_CUSTOM_ERROR_28 = "Not enough health!";
2	SPELL_FAILED_CUSTOM_ERROR_29 = "There are no nearby corpses to use";
2	SPELL_FAILED_CUSTOM_ERROR_3 = "This spell may only be used on Helpless Wintergarde Villagers that have not been rescued.";
2	SPELL_FAILED_CUSTOM_ERROR_30 = "You've created enough ghouls. Return to Gothik the Harvester at Death's Breach.";
2	SPELL_FAILED_CUSTOM_ERROR_31 = "Your companion does not want to come here.  Go further from the Sundered Shard.";
2	SPELL_FAILED_CUSTOM_ERROR_32 = "Must be in Cat Form";
2	SPELL_FAILED_CUSTOM_ERROR_33 = "Only Death Knights may enter Ebon Hold.";
2	SPELL_FAILED_CUSTOM_ERROR_34 = "Must be in Cat Form, Bear Form, or Dire Bear Form";
2	SPELL_FAILED_CUSTOM_ERROR_35 = "You must be within range of a Helpless Wintergarde Villager.";
2	SPELL_FAILED_CUSTOM_ERROR_36 = "You cannot target an elemental or mechanical corpse.";
2	SPELL_FAILED_CUSTOM_ERROR_37 = "This teleport crystal cannot be used until the teleport crystal in Dalaran has been used at least once.";
2	SPELL_FAILED_CUSTOM_ERROR_38 = "You are already holding something in your hand. You must throw the creature in your hand before picking up another.";
2	SPELL_FAILED_CUSTOM_ERROR_39 = "You don't have anything to throw! Find a Vargul and use Gymer Grab to pick one up!";
2	SPELL_FAILED_CUSTOM_ERROR_4 = "Requires that you be wearing the Warsong Orc Disguise.";
2	SPELL_FAILED_CUSTOM_ERROR_40 = "Bouldercrag's War Horn can only be used within 10 yards of Valduran the Stormborn.";
2	SPELL_FAILED_CUSTOM_ERROR_41 = "You are not carrying a passenger. There is nobody to drop off.";
2	SPELL_FAILED_CUSTOM_ERROR_42 = "You cannot build any more siege vehicles.";
2	SPELL_FAILED_CUSTOM_ERROR_43 = "You are already carrying a captured Argent Crusader. You must return to the Argent Vanguard infirmary and drop off your passenger before you may pick up another.";
2	SPELL_FAILED_CUSTOM_ERROR_44 = "You can't do that while rooted.";
2	SPELL_FAILED_CUSTOM_ERROR_45 = "Requires a nearby diseased target.";
2	SPELL_FAILED_CUSTOM_ERROR_46 = "Nothing left to discover.";
2	SPELL_FAILED_CUSTOM_ERROR_47 = "No targets close enough to bluff.";
2	SPELL_FAILED_CUSTOM_ERROR_48 = "Your Iron Rune Construct is out of range.";
2	SPELL_FAILED_CUSTOM_ERROR_49 = "Requires Grand Master Engineer";
2	SPELL_FAILED_CUSTOM_ERROR_5 = "You must be closer to a plague wagon in order to drop off your 7th Legion Siege Engineer.";
2	SPELL_FAILED_CUSTOM_ERROR_50 = "You can't use that mount.";
2	SPELL_FAILED_CUSTOM_ERROR_51 = "There is nobody to eject!";
2	SPELL_FAILED_CUSTOM_ERROR_52 = "The target must be bound to you."; -- This is meant in terms of "enthrallment", e.g. the ghoul is not bound to you (Death Knight Error message)
2	SPELL_FAILED_CUSTOM_ERROR_53 = "Target must be undead.";
2	SPELL_FAILED_CUSTOM_ERROR_54 = "You have no target or your target is too far away.";
2	SPELL_FAILED_CUSTOM_ERROR_55 = "Missing Reagents: Dark Matter";
2	SPELL_FAILED_CUSTOM_ERROR_6 = "You cannot target friendly units outside your party.";
2	SPELL_FAILED_CUSTOM_ERROR_7 = "You must target a weakened chill nymph."; -- You must target a weakened chill nymph.
2	SPELL_FAILED_CUSTOM_ERROR_8 = "The Imbued Scourge Shroud will only work when equipped in the Temple City of En'kilah."; -- For the Shroud of the Scourge quest item in Borean Tundra.
2	SPELL_FAILED_CUSTOM_ERROR_9 = "Requires Corpse Dust";
2	SPELL_FAILED_DAMAGE_IMMUNE = "You can't do that while you are immune"; -- See ERR_USE_CANT_IMMUNE
2	SPELL_FAILED_EQUIPPED_ITEM = "Must have the proper item equipped";
2	SPELL_FAILED_EQUIPPED_ITEM_CLASS = "Must have a %s equipped";
2	SPELL_FAILED_EQUIPPED_ITEM_CLASS_MAINHAND = "Must have a %s equipped in the main hand";
2	SPELL_FAILED_EQUIPPED_ITEM_CLASS_OFFHAND = "Must have a %s equipped in the offhand";
2	SPELL_FAILED_ERROR = "Internal error";
2	SPELL_FAILED_EXPERT_RIDING_REQUIREMENT = "Requires expert riding skill"; -- Failure message for mounts with additional requirements (called through script)
2	SPELL_FAILED_FISHING_TOO_LOW = "Requires Fishing %d";
2	SPELL_FAILED_FIZZLE = "Fizzled";
2	SPELL_FAILED_FLEEING = "Can't do that while fleeing";
2	SPELL_FAILED_FOOD_LOWLEVEL = "That food's level is not high enough for your pet";
2	SPELL_FAILED_GLYPH_SOCKET_LOCKED = "You cannot inscribe a Glyph there yet.";
2	SPELL_FAILED_HIGHLEVEL = "Target is too high level";
2	SPELL_FAILED_IMMUNE = "Immune";
2	SPELL_FAILED_INCORRECT_AREA = "You are in the wrong zone.";
2	SPELL_FAILED_INTERRUPTED = "Interrupted";
2	SPELL_FAILED_INTERRUPTED_COMBAT = "Interrupted";
2	SPELL_FAILED_INVALID_GLYPH = "That Glyph cannot be inscribed there.";
2	SPELL_FAILED_ITEM_ALREADY_ENCHANTED = "Item is already enchanted";
2	SPELL_FAILED_ITEM_AT_MAX_CHARGES = "Item already has the maximum number of charges.";
2	SPELL_FAILED_ITEM_GONE = "Item is gone";
2	SPELL_FAILED_ITEM_NOT_FOUND = "Tried to enchant an item that didn't exist";
2	SPELL_FAILED_ITEM_NOT_READY = "Item is not ready yet";
2	SPELL_FAILED_LEVEL_REQUIREMENT = "You are not high enough level";
2	SPELL_FAILED_LEVEL_REQUIREMENT_PET = "Your pet is not high enough level";
2	SPELL_FAILED_LINE_OF_SIGHT = "Target not in line of sight";
2	SPELL_FAILED_LOWLEVEL = "Target is too low level";
2	SPELL_FAILED_LOW_CASTLEVEL = "Skill not high enough";
2	SPELL_FAILED_MAINHAND_EMPTY = "Your weapon hand is empty";
2	SPELL_FAILED_MIN_SKILL = "Your skill is not high enough.  Requires %s (%d)."; -- %s is the skill name, %d is the skill amount.
2	SPELL_FAILED_MOVING = "Can't do that while moving";
2	SPELL_FAILED_NEED_AMMO = "Ammo needs to be in the paper doll ammo slot before it can be fired.";
2	SPELL_FAILED_NEED_AMMO_POUCH = "Requires: %s";
2	SPELL_FAILED_NEED_EXOTIC_AMMO = "Requires exotic ammo: %s";
2	SPELL_FAILED_NEED_MORE_ITEMS = "Requires %d %s."; -- %d is the number of %s's required to prospect or mill this type of material.
2	SPELL_FAILED_NOPATH = "No path available";
2	SPELL_FAILED_NOTHING_TO_DISPEL = "Nothing to dispel";
2	SPELL_FAILED_NOTHING_TO_STEAL = "Nothing to steal";
2	SPELL_FAILED_NOT_BEHIND = "You must be behind your target.";
2	SPELL_FAILED_NOT_FISHABLE = "Your cast didn't land in fishable water";
2	SPELL_FAILED_NOT_FLYING = "You are flying.";
2	SPELL_FAILED_NOT_HERE = "You can't use that here.";
2	SPELL_FAILED_NOT_IDLE = "Can't use while Idle";
2	SPELL_FAILED_NOT_INACTIVE = "Can't use while Inactive";
2	SPELL_FAILED_NOT_INFRONT = "You must be in front of your target.";
2	SPELL_FAILED_NOT_IN_ARENA = "You can't do that in an arena.";
2	SPELL_FAILED_NOT_IN_BARBERSHOP = "You can't do that while in the barber shop";
2	SPELL_FAILED_NOT_IN_BATTLEGROUND = "You can't do that in a battleground.";
2	SPELL_FAILED_NOT_IN_CONTROL = "You are not in control of your actions";
2	SPELL_FAILED_NOT_IN_RAID_INSTANCE = "You can't do that in a raid instance.";
2	SPELL_FAILED_NOT_KNOWN = "Spell not learned";
2	SPELL_FAILED_NOT_MOUNTED = "You are mounted.";
2	SPELL_FAILED_NOT_ON_DAMAGE_IMMUNE = "Spell cannot be cast on a damage immune target.";
2	SPELL_FAILED_NOT_ON_GROUND = "Cannot use on the ground";
2	SPELL_FAILED_NOT_ON_MOUNTED = "Spell cannot be cast on a mounted unit.";
2	SPELL_FAILED_NOT_ON_SHAPESHIFT = "Cannot be cast on shapeshifted target.";
2	SPELL_FAILED_NOT_ON_STEALTHED = "Spell cannot be cast on stealted target.";
2	SPELL_FAILED_NOT_ON_TAXI = "You are in flight";
2	SPELL_FAILED_NOT_ON_TRANSPORT = "You are on a transport";
2	SPELL_FAILED_NOT_READY = "Not yet recovered";
2	SPELL_FAILED_NOT_SHAPESHIFT = "You are in shapeshift form";
2	SPELL_FAILED_NOT_STANDING = "You must be standing to do that";
2	SPELL_FAILED_NOT_TRADEABLE = "You can only use this on an object you own";
2	SPELL_FAILED_NOT_TRADING = "Tried to enchant a trade item, but not trading";
2	SPELL_FAILED_NOT_UNSHEATHED = "You must be unsheathed";
2	SPELL_FAILED_NOT_WHILE_FATIGUED = "Can't cast while fatigued";
2	SPELL_FAILED_NOT_WHILE_GHOST = "Can't cast as ghost";
2	SPELL_FAILED_NOT_WHILE_LOOTING = "You are busy looting";
2	SPELL_FAILED_NOT_WHILE_TRADING = "Can't cast while trading";
2	SPELL_FAILED_NO_AMMO = "Out of ammo";
2	SPELL_FAILED_NO_CHAMPION = "You haven't selected a champion";
2	SPELL_FAILED_NO_CHARGES_REMAIN = "No charges remain";
2	SPELL_FAILED_NO_COMBO_POINTS = "That ability requires combo points";
2	SPELL_FAILED_NO_DUELING = "Dueling isn't allowed here.";
2	SPELL_FAILED_NO_EDIBLE_CORPSES = "There are no nearby corpses to eat";
2	SPELL_FAILED_NO_ENDURANCE = "Not enough endurance";
2	SPELL_FAILED_NO_EVASIVE_CHARGES = "You need Evasive Charges";
2	SPELL_FAILED_NO_FISH = "There aren't any fish here";
2	SPELL_FAILED_NO_ITEMS_WHILE_SHAPESHIFTED = "Can't use items while shapeshifted";
2	SPELL_FAILED_NO_MAGIC_TO_CONSUME = "No magic to consume";
2	SPELL_FAILED_NO_MOUNTS_ALLOWED = "You can't mount here.";
2	SPELL_FAILED_NO_PET = "You do not have a pet";
2	SPELL_FAILED_NO_PLAYTIME = "You can not do this. You have more than 5 hours of online time";
2	SPELL_FAILED_ONLY_ABOVEWATER = "Cannot use while swimming";
2	SPELL_FAILED_ONLY_BATTLEGROUNDS = "Can only use in battlegrounds";
2	SPELL_FAILED_ONLY_DAYTIME = "Can only use during the day";
2	SPELL_FAILED_ONLY_INDOORS = "Can only use indoors";
2	SPELL_FAILED_ONLY_IN_ARENA = "You can only do that in an arena.";
2	SPELL_FAILED_ONLY_MOUNTED = "Can only use while mounted";
2	SPELL_FAILED_ONLY_NIGHTTIME = "Can only use during the night";
2	SPELL_FAILED_ONLY_OUTDOORS = "Can only use outside";
2	SPELL_FAILED_ONLY_SHAPESHIFT = "Must be in %s"; -- %s is the required stance/form
2	SPELL_FAILED_ONLY_STEALTHED = "You must be in stealth mode.";
2	SPELL_FAILED_ONLY_UNDERWATER = "Can only use while swimming";
2	SPELL_FAILED_OUT_OF_RANGE = "Out of range";
2	SPELL_FAILED_PACIFIED = "Can't use that ability while pacified";
2	SPELL_FAILED_PARTIAL_PLAYTIME = "You can not do this. You have more than 3 hours of online time. ";
2	SPELL_FAILED_POSSESSED = "You are possessed";
2	SPELL_FAILED_PREVENTED_BY_MECHANIC = "Can't do that while %s"; -- %s is the mechanic state that prevented the action (e.g. disoriented, frozen, etc.)
2	SPELL_FAILED_REAGENTS = "Missing reagent: %s";
2	SPELL_FAILED_REPUTATION = "Your reputation isn't high enough";
2	SPELL_FAILED_REQUIRES_AREA = "You need to be in %s."; -- %s is an area name
2	SPELL_FAILED_REQUIRES_SPELL_FOCUS = "Requires %s";
2	SPELL_FAILED_ROOTED = "You are unable to move";
2	SPELL_FAILED_SILENCED = "Can't do that while silenced";
2	SPELL_FAILED_SPELL_IN_PROGRESS = "Another action is in progress";
2	SPELL_FAILED_SPELL_LEARNED = "You have already learned the spell";
2	SPELL_FAILED_SPELL_UNAVAILABLE = "The spell is not available to you";
2	SPELL_FAILED_SPELL_UNAVAILABLE_PET = "That ability is not available to your pet";
2	SPELL_FAILED_STUNNED = "Can't do that while stunned";
2	SPELL_FAILED_TARGETS_DEAD = "Your target is dead";
2	SPELL_FAILED_TARGET_AFFECTING_COMBAT = "Target is in combat";
2	SPELL_FAILED_TARGET_AURASTATE = "You can't do that yet";
2	SPELL_FAILED_TARGET_DUELING = "Target is currently dueling";
2	SPELL_FAILED_TARGET_ENEMY = "Target is hostile";
2	SPELL_FAILED_TARGET_ENRAGED = "Target is too enraged to be charmed";
2	SPELL_FAILED_TARGET_FREEFORALL = "Target is currently in free-for-all PvP combat";
2	SPELL_FAILED_TARGET_FRIENDLY = "Target is friendly";
2	SPELL_FAILED_TARGET_IN_COMBAT = "The target can't be in combat"; -- Spell failure message when trying to use a spell on something that is in combat when it should not be.
2	SPELL_FAILED_TARGET_IS_PLAYER = "Can't target players";
2	SPELL_FAILED_TARGET_IS_PLAYER_CONTROLLED = "Can't target player controlled units";
2	SPELL_FAILED_TARGET_IS_TRIVIAL = "Can't target trivial";
2	SPELL_FAILED_TARGET_LOCKED_TO_RAID_INSTANCE = "Target is locked to another raid instance";
2	SPELL_FAILED_TARGET_NOT_DEAD = "Target is alive";
2	SPELL_FAILED_TARGET_NOT_GHOST = "Target is not a ghost";
2	SPELL_FAILED_TARGET_NOT_IN_INSTANCE = "Target must be in this instance";
2	SPELL_FAILED_TARGET_NOT_IN_PARTY = "Target is not in your party";
2	SPELL_FAILED_TARGET_NOT_IN_RAID = "Target is not in your party or raid group";
2	SPELL_FAILED_TARGET_NOT_IN_SANCTUARY = "Target is not in a sanctuary";
2	SPELL_FAILED_TARGET_NOT_LOOTED = "Creature must be looted first";
2	SPELL_FAILED_TARGET_NOT_PLAYER = "Target is not a player";
2	SPELL_FAILED_TARGET_NO_POCKETS = "No pockets to pick";
2	SPELL_FAILED_TARGET_NO_RANGED_WEAPONS = "Target has no ranged weapons equipped";
2	SPELL_FAILED_TARGET_NO_WEAPONS = "Target has no weapons equipped";
2	SPELL_FAILED_TARGET_ON_TAXI = "Your target is in flight";
2	SPELL_FAILED_TARGET_UNSKINNABLE = "Creature is not skinnable";
2	SPELL_FAILED_TOO_CLOSE = "Target too close";
2	SPELL_FAILED_TOO_MANY_OF_ITEM = "You have too many of that item already";
2	SPELL_FAILED_TOO_SHALLOW = "Water too shallow";
2	SPELL_FAILED_TOTEMS = "Requires %s";
2	SPELL_FAILED_TOTEM_CATEGORY = "Requires %s";
2	SPELL_FAILED_TRANSFORM_UNUSABLE = "You can't use the new item";
2	SPELL_FAILED_TRY_AGAIN = "Failed attempt";
2	SPELL_FAILED_UNIQUE_GLYPH = "That Glyph is already inscribed in your spellbook.";
2	SPELL_FAILED_UNIT_NOT_BEHIND = "Target needs to be behind you.";
2	SPELL_FAILED_UNIT_NOT_INFRONT = "Target needs to be in front of you.";
2	SPELL_FAILED_UNKNOWN = "Unknown reason";
2	SPELL_FAILED_WRONG_PET_FOOD = "Your pet doesn't like that food.";
2	SPELL_FAILED_WRONG_WEATHER = "The weather isn't right for that";
2	SPELL_HASTE = "Haste Rating";
2	SPELL_HASTE_TOOLTIP = "Increases the speed that your spells cast by %.2f%%.";
2	SPELL_HEAL_COMBATLOG_TOOLTIP = "Show messages when a spell or ability heals damage.";
2	SPELL_INSTAKILL_COMBATLOG_TOOLTIP = "Show messages about special spell types, such as those that inflict durability loss or share damage with a pet.";
2	SPELL_INSTANT_EFFECT = "Instant effect";
2	SPELL_INTERRUPT_COMBATLOG_TOOLTIP = "Show messages when a spell or ability interrupts another spell.";
2	SPELL_LASTING_EFFECT = "%s effect";
2	SPELL_MESSAGES = "Spell Messages";
2	SPELL_MISSED_COMBATLOG_TOOLTIP = "Show messages when a spell or ability fails to deal damage. This includes dodges, parries, blocks, deflections, immunes, absorbs and evades.";
2	SPELL_NAMES = "Spell Names";
2	SPELL_NAMES_COMBATLOG_TOOLTIP = "Color spell names.";
2	SPELL_NAMES_SHOW_BRACES_COMBATLOG_TOOLTIP = "Show braces around spell names.";
2	SPELL_NOT_SHAPESHIFTED = "Can't do that while shapeshifted.";
2	SPELL_NOT_SHAPESHIFTED_NOSPACE = "Can't do that while shapeshifted.";
2	SPELL_ON_NEXT_RANGED = "Attack speed";
2	SPELL_ON_NEXT_SWING = "Next melee";
2	SPELL_OTHER_MESSAGES = "Spell Messages (cont'd)";
2	SPELL_PASSIVE = "Passive"; -- This is a passive ability
2	SPELL_PASSIVE_EFFECT = "Passive";
2	SPELL_PENETRATION = "Penetration";
2	SPELL_PENETRATION_TOOLTIP = "Spell Penetration %d (Reduces enemy resistances by %d)";
2	SPELL_PERIODIC_COMBATLOG_TOOLTIP = "Show spells that perform an effect incrementally.";
2	SPELL_PERIODIC_DAMAGE_COMBATLOG_TOOLTIP = "Show messages when a spell or ability periodically deals damage, such as Shadow Word: Pain or Corruption.";
2	SPELL_PERIODIC_HEAL_COMBATLOG_TOOLTIP = "Show messages when a spell or ability periodically heals damage, such as Renew or Rejuvenation.";
2	SPELL_PERIODIC_MISSED_COMBATLOG_TOOLTIP = "Show messages when a spell or ability fails to periodically deal damage. This includes immunes, absorbs and evades.";
2	SPELL_PERIODIC_OTHER_COMBATLOG_TOOLTIP = "Show messages when a spell or ability periodically performs any other effect, such as restoring or draining mana.";
2	SPELL_POINTS_SPREAD_TEMPLATE = "%.1f to %.1f"; -- Min to max points for a spell
2	SPELL_RANGE = "%s yd range";
2	SPELL_RANGE_AREA = "Area around caster";
2	SPELL_RANGE_UNLIMITED = "Unlimited range";
2	SPELL_REAGENTS = "Reagents: |n";
2	SPELL_RECAST_TIME_INSTANT = "Instant cooldown"; -- Zero recast time
2	SPELL_RECAST_TIME_MIN = "%.3g min cooldown"; -- How long it takes to recast a spell
2	SPELL_RECAST_TIME_SEC = "%.3g sec cooldown"; -- How long it takes to recast a spell
2	SPELL_REQUIRED_FORM = "Requires %s";
2	SPELL_REQUIRED_FORM_NOSPACE = "Requires %s";
2	SPELL_RESURRECT_COMBATLOG_TOOLTIP = "Show messages when a spell or ability resurrects another player or creature.";
2	SPELL_SCHOOL0_CAP = "Physical";
2	SPELL_SCHOOL0_NAME = "physical";
2	SPELL_SCHOOL1_CAP = "Holy";
2	SPELL_SCHOOL1_NAME = "holy";
2	SPELL_SCHOOL2_CAP = "Fire";
2	SPELL_SCHOOL2_NAME = "fire";
2	SPELL_SCHOOL3_CAP = "Nature";
2	SPELL_SCHOOL3_NAME = "nature";
2	SPELL_SCHOOL4_CAP = "Frost";
2	SPELL_SCHOOL4_NAME = "frost";
2	SPELL_SCHOOL5_CAP = "Shadow";
2	SPELL_SCHOOL5_NAME = "shadow";
2	SPELL_SCHOOL6_CAP = "Arcane";
2	SPELL_SCHOOL6_NAME = "arcane";
2	SPELL_SCHOOLALL = "all";
2	SPELL_SCHOOLMAGICAL = "magical";
2	SPELL_SKILL_LINE = "%s";
2	SPELL_STAT1_NAME = "Strength"; -- enable/disable combat log file output
2	SPELL_STAT2_NAME = "Agility";
2	SPELL_STAT3_NAME = "Stamina";
2	SPELL_STAT4_NAME = "Intellect";
2	SPELL_STAT5_NAME = "Spirit";
2	SPELL_STATALL = "all stats";
2	SPELL_SUMMON_COMBATLOG_TOOLTIP = "Show messages when a spell or ability summons a creature or creates an object.";
2	SPELL_TARGET_CENTER_CASTER = "caster";
2	SPELL_TARGET_CENTER_LOC = "target location";
2	SPELL_TARGET_CHAIN_TEMPLATE = "Target %s, chains up to %d";
2	SPELL_TARGET_CONE_TEMPLATE = "Target %s in %d yd cone from %s";
2	SPELL_TARGET_CREATURE_TYPE12_DESC = "all %s";
2	SPELL_TARGET_CREATURE_TYPE13_DESC = "enemy %s";
2	SPELL_TARGET_CREATURE_TYPE1_DESC = "%s";
2	SPELL_TARGET_CREATURE_TYPE2_DESC = "friendly %s";
2	SPELL_TARGET_CREATURE_TYPE3_DESC = "enemy %s";
2	SPELL_TARGET_CREATURE_TYPE8_DESC = "%s pet";
2	SPELL_TARGET_CREATURE_TYPE_DEAD12_DESC = "all dead %s";
2	SPELL_TARGET_CREATURE_TYPE_DEAD13_DESC = "dead enemy %s";
2	SPELL_TARGET_CREATURE_TYPE_DEAD1_DESC = "dead %s";
2	SPELL_TARGET_CREATURE_TYPE_DEAD2_DESC = "dead friendly %s";
2	SPELL_TARGET_CREATURE_TYPE_DEAD3_DESC = "dead enemy %s";
2	SPELL_TARGET_CREATURE_TYPE_DEAD8_DESC = "dead %s pet";
2	SPELL_TARGET_MULTIPLE_TEMPLATE = "Target %s within %d yd of %s";
2	SPELL_TARGET_TEMPLATE = "Target %s";
2	SPELL_TARGET_TYPE0_DESC = "caster";
2	SPELL_TARGET_TYPE10_DESC = "off-hand item";
2	SPELL_TARGET_TYPE11_DESC = "party";
2	SPELL_TARGET_TYPE12_DESC = "all";
2	SPELL_TARGET_TYPE13_DESC = "enemies";
2	SPELL_TARGET_TYPE14_DESC = "party members";
2	SPELL_TARGET_TYPE15_DESC = "master";
2	SPELL_TARGET_TYPE16_DESC = "raid member";
2	SPELL_TARGET_TYPE17_DESC = "raid members";
2	SPELL_TARGET_TYPE1_DESC = "any";
2	SPELL_TARGET_TYPE2_DESC = "friendly";
2	SPELL_TARGET_TYPE3_DESC = "enemy";
2	SPELL_TARGET_TYPE4_DESC = "party member";
2	SPELL_TARGET_TYPE5_DESC = "item";
2	SPELL_TARGET_TYPE6_DESC = "location";
2	SPELL_TARGET_TYPE7_DESC = "object";
2	SPELL_TARGET_TYPE8_DESC = "pet";
2	SPELL_TARGET_TYPE9_DESC = "main-hand item";
2	SPELL_TARGET_TYPE_DEAD11_DESC = "dead party members";
2	SPELL_TARGET_TYPE_DEAD12_DESC = "all dead";
2	SPELL_TARGET_TYPE_DEAD13_DESC = "dead enemies";
2	SPELL_TARGET_TYPE_DEAD14_DESC = "dead party members";
2	SPELL_TARGET_TYPE_DEAD16_DESC = "dead raid member";
2	SPELL_TARGET_TYPE_DEAD17_DESC = "dead raid members";
2	SPELL_TARGET_TYPE_DEAD1_DESC = "dead";
2	SPELL_TARGET_TYPE_DEAD2_DESC = "dead friendly";
2	SPELL_TARGET_TYPE_DEAD3_DESC = "dead enemy";
2	SPELL_TARGET_TYPE_DEAD4_DESC = "dead party member";
2	SPELL_TARGET_TYPE_DEAD8_DESC = "dead pet";
2	SPELL_TIMER = "%s Failed: You haven't recovered yet."; -- The player is trying to cast a spell before the cooldown timer expires
2	SPELL_TIME_REMAINING_DAYS = "%d |4day:days; remaining";
2	SPELL_TIME_REMAINING_HOURS = "%d |4hour:hours; remaining";
2	SPELL_TIME_REMAINING_MIN = "%d |4minute:minutes; remaining"; -- Time remaining on a buff
2	SPELL_TIME_REMAINING_SEC = "%d |4second:seconds; remaining"; -- Time remaining on a buff
2	SPELL_TOTEMS = "Tools: ";
2	SPELL_USE_ALL_ENERGY = "Uses 100% energy";
2	SPELL_USE_ALL_FOCUS = "Uses 100% focus";
2	SPELL_USE_ALL_HEALTH = "Uses 100% health";
2	SPELL_USE_ALL_MANA = "Uses 100% mana"; -- Uses up all your mana
2	SPELL_USE_ALL_RAGE = "Uses 100% rage";
2	SPIRIT_COLON = "Spirit:"; -- Character's spirit, with colon
2	SPIRIT_HEALER_RELEASE_RED = "|cffff2020Spirit Healer|r"; -- Spirit Healer in red.
2	SPIRIT_TOOLTIP = "Increases Health and Mana regeneration rates. Spirit affects all\ncharacters' Mana and Hit Point regeneration rates in and\nout of combat."; -- Tooltip description for "Spirit"
2	STABLED_PETS = "Stabled Pets:";
2	STABLES = "Stables";
2	STABLE_SLOT_TEXT = "Do you wish to purchase another stable slot?";
2	STACKS = "%d |4Stack:Stacks;";
2	STAMINA_COLON = "Stamina:"; -- Character's stamina, with colon
2	STAMINA_TOOLTIP = "Increases health points"; -- Tooltip description for "Stamina"
2	STANDING = "Standing"; -- Label for your standing with a faction i.e. "Revered", "Hated"
2	START = "Start";
2	STARTING_PRICE = "Starting Price";
2	STARTUP_TEXT_LINE1 = "Type '/help for a listing of a few commands.";
2	STARTUP_TEXT_LINE2 = "";
2	STARTUP_TEXT_LINE3 = "";
2	STARTUP_TEXT_LINE4 = "";
2	STATISTICS = "Statistics";
2	STATS_LABEL = "Stats:";
2	STATUS = "Status"; -- Generic text
2	STATUSTEXT_LABEL = "Status Text"; -- Label for Status Text category of Interface Options
2	STATUSTEXT_SUBTEXT = "These options allow you to display detailed information on status bars throughout the game.";
2	STATUS_BAR_TEXT = "Status Bar Text";
2	STATUS_TEXT = "Status Text"; -- Basic UI options category for Status Text display on unit frames
2	STATUS_TEXT_PARTY = "Party"; -- Label for Party Status Text option in the UI Options frame
2	STATUS_TEXT_PERCENT = "Display Percentages"; -- Label for Display Status Text as Percentages option in the UI Options frame
2	STATUS_TEXT_PET = "Pet"; -- Label for Pet Status Text option in the UI Options frame
2	STATUS_TEXT_PLAYER = "Player"; -- Label for Player Status Text option in the UI Options frame
2	STATUS_TEXT_TARGET = "Target"; -- Label for Target Status Text option in the UI Options frame
2	STAT_ATTACK_POWER = "Increases Attack Power by %d\n";
2	STAT_BLOCK = "Block"; -- Block on the character sheet.
2	STAT_BLOCK_TOOLTIP = "Increases Block by %d";
2	STAT_DODGE = "Dodge"; -- Dodge on the character sheet
2	STAT_EXPERTISE = "Expertise"; -- Expertise on the character sheet
2	STAT_PARRY = "Parry"; -- Parry on the character sheet
2	STAT_RESILIENCE = "Resilience"; -- Resilience on the character sheet
2	STAT_TEMPLATE = "%s Stats";
2	STOPWATCH_TIME_UNIT = "%02d";
2	STOPWATCH_TITLE = "Stopwatch";
2	STOP_AUTO_ATTACK = "Stop Auto Attack";
2	STOP_IGNORE = "Remove Player"; -- Remove from ignore list
2	STRENGTH_COLON = "Strength:"; -- Character's strength, with colon
2	STRENGTH_TOOLTIP = "Adds to your Attack Power, Damage-Per-Second. Strength\ndoes not affect Critical Hit chances at all. Strength does\nnot improve your chance to block, but rather the amount\nblocked when you succeed. This amount is determined in\npart by Strength (and the other part by your shield). ";
2	STRING_ENVIRONMENTAL_DAMAGE_DROWNING = "Drowning";
2	STRING_ENVIRONMENTAL_DAMAGE_FALLING = "Falling";
2	STRING_ENVIRONMENTAL_DAMAGE_FATIGUE = "Fatigue";
2	STRING_ENVIRONMENTAL_DAMAGE_FIRE = "Fire";
2	STRING_ENVIRONMENTAL_DAMAGE_LAVA = "Lava";
2	STRING_ENVIRONMENTAL_DAMAGE_SLIME = "Slime";
2	STRING_SCHOOL_ARCANE = "Arcane";
2	STRING_SCHOOL_CHAOS = "Chaos";
2	STRING_SCHOOL_CHROMATIC = "Chromatic";
2	STRING_SCHOOL_DIVINE = "Divine";
2	STRING_SCHOOL_ELEMENTAL = "Elemental";
2	STRING_SCHOOL_FIRE = "Fire";
2	STRING_SCHOOL_FIRESTORM = "Firestorm";
2	STRING_SCHOOL_FLAMESTRIKE = "Flamestrike";
2	STRING_SCHOOL_FROST = "Frost";
2	STRING_SCHOOL_FROSTFIRE = "Frostfire";
2	STRING_SCHOOL_FROSTSTORM = "Froststorm";
2	STRING_SCHOOL_FROSTSTRIKE = "Froststrike";
2	STRING_SCHOOL_HOLY = "Holy";
2	STRING_SCHOOL_HOLYFIRE = "Holyfire";
2	STRING_SCHOOL_HOLYFROST = "Holyfrost";
2	STRING_SCHOOL_HOLYSTORM = "Holystorm";
2	STRING_SCHOOL_HOLYSTRIKE = "Holystrike";
2	STRING_SCHOOL_MAGIC = "Magic";
2	STRING_SCHOOL_NATURE = "Nature";
2	STRING_SCHOOL_PHYSICAL = "Physical";
2	STRING_SCHOOL_SHADOW = "Shadow";
2	STRING_SCHOOL_SHADOWFLAME = "Shadowflame";
2	STRING_SCHOOL_SHADOWFROST = "Shadowfrost";
2	STRING_SCHOOL_SHADOWHOLY = "Twilight";
2	STRING_SCHOOL_SHADOWLIGHT = "Twilight";
2	STRING_SCHOOL_SHADOWSTORM = "Shadowstorm";
2	STRING_SCHOOL_SHADOWSTRIKE = "Shadowstrike";
2	STRING_SCHOOL_SPELLFIRE = "Spellfire";
2	STRING_SCHOOL_SPELLFROST = "Spellfrost";
2	STRING_SCHOOL_SPELLSHADOW = "Spellshadow";
2	STRING_SCHOOL_SPELLSTORM = "Spellstorm";
2	STRING_SCHOOL_SPELLSTRIKE = "Spellstrike";
2	STRING_SCHOOL_STORMSTRIKE = "Stormstrike";
2	STRING_SCHOOL_UNKNOWN = "Unknown";
2	STUCK_BUTTON2_TEXT = "Still not working, Page a GM";
2	STUCK_BUTTON_TEXT = "Auto-Unstuck";
2	STUN = "Stun"; -- Stun in combat
2	STUNNED = "Stunned"; -- Stunned in combat
2	STUN_CAPS = "STUN";
2	SUBCATEGORY = "Subcategory"; -- generic "subcategory"
2	SUBMIT = "Submit";
2	SUCCESS = "Success";
2	SUGGESTFRAME_TITLE = "Suggestions and Bugs"; -- Suggest frame title
2	SUGGEST_SUBMITTED = "Suggestion submitted";
2	SUGGEST_SUBMIT_FAILED = "Suggestion submission failed";
2	SUGGEST_TOOLTIP_TEXT = "Please enter your bug or suggestion here.\nYour name, race, class, level, and location\nwill be automatically submitted."; -- Gives the time in minutes/seconds until you logout
2	SUMMARY_ACHIEVEMENT_INCOMPLETE = "Achievement Incomplete";
2	SUMMARY_ACHIEVEMENT_INCOMPLETE_TEXT = "Satisfy the requirements for each achievement to gain points, rewards, and glory!";
2	SUMMON = "Summon";
2	SUMMONS = "Summons";
2	SWING_DAMAGE_COMBATLOG_TOOLTIP = "Shows melee swings that deal full or partial damage.";
2	SWING_MISSED_COMBATLOG_TOOLTIP = "Show melee swings that do not deal damage.";
2	SYSTEM_DEFAULT = "System Default"; -- Dropdown menu item for the sound options menu - The default audio device
2	SYSTEM_MESSAGES = "System Messages";
2	TABARDSLOT = "Tabard"; -- Tabard slot
2	TABARDVENDORALREADYSETGREETING = "You already have a tabard, but feel free to browse.";
2	TABARDVENDORCOST = "Cost:";
2	TABARDVENDORGREETING = "Greetings! Choose the symbol and colors of your guild.";
2	TABARDVENDORNOGUILDGREETING = "You must be a guild master to purchase a tabard, but feel free to browse.";
2	TAKE_ATTACHMENTS = "Take Attachments:";
2	TAKE_GM_SURVEY = "Would you like to take the time to fill out our GM performance survey?";
2	TALENTS = "Talents";
2	TALENTS_BUTTON = "Talents"; -- Talent microbutton text
2	TALENT_POINTS = "Talent Points"; -- Used for Talent Inspection frame tooltips
2	TALENT_POINTS_TOOLTIP = "Talent Points are spent through the talent interface and are used\nto acquire special talents that improve your ability to fight."; -- Talent point description
2	TALENT_TRAINER = "Talent Trainer"; -- Talent Trainer title
2	TAMEABLE = "Tameable";
2	TAMEABLE_EXOTIC = "Tameable (Exotic)";
2	TARGET = "Target";
2	TARGETFOCUS = "Target Focused Unit";
2	TARGET_TOKEN_NOT_FOUND = "<no target>";
2	TASKS_COLON = "Tasks:"; -- Header for the available tasks, with colon
2	TAXINODEYOUAREHERE = "You are here";
2	TAXISAMENODE = "You are already there!";
2	TEAM = "Team";
2	TEAM_KICK = "Remove from Team"; -- Team Management Unit PopUp
2	TEAM_LEAVE = "Leave Team"; -- Team Management Unit PopUp
2	TEAM_PROMOTE = "Promote to Captain"; -- Team Management Unit PopUp
2	TERRAIN_HIGHLIGHTS = "Specular Lighting";
2	TERRAIN_MIP = "Terrain Detail";
2	TEST_TAG_TEST = "do not translate";
2	TEXTURE_DETAIL = "Texture Resolution";
2	TEXT_MODE_A = "A"; -- << Do Not Localize >> Programmer: Remove at future date.
2	TEXT_MODE_A_STRING_1 = "%s %s %s %s %s. %s";
2	TEXT_MODE_A_STRING_2 = "%1$s %3$s %2$s %4$s %5$s. %6$s";
2	TEXT_MODE_A_STRING_3 = "%1$s %5$s %3$s %4$s %2$s. %6$s"; -- %1$s %2$s %3$s %4$s %5$s. %6$s --> $source $spell $action $dest $value.$result
2	TEXT_MODE_A_STRING_4 = "$timestamp $source $spell $action $dest $value.$result";
2	TEXT_MODE_A_STRING_5 = "$timestamp $source $spell $action $dest $value.$result";
2	TEXT_MODE_A_STRING_ACTION = "|Haction:%s|h%s|h";
2	TEXT_MODE_A_STRING_BRACE_ITEM = "|c%s[|r%s|c%s]|r";
2	TEXT_MODE_A_STRING_BRACE_SPELL = "|c%s[|r%s|c%s]|r";
2	TEXT_MODE_A_STRING_BRACE_UNIT = "|c%s[|r%s|c%s]|r";
2	TEXT_MODE_A_STRING_DEST = "$destIcon$destString";
2	TEXT_MODE_A_STRING_DEST_ICON = "|Hicon:%d:dest|h%s|h";
2	TEXT_MODE_A_STRING_DEST_UNIT = "%s|Hunit:%s:%s|h%s|h";
2	TEXT_MODE_A_STRING_ITEM = "|Hitem:%s|h%s|h";
2	TEXT_MODE_A_STRING_POSSESSIVE = "%s's";
2	TEXT_MODE_A_STRING_POSSESSIVE_STRING = "'s";
2	TEXT_MODE_A_STRING_RESULT = " ($resultString)";
2	TEXT_MODE_A_STRING_RESULT_ABSORB = "(%d Absorbed)";
2	TEXT_MODE_A_STRING_RESULT_BLOCK = "(%d Blocked)";
2	TEXT_MODE_A_STRING_RESULT_CRITICAL = "(Critical)";
2	TEXT_MODE_A_STRING_RESULT_CRITICAL_SPELL = "(Critical)"; -- For Spell Critical
2	TEXT_MODE_A_STRING_RESULT_CRUSHING = "(Crushing)";
2	TEXT_MODE_A_STRING_RESULT_FORMAT = "$resultAmount $resultType";
2	TEXT_MODE_A_STRING_RESULT_GLANCING = "(Glancing)";
2	TEXT_MODE_A_STRING_RESULT_OVERHEALING = "(%d Overhealed)";
2	TEXT_MODE_A_STRING_RESULT_OVERKILLING = "(%d Overkill)";
2	TEXT_MODE_A_STRING_RESULT_REFLECT = "Reflected";
2	TEXT_MODE_A_STRING_RESULT_RESIST = "(%d Resisted)";
2	TEXT_MODE_A_STRING_RESULT_VULNERABILITY = "(%d Vulnerability Damage)";
2	TEXT_MODE_A_STRING_SOURCE = "$sourceIcon$sourceString";
2	TEXT_MODE_A_STRING_SOURCE_ICON = "|Hicon:%s:source|h%s|h";
2	TEXT_MODE_A_STRING_SOURCE_UNIT = "%s|Hunit:%s:%s|h%s|h";
2	TEXT_MODE_A_STRING_SPELL = "|Hspell:%s:%s|h%s|h";
2	TEXT_MODE_A_STRING_SPELL_EXTRA = "|Hspell:%s:%s|h%s|h";
2	TEXT_MODE_A_STRING_SPELL_EXTRA_LINK = "|Hspell:%s:%s|h%s|h (SpellID:%d)";
2	TEXT_MODE_A_STRING_SPELL_LINK = "|Hspell:%s:%s|h%s|h (SpellID:%d)";
2	TEXT_MODE_A_STRING_TIMESTAMP = "%s> %s";
2	TEXT_MODE_A_STRING_TOKEN_ICON = "$icon";
2	TEXT_MODE_A_STRING_VALUE = "$amount$amountType";
2	TEXT_MODE_A_STRING_VALUE_SCHOOL = "%s %s";
2	TEXT_MODE_A_STRING_VALUE_TYPE = "%s (%s)";
2	TEXT_MODE_A_TIMESTAMP = "%H:%M:%S";
2	THREAT_TOOLTIP = "%d%% Threat";
2	TICKET_STATUS1 = "You have an open ticket.";
2	TICKET_TYPE1 = "Game Play";
2	TICKET_TYPE2 = "Harassment";
2	TICKET_TYPE3 = "Stuck";
2	TICKET_TYPE4 = "Bug";
2	TIMEMANAGER_12HOUR = "%d";
2	TIMEMANAGER_24HOUR = "%02d";
2	TIMEMANAGER_24HOURMODE = "24 Hour Mode";
2	TIMEMANAGER_ALARM_DISABLED = "Alarm Disabled";
2	TIMEMANAGER_ALARM_ENABLED = "Alarm Enabled";
2	TIMEMANAGER_ALARM_MESSAGE = "Alarm Message";
2	TIMEMANAGER_ALARM_TIME = "Alarm Time";
2	TIMEMANAGER_ALARM_TOOLTIP_TURN_OFF = "Click to turn off alarm.";
2	TIMEMANAGER_AM = "AM";
2	TIMEMANAGER_LOCALTIME = "Use Local Time";
2	TIMEMANAGER_MINUTE = "%02d";
2	TIMEMANAGER_PM = "PM";
2	TIMEMANAGER_SHOW_STOPWATCH = "Show Stopwatch";
2	TIMEMANAGER_TICKER_12HOUR = "%d:%02d";
2	TIMEMANAGER_TICKER_24HOUR = "%02d:%02d";
2	TIMEMANAGER_TITLE = "Clock";
2	TIMEMANAGER_TOOLTIP_LOCALTIME = "Local time:";
2	TIMEMANAGER_TOOLTIP_REALMTIME = "Realm time:";
2	TIMEMANAGER_TOOLTIP_TITLE = "Time Info";
2	TIMESTAMP_COMBATLOG_TOOLTIP = "Display the timestamp for combat log messages.";
2	TIME_DAYHOURMINUTESECOND = "%d |4day:days;, %d |4hour:hours;, %d |4minute:minutes;, %d |4second:seconds;";
2	TIME_ELAPSED = "Time Elapsed:";
2	TIME_PLAYED_LEVEL = "Time played this level: %s"; -- The amount of time played at this level
2	TIME_PLAYED_MSG = "Time Played";
2	TIME_PLAYED_TOTAL = "Total time played: %s"; -- Total amount of time this character has played
2	TIME_REMAINING = "Time Remaining:";
2	TIME_TEMPLATE_LONG = "%d days, %d hours, %d minutes, %d seconds"; -- Generic template for displaying time
2	TIME_TO_PORT = "Battleground closing in";
2	TIME_TO_PORT_ARENA = "Arena closing in";
2	TIME_TWELVEHOURAM = "%d:%02d AM"; -- %d = hour, %d = minute
2	TIME_TWELVEHOURPM = "%d:%02d PM"; -- %d = hour, %d = minute
2	TIME_TWENTYFOURHOURS = "%d:%02d"; -- %d = hour, %d = minute
2	TIME_UNTIL_DELETED = "Time until message is deleted"; -- Tooltip for mail that is marked deletable
2	TIME_UNTIL_RETURNED = "Time until message is returned"; -- Tooltip for items marked returnable
2	TITLE_REWARD = "Reward:  %s";
2	TITLE_TEMPLATE = "%s of the %s"; -- Character's title and faction, as in "Bob of the Carpenters' Guild"
2	TOGGLESTICKYCAMERA = "Toggle Camera Lock";
2	TOGGLE_BATTLEFIELDMINIMAP_TOOLTIP = "Toggle on/off the in game Zone Map. Shortcut: Shift-M"; -- Tooltip for the world map frame's zone map drop down.
2	TOKENS = "Tokens";
2	TOKEN_MOVE_TO_UNUSED = "Moves this currency to the bottom of your list under the unused heading. Useful for currencies you are no longer interested in tracking.";
2	TOKEN_OPTIONS = "Currency Options";
2	TOKEN_SHOW_ON_BACKPACK = "Checking this option will allow you to track this currency type on your backpack.\n\nYou can also Shift-click a currency to add or remove it from your backpack.";
2	TOOLTIP_ARENA_POINTS = "Arena Points are gained by being victorious in arena combat. You can trade in these arena points for fabulous prizes!";
2	TOOLTIP_HONOR_POINTS = "Honor is gained by killing members of the opposite faction in PvP combat. You can use honor points to purchase special items.";
2	TOOLTIP_RAID_CLASS_BUTTON = "Click and drag this button to create a raid window for this class.";
2	TOOLTIP_RAID_CONTROL_TIP = "CTRL Drag - for Class";
2	TOOLTIP_RAID_DRAG_TIP = "Click and drag to create a single raid window for this player.";
2	TOOLTIP_RAID_SHIFT_TIP = "Hold down the SHIFT key and drag to create a single raid window for this player.";
2	TOOLTIP_TALENT_LEARN = "Click to learn";
2	TOOLTIP_TALENT_NEXT_RANK = "Next rank:";
2	TOOLTIP_TALENT_PREREQ = "Requires %d |4point:points; in %s";
2	TOOLTIP_TALENT_RANK = "Rank %d/%d";
2	TOOLTIP_TALENT_TIER_POINTS = "Requires %d points in %s Talents";
2	TOOLTIP_UNIT_LEVEL = "Level %s";
2	TOOLTIP_UNIT_LEVEL_CLASS = "Level %s %s";
2	TOOLTIP_UNIT_LEVEL_CLASS_TYPE = "Level %s %s (%s)";
2	TOOLTIP_UNIT_LEVEL_RACE_CLASS = "Level %s %s %s";
2	TOOLTIP_UNIT_LEVEL_RACE_CLASS_TYPE = "Level %s %s %s (%s)";
2	TOOLTIP_UNIT_LEVEL_TYPE = "Level %s (%s)";
2	TOO_FAR_TO_LOOT = "You are too far away to loot that corpse!"; -- The player is too far away to loot a corpse
2	TOO_MANY_LUA_ERRORS = "Your AddOns are experiencing a large number of errors and may be slowing down the game.  You can turn on display of Lua errors in the interface options.";
2	TOO_MANY_WATCHED_TOKENS = "You may only watch %d currencies at a time";
2	TOTAL_MEM_KB_ABBR = "AddOn Memory: %.0f KB";
2	TOTAL_MEM_MB_ABBR = "AddOn Memory: %.2f MB";
2	TRACK_ACHIEVEMENT = "Track";
2	TRACK_ACHIEVEMENT_TOOLTIP = "Check to track this achievement.";
2	TRACK_QUEST = "Track Quest";
2	TRADE = "Trade"; -- Trade with another player
2	TRADEFRAME_ENCHANT_SLOT_LABEL = "Will not be traded";
2	TRADEFRAME_NOT_MODIFIED_TEXT = "Item not yet modified";
2	TRADESKILLS = "Tradeskills";
2	TRADESKILL_LOG_FIRSTPERSON = "You create %s.";
2	TRADESKILL_LOG_THIRDPERSON = "%s creates %s.";
2	TRADESKILL_SERVICE_LEARN = "Recipes"; -- Services that teach a recipe
2	TRADESKILL_SERVICE_PASSIVE = "Passive"; -- Passive abilities
2	TRADESKILL_SERVICE_STEP = "Development Skills"; -- Services that raise potential in a trade skill
2	TRADE_SKILLS = "Professions"; -- Trade skills, such as weaponcrafting, armorsmithing, etc.
2	TRADE_SKILL_TITLE = "%s"; -- Title for the trade skill frame
2	TRADE_WITH_QUESTION = "Trade with %s?"; -- Asks the player if he would like to trade with another player
2	TRAIN = "Train"; -- Train in a skill
2	TRAINER_CAST_TIME_INSTANT = "Cast time: |cffffffffInstant|r";
2	TRAINER_CAST_TIME_MIN = "Cast time: |cffffffff%d min|r";
2	TRAINER_CAST_TIME_SEC = "Cast time: |cffffffff%d sec|r";
2	TRAINER_COOLDOWN_TIME_INSTANT = "Cooldown: |cffffffffInstant|r";
2	TRAINER_COOLDOWN_TIME_MIN = "Cooldown: |cffffffff%d min|r";
2	TRAINER_COOLDOWN_TIME_SEC = "Cooldown: |cffffffff%d sec|r";
2	TRAINER_COST_SP = "|cffffffff%d|r Skill points";
2	TRAINER_COST_SP_RED = "|cffff2020%d|r Skill points";
2	TRAINER_COST_TP = "|cffffffff%d|r Talent points";
2	TRAINER_COST_TP_RED = "|cffff2020%d|r Talent points";
2	TRAINER_LIST_SP = "%d SP"; -- Used to format the Skill Point cost   in the trainer listings
2	TRAINER_MANA_COST = "Mana cost: |cffffffff%d|r";
2	TRAINER_MANA_COST_PER_TIME = "Mana cost: |cffffffff%d, plus %d per sec|r";
2	TRAINER_RANGE = "Range: |cffffffff%s (%d)|r";
2	TRAINER_REQ_ABILITY = "|cffffffff%s|r";
2	TRAINER_REQ_ABILITY_RED = "|cffff2020%s|r";
2	TRAINER_REQ_LEVEL = "Level |cffffffff%d|r";
2	TRAINER_REQ_LEVEL_RED = "Level |cffff2020%d|r";
2	TRAINER_REQ_SKILL_RANK = "%s (|cffffffff%d|r)";
2	TRAINER_REQ_SKILL_RANK_RED = "%s (|cffff2020%d|r)";
2	TRANSFER_ABORT_DIFFICULTY1 = "Normal difficulty mode is not available for %s.";
2	TRANSFER_ABORT_DIFFICULTY2 = "Heroic difficulty mode is not available for %s.";
2	TRANSFER_ABORT_DIFFICULTY3 = "Epic difficulty mode is not available for %s.";
2	TRANSFER_ABORT_INSUF_EXPAN_LVL1 = "You must have The Burning Crusade expansion installed to access this area.";
2	TRANSFER_ABORT_INSUF_EXPAN_LVL2 = "You must have The Wrath of the Lich King expansion installed to access this area.";
2	TRANSFER_ABORT_MAX_PLAYERS = "Transfer Aborted: instance is full"; -- Too many players in instance
2	TRANSFER_ABORT_NOT_FOUND = "Transfer Aborted: instance not found"; -- Something's wrong with the server
2	TRANSFER_ABORT_TOO_MANY_INSTANCES = "You have entered too many instances recently.";
2	TRANSFER_ABORT_TOO_MANY_REALM_INSTANCES = "Additional instances cannot be launched, please try again later.";
2	TRANSFER_ABORT_UNIQUE_MESSAGE1 = "Until you've escaped The Lich King's grasp, you cannot leave this place!";
2	TRANSFER_ABORT_ZONE_IN_COMBAT = "Unable to zone in while an encounter is in progress.";
2	TRILINEAR_FILTERING = "Trilinear Filtering";
2	TRINKET0SLOT = "Trinket"; -- Trinket slot
2	TRINKET1SLOT = "Trinket"; -- Trinket slot
2	TRIPLE_BUFFER = "Triple Buffering";
2	TRIVIAL_QUEST_DISPLAY = "|cff000000%s (low level)|r";
2	TURN_IN_ITEMS = "Required items:"; -- Lists the items needed to turn in to complete a quest
2	TUTORIAL1 = "Questgivers have exclamation marks over their heads.  Talk to questgivers by moving close to them and right clicking on them.";
2	TUTORIAL2 = "You can move with the ASDW keys, with the arrow keys or by holding down both the left and right mouse buttons.";
2	TUTORIAL3 = "You can rotate your camera view by dragging the left mouse button in the play field.  You can rotate your character and your view at the same time by dragging the right mouse button in the play field.";
2	TUTORIAL4 = "Left-Click selects a target and Right-Click interacts with it.";
2	TUTORIAL5 = "You enter combat mode by right clicking on your target and then moving into combat range.  You will automatically start swinging at your target.";
2	TUTORIAL6 = "You can cast spells and use special abilities on the enemy by clicking on the buttons in your action bar along the lower left portion of the screen.";
2	TUTORIAL7 = "Right-Click on a creature’s corpse to loot it.  You can then right click on items in the loot pane to place them in your backpack.";
2	TUTORIAL8 = "An item went into your backpack. You can click on the backpack button in the lower right part of the screen to open your backpack.  Move the mouse over the item to see what it is.";
2	TUTORIAL9 = "Right click on items to use them.  You can drag usable items to your action bar if you want to be able to use it without opening your backpack.";
2	TUTORIAL10 = "You can put bags in the empty bag spaces in the lower right part of your screen next to the backpack, and then click on them to open them.";
2	TUTORIAL11 = "You can eat some food to regain your health faster.  Click on the food icon in the action bar across the bottom left of your screen.  Food will not work in combat, however.";
2	TUTORIAL12 = "You can drink to regain your mana faster.  Click on the drink icon in the action bar across the bottom left of your screen.  The mana regeneration will stop if you do any other ability or get in combat.";
2	TUTORIAL13 = "You can learn a new talent in the talent interface.  Open the talents page by clicking the pulsing talent button on your action bar.";
2	TUTORIAL14 = "You can go to your trainer in your starting area and learn a new skill.  You may have to search around a little to find your trainer.";
2	TUTORIAL15 = "You can move spells and abilities to your action bar by opening the abilities page with the button in the bottom center of the screen and then dragging the ability icon to your action bar.  You can also use a spell or ability from the abilities page by clicking on it.";
2	TUTORIAL16 = "You can look at your reputation with different groups in the world in the character pane under the reputation tab.";
2	TUTORIAL17 = "You can respond to that player by hitting the R key and then typing a message, or by typing /tell <theirname> and then the message.";
2	TUTORIAL18 = "You can invite another player to your group by right-clicking on their portrait and selecting the Invite option from the popup menu.";
2	TUTORIAL19 = "That’s another real person playing a character.  You can tell by the blue name above their head.";
2	TUTORIAL20 = "Right-clicking an item in the merchant pane will buy that item if you have enough money. While the merchant pane is open, right-clicking an item in your backpack will sell the item.";
2	TUTORIAL21 = "You can open your quest log to look at the quest by clicking on the gold chalice in the middle of the bar across the bottom of the screen.";
2	TUTORIAL22 = "If there is another player you have enjoyed working with, add them to your friends list!   Click on the social button and add them to your list of friends.";
2	TUTORIAL23 = "You can send a message by hitting the enter key and typing a message.  Other players nearby will hear what you say.";
2	TUTORIAL24 = "You can equip items by opening your character screen with the button in the bottom center of the screen, and dragging them from your backpack onto your character.";
2	TUTORIAL25 = "You are now a ghost.  You can return to life by either finding your corpse or talking to a nearby spirit healer.  Your corpse shows up as an icon in the minimap at the upper right hand portion of the screen.";
2	TUTORIAL26 = "You are rested. Being rested gives you a temporary bonus to experience from killing monsters.";
2	TUTORIAL27 = "If you stray into deep and uncharted waters, you will see a Fatigue bar. If you become completely fatigued, you will begin to drown.";
2	TUTORIAL28 = "Swimming is much like walking, except you can steer upwards and downwards by holding down the right mouse button and looking in the direction you want to go.";
2	TUTORIAL29 = "You will see a Breath bar pop up when your character becomes submerged in water. If you run out of breath, you will begin to drown.";
2	TUTORIAL30 = "You are now resting, indicated by your portrait glowing yellow. Time spent resting or logged out gives you a temporary bonus to experience from killing monsters.  You may want to find an Innkeeper and get a hearthstone which will allow you to quickly return later.";
2	TUTORIAL31 = "You now have a hearthstone.  Hearthstones can be used to transport you from your current location to the last Inn that you acquired the hearthstone from.  You can only use your hearthstone once per hour.";
2	TUTORIAL32 = "You are engaging in Player vs. Player combat.  While you are participating in Player vs. Player combat the symbol of your alliance will appear next to your portrait and you can be attacked by enemy players.";
2	TUTORIAL33 = "You can press the spacebar to make your character jump. Jumping can help you past obstacles, and it can be particularly useful if you're having trouble getting out of the water and onto dry land.";
2	TUTORIAL34 = "You have completed your first quest! To collect your reward, you should return to the character who gave you the quest. When you complete a quest, you can see the corresponding quest giver on your minimap, provided you are nearby.";
2	TUTORIAL35 = "You have clicked a flight master who trains flying beasts to carry passengers from one location to another. For a minimal fee, you can swiftly travel to other flight masters that you have interacted with in the past. When you discover a new city, finding the flight master will allow you to return easily in the future.";
2	TUTORIAL36 = "The durability of one of your items is getting low. The paper doll below your minimap indicates the damaged item in yellow. Find a merchant in town to repair the item before it breaks.";
2	TUTORIAL37 = "One of your items has broken! The paper doll below your minimap indicates the broken item in red. You can get the item repaired by a merchant in town. Until you do, you will gain no benefit from the item.";
2	TUTORIAL38 = "Your character can learn up to two professions which will allow you to find or create items of value. To learn more about professions ask a guard in a major city for directions to the profession trainers.";
2	TUTORIAL39 = "You may want to invite other players to team up with you to more easily overcome your enemies. Many difficult quests can be quickly completed in a group, as quest credit is shared by the group. Moreover, groups earn bonus experience, relative to solo players.";
2	TUTORIAL40 = "You have learned a new spell or ability! Use the Spellbook & Abilities button in your Action Bar to open your spellbook. Left-click and drag a spell or ability to move it to your Action Bar. The spellbook is organized by category, as indicated by the tabs sticking out from the right side of the book.";
2	TUTORIAL41 = "You have accepted an elite quest. Such quests are best undertaken in a group, for they will take you into areas inhabited by elite creatures. These creatures are significantly tougher than normal monsters; however, they are worth more experience. You can tell an elite creature by the golden dragon border around its portrait.";
2	TUTORIAL42 = "When you encounter something new, a help button will appear in the bottom center of your screen. Click the button for a brief explanation of how to interact with that part of the world. These hints will start with the basics and then progress to more advanced topics as you gain in experience.\n\nThank you for playing, and good luck in your adventures!";
2	TUTORIAL43 = "An NPC with a gray '!' over its head has a quest that you are too low level to accept. Check back once you gain a few levels.";
2	TUTORIAL44 = "You have obtained a ranged weapon. To use it, equip it, and then open up your spellbook and drag the Shoot or Throw ability into your Action Bar.";
2	TUTORIAL45 = "You cannot fire bows and guns without ammunition. To purchase ammunition, visit a gun or bow merchant in a city. To equip ammunition, right-click it.";
2	TUTORIAL46 = "You have joined a raid group: a group with an increased limit of 40 members.\n\n|cffff2020While in a raid group, you will not earn credit towards most non-raid quests by killing creatures or collecting items.|r";
2	TUTORIAL47 = "You are now waiting to join a group through a meeting stone. The meeting stone indicator is a bubble attached to the mini-map. You can click on that indicator to remove yourself from the meeting stone queue.";
2	TUTORIAL48 = "You are now in a queue to enter a battleground.  You may check your status by mousing over the icon on your minimap.";
2	TUTORIAL49 = "You are now eligible to join battle.  Click \"Join Battle\" in the dialog or right click the battleground icon on the minimap.";
2	TUTORIAL50 = "You now have a keyring to hold your dungeon keys. This keyring appears to the left of your bags on your action bar. The keyring can only store permanent keys.";
2	TUTORIAL51 = "You can find groups using the group search interface. This is accessed from the eye button in the middle of your action bar or by using the 'I' key.";
2	TUTORIAL52 = "Congratulations, you have received your first companion. This little fellow will follow you during all of your adventures in Azeroth and beyond. You can see all of your companions on the character pane under the pets tab.";
2	TUTORIAL53 = "Congratulations, you have learned how to summon your first mount. This mighty steed will carry you throughout your adventures in Azeroth and beyond. To see all of your mounts, look at the character pane under the pets tab. You can drag your favorite mount onto your ability bar to summon it more easily.";
2	TUTORIAL54 = "You have attracted the attention of a hostile creature. A red glow means the creature is attacking you. A yellow glow means you are in danger of being attacked. An orange glow means the creature is attacking you, but may soon change targets.";
2	TUTORIAL_TITLE1 = "Questgivers";
2	TUTORIAL_TITLE2 = "Movement";
2	TUTORIAL_TITLE3 = "Cameras";
2	TUTORIAL_TITLE4 = "Targeting";
2	TUTORIAL_TITLE5 = "Combat Mode";
2	TUTORIAL_TITLE6 = "Spells and Abilities";
2	TUTORIAL_TITLE7 = "Looting";
2	TUTORIAL_TITLE8 = "Backpack";
2	TUTORIAL_TITLE9 = "Using Items";
2	TUTORIAL_TITLE10 = "Bags";
2	TUTORIAL_TITLE11 = "Food";
2	TUTORIAL_TITLE12 = "Drink";
2	TUTORIAL_TITLE13 = "Learning Talents";
2	TUTORIAL_TITLE14 = "Trainers";
2	TUTORIAL_TITLE15 = "Spells and Abilities Book";
2	TUTORIAL_TITLE16 = "Reputation";
2	TUTORIAL_TITLE17 = "Replying to Tells";
2	TUTORIAL_TITLE18 = "Grouping";
2	TUTORIAL_TITLE19 = "Players";
2	TUTORIAL_TITLE20 = "Vendors";
2	TUTORIAL_TITLE21 = "Quest Log";
2	TUTORIAL_TITLE22 = "Friends";
2	TUTORIAL_TITLE23 = "Chatting";
2	TUTORIAL_TITLE24 = "Equippable Items";
2	TUTORIAL_TITLE25 = "Death";
2	TUTORIAL_TITLE26 = "Rested";
2	TUTORIAL_TITLE27 = "Fatigue";
2	TUTORIAL_TITLE28 = "Swimming";
2	TUTORIAL_TITLE29 = "Breath";
2	TUTORIAL_TITLE30 = "Resting";
2	TUTORIAL_TITLE31 = "Hearthstones";
2	TUTORIAL_TITLE32 = "Player vs. Player Combat";
2	TUTORIAL_TITLE33 = "Jumping";
2	TUTORIAL_TITLE34 = "Quest Completion";
2	TUTORIAL_TITLE35 = "Travel";
2	TUTORIAL_TITLE36 = "Damaged Items";
2	TUTORIAL_TITLE37 = "Broken Items";
2	TUTORIAL_TITLE38 = "Professions";
2	TUTORIAL_TITLE39 = "Groups";
2	TUTORIAL_TITLE40 = "The Spellbook";
2	TUTORIAL_TITLE41 = "Elite Quests";
2	TUTORIAL_TITLE42 = "Welcome to World of Warcraft!";
2	TUTORIAL_TITLE43 = "Unavailable Quest Givers";
2	TUTORIAL_TITLE44 = "Ranged Weapons";
2	TUTORIAL_TITLE45 = "Ammunition";
2	TUTORIAL_TITLE46 = "Raid Groups";
2	TUTORIAL_TITLE47 = "Meeting Stones";
2	TUTORIAL_TITLE48 = "Battleground Queue";
2	TUTORIAL_TITLE49 = "Port to Battleground";
2	TUTORIAL_TITLE50 = "Keyrings";
2	TUTORIAL_TITLE51 = "Looking for Group";
2	TUTORIAL_TITLE52 = "Cosmetic Pets";
2	TUTORIAL_TITLE53 = "Mounts";
2	TUTORIAL_TITLE54 = "Threat Warnings";
2	TWOHANDEDWEAPONBEINGWIELDED = "Cannot wield in second hand, you are holding a 2-handed item!";
2	TWO_HANDED = "Two Handed Weapon"; -- Weapons that require two hands
2	TYPE = "Type";
2	UIOPTIONS_MENU = "Interface";
2	UI_SCALE = "UI Scale";
2	UKNOWNBEING = "Unknown Being";
2	UNAVAILABLE = "Unavailable"; -- Generic Unavailable tag
2	UNBIND = "Unbind Key";
2	UNITNAME_SUMMON_TITLE1 = "%s's Pet";
2	UNITNAME_SUMMON_TITLE10 = "%s's Mount"; -- For when we want to lie about what vehicles are. :)
2	UNITNAME_SUMMON_TITLE11 = "%s's Lightwell"; -- For Lightwell! duh
2	UNITNAME_SUMMON_TITLE2 = "%s's Guardian";
2	UNITNAME_SUMMON_TITLE3 = "%s's Minion";
2	UNITNAME_SUMMON_TITLE4 = "%s's Totem";
2	UNITNAME_SUMMON_TITLE5 = "%s's Companion";
2	UNITNAME_SUMMON_TITLE6 = "%s's Runeblade";
2	UNITNAME_SUMMON_TITLE7 = "%s's Construct"; -- For Gargoyles
2	UNITNAME_SUMMON_TITLE8 = "%s's Opponent"; -- Death Knight race!
2	UNITNAME_SUMMON_TITLE9 = "%s's Vehicle"; -- Mechanical Summoned Vehicles
2	UNITNAME_TITLE = "%s"; -- %s is the title of the unit
2	UNITNAME_TITLE_CHARM = "%s's Minion"; -- %s is the name of the unit's charmer
2	UNITNAME_TITLE_COMPANION = "%s's Companion";
2	UNITNAME_TITLE_CREATION = "%s's Creation";
2	UNITNAME_TITLE_GUARDIAN = "%s's Guardian";
2	UNITNAME_TITLE_MINION = "%s's Minion";
2	UNITNAME_TITLE_OPPONENT = "%s's Opponent";
2	UNITNAME_TITLE_PET = "%s's Pet"; -- %s is the name of the unit's summoner
2	UNITNAME_TITLE_SQUIRE = "%s's Squire";
2	UNIT_COLORS = "Unit Colors:";
2	UNIT_LETHAL_LEVEL_DEAD_TEMPLATE = "Level ?? Corpse"; -- Level unknown for higher level units
2	UNIT_LETHAL_LEVEL_TEMPLATE = "Level ??"; -- Level unknown for higher level units
2	UNIT_LEVEL_DEAD_TEMPLATE = "Level %d Corpse";
2	UNIT_LEVEL_TEMPLATE = "Level %d"; -- Level of a unit
2	UNIT_NAMES = "Unit Names";
2	UNIT_NAMES_COMBATLOG_TOOLTIP = "Color unit names.";
2	UNIT_NAMES_SHOW_BRACES_COMBATLOG_TOOLTIP = "Show braces around unit names.";
2	UNIT_NAME_COMPANIONS = "Companions";
2	UNIT_NAME_ENEMY = "Enemy Players";
2	UNIT_NAME_ENEMY_CREATIONS = "Creations";
2	UNIT_NAME_ENEMY_PETS = "Pets & Minions";
2	UNIT_NAME_FRIENDLY = "Friendly Players";
2	UNIT_NAME_FRIENDLY_CREATIONS = "Creations";
2	UNIT_NAME_FRIENDLY_PETS = "Pets & Minions";
2	UNIT_NAME_GUILD = "Guild Names";
2	UNIT_NAME_NPC = "NPC Names";
2	UNIT_NAME_OWN = "My Name"; -- Option to display the player's name
2	UNIT_NAME_PLAYER_TITLE = "Titles";
2	UNIT_PLUS_LEVEL_TEMPLATE = "Level %d Elite"; -- Level of a plus-mob unit
2	UNIT_PVP_NAME = "%s %s%s"; -- The first %s is the rank, and the second %s is the name, the third %s is the title suffix
2	UNIT_SKINNABLE_BOLTS = "Requires Engineering"; -- The unit is a dead creature which can be skinned for its engineering parts
2	UNIT_SKINNABLE_HERB = "Requires Herbalism"; -- The unit is a dead creature which can be skinned for its herb
2	UNIT_SKINNABLE_LEATHER = "Skinnable"; -- The unit is a dead creature which can be skinned for its pelt
2	UNIT_SKINNABLE_ROCK = "Requires Mining"; -- The unit is a dead creature which can be skinned for its rock
2	UNIT_TYPE_LETHAL_LEVEL_TEMPLATE = "Level ?? %s"; -- As in Level ?? Beast
2	UNIT_TYPE_LEVEL_TEMPLATE = "Level %d %s"; -- As in Level 10 Beast
2	UNIT_TYPE_PLUS_LEVEL_TEMPLATE = "Level %d Elite %s"; -- As in Level 10+ Beast
2	UNIT_YOU = "You";
2	UNIT_YOU_DEST = "You";
2	UNIT_YOU_DEST_POSSESSIVE = "Your";
2	UNIT_YOU_SOURCE = "You";
2	UNIT_YOU_SOURCE_POSSESSIVE = "Your";
2	UNKNOWN = "Unknown"; -- Generic "unknown"
2	UNKNOWNOBJECT = "Unknown";
2	UNLEARN = "Unlearn";
2	UNLEARN_SKILL = "Do you want to unlearn %s?";
2	UNLEARN_SKILL_TOOLTIP = "Unlearn this profession";
2	UNLIMITED = "Unlimited";
2	UNLOCK_FOCUS_FRAME = "Unlock Frame";
2	UNLOCK_WINDOW = "Unlock Window";
2	UNMUTE = "Unmute";
2	UNTRACK_ACHIEVEMENT_TOOLTIP = "Uncheck to stop tracking this achievement.";
2	UNUSED = "Unused";
2	UPDATE = "Update"; -- Generic "Update"
2	USABLE_ITEMS = "Usable Items";
2	USE = "Use"; -- Generic "Use" tag
2	USED = "Already Known"; -- Spell already learned text
2	USE_COLON = "Use:";
2	USE_FULL_TEXT_MODE = "Use Verbose Mode";
2	USE_GUILDBANK_REPAIR = "Do you want to use guild funds for repair?";
2	USE_ITEM = "Use Item"; -- Use an item
2	USE_NO_DROP = "Using this item will bind it to you."; -- Tells player he is about to use a no drop item
2	USE_PERSONAL_FUNDS = "Use Personal Funds";
2	USE_SOULSTONE = "Reincarnate"; -- Use your soulstone if you have one
2	USE_UBERTOOLTIPS = "Enhanced Tooltips";
2	USE_UISCALE = "Use UI Scale";
2	USE_WEATHER_SHADER = "Weather Shaders";
2	VEHICLE_LEAVE = "Leave"; -- Makes the player leave the current vehicle.
2	VERBAL_HARASSMENT = "Verbal Harassment";
2	VERBAL_HARASSMENT_DESCRIPTION = "Verbal abuse from one player to another.";
2	VERBAL_HARASSMENT_TEXT1 = "Below are some tips to deal with verbal harassment:";
2	VERBAL_HARASSMENT_TEXT2 = "Ask the harassing player to stop, and place him/her on your ignore list.";
2	VERBAL_HARASSMENT_TEXT3 = "Ensure that you do not instigate further harassment.";
2	VERBAL_HARASSMENT_TEXT4 = "Immediately report all language that is racist, extremely sexual, and/or violent; this type of language is always considered harassment.";
2	VERTEX_ANIMATION_SHADERS = "Vertex Animation Shaders";
2	VERTICAL_SYNC = "Vertical Sync";
2	VICTORY_TEXT0 = "Horde Wins";
2	VICTORY_TEXT1 = "Alliance Wins";
2	VICTORY_TEXT_ARENA0 = "Green Team Wins";
2	VICTORY_TEXT_ARENA1 = "Gold Team Wins";
2	VICTORY_TEXT_ARENA_DRAW = "Draw";
2	VICTORY_TEXT_ARENA_WINS = "%s Wins";
2	VIDEOOPTIONS_MENU = "Video";
2	VIDEO_QUALITY_LABEL1 = "Low";
2	VIDEO_QUALITY_LABEL2 = "Fair";
2	VIDEO_QUALITY_LABEL3 = "Good";
2	VIDEO_QUALITY_LABEL4 = "High";
2	VIDEO_QUALITY_LABEL5 = "Custom";
2	VIDEO_QUALITY_S = "Video Quality: %s"; -- Used with VIDEO_QUALITY_LABEL1-5 for the video quality slider.
2	VIDEO_QUALITY_SUBTEXT1 = "These are the lowest recommended graphics settings for the game. These settings provide excellent performance.";
2	VIDEO_QUALITY_SUBTEXT2 = "Medium texture detail, short draw distance, low spell effect detail. These settings provide good performance.";
2	VIDEO_QUALITY_SUBTEXT3 = "High texture detail, medium draw distance, medium spell effect detail. These settings balance performance and quality.";
2	VIDEO_QUALITY_SUBTEXT4 = "High texture detail, farthest draw distance, high spell effect detail. These settings provide the highest quality.";
2	VIDEO_QUALITY_SUBTEXT5 = "Allows you to customize individual draw distances, detail levels, and effects. Performance and quality will vary by setting.";
2	VOICE = "Voice";
2	VOICECHAT_DISABLED = "Voice Chat Disabled"; -- String displayed when a session of WoW does not have Voice Chat enabled for whatever reason
2	VOICECHAT_DISABLED_TEXT = "Voice Chat has been disabled because another copy of the game was running when you started this one, or because your computer cannot support it."; -- VoiceVoice Chat has been disabled in this session of WoW because another copy of WoW was open when you started this one, or because your computer cannot support Voice Chat.
2	VOICEMACRO_0_Dw_0 = "Help me!";
2	VOICEMACRO_0_Dw_0_FEMALE = "Help me!";
2	VOICEMACRO_0_Dw_1 = "I need help!";
2	VOICEMACRO_0_Dw_1_FEMALE = "I need help!";
2	VOICEMACRO_0_Gn_0 = "Could you help, please?";
2	VOICEMACRO_0_Gn_0_FEMALE = "Can I get some help?";
2	VOICEMACRO_0_Gn_1 = "Please, help me!";
2	VOICEMACRO_0_Gn_1_FEMALE = "Please, help me!";
2	VOICEMACRO_0_Gn_2_FEMALE = "I need help!";
2	VOICEMACRO_0_Hu_0 = "I require aid!";
2	VOICEMACRO_0_Hu_0_FEMALE = "I need help!";
2	VOICEMACRO_0_Hu_1 = "Aid me!";
2	VOICEMACRO_0_Hu_1_FEMALE = "Help me!";
2	VOICEMACRO_0_Ni_0 = "Aid me!";
2	VOICEMACRO_0_Ni_0_FEMALE = "Aid me!";
2	VOICEMACRO_0_Ni_1 = "To my side!";
2	VOICEMACRO_0_Ni_1_FEMALE = "Assist me!";
2	VOICEMACRO_0_Ni_2 = "Assist me!";
2	VOICEMACRO_0_Or_0 = "I need help!";
2	VOICEMACRO_0_Or_0_FEMALE = "I need help!";
2	VOICEMACRO_0_Or_1 = "Aid me!";
2	VOICEMACRO_0_Or_1_FEMALE = "Aid me!";
2	VOICEMACRO_0_Sc_0 = "I need help!";
2	VOICEMACRO_0_Sc_0_FEMALE = "Need your help!";
2	VOICEMACRO_0_Sc_1 = "Help me!";
2	VOICEMACRO_0_Sc_1_FEMALE = "Help me!";
2	VOICEMACRO_0_Ta_0 = "Give me aid!";
2	VOICEMACRO_0_Ta_0_FEMALE = "Aid me!";
2	VOICEMACRO_0_Ta_1 = "Help!";
2	VOICEMACRO_0_Ta_1_FEMALE = "Help!";
2	VOICEMACRO_0_Ta_2 = "Aid me!";
2	VOICEMACRO_0_Tr_0 = "Help me!";
2	VOICEMACRO_0_Tr_0_FEMALE = "Help me!";
2	VOICEMACRO_0_Tr_1 = "Assist me!";
2	VOICEMACRO_0_Tr_1_FEMALE = "Assist me!";
2	VOICEMACRO_10_Dw_0 = "Open fire!";
2	VOICEMACRO_10_Dw_0_FEMALE = "Shoot to kill!";
2	VOICEMACRO_10_Dw_1 = "Fire!";
2	VOICEMACRO_10_Dw_1_FEMALE = "Open fire!";
2	VOICEMACRO_10_Gn_0 = "Hurry, fire!";
2	VOICEMACRO_10_Gn_0_FEMALE = "Shoot!";
2	VOICEMACRO_10_Gn_1 = "Shoot!";
2	VOICEMACRO_10_Gn_1_FEMALE = "Fire now!";
2	VOICEMACRO_10_Hu_0 = "Fire at will!";
2	VOICEMACRO_10_Hu_0_FEMALE = "Attack!";
2	VOICEMACRO_10_Hu_1 = "Fire!";
2	VOICEMACRO_10_Hu_1_FEMALE = "Fire!";
2	VOICEMACRO_10_Ni_0 = "Fire at will!";
2	VOICEMACRO_10_Ni_0_FEMALE = "Strike quickly!";
2	VOICEMACRO_10_Ni_1 = "Fire!";
2	VOICEMACRO_10_Ni_1_FEMALE = "Fire!";
2	VOICEMACRO_10_Or_0 = "Shoot!";
2	VOICEMACRO_10_Or_0_FEMALE = "Open fire!";
2	VOICEMACRO_10_Or_1 = "Let 'em have it!";
2	VOICEMACRO_10_Or_1_FEMALE = "Fire!";
2	VOICEMACRO_10_Or_2_FEMALE = "Shoot!";
2	VOICEMACRO_10_Sc_0 = "Shoot to kill!";
2	VOICEMACRO_10_Sc_0_FEMALE = "Fire!";
2	VOICEMACRO_10_Sc_1 = "Open fire!";
2	VOICEMACRO_10_Sc_1_FEMALE = "Open fire!";
2	VOICEMACRO_10_Ta_0 = "Unleash your fury!";
2	VOICEMACRO_10_Ta_0_FEMALE = "Fire away!";
2	VOICEMACRO_10_Ta_1 = "Strike now!";
2	VOICEMACRO_10_Ta_1_FEMALE = "Strike now!";
2	VOICEMACRO_10_Tr_0 = "Shoot 'em!";
2	VOICEMACRO_10_Tr_0_FEMALE = "Shoot them!";
2	VOICEMACRO_10_Tr_1 = "Light 'em up!";
2	VOICEMACRO_10_Tr_1_FEMALE = "Light 'em up!";
2	VOICEMACRO_12_Dw_0 = "How's it hanging?";
2	VOICEMACRO_12_Dw_0_FEMALE = "Greetings.";
2	VOICEMACRO_12_Dw_1 = "Hello.";
2	VOICEMACRO_12_Dw_1_FEMALE = "Hi, there.";
2	VOICEMACRO_12_Dw_2 = "Greetings.";
2	VOICEMACRO_12_Dw_2_FEMALE = "How are you?";
2	VOICEMACRO_12_Dw_3 = "How are you?";
2	VOICEMACRO_12_Gn_0 = "Hello.";
2	VOICEMACRO_12_Gn_0_FEMALE = "Hello.";
2	VOICEMACRO_12_Gn_1 = "Greetings.";
2	VOICEMACRO_12_Gn_1_FEMALE = "Greetings.";
2	VOICEMACRO_12_Gn_2 = "Salutations.";
2	VOICEMACRO_12_Gn_2_FEMALE = "Hi, there.";
2	VOICEMACRO_12_Gn_3 = "Hi, there.";
2	VOICEMACRO_12_Hu_0 = "Hi.";
2	VOICEMACRO_12_Hu_0_FEMALE = "Hi.";
2	VOICEMACRO_12_Hu_1 = "Good tidings.";
2	VOICEMACRO_12_Hu_1_FEMALE = "Hello.";
2	VOICEMACRO_12_Hu_2 = "Hail.";
2	VOICEMACRO_12_Hu_2_FEMALE = "Greetings.";
2	VOICEMACRO_12_Hu_3 = "Well met.";
2	VOICEMACRO_12_Ni_0 = "Greetings.";
2	VOICEMACRO_12_Ni_0_FEMALE = "Hello.";
2	VOICEMACRO_12_Ni_1 = "Well met.";
2	VOICEMACRO_12_Ni_1_FEMALE = "Greetings.";
2	VOICEMACRO_12_Ni_2 = "Hi.";
2	VOICEMACRO_12_Ni_2_FEMALE = "Well met.";
2	VOICEMACRO_12_Ni_3_FEMALE = "Hi.";
2	VOICEMACRO_12_Or_0 = "Thram-ka.";
2	VOICEMACRO_12_Or_0_FEMALE = "Thram-ka.";
2	VOICEMACRO_12_Or_1 = "Hey.";
2	VOICEMACRO_12_Or_1_FEMALE = "Hey.";
2	VOICEMACRO_12_Or_2 = "Hello.";
2	VOICEMACRO_12_Or_2_FEMALE = "Greetings.";
2	VOICEMACRO_12_Sc_0 = "Hello.";
2	VOICEMACRO_12_Sc_0_FEMALE = "Hello.";
2	VOICEMACRO_12_Sc_1 = "Hi, there.";
2	VOICEMACRO_12_Sc_1_FEMALE = "Hi, there.";
2	VOICEMACRO_12_Sc_2 = "Greetings.";
2	VOICEMACRO_12_Sc_2_FEMALE = "Hey.";
2	VOICEMACRO_12_Ta_0 = "Hi.";
2	VOICEMACRO_12_Ta_0_FEMALE = "Hi.";
2	VOICEMACRO_12_Ta_1 = "Hello.";
2	VOICEMACRO_12_Ta_1_FEMALE = "Hello.";
2	VOICEMACRO_12_Ta_2 = "Greetings.";
2	VOICEMACRO_12_Ta_2_FEMALE = "How are you?";
2	VOICEMACRO_12_Tr_0 = "Hey, there.";
2	VOICEMACRO_12_Tr_0_FEMALE = "Hello.";
2	VOICEMACRO_12_Tr_1 = "Hey, man.";
2	VOICEMACRO_12_Tr_1_FEMALE = "Hey, there.";
2	VOICEMACRO_12_Tr_2 = "What be happening?";
2	VOICEMACRO_12_Tr_2_FEMALE = "Greetings.";
2	VOICEMACRO_13_Dw_0 = "Farewell.";
2	VOICEMACRO_13_Dw_0_FEMALE = "So long.";
2	VOICEMACRO_13_Dw_1 = "Till we meet again.";
2	VOICEMACRO_13_Dw_1_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Dw_2 = "See you.";
2	VOICEMACRO_13_Dw_2_FEMALE = "See ya.";
2	VOICEMACRO_13_Gn_0 = "Farewell.";
2	VOICEMACRO_13_Gn_0_FEMALE = "Farewell.";
2	VOICEMACRO_13_Gn_1 = "Goodbye.";
2	VOICEMACRO_13_Gn_1_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Gn_2 = "It's been fun.";
2	VOICEMACRO_13_Gn_2_FEMALE = "It's been quite an experience.";
2	VOICEMACRO_13_Gn_3 = "I'll miss you.";
2	VOICEMACRO_13_Gn_3_FEMALE = "I'll always treasure our time together.";
2	VOICEMACRO_13_Hu_0 = "Farewell.";
2	VOICEMACRO_13_Hu_0_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Hu_1 = "Till we meet again.";
2	VOICEMACRO_13_Hu_1_FEMALE = "Till we meet again.";
2	VOICEMACRO_13_Hu_2 = "It's been fun.";
2	VOICEMACRO_13_Hu_2_FEMALE = "It's been fun.";
2	VOICEMACRO_13_Ni_0 = "Good journey.";
2	VOICEMACRO_13_Ni_0_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Ni_1 = "Goodbye.";
2	VOICEMACRO_13_Ni_1_FEMALE = "I wish you well.";
2	VOICEMACRO_13_Ni_2 = "I wish you well.";
2	VOICEMACRO_13_Ni_2_FEMALE = "Till we meet again.";
2	VOICEMACRO_13_Or_0 = "Until our paths cross again.";
2	VOICEMACRO_13_Or_0_FEMALE = "Stay strong.";
2	VOICEMACRO_13_Or_1 = "Stay strong.";
2	VOICEMACRO_13_Or_1_FEMALE = "May you always be victorious.";
2	VOICEMACRO_13_Or_2 = "May your blade be true.";
2	VOICEMACRO_13_Or_2_FEMALE = "Until next time.";
2	VOICEMACRO_13_Sc_0 = "Goodbye.";
2	VOICEMACRO_13_Sc_0_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Sc_1 = "Have a bad day.";
2	VOICEMACRO_13_Sc_1_FEMALE = "It's been real.";
2	VOICEMACRO_13_Sc_2 = "Stay optimistic.";
2	VOICEMACRO_13_Sc_2_FEMALE = "Good luck.";
2	VOICEMACRO_13_Ta_0 = "Good journey.";
2	VOICEMACRO_13_Ta_0_FEMALE = "Farewell.";
2	VOICEMACRO_13_Ta_1 = "May our paths cross again.";
2	VOICEMACRO_13_Ta_1_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Ta_2 = "May the wind be at your back.";
2	VOICEMACRO_13_Ta_2_FEMALE = "May our paths cross again.";
2	VOICEMACRO_13_Tr_0 = "Catch you later.";
2	VOICEMACRO_13_Tr_0_FEMALE = "Goodbye.";
2	VOICEMACRO_13_Tr_1 = "It been real.";
2	VOICEMACRO_13_Tr_1_FEMALE = "So long.";
2	VOICEMACRO_13_Tr_2 = "Smell you later.";
2	VOICEMACRO_13_Tr_2_FEMALE = "Catch you later.";
2	VOICEMACRO_14_Dw_0 = "Yes.";
2	VOICEMACRO_14_Dw_0_FEMALE = "Sure.";
2	VOICEMACRO_14_Dw_1 = "Sure.";
2	VOICEMACRO_14_Dw_1_FEMALE = "Damn straight.";
2	VOICEMACRO_14_Dw_2 = "Aye.";
2	VOICEMACRO_14_Dw_2_FEMALE = "Of course.";
2	VOICEMACRO_14_Dw_3 = "Damn straight.";
2	VOICEMACRO_14_Gn_0 = "Sure.";
2	VOICEMACRO_14_Gn_0_FEMALE = "Certainly.";
2	VOICEMACRO_14_Gn_1 = "Affirmative.";
2	VOICEMACRO_14_Gn_1_FEMALE = "Of course.";
2	VOICEMACRO_14_Gn_2 = "Indubitably.";
2	VOICEMACRO_14_Gn_2_FEMALE = "Indubitably.";
2	VOICEMACRO_14_Hu_0 = "Certainly.";
2	VOICEMACRO_14_Hu_0_FEMALE = "Yes.";
2	VOICEMACRO_14_Hu_1 = "Sounds fine.";
2	VOICEMACRO_14_Hu_1_FEMALE = "Sure.";
2	VOICEMACRO_14_Hu_2 = "Uh huh.";
2	VOICEMACRO_14_Hu_2_FEMALE = "Why not.";
2	VOICEMACRO_14_Ni_0 = "Yes.";
2	VOICEMACRO_14_Ni_0_FEMALE = "Yes.";
2	VOICEMACRO_14_Ni_1 = "Of course.";
2	VOICEMACRO_14_Ni_1_FEMALE = "Certainly.";
2	VOICEMACRO_14_Ni_2 = "Naturally.";
2	VOICEMACRO_14_Ni_2_FEMALE = "Naturally.";
2	VOICEMACRO_14_Or_0 = "D'abu.";
2	VOICEMACRO_14_Or_0_FEMALE = "D'abu.";
2	VOICEMACRO_14_Or_1 = "Zug zug.";
2	VOICEMACRO_14_Or_1_FEMALE = "Zug zug.";
2	VOICEMACRO_14_Or_2 = "(grunt)";
2	VOICEMACRO_14_Or_2_FEMALE = "(grunt)";
2	VOICEMACRO_14_Or_3 = "Yes.";
2	VOICEMACRO_14_Or_3_FEMALE = "Uh huh.";
2	VOICEMACRO_14_Sc_0 = "Yes.";
2	VOICEMACRO_14_Sc_0_FEMALE = "Yes.";
2	VOICEMACRO_14_Sc_1 = "Certainly.";
2	VOICEMACRO_14_Sc_1_FEMALE = "Why not.";
2	VOICEMACRO_14_Sc_2 = "I suppose so.";
2	VOICEMACRO_14_Sc_2_FEMALE = "I suppose so.";
2	VOICEMACRO_14_Ta_0 = "Yes.";
2	VOICEMACRO_14_Ta_0_FEMALE = "Yes.";
2	VOICEMACRO_14_Ta_1 = "I believe so.";
2	VOICEMACRO_14_Ta_1_FEMALE = "Naturally.";
2	VOICEMACRO_14_Ta_2 = "It is meant to be.";
2	VOICEMACRO_14_Ta_2_FEMALE = "Of course.";
2	VOICEMACRO_14_Tr_0 = "Of course, man.";
2	VOICEMACRO_14_Tr_0_FEMALE = "Sure thing.";
2	VOICEMACRO_14_Tr_1 = "Sure thing.";
2	VOICEMACRO_14_Tr_1_FEMALE = "Dig it.";
2	VOICEMACRO_14_Tr_2 = "I be feeling you.";
2	VOICEMACRO_14_Tr_2_FEMALE = "Yeah, man.";
2	VOICEMACRO_14_Tr_3 = "I dig it.";
2	VOICEMACRO_15_Dw_0 = "No.";
2	VOICEMACRO_15_Dw_0_FEMALE = "No.";
2	VOICEMACRO_15_Dw_1 = "Uh uh.";
2	VOICEMACRO_15_Dw_1_FEMALE = "Get bent.";
2	VOICEMACRO_15_Dw_2 = "No way.";
2	VOICEMACRO_15_Dw_2_FEMALE = "Not a chance.";
2	VOICEMACRO_15_Dw_3 = "Not on your life.";
2	VOICEMACRO_15_Gn_0 = "No.";
2	VOICEMACRO_15_Gn_0_FEMALE = "No way.";
2	VOICEMACRO_15_Gn_1 = "No way.";
2	VOICEMACRO_15_Gn_1_FEMALE = "Not on your life.";
2	VOICEMACRO_15_Gn_2 = "I don't think so.";
2	VOICEMACRO_15_Gn_2_FEMALE = "I don't think so.";
2	VOICEMACRO_15_Hu_0 = "No.";
2	VOICEMACRO_15_Hu_0_FEMALE = "No.";
2	VOICEMACRO_15_Hu_1 = "Nay.";
2	VOICEMACRO_15_Hu_1_FEMALE = "No way.";
2	VOICEMACRO_15_Hu_2 = "I don't think so.";
2	VOICEMACRO_15_Hu_2_FEMALE = "I don't think so.";
2	VOICEMACRO_15_Hu_3 = "Not.";
2	VOICEMACRO_15_Ni_0 = "No.";
2	VOICEMACRO_15_Ni_0_FEMALE = "No.";
2	VOICEMACRO_15_Ni_1 = "I don't think so.";
2	VOICEMACRO_15_Ni_1_FEMALE = "I don't think so.";
2	VOICEMACRO_15_Ni_2 = "Absolutely not.";
2	VOICEMACRO_15_Ni_2_FEMALE = "Absolutely not.";
2	VOICEMACRO_15_Or_0 = "No.";
2	VOICEMACRO_15_Or_0_FEMALE = "No.";
2	VOICEMACRO_15_Or_1 = "You must be joking.";
2	VOICEMACRO_15_Or_1_FEMALE = "Not on your life.";
2	VOICEMACRO_15_Or_2 = "(grunt)";
2	VOICEMACRO_15_Or_2_FEMALE = "(grunt)";
2	VOICEMACRO_15_Sc_0 = "No.";
2	VOICEMACRO_15_Sc_0_FEMALE = "No.";
2	VOICEMACRO_15_Sc_1 = "Not on your life.";
2	VOICEMACRO_15_Sc_1_FEMALE = "Not on your life.";
2	VOICEMACRO_15_Sc_2 = "I don't think so.";
2	VOICEMACRO_15_Sc_2_FEMALE = "I don't think so.";
2	VOICEMACRO_15_Ta_0 = "No.";
2	VOICEMACRO_15_Ta_0_FEMALE = "No.";
2	VOICEMACRO_15_Ta_1 = "I don't think so.";
2	VOICEMACRO_15_Ta_1_FEMALE = "I don't think so.";
2	VOICEMACRO_15_Ta_2 = "Never.";
2	VOICEMACRO_15_Ta_2_FEMALE = "It is not meant to be.";
2	VOICEMACRO_15_Tr_0 = "No.";
2	VOICEMACRO_15_Tr_0_FEMALE = "No chance.";
2	VOICEMACRO_15_Tr_1 = "No way.";
2	VOICEMACRO_15_Tr_1_FEMALE = "No way.";
2	VOICEMACRO_15_Tr_2 = "Hell, no.";
2	VOICEMACRO_15_Tr_2_FEMALE = "Not on your life.";
2	VOICEMACRO_15_Tr_3 = "Uh uh.";
2	VOICEMACRO_16_Dw_0 = "Thank you.";
2	VOICEMACRO_16_Dw_0_FEMALE = "Thank you.";
2	VOICEMACRO_16_Dw_1 = "Thanks a lot.";
2	VOICEMACRO_16_Dw_1_FEMALE = "Ah, you're nice.";
2	VOICEMACRO_16_Dw_2 = "Ah, you're nice.";
2	VOICEMACRO_16_Dw_2_FEMALE = "Thanks a lot.";
2	VOICEMACRO_16_Dw_3 = "May your generosity be returned to you a hundred fold.";
2	VOICEMACRO_16_Dw_3_FEMALE = "May your generosity be returned to you one hundred fold.";
2	VOICEMACRO_16_Gn_0 = "Thank you.";
2	VOICEMACRO_16_Gn_0_FEMALE = "How generous.";
2	VOICEMACRO_16_Gn_1 = "I am in your debt.";
2	VOICEMACRO_16_Gn_1_FEMALE = "How kind of you.";
2	VOICEMACRO_16_Gn_2 = "Allow me to express my deepest thanks.";
2	VOICEMACRO_16_Gn_2_FEMALE = "Much appreciated.";
2	VOICEMACRO_16_Hu_0 = "Thank you.";
2	VOICEMACRO_16_Hu_0_FEMALE = "Thank you.";
2	VOICEMACRO_16_Hu_1 = "How generous.";
2	VOICEMACRO_16_Hu_1_FEMALE = "How generous.";
2	VOICEMACRO_16_Hu_2 = "How kind of you.";
2	VOICEMACRO_16_Hu_2_FEMALE = "Much appreciated.";
2	VOICEMACRO_16_Ni_0 = "Thank you.";
2	VOICEMACRO_16_Ni_0_FEMALE = "Thank you.";
2	VOICEMACRO_16_Ni_1 = "Excellent.";
2	VOICEMACRO_16_Ni_1_FEMALE = "How generous.";
2	VOICEMACRO_16_Ni_2 = "Much appreciated.";
2	VOICEMACRO_16_Ni_2_FEMALE = "You are too kind.";
2	VOICEMACRO_16_Or_0 = "I will return the favor.";
2	VOICEMACRO_16_Or_0_FEMALE = "I won't forget this.";
2	VOICEMACRO_16_Or_1 = "I won't forget this.";
2	VOICEMACRO_16_Or_1_FEMALE = "Thank you.";
2	VOICEMACRO_16_Or_2 = "Thank you.";
2	VOICEMACRO_16_Or_2_FEMALE = "Thanks.";
2	VOICEMACRO_16_Sc_0 = "I am in your debt.";
2	VOICEMACRO_16_Sc_0_FEMALE = "Thank you.";
2	VOICEMACRO_16_Sc_1 = "Gee, thanks.";
2	VOICEMACRO_16_Sc_1_FEMALE = "Gee, thanks.";
2	VOICEMACRO_16_Sc_2 = "Appreciated.";
2	VOICEMACRO_16_Sc_2_FEMALE = "How generous.";
2	VOICEMACRO_16_Ta_0 = "How generous.";
2	VOICEMACRO_16_Ta_0_FEMALE = "Thank you.";
2	VOICEMACRO_16_Ta_1 = "How kind of you.";
2	VOICEMACRO_16_Ta_1_FEMALE = "How kind of you.";
2	VOICEMACRO_16_Ta_2 = "I thank you.";
2	VOICEMACRO_16_Ta_2_FEMALE = "You are too kind.";
2	VOICEMACRO_16_Ta_3 = "May your ancestors forever guard your path.";
2	VOICEMACRO_16_Tr_0 = "Thanks.";
2	VOICEMACRO_16_Tr_0_FEMALE = "Thanks.";
2	VOICEMACRO_16_Tr_1 = "Big thanks.";
2	VOICEMACRO_16_Tr_1_FEMALE = "Big thanks.";
2	VOICEMACRO_16_Tr_2 = "I owe you one.";
2	VOICEMACRO_16_Tr_2_FEMALE = "I owe you one.";
2	VOICEMACRO_17_Dw_0 = "No problem.";
2	VOICEMACRO_17_Dw_0_FEMALE = "No problem.";
2	VOICEMACRO_17_Dw_1 = "My pleasure.";
2	VOICEMACRO_17_Dw_1_FEMALE = "My pleasure.";
2	VOICEMACRO_17_Dw_2 = "Don't mention it.";
2	VOICEMACRO_17_Dw_2_FEMALE = "You're welcome.";
2	VOICEMACRO_17_Gn_0 = "No problem.";
2	VOICEMACRO_17_Gn_0_FEMALE = "Any time.";
2	VOICEMACRO_17_Gn_1 = "Any time.";
2	VOICEMACRO_17_Gn_1_FEMALE = "Anything for a friend.";
2	VOICEMACRO_17_Gn_2 = "You're welcome.";
2	VOICEMACRO_17_Gn_2_FEMALE = "You're welcome.";
2	VOICEMACRO_17_Hu_0 = "Always glad to help.";
2	VOICEMACRO_17_Hu_0_FEMALE = "No problem.";
2	VOICEMACRO_17_Hu_1 = "Nothing you wouldn't have done for me.";
2	VOICEMACRO_17_Hu_1_FEMALE = "Anytime.";
2	VOICEMACRO_17_Hu_2 = "At your service.";
2	VOICEMACRO_17_Hu_2_FEMALE = "You're welcome.";
2	VOICEMACRO_17_Ni_0 = "You're welcome.";
2	VOICEMACRO_17_Ni_0_FEMALE = "My pleasure.";
2	VOICEMACRO_17_Ni_1 = "My pleasure.";
2	VOICEMACRO_17_Ni_1_FEMALE = "It was nothing.";
2	VOICEMACRO_17_Ni_2 = "The honor was mine.";
2	VOICEMACRO_17_Ni_2_FEMALE = "The honor was mine.";
2	VOICEMACRO_17_Or_0 = "I would expect the same.";
2	VOICEMACRO_17_Or_0_FEMALE = "Any time.";
2	VOICEMACRO_17_Or_1 = "Honor required it.";
2	VOICEMACRO_17_Or_1_FEMALE = "Anything for a friend.";
2	VOICEMACRO_17_Or_2 = "It was nothing.";
2	VOICEMACRO_17_Or_2_FEMALE = "You're welcome.";
2	VOICEMACRO_17_Sc_0 = "Any time.";
2	VOICEMACRO_17_Sc_0_FEMALE = "Any time.";
2	VOICEMACRO_17_Sc_1 = "Eh.";
2	VOICEMACRO_17_Sc_1_FEMALE = "Eh.";
2	VOICEMACRO_17_Sc_2_FEMALE = "This doesn't mean I like you.";
2	VOICEMACRO_17_Ta_0 = "It was nothing.";
2	VOICEMACRO_17_Ta_0_FEMALE = "My pleasure.";
2	VOICEMACRO_17_Ta_1 = "Always glad to help.";
2	VOICEMACRO_17_Ta_1_FEMALE = "Always glad to help.";
2	VOICEMACRO_17_Ta_2 = "Anything for an ally.";
2	VOICEMACRO_17_Ta_2_FEMALE = "You are welcome.";
2	VOICEMACRO_17_Tr_0 = "No problem.";
2	VOICEMACRO_17_Tr_0_FEMALE = "No problem.";
2	VOICEMACRO_17_Tr_1 = "Any time, man.";
2	VOICEMACRO_17_Tr_1_FEMALE = "My pleasure.";
2	VOICEMACRO_17_Tr_2 = "You scratch my back, I scratch yours.";
2	VOICEMACRO_17_Tr_2_FEMALE = "Any time, man.";
2	VOICEMACRO_18_Dw_0 = "Congratulations.";
2	VOICEMACRO_18_Dw_0_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Dw_1 = "Fantastic.";
2	VOICEMACRO_18_Dw_1_FEMALE = "Way to go.";
2	VOICEMACRO_18_Dw_2 = "Brilliant.";
2	VOICEMACRO_18_Dw_2_FEMALE = "Oh, that's great.";
2	VOICEMACRO_18_Dw_3 = "Well done.";
2	VOICEMACRO_18_Dw_3_FEMALE = "Brilliant.";
2	VOICEMACRO_18_Dw_4 = "Way to go.";
2	VOICEMACRO_18_Gn_0 = "Congratulations.";
2	VOICEMACRO_18_Gn_0_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Gn_1 = "Well done.";
2	VOICEMACRO_18_Gn_1_FEMALE = "Way to go.";
2	VOICEMACRO_18_Gn_2 = "Good job.";
2	VOICEMACRO_18_Gn_2_FEMALE = "Excellent.";
2	VOICEMACRO_18_Gn_3_FEMALE = "Wonderful.";
2	VOICEMACRO_18_Hu_0 = "Congratulations.";
2	VOICEMACRO_18_Hu_0_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Hu_1 = "Excellent.";
2	VOICEMACRO_18_Hu_1_FEMALE = "Excellent.";
2	VOICEMACRO_18_Hu_2 = "Wonderful.";
2	VOICEMACRO_18_Hu_2_FEMALE = "Hazzah.";
2	VOICEMACRO_18_Ni_0 = "Congratulations.";
2	VOICEMACRO_18_Ni_0_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Ni_1 = "You are worthy.";
2	VOICEMACRO_18_Ni_1_FEMALE = "Well done.";
2	VOICEMACRO_18_Ni_2 = "Excellent.";
2	VOICEMACRO_18_Ni_2_FEMALE = "Excellent.";
2	VOICEMACRO_18_Or_0 = "You should be proud.";
2	VOICEMACRO_18_Or_0_FEMALE = "Skillfully done.";
2	VOICEMACRO_18_Or_1 = "Good job.";
2	VOICEMACRO_18_Or_1_FEMALE = "Not bad.";
2	VOICEMACRO_18_Or_2 = "You are worthy.";
2	VOICEMACRO_18_Or_2_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Sc_0 = "Congratulations.";
2	VOICEMACRO_18_Sc_0_FEMALE = "Congratulations.";
2	VOICEMACRO_18_Sc_1 = "Well done.";
2	VOICEMACRO_18_Sc_1_FEMALE = "It's always somebody else.";
2	VOICEMACRO_18_Sc_2 = "Good job.";
2	VOICEMACRO_18_Sc_2_FEMALE = "Well, aren't you lucky.";
2	VOICEMACRO_18_Sc_3_FEMALE = "Today certainly is your day.";
2	VOICEMACRO_18_Ta_0 = "Well done.";
2	VOICEMACRO_18_Ta_0_FEMALE = "Good job.";
2	VOICEMACRO_18_Ta_1 = "You are worthy.";
2	VOICEMACRO_18_Ta_1_FEMALE = "Excellent.";
2	VOICEMACRO_18_Ta_2 = "Fate smiles upon you.";
2	VOICEMACRO_18_Ta_2_FEMALE = "Fate smiles upon you.";
2	VOICEMACRO_18_Tr_0 = "Good job.";
2	VOICEMACRO_18_Tr_0_FEMALE = "Good job.";
2	VOICEMACRO_18_Tr_1 = "Fantastic.";
2	VOICEMACRO_18_Tr_1_FEMALE = "Way to go.";
2	VOICEMACRO_18_Tr_2 = "They will speak of your exploits for generations.";
2	VOICEMACRO_18_Tr_2_FEMALE = "Wonderful.";
2	VOICEMACRO_19_Dw_0 = "Enough of this chit chat.  Let's get to it, then.";
2	VOICEMACRO_19_Dw_0_FEMALE = "I like tall men.";
2	VOICEMACRO_19_Dw_1 = "You'd like to run your hands through my beard, wouldn't you?";
2	VOICEMACRO_19_Dw_1_FEMALE = "I'll have you know I can flatten steel with my thighs.";
2	VOICEMACRO_19_Dw_2 = "Let's get on with it, then.  I've got a quest to do in fifteen minutes.";
2	VOICEMACRO_19_Dw_2_FEMALE = "I'd like to see you in a kilt.";
2	VOICEMACRO_19_Dw_3 = "You look pretty.  I like your hair.  Here's your drink.  Are you ready now?";
2	VOICEMACRO_19_Dw_3_FEMALE = "I won't fall for any bad pickup line.  You've got to try two or three, at least.";
2	VOICEMACRO_19_Dw_4 = "Where are you from?  Not that it matters.";
2	VOICEMACRO_19_Dw_4_FEMALE = "Enough with your flirting.  I know you think all Dwarven women look the same.";
2	VOICEMACRO_19_Dw_5 = "I must be asleep, cause you're a dream come true.  Also, I'm slightly damp.";
2	VOICEMACRO_19_Gn_0 = "I have a number of inventions I'd like to show you back at my place.";
2	VOICEMACRO_19_Gn_0_FEMALE = "You are cute.";
2	VOICEMACRO_19_Gn_1 = "Everyone keeps talking about beer goggles.  I can't find the plans for them anywhere.";
2	VOICEMACRO_19_Gn_1_FEMALE = "At this time I think you should purchase me an alcoholic beverage and engage in diminutive conversation with me in hopes of establishing a rapport.";
2	VOICEMACRO_19_Gn_2 = "I like large posteriors, and I cannot prevaricate.";
2	VOICEMACRO_19_Gn_2_FEMALE = "Your ability to form a complete sentence is a plus.";
2	VOICEMACRO_19_Gn_3 = "Hey, nice apparatus.";
2	VOICEMACRO_19_Gn_3_FEMALE = "I do not find you completely disagreeable.";
2	VOICEMACRO_19_Gn_4_FEMALE = "I don't feel that the 1 to 10 scale is fine enough to capture subtle details of compatibility.  I'd prefer a 12 dimensional compatibility scale with additional parameters for mechanical aptitude and torque.";
2	VOICEMACRO_19_Hu_0 = "How you doing?";
2	VOICEMACRO_19_Hu_0_FEMALE = "You've got me all a flutter.";
2	VOICEMACRO_19_Hu_1 = "If I said you had a good body, would you hold it against me?";
2	VOICEMACRO_19_Hu_1_FEMALE = "My turn offs are rude people, mean people, and people who aren't nice.";
2	VOICEMACRO_19_Hu_2 = "Hey, baby cakes.";
2	VOICEMACRO_19_Hu_2_FEMALE = "I need a hero.";
2	VOICEMACRO_19_Hu_3 = "What's your sign?";
2	VOICEMACRO_19_Hu_4 = "Are you tired, cause you've been running through my mind all day.";
2	VOICEMACRO_19_Hu_5 = "Your tag's showing.  It says, \"Made in heaven.\"";
2	VOICEMACRO_19_Ni_0 = "You're an Emerald Dream come true.";
2	VOICEMACRO_19_Ni_0_FEMALE = "If I wasn't purple, you'd see I was blushing.";
2	VOICEMACRO_19_Ni_1 = "I hope you're not afraid of snakes.";
2	VOICEMACRO_19_Ni_1_FEMALE = "Sure I've got exotic piercings.";
2	VOICEMACRO_19_Ni_2 = "Baby, I'm mortal now.  Time's a wasting.";
2	VOICEMACRO_19_Ni_2_FEMALE = "I'm the type of girl my mother warned me about.";
2	VOICEMACRO_19_Ni_3 = "I'm a force of nature.";
2	VOICEMACRO_19_Ni_3_FEMALE = "There's nothing like sleeping in the forest under the moonlight.";
2	VOICEMACRO_19_Ni_4 = "Wanna bring out the animal in me?";
2	VOICEMACRO_19_Or_0 = "That armor looks good on you.  It would also look good on my floor.";
2	VOICEMACRO_19_Or_0_FEMALE = "You had me at zug zug.";
2	VOICEMACRO_19_Or_1 = "This is true love.  Do you think this happens every day?";
2	VOICEMACRO_19_Or_1_FEMALE = "I'll give you crazy love.";
2	VOICEMACRO_19_Or_2 = "You have six different smiles; one for when you're angry, one for when you tear flesh, one for when you chew flesh, one for when you loot bodies, one for when you skin game, and one for when you want to kill something.";
2	VOICEMACRO_19_Or_2_FEMALE = "I like men who aren't afraid to cry; cry uncle.";
2	VOICEMACRO_19_Or_3 = "I love you like a fat kid loves cake.";
2	VOICEMACRO_19_Or_3_FEMALE = "You'll do.  Let's go.";
2	VOICEMACRO_19_Or_4 = "Lady, from the moment I see you I... I did not expect to get this far.";
2	VOICEMACRO_19_Or_4_FEMALE = "Don't talk, just follow me.";
2	VOICEMACRO_19_Or_5 = "Um, you look like a lady.";
2	VOICEMACRO_19_Or_5_FEMALE = "Let's not ruin this moment with chit chat.";
2	VOICEMACRO_19_Sc_0 = "I don't smell that bad for a dead dude, do I?";
2	VOICEMACRO_19_Sc_0_FEMALE = "Nice butt.";
2	VOICEMACRO_19_Sc_1 = "You have beautiful skin; no maggot holes at all.";
2	VOICEMACRO_19_Sc_1_FEMALE = "One good thing about being dead, biological clock seems to have stopped.";
2	VOICEMACRO_19_Sc_2 = "If rot was hot, I'd be a volcano.";
2	VOICEMACRO_19_Sc_2_FEMALE = "Us Undead girls really know how to have a good time because, after all, what's the worst thing that could happen?";
2	VOICEMACRO_19_Sc_3 = "Once you go dead, you never go back.";
2	VOICEMACRO_19_Sc_3_FEMALE = "I can't wait to suck the juice out of your eyeballs.";
2	VOICEMACRO_19_Sc_4 = "Check my breath.  Is it bad enough for you?";
2	VOICEMACRO_19_Sc_4_FEMALE = "I don't care that much about romance.  I fell in love before, and look what happened to me.";
2	VOICEMACRO_19_Sc_5 = "Don't mind the drool.  It's just embalming fluid.";
2	VOICEMACRO_19_Sc_5_FEMALE = "I don't need to get funky.  I'm already there.";
2	VOICEMACRO_19_Ta_0 = "You move me.";
2	VOICEMACRO_19_Ta_0_FEMALE = "I'm tired of the same old bull.";
2	VOICEMACRO_19_Ta_1 = "Hey, you into leather?";
2	VOICEMACRO_19_Ta_1_FEMALE = "I want a man with soft hands.  Preferably four of them.";
2	VOICEMACRO_19_Ta_2 = "Free rides for the ladies.";
2	VOICEMACRO_19_Ta_2_FEMALE = "I've got big soulful eyes, long eyelashes, and a wet tongue.  What more could a guy want?";
2	VOICEMACRO_19_Ta_3 = "Hey, you work out?";
2	VOICEMACRO_19_Ta_3_FEMALE = "Come over here, sailor.";
2	VOICEMACRO_19_Ta_4 = "You know, older bulls really only have one function.";
2	VOICEMACRO_19_Ta_4_FEMALE = "Wanna see some good clog dancing?";
2	VOICEMACRO_19_Ta_5 = "Are you comfortable with complicated machinery?";
2	VOICEMACRO_19_Tr_0 = "Want some of my jungle love?";
2	VOICEMACRO_19_Tr_0_FEMALE = "I know.  My natural beauty is intimidating.";
2	VOICEMACRO_19_Tr_1 = "We Trolls mate for life.  'Course, we believe in frequent reincarnation.";
2	VOICEMACRO_19_Tr_1_FEMALE = "When enraged, and in heat, a female Troll can mate over eighty times in one night.  Be you prepared?";
2	VOICEMACRO_19_Tr_2 = "You look pretty.  Pretty tasty.";
2	VOICEMACRO_19_Tr_2_FEMALE = "Aren't you going to axe me out?";
2	VOICEMACRO_19_Tr_3 = "I hope you're well rested.  You're going to need your strength.";
2	VOICEMACRO_19_Tr_3_FEMALE = "I won't bite you where it shows.";
2	VOICEMACRO_19_Tr_4_FEMALE = "You're the type I'd like to sink my teeth into.";
2	VOICEMACRO_1_Dw_0 = "Danger approaching!";
2	VOICEMACRO_1_Dw_0_FEMALE = "Danger approaching!";
2	VOICEMACRO_1_Dw_1 = "Heads up!";
2	VOICEMACRO_1_Dw_1_FEMALE = "Heads up!";
2	VOICEMACRO_1_Gn_0 = "Danger approaches!";
2	VOICEMACRO_1_Gn_0_FEMALE = "Danger approaches!";
2	VOICEMACRO_1_Hu_0 = "Guard yourself!";
2	VOICEMACRO_1_Hu_0_FEMALE = "Guard yourself!";
2	VOICEMACRO_1_Hu_1 = "On your guard!";
2	VOICEMACRO_1_Hu_1_FEMALE = "On your guard!";
2	VOICEMACRO_1_Ni_0 = "Beware!";
2	VOICEMACRO_1_Ni_0_FEMALE = "Danger!";
2	VOICEMACRO_1_Ni_1 = "Be alert!";
2	VOICEMACRO_1_Ni_1_FEMALE = "Be alert!";
2	VOICEMACRO_1_Or_0 = "Watch it!";
2	VOICEMACRO_1_Or_0_FEMALE = "On your guard!";
2	VOICEMACRO_1_Or_1 = "Incoming!";
2	VOICEMACRO_1_Or_1_FEMALE = "Incoming!";
2	VOICEMACRO_1_Or_2 = "On your guard!";
2	VOICEMACRO_1_Sc_0 = "Danger!";
2	VOICEMACRO_1_Sc_0_FEMALE = "Danger!";
2	VOICEMACRO_1_Sc_1 = "Incoming!";
2	VOICEMACRO_1_Sc_1_FEMALE = "Incoming!";
2	VOICEMACRO_1_Ta_0 = "Danger approaches!";
2	VOICEMACRO_1_Ta_0_FEMALE = "Danger approaches!";
2	VOICEMACRO_1_Ta_1 = "On your guard!";
2	VOICEMACRO_1_Ta_1_FEMALE = "On your guard!";
2	VOICEMACRO_1_Ta_2_FEMALE = "Be watchful!";
2	VOICEMACRO_1_Tr_0 = "There be danger!";
2	VOICEMACRO_1_Tr_0_FEMALE = "There be danger!";
2	VOICEMACRO_1_Tr_1 = "Bad things coming!";
2	VOICEMACRO_1_Tr_1_FEMALE = "Bad things coming!";
2	VOICEMACRO_20_Dw_0 = "Hi ho, hi ho... uh... second verse, same as the first.";
2	VOICEMACRO_20_Dw_0_FEMALE = "No, they're not real, but thanks for noticing.";
2	VOICEMACRO_20_Dw_1 = "Ah winter.  Yes, winter.";
2	VOICEMACRO_20_Dw_1_FEMALE = "I don't like to be underground.  It reminds me of death.";
2	VOICEMACRO_20_Dw_2 = "Oh, I'm having a wardrobe malfunction.  Oh, there's my hammer.";
2	VOICEMACRO_20_Dw_2_FEMALE = "I like my ale like I like my men; dark and rich.";
2	VOICEMACRO_20_Dw_3 = "I don't have a drinking problem.  I drink, I get drunk, I fall down, no problem.";
2	VOICEMACRO_20_Dw_3_FEMALE = "It's like my father always used to say, \"Shut up, and get out.\"";
2	VOICEMACRO_20_Dw_4 = "I don't drink anymore.  'Course, I don't drink any less, either.";
2	VOICEMACRO_20_Dw_4_FEMALE = "My uncle has brass balls.  No, really!";
2	VOICEMACRO_20_Dw_5 = "I like my beer like I like my women; stout and bitter.";
2	VOICEMACRO_20_Dw_5_FEMALE = "I give myself a Dutch oven pedicure every night.  I've got no foot fungus at all.  My toes are pristine.";
2	VOICEMACRO_20_Dw_6 = "Oh, I'm just a social drinker.  Every time someone says, \"I'll have a drink\", I say, \"So shall I.\"";
2	VOICEMACRO_20_Gn_0 = "You know, I really wish I had a garden where I could put a couple of human statues.";
2	VOICEMACRO_20_Gn_0_FEMALE = "I apologize profusely for any inconvenience my murderous rampage may have caused.";
2	VOICEMACRO_20_Gn_1 = "I think that last vendor short changed me.  Oh, that was a bad one.";
2	VOICEMACRO_20_Gn_1_FEMALE = "I've discovered that getting pummeled by a blunt weapon can be quite painful.";
2	VOICEMACRO_20_Gn_2 = "I do hope to find some interesting gadgets around here.  I do love tinkering with things.";
2	VOICEMACRO_20_Gn_2_FEMALE = "You know, squirrels can be deadly when cornered.";
2	VOICEMACRO_20_Gn_3 = "I had an idea for a device that you could put small pieces of bread in to cook, but in the end I really didn't think there would be much of a market for it.";
2	VOICEMACRO_20_Gn_3_FEMALE = "Some day, I hope to find the nuggets on a chicken.";
2	VOICEMACRO_20_Gn_4 = "I'd like to give a shout out to my boys in Gnomeregan.  Keeping it real Big-T, Snoop-Pup, and Little Dees.  Y'all are short, but you're real, baby.";
2	VOICEMACRO_20_Gn_5 = "I look bigger in those mirrors where things look bigger.";
2	VOICEMACRO_20_Hu_0 = "Cover for me.  I gotta whiz behind a tree.";
2	VOICEMACRO_20_Hu_0_FEMALE = "Why does everyone automatically assume I know tailoring and cooking?";
2	VOICEMACRO_20_Hu_1 = "So, an Orc walks into a bar with a parrot on his shoulder.  The bartender says, \"Hey, where'd you get that?\"  The parrot says, \"Durotar.  They got 'em all over the place.\"";
2	VOICEMACRO_20_Hu_1_FEMALE = "Do you ever feel like you're not in charge of your own destiny, like you're being controlled by an invisible hand?";
2	VOICEMACRO_20_Hu_2 = "A duck walked into an apothecary and he said, \"Give me some chapstick, and put it on my bill.\"";
2	VOICEMACRO_20_Hu_2_FEMALE = "Sometimes, I have trouble CONTROLLING THE VOLUME OF MY VOICE!";
2	VOICEMACRO_20_Hu_3 = "How does a Tauren hide in a cherry tree?  He paints his hooves red.";
2	VOICEMACRO_20_Hu_3_FEMALE = "I like to fart in the tub.";
2	VOICEMACRO_20_Hu_4 = "A guy walked up to me and said, \"I'm a teepee, I'm a wigwam, I'm a teepee, I'm a wigwam.\"  I said, \"Relax, man, you're too tense.\"";
2	VOICEMACRO_20_Hu_4_FEMALE = "Me and my girlfriends exchange clothes all the time.  We're all the same size.";
2	VOICEMACRO_20_Hu_5 = "So, I have this idea for a great movie.  It's about two Gnomes who find a bracelet of power, and they have to take it to the Burning Steppes and cast it into The Cauldron.  They form the Brotherhood of the Bracelet.  Along the way, they're trailed by a murloc named Gottom who's obsessed with the bracelet, and nine bracelet bogeymen.  It could be a three parter called \"Ruler of the Bracelet\".  The first part would be called \"The Brotherhood of the Bracelet\", followed by \"A Couple of Towers\", with the climactic ending called \"Hey, the King's Back\".";
2	VOICEMACRO_20_Hu_5_FEMALE = "I can't find anywhere to get my nails done.";
2	VOICEMACRO_20_Hu_6_FEMALE = "I can't wait till this quest is done, and I can look for another Garibaldi artifact.";
2	VOICEMACRO_20_Ni_0 = "Last night I went to an awesome stag party.";
2	VOICEMACRO_20_Ni_0_FEMALE = "You know I have to keep moving at night or I'll disappear.";
2	VOICEMACRO_20_Ni_1 = "You know those Ancient Protectors in Darnassas?  They're not that old.";
2	VOICEMACRO_20_Ni_1_FEMALE = "Actually, I'm more of a morning elf.";
2	VOICEMACRO_20_Ni_2 = "Man, I was halfway through the Emerald Dream when I had to pee.";
2	VOICEMACRO_20_Ni_2_FEMALE = "You know, Wisps are actually pretty useful for personal hygiene.";
2	VOICEMACRO_20_Ni_3 = "Is that thing sharp?  Could that thing cut me?  I'm not immortal now, you know.";
2	VOICEMACRO_20_Ni_3_FEMALE = "I think that guys just use the Emerald Dream as an excuse to avoid calling me back.";
2	VOICEMACRO_20_Ni_4 = "I don't know about you, but I can't understand a thing those Wisps say.  I usually just nod.";
2	VOICEMACRO_20_Ni_4_FEMALE = "Oh, I'm dancing again.  I hope all your friends are enjoying the show.";
2	VOICEMACRO_20_Ni_5 = "Who wants to live forever?";
2	VOICEMACRO_20_Ni_6 = "What?  I didn't hear that.";
2	VOICEMACRO_20_Ni_7 = "I don't mind the Gnomes, but I'm always worried about tripping over one.";
2	VOICEMACRO_20_Or_0 = "I will crush and destroy and... ooo... shiny...";
2	VOICEMACRO_20_Or_0_FEMALE = "Get between me and my food, and you'll lose a hand.";
2	VOICEMACRO_20_Or_1 = "It's not easy being green.";
2	VOICEMACRO_20_Or_1_FEMALE = "I have no respect for people with small piercings.  I say go full hog.  Put a spear through your head.";
2	VOICEMACRO_20_Or_2 = "Man, dawg, you know, it's like I'm feeling you, but I'm not feeling you, you know?";
2	VOICEMACRO_20_Or_2_FEMALE = "I feel very feminine, and I'll beat the crap out of anyone who disagrees.";
2	VOICEMACRO_20_Or_3 = "I come from the Orcs.  We eat with spoons and forks.  We love to eat our pork.";
2	VOICEMACRO_20_Or_3_FEMALE = "What's estrogen?  Can you eat it?";
2	VOICEMACRO_20_Or_4 = "Orc smash!";
2	VOICEMACRO_20_Or_4_FEMALE = "I need to get my chest waxed again.";
2	VOICEMACRO_20_Or_5 = "Stop poking me!  Well, that was okay.";
2	VOICEMACRO_20_Or_5_FEMALE = "Man, I think that boar meat's coming back on me.  I gotta hit the can.  Anyone have a hearthstone?";
2	VOICEMACRO_20_Sc_0 = "I can't stand the smell of Orcs.";
2	VOICEMACRO_20_Sc_0_FEMALE = "I'd paint my toenails, but I'm not sure where they fell off.";
2	VOICEMACRO_20_Sc_1 = "I'm dead, and I'm pissed.";
2	VOICEMACRO_20_Sc_1_FEMALE = "Yes, they're real.  They're not mine, but they're real.";
2	VOICEMACRO_20_Sc_2 = "Roses are gray, violets are gray.  I'm dead and color blind.";
2	VOICEMACRO_20_Sc_2_FEMALE = "I'm in a rotten mood.";
2	VOICEMACRO_20_Sc_3 = "Hey diddle diddle, the mucus and the spittle, the corpse sank in the lagoon.  The murloc said, \"Ahhh...\" to see such a sight, and the Dwarf spanked the baboon.";
2	VOICEMACRO_20_Sc_3_FEMALE = "This stinks.";
2	VOICEMACRO_20_Sc_4 = "Anyone have any odorant?  Either \"wet dog\", \"fresh garbage\", or \"low tide\" would do.";
2	VOICEMACRO_20_Sc_4_FEMALE = "You know, once you're dead, nothing smells bad anymore.  Rotten eggs?  No problem.  Dead fish?  Like a spring breeze.";
2	VOICEMACRO_20_Sc_5_FEMALE = "You don't need deodorant when you don't have any armpits.";
2	VOICEMACRO_20_Sc_6_FEMALE = "Ah, doornails.";
2	VOICEMACRO_20_Sc_7_FEMALE = "I heard a knee slapper once, and skipped my kneecap right across a lake.";
2	VOICEMACRO_20_Ta_0 = "Mess with the bull, you get the horns.";
2	VOICEMACRO_20_Ta_0_FEMALE = "In my native tongue, my name means Dances with Tassels.";
2	VOICEMACRO_20_Ta_1 = "Here's the beef.";
2	VOICEMACRO_20_Ta_1_FEMALE = "I once laughed so hard, I milked all over the floor.";
2	VOICEMACRO_20_Ta_2 = "Homogenized?  No way.  I like the ladies.";
2	VOICEMACRO_20_Ta_2_FEMALE = "Happy Taurens come from Mulgore.";
2	VOICEMACRO_20_Ta_3 = "You know, Taurens are born hunters.  You ever see a Tauren catch a salmon out of a stream?  It really is quite exciting.  And, have you ever seen a Tauren stalk a python?  'Course you haven't.  That's because Taurens are so adept at blending in with their surroundings.";
2	VOICEMACRO_20_Ta_3_FEMALE = "You know how hard it is to get your groove on with the spirit of your great grandmother looking over you?";
2	VOICEMACRO_20_Ta_4 = "Moo.  Are you happy now?";
2	VOICEMACRO_20_Tr_0 = "Cooking's done.  Stew here.";
2	VOICEMACRO_20_Tr_0_FEMALE = "Strong halitosis be but one of my feminine traits.";
2	VOICEMACRO_20_Tr_1 = "I like my women dumpy and droopy with halitosis.";
2	VOICEMACRO_20_Tr_1_FEMALE = "I feel pretty, oh so pretty (spit).";
2	VOICEMACRO_20_Tr_2 = "I got a shrunken head.  I just came out of the pool.";
2	VOICEMACRO_20_Tr_2_FEMALE = "I got all this and personality, too.";
2	VOICEMACRO_20_Tr_3 = "New Troll here.";
2	VOICEMACRO_20_Tr_3_FEMALE = "The way to a man's heart be through his stomach, but I go through the rib cage.";
2	VOICEMACRO_20_Tr_4 = "I kill two dwarves in the morning, I kill two dwarves at night.  I kill two dwarves in the afternoon, and then I feel alright. I kill two dwarves in time of peace and two in time of war. I kill two dwarves before I kill two dwarves, and then I kill two more.";
2	VOICEMACRO_20_Tr_4_FEMALE = "If cannibalism be wrong, I don't want to be right.";
2	VOICEMACRO_20_Tr_5 = "I heard if you cut off an extremity, it'll regenerate a little bigger.  Don't believe it.";
2	VOICEMACRO_2_Dw_0 = "Charge!";
2	VOICEMACRO_2_Dw_0_FEMALE = "Charge!";
2	VOICEMACRO_2_Dw_1 = "For Khaz Modan!";
2	VOICEMACRO_2_Dw_1_FEMALE = "By Muridan's beard!";
2	VOICEMACRO_2_Gn_0 = "Get 'em!";
2	VOICEMACRO_2_Gn_0_FEMALE = "For Gnomeregan!";
2	VOICEMACRO_2_Gn_1 = "Attack!";
2	VOICEMACRO_2_Gn_1_FEMALE = "Charge forth!";
2	VOICEMACRO_2_Gn_2 = "For Gnomeregan!";
2	VOICEMACRO_2_Hu_0 = "Charge!";
2	VOICEMACRO_2_Hu_0_FEMALE = "Attack!";
2	VOICEMACRO_2_Hu_1 = "To battle!";
2	VOICEMACRO_2_Hu_1_FEMALE = "To battle!";
2	VOICEMACRO_2_Ni_0 = "For Cenarius!";
2	VOICEMACRO_2_Ni_0_FEMALE = "By Elune!";
2	VOICEMACRO_2_Ni_1 = "Attack!";
2	VOICEMACRO_2_Ni_1_FEMALE = "Attack for the goddess!";
2	VOICEMACRO_2_Ni_2_FEMALE = "Charge forth!";
2	VOICEMACRO_2_Or_0 = "Destroy them!";
2	VOICEMACRO_2_Or_0_FEMALE = "Attack!";
2	VOICEMACRO_2_Or_1 = "Slay them all!";
2	VOICEMACRO_2_Or_1_FEMALE = "Slay them all!";
2	VOICEMACRO_2_Or_2 = "Break their bones!";
2	VOICEMACRO_2_Or_2_FEMALE = "Leave none alive!";
2	VOICEMACRO_2_Sc_0 = "For the forsaken!";
2	VOICEMACRO_2_Sc_0_FEMALE = "Rend flesh with me!";
2	VOICEMACRO_2_Sc_1 = "Rend flesh with me!";
2	VOICEMACRO_2_Sc_1_FEMALE = "For the forsaken!";
2	VOICEMACRO_2_Ta_0 = "For Kalimdor!";
2	VOICEMACRO_2_Ta_0_FEMALE = "For Kalimdor!";
2	VOICEMACRO_2_Ta_1 = "Unleash your fury!";
2	VOICEMACRO_2_Ta_1_FEMALE = "Attack!";
2	VOICEMACRO_2_Ta_2 = "Charge!";
2	VOICEMACRO_2_Tr_0 = "For Zul'jin!";
2	VOICEMACRO_2_Tr_0_FEMALE = "For Zul'jin!";
2	VOICEMACRO_2_Tr_1 = "Now, we kill!";
2	VOICEMACRO_2_Tr_1_FEMALE = "We bring the pain to them!";
2	VOICEMACRO_3_Dw_0 = "Run away!";
2	VOICEMACRO_3_Dw_0_FEMALE = "Run away!";
2	VOICEMACRO_3_Dw_1 = "Let's run!";
2	VOICEMACRO_3_Dw_1_FEMALE = "Run!";
2	VOICEMACRO_3_Dw_2 = "Run!";
2	VOICEMACRO_3_Gn_0 = "Run!";
2	VOICEMACRO_3_Gn_0_FEMALE = "Run!";
2	VOICEMACRO_3_Gn_1 = "Let's get out of here!";
2	VOICEMACRO_3_Gn_1_FEMALE = "Let's get outta here!";
2	VOICEMACRO_3_Gn_2 = "Retreat!";
2	VOICEMACRO_3_Gn_2_FEMALE = "Retreat!";
2	VOICEMACRO_3_Hu_0 = "Run!";
2	VOICEMACRO_3_Hu_0_FEMALE = "Run!";
2	VOICEMACRO_3_Hu_1 = "Retreat!";
2	VOICEMACRO_3_Hu_1_FEMALE = "Retreat!";
2	VOICEMACRO_3_Ni_0 = "Retreat!";
2	VOICEMACRO_3_Ni_0_FEMALE = "Run!";
2	VOICEMACRO_3_Ni_1 = "Scatter!";
2	VOICEMACRO_3_Ni_1_FEMALE = "Our foe is too strong!";
2	VOICEMACRO_3_Or_0 = "Retreat!";
2	VOICEMACRO_3_Or_0_FEMALE = "Retreat!";
2	VOICEMACRO_3_Or_1 = "Run!";
2	VOICEMACRO_3_Or_1_FEMALE = "Run!";
2	VOICEMACRO_3_Sc_0 = "Move your carcass!";
2	VOICEMACRO_3_Sc_0_FEMALE = "Run!"; -- Undead Female voicemacro 'Run' var0
2	VOICEMACRO_3_Sc_1 = "Turn back!";
2	VOICEMACRO_3_Sc_1_FEMALE = "Move your carcass!"; -- Undead Female voicemacro 'Run' var1
2	VOICEMACRO_3_Ta_0 = "Run!";
2	VOICEMACRO_3_Ta_0_FEMALE = "Retreat!";
2	VOICEMACRO_3_Ta_1 = "Retreat!";
2	VOICEMACRO_3_Ta_1_FEMALE = "Save your hide!";
2	VOICEMACRO_3_Tr_0 = "Run!";
2	VOICEMACRO_3_Tr_0_FEMALE = "Run for the hills!";
2	VOICEMACRO_3_Tr_1 = "Get outta here!";
2	VOICEMACRO_3_Tr_1_FEMALE = "Get outta here!";
2	VOICEMACRO_4_Dw_0 = "Join my attack!";
2	VOICEMACRO_4_Dw_0_FEMALE = "Join my attack!";
2	VOICEMACRO_4_Dw_1 = "Attack this one!";
2	VOICEMACRO_4_Dw_1_FEMALE = "Attack this one!";
2	VOICEMACRO_4_Dw_2 = "Help me with this cretin!";
2	VOICEMACRO_4_Gn_0 = "Please, join my fight!";
2	VOICEMACRO_4_Gn_0_FEMALE = "Can I get some help over here?";
2	VOICEMACRO_4_Gn_1 = "Help me attack over here!";
2	VOICEMACRO_4_Gn_1_FEMALE = "Hey, help me attack over here!";
2	VOICEMACRO_4_Hu_0 = "Aid my attack!";
2	VOICEMACRO_4_Hu_0_FEMALE = "Aid my attack!";
2	VOICEMACRO_4_Hu_1 = "Attack over here!";
2	VOICEMACRO_4_Hu_1_FEMALE = "Attack over here!";
2	VOICEMACRO_4_Ni_0 = "Assault my attacker!";
2	VOICEMACRO_4_Ni_0_FEMALE = "Assault this foe!";
2	VOICEMACRO_4_Ni_1 = "Smite my foe!";
2	VOICEMACRO_4_Ni_1_FEMALE = "Over here!";
2	VOICEMACRO_4_Ni_2_FEMALE = "Assault my attacker!";
2	VOICEMACRO_4_Or_0 = "Attack over here!";
2	VOICEMACRO_4_Or_0_FEMALE = "Attack over here!";
2	VOICEMACRO_4_Or_1 = "Attack with me!";
2	VOICEMACRO_4_Or_1_FEMALE = "Shed blood with me!";
2	VOICEMACRO_4_Or_2 = "Shed blood with me!";
2	VOICEMACRO_4_Or_2_FEMALE = "Join my attack!";
2	VOICEMACRO_4_Sc_0 = "Join my fight!";
2	VOICEMACRO_4_Sc_0_FEMALE = "Join the slaughter!";
2	VOICEMACRO_4_Sc_1 = "Help me attack!";
2	VOICEMACRO_4_Sc_1_FEMALE = "Help me attack!";
2	VOICEMACRO_4_Ta_0 = "Fight at my side!";
2	VOICEMACRO_4_Ta_0_FEMALE = "Fight at my side!";
2	VOICEMACRO_4_Ta_1 = "Join my fight!";
2	VOICEMACRO_4_Ta_1_FEMALE = "Join my fight!";
2	VOICEMACRO_4_Tr_0 = "Strike this foe!";
2	VOICEMACRO_4_Tr_0_FEMALE = "Strike this foe!";
2	VOICEMACRO_4_Tr_1 = "Help me here!";
2	VOICEMACRO_4_Tr_1_FEMALE = "This the one to fight!";
2	VOICEMACRO_5_Dw_0 = "I've got no mana!";
2	VOICEMACRO_5_Dw_0_FEMALE = "I've got no mana!";
2	VOICEMACRO_5_Dw_1 = "I need more mana!";
2	VOICEMACRO_5_Dw_1_FEMALE = "I need more mana!";
2	VOICEMACRO_5_Gn_0 = "I need some mana!";
2	VOICEMACRO_5_Gn_0_FEMALE = "My mana is running low!";
2	VOICEMACRO_5_Gn_1 = "I'm short on mana!";
2	VOICEMACRO_5_Gn_1_FEMALE = "I'm short on mana!";
2	VOICEMACRO_5_Hu_0 = "I'm out of mana!";
2	VOICEMACRO_5_Hu_0_FEMALE = "I'm out of mana!";
2	VOICEMACRO_5_Hu_1 = "My mana is low!";
2	VOICEMACRO_5_Hu_1_FEMALE = "I need more mana!";
2	VOICEMACRO_5_Ni_0 = "My mana is low!";
2	VOICEMACRO_5_Ni_0_FEMALE = "My mana is low!";
2	VOICEMACRO_5_Ni_1 = "My mana has waned!";
2	VOICEMACRO_5_Ni_1_FEMALE = "My mana is nearly gone!";
2	VOICEMACRO_5_Or_0 = "I need mana!";
2	VOICEMACRO_5_Or_0_FEMALE = "I need mana!";
2	VOICEMACRO_5_Or_1 = "My mana is low!";
2	VOICEMACRO_5_Or_1_FEMALE = "My mana is low!";
2	VOICEMACRO_5_Sc_0 = "My mana is drained!";
2	VOICEMACRO_5_Sc_0_FEMALE = "I need mana!";
2	VOICEMACRO_5_Sc_1 = "I need mana!";
2	VOICEMACRO_5_Sc_1_FEMALE = "My mana is exhausted!";
2	VOICEMACRO_5_Ta_0 = "I need more mana!";
2	VOICEMACRO_5_Ta_0_FEMALE = "My mana must be replenished!";
2	VOICEMACRO_5_Ta_1 = "My mana is spent!";
2	VOICEMACRO_5_Ta_1_FEMALE = "I need more mana!";
2	VOICEMACRO_5_Tr_0 = "Me mana be running low!";
2	VOICEMACRO_5_Tr_0_FEMALE = "Me mana running low!";
2	VOICEMACRO_5_Tr_1 = "I be needing more mana!";
2	VOICEMACRO_5_Tr_1_FEMALE = "I be needing more mana!";
2	VOICEMACRO_6_Dw_0 = "I'll lead the way.";
2	VOICEMACRO_6_Dw_0_FEMALE = "I'll lead the way.";
2	VOICEMACRO_6_Dw_1 = "Follow me.";
2	VOICEMACRO_6_Dw_1_FEMALE = "Follow me!";
2	VOICEMACRO_6_Dw_2 = "Follow me, quick.";
2	VOICEMACRO_6_Gn_0 = "I'll lead the way.";
2	VOICEMACRO_6_Gn_0_FEMALE = "Follow me.";
2	VOICEMACRO_6_Gn_1 = "Follow me.";
2	VOICEMACRO_6_Hu_0 = "Follow me.";
2	VOICEMACRO_6_Hu_0_FEMALE = "Follow me.";
2	VOICEMACRO_6_Hu_1 = "I'll lead the way.";
2	VOICEMACRO_6_Hu_1_FEMALE = "I'll lead the way.";
2	VOICEMACRO_6_Ni_0 = "I'll lead the way.";
2	VOICEMACRO_6_Ni_0_FEMALE = "I'll lead the way.";
2	VOICEMACRO_6_Ni_1 = "Follow me.";
2	VOICEMACRO_6_Ni_1_FEMALE = "Follow me.";
2	VOICEMACRO_6_Or_0 = "Follow me.";
2	VOICEMACRO_6_Or_0_FEMALE = "Follow me.";
2	VOICEMACRO_6_Or_1 = "Come.";
2	VOICEMACRO_6_Or_1_FEMALE = "Come.";
2	VOICEMACRO_6_Sc_0 = "This way.";
2	VOICEMACRO_6_Sc_0_FEMALE = "This way.";
2	VOICEMACRO_6_Sc_1 = "I will lead the way.";
2	VOICEMACRO_6_Sc_1_FEMALE = "Follow.";
2	VOICEMACRO_6_Ta_0 = "Come with me.";
2	VOICEMACRO_6_Ta_0_FEMALE = "Come with me.";
2	VOICEMACRO_6_Ta_1 = "I'll lead the way.";
2	VOICEMACRO_6_Ta_1_FEMALE = "Follow my trail.";
2	VOICEMACRO_6_Tr_0 = "Follow me.";
2	VOICEMACRO_6_Tr_0_FEMALE = "I lead the way.";
2	VOICEMACRO_6_Tr_1 = "You go with me.";
2	VOICEMACRO_6_Tr_1_FEMALE = "You go with me.";
2	VOICEMACRO_7_Dw_0 = "Wait here.";
2	VOICEMACRO_7_Dw_0_FEMALE = "Stay here.";
2	VOICEMACRO_7_Dw_1 = "Stay put.";
2	VOICEMACRO_7_Dw_1_FEMALE = "Wait here.";
2	VOICEMACRO_7_Dw_2 = "Stay here.";
2	VOICEMACRO_7_Gn_0 = "Stay here for a moment.";
2	VOICEMACRO_7_Gn_0_FEMALE = "Stay here for a moment.";
2	VOICEMACRO_7_Gn_1 = "Wait here, please.";
2	VOICEMACRO_7_Gn_1_FEMALE = "Wait here, please.";
2	VOICEMACRO_7_Hu_0 = "Stay put.";
2	VOICEMACRO_7_Hu_0_FEMALE = "Stay put.";
2	VOICEMACRO_7_Hu_1 = "Stay here.";
2	VOICEMACRO_7_Hu_1_FEMALE = "Stay here.";
2	VOICEMACRO_7_Hu_2 = "Wait here.";
2	VOICEMACRO_7_Hu_2_FEMALE = "Wait here.";
2	VOICEMACRO_7_Ni_0 = "Remain here.";
2	VOICEMACRO_7_Ni_0_FEMALE = "Remain here.";
2	VOICEMACRO_7_Ni_1 = "Wait here.";
2	VOICEMACRO_7_Ni_1_FEMALE = "Wait here.";
2	VOICEMACRO_7_Or_0 = "Remain here.";
2	VOICEMACRO_7_Or_0_FEMALE = "Stay.";
2	VOICEMACRO_7_Or_1 = "Stay here.";
2	VOICEMACRO_7_Or_1_FEMALE = "Wait here.";
2	VOICEMACRO_7_Sc_0 = "Wait.";
2	VOICEMACRO_7_Sc_0_FEMALE = "Stay here.";
2	VOICEMACRO_7_Sc_1 = "Stay here.";
2	VOICEMACRO_7_Sc_1_FEMALE = "Don't move.";
2	VOICEMACRO_7_Ta_0 = "Rest a moment.";
2	VOICEMACRO_7_Ta_0_FEMALE = "Rest your haunches.";
2	VOICEMACRO_7_Ta_1 = "Remain here.";
2	VOICEMACRO_7_Ta_1_FEMALE = "Remain here.";
2	VOICEMACRO_7_Ta_2 = "Stew here.";
2	VOICEMACRO_7_Tr_0 = "You stay here.";
2	VOICEMACRO_7_Tr_0_FEMALE = "You stay here.";
2	VOICEMACRO_7_Tr_1 = "Stay put.";
2	VOICEMACRO_7_Tr_1_FEMALE = "Stay put.";
2	VOICEMACRO_7_Tr_2 = "Don't you be going nowhere.";
2	VOICEMACRO_7_Tr_2_FEMALE = "Don't you be going nowhere.";
2	VOICEMACRO_8_Dw_0 = "I need healing!";
2	VOICEMACRO_8_Dw_0_FEMALE = "I need healing!";
2	VOICEMACRO_8_Dw_1 = "Tend me wounds!";
2	VOICEMACRO_8_Dw_1_FEMALE = "Tend me wounds!";
2	VOICEMACRO_8_Dw_2 = "Heal me!";
2	VOICEMACRO_8_Dw_2_FEMALE = "Heal me!";
2	VOICEMACRO_8_Gn_0 = "Please, heal me!";
2	VOICEMACRO_8_Gn_0_FEMALE = "Please, heal me!";
2	VOICEMACRO_8_Gn_1 = "Would you please heal me?";
2	VOICEMACRO_8_Gn_1_FEMALE = "Would you please heal me?";
2	VOICEMACRO_8_Hu_0 = "I need healing!";
2	VOICEMACRO_8_Hu_0_FEMALE = "I need healing.";
2	VOICEMACRO_8_Hu_1 = "Heal me!";
2	VOICEMACRO_8_Hu_1_FEMALE = "Heal me!";
2	VOICEMACRO_8_Ni_0 = "Heal me!";
2	VOICEMACRO_8_Ni_0_FEMALE = "Heal me!";
2	VOICEMACRO_8_Ni_1 = "I need healing!";
2	VOICEMACRO_8_Ni_1_FEMALE = "I need healing!";
2	VOICEMACRO_8_Or_0 = "Heal me!";
2	VOICEMACRO_8_Or_0_FEMALE = "Heal me!";
2	VOICEMACRO_8_Or_1 = "I need healing!";
2	VOICEMACRO_8_Or_1_FEMALE = "I need healing!";
2	VOICEMACRO_8_Sc_0 = "Heal my flesh!";
2	VOICEMACRO_8_Sc_0_FEMALE = "Heal me!";
2	VOICEMACRO_8_Sc_1 = "Heal me!";
2	VOICEMACRO_8_Sc_1_FEMALE = "Bind my wounds!";
2	VOICEMACRO_8_Ta_0 = "Heal me!";
2	VOICEMACRO_8_Ta_0_FEMALE = "Heal me!";
2	VOICEMACRO_8_Ta_1 = "I need healing!";
2	VOICEMACRO_8_Ta_1_FEMALE = "I need healing!";
2	VOICEMACRO_8_Tr_0 = "Cure me!";
2	VOICEMACRO_8_Tr_0_FEMALE = "I be in a bad way!";
2	VOICEMACRO_8_Tr_1 = "Heal me!";
2	VOICEMACRO_8_Tr_1_FEMALE = "Cure me!";
2	VOICEMACRO_8_Tr_2 = "I be in a bad way.";
2	VOICEMACRO_8_Tr_2_FEMALE = "Heal me!";
2	VOICEMACRO_LABEL = "Voice Emote";
2	VOICEMACRO_LABEL_AID1 = "aid";
2	VOICEMACRO_LABEL_ATTACKMYTARGET1 = "assist";
2	VOICEMACRO_LABEL_ATTACKMYTARGET2 = "as";
2	VOICEMACRO_LABEL_CHARGE1 = "charge";
2	VOICEMACRO_LABEL_CHEER1 = "cheer";
2	VOICEMACRO_LABEL_CONGRATULATIONS1 = "grats";
2	VOICEMACRO_LABEL_CONGRATULATIONS2 = "congrats";
2	VOICEMACRO_LABEL_CONGRATULATIONS3 = "congratulations";
2	VOICEMACRO_LABEL_FLEE1 = "flee";
2	VOICEMACRO_LABEL_FLEE2 = "run";
2	VOICEMACRO_LABEL_FLIRT1 = "flirt";
2	VOICEMACRO_LABEL_FOLLOW1 = "followme";
2	VOICEMACRO_LABEL_FOLLOWME1 = "followme";
2	VOICEMACRO_LABEL_FOLLOWME2 = "follow";
2	VOICEMACRO_LABEL_FOLLOWME3 = "fol";
2	VOICEMACRO_LABEL_GOODBYE1 = "goodbye";
2	VOICEMACRO_LABEL_GOODBYE2 = "bye";
2	VOICEMACRO_LABEL_HEALME1 = "heal";
2	VOICEMACRO_LABEL_HEALME2 = "healme";
2	VOICEMACRO_LABEL_HELLO1 = "hello";
2	VOICEMACRO_LABEL_HELP1 = "helpme";
2	VOICEMACRO_LABEL_HELPME1 = "help";
2	VOICEMACRO_LABEL_HELPME2 = "helpme";
2	VOICEMACRO_LABEL_INCOMING1 = "incoming";
2	VOICEMACRO_LABEL_INCOMING2 = "inc";
2	VOICEMACRO_LABEL_JOKE1 = "silly";
2	VOICEMACRO_LABEL_NO1 = "no";
2	VOICEMACRO_LABEL_OPENFIRE1 = "fire";
2	VOICEMACRO_LABEL_OPENFIRE2 = "openfire";
2	VOICEMACRO_LABEL_OUTOFMANA1 = "oom";
2	VOICEMACRO_LABEL_OUTOFMANA2 = "outofmana";
2	VOICEMACRO_LABEL_RASPBERRY1 = "rasp";
2	VOICEMACRO_LABEL_RASPBERRY2 = "raspberry";
2	VOICEMACRO_LABEL_SILLY1 = "silly";
2	VOICEMACRO_LABEL_THANKYOU1 = "thankyou";
2	VOICEMACRO_LABEL_THANKYOU2 = "thanks";
2	VOICEMACRO_LABEL_THANKYOU3 = "thank";
2	VOICEMACRO_LABEL_TRAIN1 = "train";
2	VOICEMACRO_LABEL_WAITHERE1 = "wait";
2	VOICEMACRO_LABEL_WAITHERE2 = "waithere";
2	VOICEMACRO_LABEL_YES1 = "yes";
2	VOICEMACRO_LABEL_YOUREWELCOME1 = "welcome";
2	VOICEMACRO_LABEL_YOUREWELCOME2 = "welc";
2	VOICE_ACTIVATED = "Voice Activated";
2	VOICE_ACTIVATION_SENSITIVITY = "Activation Sensitivity";
2	VOICE_AMBIENCE = "Ambience";
2	VOICE_CHAT = "Voice Chat";
2	VOICE_CHAT_AUDIO_DUCKING = "Select the level game sounds should adjust to while listening or talking in voice chat.";
2	VOICE_CHAT_BATTLEGROUND = "Battleground";
2	VOICE_CHAT_MODE = "Voice Chat Mode";
2	VOICE_CHAT_NORMAL = "Normal"; -- The standard.
2	VOICE_CHAT_OPTIONS = "Voice Options";
2	VOICE_CHAT_OUTPUT_DEVICE = "Speakers";
2	VOICE_CHAT_PARTY_RAID = "Party/Raid";
2	VOICE_GAME_DUCKING = "Game Audio Fade";
2	VOICE_INPUT_VOLUME = "Microphone Volume";
2	VOICE_LABEL = "Voice";
2	VOICE_LISTENING = "Listening";
2	VOICE_MICROPHONE_TEST = "Microphone Test";
2	VOICE_MIC_TEST_PLAY = "Play the recorded sample.";
2	VOICE_MIC_TEST_RECORD = "Record a sample.";
2	VOICE_MUSIC = "Music";
2	VOICE_OUTPUT_VOLUME = "Speaker Volume";
2	VOICE_SOUND = "Sound";
2	VOICE_SUBTEXT = "These options control sound hardware and input settings for the voice chat system.";
2	VOICE_TALKING = "Talking";
2	VOLUME = "Volume";
2	VULNERABLE_TRAILER = " (+%d vulnerability bonus)"; -- Appended to attack strings in the combat log when damage is amplified by vulnerability. (NOTE SPACE AT BEGINNING)
2	WAISTSLOT = "Waist"; -- Waist slot
2	WARLOCK_INTELLECT_TOOLTIP = "Increases mana points and chance to score a critical hit with spells.\nIncreases the rate at which weapon skills improve.";
2	WARRIOR_STRENGTH_TOOLTIP = "Increases attack power with melee weapons.\nIncreases the amount of damage that can be blocked with a shield.";
2	WATER_COLLISION = "Water Collision";
2	WATER_DETAIL = "Water Detail";
2	WEAPON_SKILL_RATING = "Weapon Skill Rating %d";
2	WEAPON_SKILL_RATING_BONUS = " (+%d skill)";
2	WEAPON_SPEED = "Speed";
2	WEATHER_DETAIL = "Weather Intensity";
2	WEEKDAY_FRIDAY = "Friday";
2	WEEKDAY_MONDAY = "Monday";
2	WEEKDAY_SATURDAY = "Saturday";
2	WEEKDAY_SUNDAY = "Sunday";
2	WEEKDAY_THURSDAY = "Thursday";
2	WEEKDAY_TUESDAY = "Tuesday";
2	WEEKDAY_WEDNESDAY = "Wednesday";
2	WHISPER = "Whisper";
2	WHISPER_MESSAGE = "Whisper"; -- Whisper message to a particular player
2	WHO = "Who";
2	WHO_FRAME_SHOWN_TEMPLATE = "(%d displayed)";
2	WHO_FRAME_TOTAL_TEMPLATE = "%d |4Person:People; Found";
2	WHO_LIST = "Who List";
2	WHO_LIST_FORMAT = "|Hplayer:%s|h[%s]|h: Level %d %s %s - %s"; -- Example: Jeremy: Level 10 Human Warrior - Westfall
2	WHO_LIST_GUILD_FORMAT = "|Hplayer:%s|h[%s]|h: Level %d %s %s <%s> - %s"; -- Example: Tigole: Level 40 Human Rogue <Legacy of Steel> - Westfall
2	WHO_NUM_RESULTS = "%d |4player:players; total";
2	WHO_TAG_CLASS = "c-"; -- "class" tag for /who
2	WHO_TAG_GUILD = "g-";
2	WHO_TAG_NAME = "n-"; -- "name" tag for /who
2	WHO_TAG_RACE = "r-"; -- "race" tag for /who
2	WHO_TAG_ZONE = "z-"; -- "zone" tag for /who
2	WIDESCREEN_TAG = "(Wide)";
2	WINDOWED_MAXIMIZED = "Maximized";
2	WINDOWED_MODE = "Windowed Mode";
2	WINDOW_LOCK = "Disable Resize";
2	WIN_LOSS = "Win - Loss"; -- Arena Team UI "Win-Loss" label
2	WITHDRAW = "Withdraw"; -- Used in the GuildBank Frame
2	WORK_IN_PROGRESS = "Work in progress";
2	WORLDMAP_BUTTON = "World Map"; -- World map microbutton text
2	WORLD_APPEARANCE = "World Appearance";
2	WORLD_LOD = "Level of Detail";
2	WORLD_MAP = "World Map"; -- Title for world map frame
2	WORLD_PORT_ROOT_TIMER = "You have fallen through the world.  You will be rooted here for %d %s.";
2	WORLD_PVP_DISPLAY = "Display World PVP Objectives";
2	WRISTSLOT = "Wrist"; -- Wrist slot
2	WRONG_SLOT_FOR_ITEM = "That item does not go in that slot."; -- The item can't go in that slot.
2	XP = "XP"; -- Abbreviation for "experience"
2	XPBAR_LABEL = "XP Bar";
2	XP_BAR_TEXT = "Experience Bar Text"; -- Label for Experience Bar Text option in the UI Options frame
2	YELL = "Yell";
2	YELLOW_GEM = "Yellow";
2	YELL_MESSAGE = "Yell"; -- Yell to a wide area
2	YES = "Yes"; -- Generic "yes"
2	YOU = "You"; -- "You", the player
2	YOUR_BID = "Your bid:";
2	YOU_LOOT_MONEY = "You loot %s";
2	ZHCN = "Simplified Chinese";
2	ZHTW = "Traditional Chinese";
2	ZONE = "Zone"; -- Label for "Zone" field in the world map
2	ZONE_COLON = "Zone:";
2	ZONE_UNDER_ATTACK = "|cffffff00%s is under attack!|r"; -- %s is the zone which is under attack by enemy players
2	ZOOM_IN = "Zoom In";
2	ZOOM_OUT = "Zoom Out"; -- Button text to zoom out your view in the world map
2	ZOOM_OUT_BUTTON_TEXT = "Right Click On Map To Zoom Out";
2	_RECORDING_WARNING_CORRUPTED = "This movie file is not valid.";

==============================================================================
PowerAuras.test.ActionReady.lua
==============================================================================
0	﻿	
2		function TestPA:test_ActionReady_ShouldShow()
1			self:SetUp();
1			TestPA.Debug = true;
1			self:SetupFor("ActionUsable");
			
1			self:AuraTest(15,  true, "Action Ready");
	
1			self:TearDown();
		end

==============================================================================
PowerAuras.test.lua
==============================================================================
0	﻿package.path = "?;?.lua;..\\?;..\\?.lua";
0	require("luacov")
1	require("luaunit")
	-- WowWAPI mocking
1	require("WoWmock")
	-- Addon specific Mocking code
1	require("PowerAurasUIMock")
	--Addon code
1	require("PowerAurasBase")
1	require("GTFO_Spells")
1	require("localisation")
1	require("localisation_frFR")
1	require("localisation_deDE")
1	require("localisation_ruRU")
1	require("localisation_zhCN")
1	require("localisation_zhTW")
1	require("localisation_koKR")
1	require("PowerAurasDump")
1	require("PowerAurasDecoratorClasses")
1	require("PowerAurasAuraClasses")
1	require("PowerAurasAnimations")
1	require("PowerAuras")
1	require("PowerAurasEvents")
1	require("PowerOptions")
	
2	function PowaAuras:UnitTestDebug(...)
0		if (TestPA.Debug) then
0			print(...);		
		end
	end
	
2	function PowaAuras:UnitTestInfo(...)
0		for k,v in pairs({...}) do
0			TestPA.Output = TestPA.Output .. tostring(v) .. " ";
		end
0		TestPA.Output = TestPA.Output .. "#";
	end
		
1	TestPA = {Debug = false;} --aura
	
2		function TestPA:ClassSetUp()
	
0			this = {};
0			this.GetName = GetName;
			
		end
	
2		function TestPA:ClassTearDown()
			-- do nothing
		end
	
2		function TestPA:SetUp()
2			self.Debug = false;
2			WoWMock.AltKeyDown = false;
2			WoWMock.ControlKeyDown = false;
2			_Paladin_is_Ready = false;
2			WoWMock.Output = "";
2			WoWMock.Target = "target";
2			GameTooltip:SetOwner(nil);
2			UIParent ={};
2			PowaSet = {};
2			PowaGlobalSet = {};
2			Timers = {};
2			PowaAuras.Auras = {};
2			self.Output = "";
		end
	
2		function TestPA:TearDown()
			-- LuaUnit:SetVerbose(false);
		end
		
2		function TestPA:SetupFor(dump, locale)
2			dofile("dumps/"..dump..".lua"); -- to get the locale
2			if (locale) then
0				PowaState.Locale = locale;
			end
2			dofile("GlobalStrings/"..PowaState.Locale..".lua");
2			dofile("../PowerAurasBase.lua");
2			dofile("../GTFO_Spells.lua");
2			dofile("../localisation.lua");
2			dofile("../localisation_frFR.lua")
2			dofile("../localisation_deDE.lua")
2			dofile("../localisation_ruRU.lua")
2			dofile("../localisation_zhCN.lua")
2			dofile("../localisation_zhTW.lua")
2			dofile("../localisation_koKR.lua")
2			dofile("../PowerAurasDump.lua");
2			dofile("../PowerAurasDecoratorClasses.lua");
2			dofile("../PowerAurasAuraClasses.lua");
2			dofile("../PowerAurasAnimations.lua");
2			dofile("../PowerAuras.lua");
2			dofile("../PowerAurasEvents.lua");
2			dofile("../PowerOptions.lua");
2			dofile("dumps/"..dump..".lua"); -- to restore the settings
			
2			PowaAuras.UnitTestDebug =
0			function(self, ...)
766				if (TestPA.Debug) then
280					print(...);		
				end
			end
					
2			PowaAuras.UnitTestInfo =
0			function(self, ...)
3				for k,v in pairs({...}) do
2					TestPA.Output = TestPA.Output .. tostring(v) .. " ";
				end
1				TestPA.Output = TestPA.Output .. "#";
			end
			
2			if (locale) then
0				PowaState.Locale = locale;
			end
127	 		for k,v in pairs(PowaState.Powa) do
125				if (type(v)~="table") then
54					PowaAuras[k] = v;
				end
			end
2			PowaAuras:VARIABLES_LOADED();
2			PowaAuras:PLAYER_ENTERING_WORLD();
		end
		
	
2		function TestPA:AuraTest(auraId, expected, expectedReason)
1			local BuffTypeNames = PowaAuras:ReverseTable(PowaAuras.BuffTypes);
1			local aura = PowaAuras.Auras[auraId];
1	        PowaAuras:UnitTestDebug("--------------------------");	
1			PowaAuras:UnitTestDebug(auraId,"  Aura count", #PowaAuras.Auras, auraId);
1	        PowaAuras:UnitTestDebug("Testing aura",auraId,BuffTypeNames[aura.bufftype],aura.buffname);
1			local result, reason = aura:ShouldShow(true);
1			TestPA.Debug = false;
1			assertEquals(result, expected, aura.id.." (" ..tostring(aura.buffname)..")");
1			if (expectedReason) then
1				assertEquals(reason, expectedReason, "Reason "..aura.id.." (" ..tostring(aura.buffname)..")");
			end
		end
		
	--------------------TESTS START HERE ---------------------
	
	
2		function TestPA:test_WelcomeMessage()
1			self:SetUp();
1			TestPA:SetupFor("SoloPaladin");		
1			assertEquals(WoWMock.Output, "|cffB0A0ff<Power Auras Classic>|r |cffffff00v2.6.2F|r - Type /powa to view the options.#", "Set-up");
1			self:TearDown()
		end
	
		--dofile("PowerAuras.test.Utils.lua");
		--dofile("PowerAuras.test.TimerClass.lua");
		--dofile("PowerAuras.test.AuraClass.lua");
		--dofile("PowerAuras.test.Locales.lua");
		--dofile("PowerAuras.test.ShouldShow.lua");
1		dofile("PowerAuras.test.ActionReady.lua");
		--dofile("PowerAuras.test.DisplayAndAnimate.lua");
	
1	LuaUnit.result.verbosity = 0;
1	LuaUnit:run();

==============================================================================
PowerAurasUIMock.lua
==============================================================================
16	for i = 1, 15 do
45		setglobal("PowaOptionsList"..i, {}).SetText = function(self, text) end;
	end
	
1	setglobal("AuraTexture", CreateTexture("AuraTexture"));
1	setglobal("PowaIconTexture", CreateTexture("PowaIconTexture"));
	
1	setglobal("PowaAuras_Frame", CreateFrame("Frame", "PowaAuras_Frame", "UIParent"));
	
3	setglobal("PowaBarAuraTextureSlider", {}).SetMinMaxValues = function(self, text) end;
3	setglobal("PowaBarAuraTextureSliderHigh", {}).SetText = function(self, text) end;
	
1	setglobal("PowaOptionsUpdateSlider", {}).SetValue = function(self, value) end;
1	setglobal("PowaOptionsAnimationsSlider", {}).SetValue = function(self, value) end;
3	setglobal("PowaOptionsUpdateSlider2", {}).SetValue = function(self, value) end;
3	setglobal("PowaOptionsAnimationsSlider2", {}).SetValue = function(self, value) end;
3	setglobal("PowaOptionsTimerUpdateSlider2", {}).SetValue = function(self, value) end;
	
3	setglobal("PowaEnableButton", {}).SetChecked = function(self, value) end;
3	setglobal("PowaDebugButton", {}).SetChecked = function(self, value) end;
3	setglobal("PowaTimerRoundingButton", {}).SetChecked = function(self, value) end;
3	setglobal("PowaGTFOButton", {}).SetChecked = function(self, value) end;
	
1	setglobal("PowaAuras_Tooltip", cWoWMockTooltip("PowaAuras_Tooltip"));
1	setglobal("PowaAction_Tooltip", cWoWMockTooltip("PowaAction_Tooltip"));

==============================================================================
WoWmock.lua
==============================================================================
	-- class.lua
	-- Compatible with Lua 5.1 (not 5.0).
1	function MockClass(base,ctor)
7		local c = {}     -- a new class instance
7		if not ctor and type(base) == 'function' then
7	      ctor = base
7	      base = nil
0		elseif type(base) == 'table' then
	   -- our new class is a shallow copy of the base class!
0	      for i,v in pairs(base) do
0	          c[i] = v
	      end
0	      c._base = base
		end
		-- the class will be the metatable for all its objects,
		-- and they will look up their methods in it.
7		c.__index = c
	
		-- expose a ctor which can be called by <classname>(<args>)
7		local mt = {}
0		mt.__call = function(class_tbl,...)
60			local obj = {}
60			setmetatable(obj,c)
60			if ctor then
				--PowaAuras:ShowText("Call constructor "..tostring(ctor));
60				ctor(obj,...)
			end 
60			return obj
		end
	    
7	    if ctor then
7			c.init = ctor;
	    else 
0	 		if base and base.init then
0				c.init = base.init;
0				ctor = base.init;
			end
	    end
	 
0		c.is_a = function(self,klass)
0	      local m = getmetatable(self)
0	      while m do 
0	         if m == klass then return true end
0	         m = m._base
	      end
0	      return false
	    end
7	  setmetatable(c,mt)
7	  return c
	end
	
	
1	PowaState = {};
	
1	function getglobal(key)
30		return _G[key];
	end
	
1	function setglobal(key, value) 
85		_G[key] = value;
85		setfenv(0, _G );
85		return _G[key];
	end
	
1	function seterrorhandler(fun)
	end
	
1	function TEXT()
	end
	
1	function LibStub(major, silent)
	end
	
1	ChatFrame1 = {};
1	RED_FONT_COLOR = {r=1,g=0,b=0};
1	NORMAL_FONT_COLOR = {r=1,g=1,b=1};
	
1	WoWMock = {};
1	WoWMock.Output = "";
1	WoWMock.ControlKeyDown = false;
1	WoWMock.AltKeyDown = false;
1	WoWMock.Target = "target";
1	WoWMock.LastTarget = nil;
	
	
2	function WoWMock:PrintTable(t)
0		if (type(t)~="table") then
0			print(t, "is not a table");
		end
0		print(t);
0		for k,v in pairs(t) do
0			print(k,v);
		end
	end
	
2	function WoWMock:table_minmax(tab)
0	    local min,max=nil,nil
0	    for k,v in tab do
0	        local k_num = tonumber(k)
0	        if ( k_num ) then
0	            if ( not min or k_num < min ) then
0	                min = k_num
	            end
0	            if ( not max or k_num > max ) then
0	                max = k_num
	            end
	        end
	    end
0	    return min,max
	end
	
2	function WoWMock:table_first(tab)
0	    local min = PA:table_minmax(tab)
0	    if ( min ) then
0	        return min,tab[min]
	    else
0	        for k,v in tab do
0	            return k,v
	        end
	    end
0	    return nil,nil
	end
	
2	function WoWMock:TableEmpty(tableList)
0		for key, value in tableList do
0			return false;
		end
0		return true;
	end
	
2	function WoWMock:RecordOutput(msg)
1		self.Output = self.Output..msg.."#";	
1		if (LuaUnit.Verbose==true) then
0			print(msg);
		end
	end
	
2	function ChatFrame1.AddMessage (me, msg, r,g,b,a)
0		WoWMock:RecordOutput(msg);
	end
	
1	UIErrorsFrame = ChatFrame1;
	
1	function UIDropDownMenu_SetSelectedValue(owner, value)
	end
	
1	function GetName(self)
0		if ( self ) then
0			if ( self.name ) then 
0				return self.name;
			else
0				return "TestProgram";
			end
		end
	
0		return nil;
	end
	
1	function GetTime()
2		return WoWMock:GetState("Time");
	end
	
1	function GetLocale()
18		return WoWMock:GetState("Locale");
	end
	
2	function WoWMock:GetState(key, default)
22		if (PowaState[key]==nil) then
6			key = string.lower(key);
6			if (PowaState[key]~=nil) then
0				return PowaState[key];
			end
6			return default;
		end
16		return PowaState[key];
	end
	
1	function GetRealZoneText()	
0		return WoWMock:GetState("Zone");
	end
	
1	function GetRealmName()
0		return WoWMock:GetState("Realm");
	end
	
2	function WoWMock:GetUnit(unit)
6		if (unit==nil) then return nil; end
6		unit = string.lower(unit);
6		local UnitInfo = PowaState[unit];
6		if (UnitInfo~=nil) then
6			return UnitInfo;
		end
0		if (PowaState["Party"]~=nil) then
0			UnitInfo = PowaState.Party[unit];
0			if (UnitInfo~=nil) then
0				return UnitInfo;
			end
		end
0		if (PowaState["Raid"]~=nil) then
0			UnitInfo = PowaState.Raid[unit];
0			if (UnitInfo~=nil) then
0				return UnitInfo;
			end
		end
0		return nil;
	end
	
1	function GetSpellInfo(id)
246		if (not PowaState["SpellInfo"] or not PowaState["SpellInfo"][id]) then
246			return nil;
		end
0		return PowaState["SpellInfo"][id].Name,
0	     	   PowaState["SpellInfo"][id].Rank, 
0			   PowaState["SpellInfo"][id].Icon, 
0			   PowaState["SpellInfo"][id].Cost, 
0			   PowaState["SpellInfo"][id].IsFunnel, 
0			   PowaState["SpellInfo"][id].PowerType, 
0			   PowaState["SpellInfo"][id].CastTime, 
0			   PowaState["SpellInfo"][id].MinRange, 
0			   PowaState["SpellInfo"][id].MaxRange;
	end
	
1	function GetRuneCooldown(id)
0		if (not PowaState["RuneCooldown"] or not PowaState["RuneCooldown"][id]) then
0			return nil;
		end
0		return PowaState["RuneCooldown"][id].Start, PowaState["RuneCooldown"][id].Duration, PowaState["RuneCooldown"][id].RuneReady;
	end
1	function GetRuneType(id)
0		if (not PowaState["RuneType"]) then
0			return nil;
		end
0		return PowaState["RuneType"][id];
	end
	
1	function UnitExists(unit)
0		local Player = WoWMock:GetUnit(unit);
0		return (Player~=nil);
	end
	
1	function UnitIsConnected(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Connected;
		end
0		return nil;
	end
	
1	function UnitIsDead(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Dead;
		end
0		return nil;
	end
	
1	function UnitIsGhost(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Ghost;
		end
0		return nil;
	end
	
1	function UnitIsDeadOrGhost(unit)
2		local Player = WoWMock:GetUnit(unit);
2		if (Player~=nil) then
2			return Player.DeadOrGhost;
		end
0		return nil;
	end
	
1	function UnitIsVisible(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Ghost;
		end
0		return nil;
	end
	
1	function UnitIsCorpse(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Corpse;
		end
0		return nil;
	end
	
1	function UnitIsVisible(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Visible;
		end
0		return nil;
	end
	
1	function UnitIsPVP(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.PVP;
		end
0		return nil;
	end
	
1	function UnitThreatSituation(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.ThreatSituation;
		end
0		return nil;
	end
	
1	function GetPlayerMapPosition(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Pos~=nil) then
0			return Player.Pos.X, Player.Pos.Y;
		end
0		return nil, nil;
	end
	
1	function UnitIsEnemy(unit, player)
		-- Can only do UnitIsEnemy(unit, "player")
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Enemy;
		end
0		return nil;
	end
	
1	function UnitCanAttack(unit, player)
		-- Can only do UnitCanAttack(unit, "player")
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.CanAttack;
		end
0		return nil;
	end
	
1	function UnitCanCooperate(player, unit)
		-- Can only do UnitCanCooperate("player", unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.CanCooperate;
		end
0		return nil;
	end
	
1	function UnitIsFriend(unit1, unit2)
		-- Can only do UnitIsFriend(unit, "player") or UnitIsFriend("player", unit)
0		local unit = unit1
0		if (string.lower(unit1)=="player") then
0			unit = unit2;
		end
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return (Player.Friend); 
		end
0		return nil;
	end
	
1	function UnitName(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Name;
		end
0		return nil;
	end
	
1	function UnitInVehicle(unit)
2		local Player = WoWMock:GetUnit(unit);
2		if (Player~=nil) then
2			return Player.InVehicle;
		end
0		return nil;
	end
	
1	function UnitCastingInfo(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.CastingInfo~=nil) then
0			return  Player.CastingInfo.Spell,
0					Player.CastingInfo.Rank,
0					Player.CastingInfo.DisplayName,
0					Player.CastingInfo.Icon,
0					Player.CastingInfo.StartTime,
0					Player.CastingInfo.EndTime,
0					Player.CastingInfo.IsTradeSkill;
		end
0		return nil;
	end
	
1	function UnitChannelInfo(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.ChannelInfo~=nil) then
0			return  Player.ChannelInfo.Spell,
0					Player.ChannelInfo.Rank,
0					Player.ChannelInfo.DisplayName,
0					Player.ChannelInfo.Icon,
0					Player.ChannelInfo.StartTime,
0					Player.ChannelInfo.EndTime,
0					Player.ChannelInfo.IsTradeSkill;
		end
0		return nil;
	end
	
1	function UnitHealth(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Health;
		end
0		return nil;
	end
	
1	function UnitHealthMax(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.HealthMax;
		end
0		return nil;
	end
	
1	function UnitMana(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Mana;
		end
0		return nil;
	end
	
1	function UnitManaMax(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.ManaMax;
		end
0		return nil;
	end
	
1	function UnitPower(unit, powerType)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Power~=nil) then
0			if (powerType~=nil) then
0				return Player.Power[powerType];
			end
0			return Player.Power.Default;
		end
0		return nil;
	end
	
1	function UnitPowerMax(unit, powerType)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.PowerMax~=nil) then
0			if (powerType~=nil) then
0				return Player.PowerMax[powerType];
			end
0			return Player.PowerMax.Default;
		end
0		return nil;
	end
	
1	function GetShapeshiftForm(arg1)
0		return WoWMock:GetState("ShapeshiftForm", 0);
	end
	
1	function GetNumShapeshiftForms()
2		return WoWMock:GetState("NumShapeshiftForms", 1);
	end
	
1	function GetShapeshiftFormInfo(arg1)
12		if (not PowaState["ShapeshiftFormInfo"]) then
0			return nil;
		end
12		return PowaState["ShapeshiftFormInfo"][arg1];
	end
	
1	function UnitAura(unit, index, auraType)
0		if (auraType=="HELPFUL") then
0			return UnitBuff(unit, index);
		end
0		return  UnitDebuff(unit, index);
	end
	
1	function UnitDebuff(unit, index, removeable)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Debuffs~=nil and Player.Debuffs[index]~=nil) then
0			local debuff = Player.Debuffs[index];
0			if (removeable) then
0				debuff = Player.RemoveableDebuffs[index];
			end
0			return debuff.Name, debuff.Rank, debuff.Icon, debuff.Applications, debuff.Type, debuff.Duration, debuff.Expires, debuff.Source, debuff.Stealable; 
		end
0		return nil;
	end
	
1	function UnitBuff(unit, index)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Buffs~=nil and Player.Buffs[index]~=nil) then
0			local buff = Player.Buffs[index];
0			return buff.Name, buff.Rank, buff.Icon, buff.Applications, buff.Type, buff.Duration, buff.Expires, buff.Source, buff.Stealable; 
		end
0		return nil;
	end
	
1	function UnitClass(unit)
2		local Player = WoWMock:GetUnit(unit);
2		if (Player~=nil) then
2			return Player.LocClass, Player.Class;
		end
0		return nil, nil;
	end
	
1	function UnitSex(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Sex;
		end
0		return nil;
	end
	
1	function UnitPowerType(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.PowerType, Player.PowerTypeString;
		end
0		return nil;
	end
	
1	function UnitLevel(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.Level;
		end
0		return nil;
	end
	
1	function UnitInParty(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.InParty;
		end
0		return nil;
	end
	
1	function UnitInRaid(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.InRaid;
		end
0		return nil;
	end
1	function UnitInRaid(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.InRaid;
		end
0		return nil;
	end
	
1	function UnitHasVehicleUI(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			return Player.UnitHasVehicleUI;
		end
0		return nil;
	end
	
	
1	function UnitIsUnit(unit1, unit2)
0		local Player1 = WoWMock:GetUnit(unit1);
0		local Player2 = WoWMock:GetUnit(unit2);
0		if (Player1==nil or Player2==nil) then
0			return false;
		end
0		return (Player1.Name==Player2.Name);
	end
	
1	function IsRaidLeader()
0		return PowaState["RaidLeader"];
	end
	
1	function IsMounted()
2		return PowaState["IsMounted"];
	end
	
1	function IsFlying()
0		return PowaState["IsFlying"];
	end
	
1	function IsResting()
1		return PowaState["IsResting"];
	end
	
1	function GetWeaponEnchantInfo()
0		if (PowaState.WeaponEnchant~=nil) then
0			return  PowaState.WeaponEnchant.hasMainHandEnchant,
0					PowaState.WeaponEnchant.mainHandExpiration,
0					PowaState.WeaponEnchant.mainHandCharges,
0					PowaState.WeaponEnchant.hasOffHandEnchant,
0					PowaState.WeaponEnchant.offHandExpiration,
0					PowaState.WeaponEnchant.offHandCharges;
		else
0			return nil;
		end
	end
	
1	function GetInventoryItemTexture(unit, slot)
0		if (string.lower(unit)=="player" and PowaState.Inventory~=nil and PowaState.Inventory.Slot ~=nil and PowaState.Inventory.Slot[i]~=nil) then
0			return PowaState.Inventory.Slot[i].Texture;
		end
0		return nil;
	end
	
1	function GetNumPartyMembers()
2		if (PowaState["Party"]~=nil) then
0			return PowaState.Party.Count or 0;
		end
2		return 0;
	end
	
1	function GetNumRaidMembers()
2		if (PowaState["Raid"]~=nil) then
0			return PowaState.Raid.Count or 0;
		end
2		return 0;
	end
	
1	function GetPartyLeaderIndex()
0		if (PowaState["PartyLeaderIndex"]~=nil) then
0			return PowaState["PartyLeaderIndex"];
		end
0		return 0;
	end
	
1	function GetRaidRosterInfo(i)
0		local Roster = PowaState.Raid.Roster[i];
0		return Roster.Name, Roster.Rank, Roster.Subgroup, Roster.Level, Roster.Classloc, Roster.Class, Roster.Zone, Roster.Online, Roster.IsDead;
	end
	
1	function GetComboPoints(unit)
0		if ((PowaState.ComboPoints~=nil) and (PowaState.ComboPoints[unit]~=nil)) then
0			return PowaState.ComboPoints[unit];
		end
0		return 0;
	end
	
1	function SendChatMessage(msg, system, language, target)
0		WoWMock:RecordOutput(msg);
	end
	
1	function IsControlKeyDown()
0		return WoWMock.ControlKeyDown;
	end
	
1	function IsAltKeyDown()
0		return WoWMock.AltKeyDown;
	end
	
1	function gsub(text, match, replace, count)
0		return string.gsub(text, match, replace, count);
	end
	
1	function format(patten, ...)
0		return string.format(patten, unpack(arg));
	end
	
1	function getn(collection)
0		return table.getn(collection);
	end
	
1	function sort(collection)
0		return table.sort(collection);
	end
	
1	function floor(num)
0		return math.floor(num);
	end
	
1	function strlower(text)
0		return string.lower(text);
	end
	
	--Frames
	
1	DEFAULT_CHAT_FRAME = {};
	
2	function DEFAULT_CHAT_FRAME:AddMessage(text, n1, n2, n3)
1		WoWMock:RecordOutput(text);	
	end
	
	
2	cWoWMockFrame = MockClass(function(frame, frameType, frameName, parentFrame, inheritsFrame)
1		frame.Type = frameType;
1		frame.Name = frameName;
1		frame.Parent = parentFrame;
1		frame.InheritsFrame = inheritsFrame;
1		frame.Width = 100;
1		frame.Height = 100;
1		frame.Alpha = 1.0;
1		frame.x = 0;
1		frame.y = 0;
1		frame.Anchor = "UNKNOWN";
3	end);
	
2	function cWoWMockFrame:SetFrameStrata(strata)
0		self.Strata = strata;
	end
2	function cWoWMockFrame:Hide()
0		self.Hidden = true;
	end	 
2	function cWoWMockFrame:Show()
0		self.Hidden = false;
	end
2	function cWoWMockFrame:RegisterEvent(event)
	end	 
2	function cWoWMockFrame:SetPoint(anchor, x, y)
0		self.Anchor = anchor;
0		self.x = x;
0		self.y = y;
	end
2	function cWoWMockFrame:GetPoint(n)
0		return self.Anchor, nil, self.Anchor, self.x, self.y;
	end
2	function cWoWMockFrame:SetWidth(x)
0		self.Width = x;
	end
2	function cWoWMockFrame:SetHeight(x)
0		self.Height = x;
	end
2	function cWoWMockFrame:SetAlpha(x)
0		self.Alpha = x;
	end
2	function cWoWMockFrame:GetWidth(x)
0		return self.Width;
	end
2	function cWoWMockFrame:GetHeight(x)
0		return self.Height;
	end
2	function cWoWMockFrame:GetAlpha(x)
0		return self.Alpha;
	end
	
2	function cWoWMockFrame:IsVisible()
0		return not self.Hidden;
	end
	
2	function cWoWMockFrame:CreateFontString(name, layer)
0		return CreateFontString(name, layer);
	end	 
2	function cWoWMockFrame:CreateTexture(name, layer)
0		return CreateTexture(name, layer);
	end	
2	function cWoWMockFrame:CreateAnimationGroup(name, inheritsFrom)
0		return CreateAnimationGroup(name, inheritsFrom);
	end	
	
1	function CreateFrame(frameType, frameName, parentFrame, inheritsFrame)
1		return cWoWMockFrame(frameType, frameName, parentFrame, inheritsFrame);
	end
	
	--AnimationGroup
2	cWoWMockAnimationGroup = MockClass(function(animationGroup, name, inheritsFrom)
0		animationGroup.Name = name;
0		animationGroup.InheritsFrom = inheritsFrom;
0		animationGroup.scripts = {};
2	end);
2	function cWoWMockAnimationGroup:SetScript(event, script)
0		self.scripts[event] = script;
	end	
2	function cWoWMockAnimationGroup:CreateAnimation(animationType, name)
0		return cWoWMockAnimation(animationType, name);
	end	
1	function CreateAnimationGroup(name, inheritsFrom)
0		return cWoWMockAnimationGroup(name, inheritsFrom);
	end
	
	--Animation
2	cWoWMockAnimation = MockClass(function(animation, animationType, name)
0		animation.Name = name;
0		animation.Type = animationType;
0		animation.scripts = {};
2	end);
2	function cWoWMockAnimation:SetScript(event, script)
0		self.scripts[event] = script;
	end	
	
	--Textures
2	cWoWMockTexture = MockClass(function(texture, textureName, layer, inheritsFrom)
2		texture.Name = frameName;
2		texture.Layer = layer;
2		texture.InheritsFrom = inheritsFrom;
4	end);
2	function cWoWMockTexture:SetBlendMode(mode)
0		self.BlendMode = mode;
	end	
2	function cWoWMockTexture:SetAllPoints(frame)
	end
2	function cWoWMockTexture:SetTexture(texture)
2		self.Texture = texture;
	end	
2	function cWoWMockTexture:GetTexture()
0		return self.Texture;
	end	
	
2	function cWoWMockTexture:GetObjectType()
0		return "Texture";
	end
1	function CreateTexture(textureName, layer, inheritsFrom)
2		return cWoWMockTexture(textureName, layer, inheritsFrom);
	end
	
2	function cWoWMockTexture:SetVertexColor()
	end
	
2	function cWoWMockTexture:SetBlendMode()
	end
	
2	function cWoWMockTexture:SetShadowColor()
	end
	
2	function cWoWMockTexture:SetShadowOffset()
	end
	
2	function cWoWMockTexture:SetTexCoord()
	end
	
	-- FontString
2	cWoWMockFontString = MockClass(function(fontString, name, layer, inheritsFrom)
0		fontString.Name = name;
0		fontString.Layer = layer;
0		fontString.InheritsFrom = inheritsFrom;
2	end);
2	function cWoWMockFontString:ClearAllPoints()
	end	
2	function cWoWMockFontString:SetPoint(pos, frame)
	end	
2	function cWoWMockFontString:SetTextColor(r,g,b)
0		self.r = r;
0		self.g = g;
0		self.b = b;
	end
2	function cWoWMockFontString:SetJustifyH(just)
0		self.JustifyH = just;
	end
	
2	function cWoWMockFontString:GetObjectType()
0		return "FontString";
	end
	
1	function CreateFontString(name, layer, inheritsFrom)
0		return cWoWMockFontString(name, layer, inheritsFrom);
	end
	
	
1	MAX_SKILLLINE_TABS = 8;
1	NUM_BAG_FRAMES = 4;
1	MAX_BATTLEFIELD_QUEUES = 3;
	
1	function GetSpellTabInfo(i)
0		if (PowaState.SpellTabs==nil or PowaState.SpellTabs[i]==nil) then
0			return nil, nil, nil, nil;
		end
0		return PowaState.SpellTabs[i].Name, PowaState.SpellTabs[i].Texture, PowaState.SpellTabs[i].Offset, PowaState.SpellTabs[i].Count;
	end
					
1	function GetSpellName(i, bookType)
0		if (PowaState.SpellBook==nil or PowaState.SpellBook[i]==nil) then
0			return nil, nil;
		end
0		return PowaState.SpellBook[i].Name, PowaState.SpellBook[i].Rank;
	end
	
1	function GetSpellTexture(i, bookType)
0		if (PowaState.SpellBook==nil or PowaState.SpellBook[i]==nil) then
0			return nil;
		end
0		return PowaState.SpellBook[i].Texture;
	end
	
1	function GetSpellCooldown(i, bookType)
0		if (PowaState.SpellBook==nil or PowaState.SpellBook[i]==nil or PowaState.SpellBook[i].Cooldown==nil) then
0			return 0, 0, 0; 
		end
0		return PowaState.SpellBook[i].Cooldown.StartTime, PowaState.SpellBook[i].Cooldown.Duration, PowaState.SpellBook[i].Cooldown.Enabled;
	end
	
1	function IsUsableSpell(i, bookType)
0		if (PowaState.SpellBook==nil or PowaState.SpellBook[i]==nil) then
0			return nil; 
		end
0		return PowaState.SpellBook[i].UsableSpell;
	end
	
1	function HasAction(i)
240		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
240		return PowaState.ActionSlots[i].HasAction;
	end
	
1	function IsUsableAction(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].UsableAction;
	end
	
1	function IsUsableAction(i)
1		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
1		return PowaState.ActionSlots[i].UsableAction;
	end
	
1	function IsActionInRange(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].InRange;
	end
	
1	function ActionHasRange(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].HasRange;
	end
	
1	function IsCurrentAction(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].CurrentAction;
	end
	
1	function IsAutoRepeatAction(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].AutoRepeatAction;
	end
	
1	function IsAttackAction(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return false;
		end
0		return PowaState.ActionSlots[i].AttackAction;
	end
	
1	function GetActionTexture(i)
0		if (PowaState.ActionSlots[i]==nil) then
0			return nil;
		end
0		return PowaState.ActionSlots[i].Texture;
	end
	
1	function GetActionCount(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil or PowaState.ActionSlots[i].Count==nil) then
0			return 0;
		end
0		return PowaState.ActionSlots[i].Count;
	end
	
1	function GetActionCooldown(i)
1		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil or PowaState.ActionSlots[i].Cooldown==nil) then
0			return 0, 0, 0;
		end
1		return PowaState.ActionSlots[i].Cooldown.Start, PowaState.ActionSlots[i].Cooldown.Duration, PowaState.ActionSlots[i].Cooldown.Enabled;
	end
	
1	function GetActionText(i)
0		if (PowaState.ActionSlots==nil or PowaState.ActionSlots[i]==nil) then
0			return nil;
		end
0		return PowaState.ActionSlots[i].ActionText;
	end
	
1	function GetMacroInfo(i)
0		if (PowaState.Macros==nil or PowaState.Macros[i]==nil) then
0			return nil, nil, nil;
		end
0		return PowaState.Macros[i].Name, PowaState.Macros[i].Texture, WoWMock:Unescape(PowaState.Macros[i].Body);
	end
	
1	function GetMacroIndexByName(ActionText)
0		for key, value in PowaState.Macros do
0			if (value.Name==ActionText) then
0				return key;
			end
		end
0		return nil;
	end
	
1	function GetContainerNumSlots(bag)
0		if (PowaState.Bags[bag]==nil) then
0			return nil;
		end
0		return tonumber(PowaState.Bags[bag].Slots);
	end
	
1	function GetContainerItemLink(bag, slot)
0		if (PowaState.Bags[bag]==nil or PowaState.Bags[bag][slot]==nil) then
0			return nil;
		end
0		return PowaState.Bags[bag][slot].Name;
	end
	
1	function GetContainerItemInfo(bag, slot)
0		if (PowaState.Bags[bag]==nil or PowaState.Bags[bag][slot]==nil) then
0			return nil, nil;
		end
0		return PowaState.Bags[bag][slot].Texture, tonumber(PowaState.Bags[bag][slot].Count);
	end
	
1	function GetBattlefieldStatus(i)
0		if (PowaState.Battlefields[i]==nil) then
0			return nil, nil, nil;
		end
0		return PowaState.Battlefields[i].Status, PowaState.Battlefields[i].Name, PowaState.Battlefields[i].Id;
	end
	
1	function CheckInteractDistance(unit, i)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player==nil) then
0			return nil;
		end
0		if (Player["InteractDistance"]==nil) then
0			return nil;
		end
0		return Player.InteractDistance[i];
	end
	
1	function GetAddOnMetadata(addon, property)
6		return "V2.6.2";
	end
1	function CastSpellByName(spell)
0		WoWMock:RecordOutput("CastSpellByName>>"..spell);
	end
	
1	function ClearTarget()
0		WoWMock:RecordOutput("ClearTarget");
0		WoWMock.LastTarget = WoWMock.Target;
0		WoWMock.Target = nil;
	end
	
1	function TargetUnit(unit)
0		WoWMock:RecordOutput("TargetUnit");
0		WoWMock.LastTarget = WoWMock.Target;
0		WoWMock.Target = unit;
	end
	
1	function SpellTargetUnit(unit)
0		WoWMock:RecordOutput("SpellTargetUnit>>"..unit);
0		WoWMock.LastTarget = WoWMock.Target;
0		WoWMock.Target = unit;
	end
	
1	function SpellIsTargeting()
0		local Result = false
		--if (WoWMock.Target~=nil) then
		--	Result = (WoWMock:GetUnit(WoWMock.Target)~=nil);
		--end
0		WoWMock:RecordOutput("SpellIsTargeting>>"..tostring(Result));
0		return Result;
	end
	
1	function SpellStopTargeting()
0		WoWMock:RecordOutput("SpellStopTargeting");
	end
	
1	function TargetLastTarget()
0		WoWMock:RecordOutput("TargetLastTarget");
0		WoWMock.Target = WoWMock.LastTarget;
	end
	
1	function EditMacro()
	end
	
1	function GetBuildInfo110()
0		if (PowaState.BuildInfo~=nil) then
0			return PowaState.BuildInfo.Version, PowaState.BuildInfo.BuildNum, PowaState.BuildInfo.BuildDate;
		end
0		return nil, nil, nil;
	end	
	
1	function GetActiveTalentGroup(isInspect,isPet)
5		if (PowaState.ActiveTalentGroup==nil) then
1			return 1;
		end
4		return PowaState.ActiveTalentGroup;
	end	
	
2	function WoWMock:Unescape(text)
89		if (text==nil) then
0			return nil;
		end
89		return string.gsub(string.gsub(text, "<LF>", "\n"), "<CR>", "\r");
	end
	
	--Text
2	cWoWMockText = MockClass(function(text, position, tooltip)
54		text.Position = position;
54		text.Tooltip = tooltip
56	end);
2	function cWoWMockText:GetText()
		--print("GetText tooltip=", self.Tooltip, "pos=", self.Position);
131		return WoWMock:GetTooltip(self.Tooltip, self.Position);
	end
2	function cWoWMockText:SetText()
	end
2	function cWoWMockText:IsShown()
89		return self.Tooltip.Shown;
	end
	
	--Tooltips
2	cWoWMockTooltip = MockClass(function(tooltip, name, owner)
3		tooltip.Owner = owner;
3		tooltip.Shown = false;
30		for i = 1, 9 do
27			setglobal(name.."TextLeft"..i, cWoWMockText("Left"..i, tooltip));
27			setglobal(name.."TextRight"..i, cWoWMockText("Right"..i, tooltip));
		end
5	end);
2	function cWoWMockTooltip:NumLines()
0		return CurTooltip.NumLines or 0;
	end
	
2	function cWoWMockTooltip:SetSpell(i, bookType)
0		if ( PowaState.SpellBook[i]==nil) then
0			CurTooltip = {};
		else
0			self.Shown = true;
0			CurTooltip = PowaState.SpellBook[i].Tooltip;
		end
	end
2	function cWoWMockTooltip:SetAction(i)
131		if ( PowaState.ActionSlots[i]==nil) then
0			CurTooltip = {};
		else
131			self.Shown = true;
131			CurTooltip = PowaState.ActionSlots[i].Tooltip;
		end
	end
2	function cWoWMockTooltip:SetUnit(unit)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil) then
0			CurTooltip = Player.Tooltip;
0			self.Shown = true;
0			return;
		end
0		CurTooltip = {};
	end
2	function cWoWMockTooltip:SetUnitDebuff(unit, i)
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Debuffs~=nil and Player.Debuffs[i]~=nil) then
0			CurTooltip = Player.Debuffs[i].Tooltip;
0			self.Shown = true;
0			return;
		end
0		CurTooltip = {};
	end
2	function cWoWMockTooltip:SetUnitBuff(unit, i)
		--print("SetUnitBuff",unit, i);
0		local Player = WoWMock:GetUnit(unit);
0		if (Player~=nil and Player.Buffs~=nil and Player.Buffs[i]~=nil) then
0			CurTooltip = Player.Buffs[i].Tooltip;
			--WoWMock:PrintTable(CurTooltip);
0			self.Shown = true;
0			return;
		end
0		CurTooltip = {};
	end
	
2	function cWoWMockTooltip:SetUnitAura(unit, index, filter)
		--print("SetUnitAura",unit, index, filter);
0		if (filter=="HELPFUL") then
0			self:SetUnitBuff(unit, index);
		else
0			self:SetUnitDebuff(unit, index);
		end
	end
	
2	function cWoWMockTooltip:SetInventoryItem(unit, i)
		--print("SetUnitBuff",unit, i);
0		if (string.lower(unit)=="player" and PowaState.Inventory~=nil and PowaState.Inventory.Slot ~=nil and PowaState.Inventory.Slot[i]~=nil) then
0			CurTooltip = PowaState.Inventory.Slot[i].Tooltip;
			--WoWMock:PrintTable(CurTooltip);
0			self.Shown = true;
0			return;
		end
0		CurTooltip = {};
	end
2	function cWoWMockTooltip:SetOwner(owner, anchor)
		--print("SetOwner",owner, anchor);
135		self.Owner = owner;
135		self.Anchor = anchor;
	end
2	function cWoWMockTooltip:Hide()
131		self.Shown = false;
	end
2	function cWoWMockTooltip:Show()
0		self.Shown = true;
	end
2	function cWoWMockTooltip:IsShown()
0		return self.Shown;
	end
	
2	function WoWMock:GetTooltip(tooltip, pos)
		--print("GetTooltip",tooltip, pos, tooltip.Owner);
131		if (CurTooltip==nil or tooltip.Owner==nil) then
42			return nil;
		end
89		return WoWMock:Unescape(CurTooltip[pos]);
	end
	
	
1	GameTooltip = cWoWMockTooltip("GameTooltip");
	
1	SlashCmdList = {};
1	StaticPopupDialogs = {};

==============================================================================
dumps/ActionUsable.lua
==============================================================================
	
2	PowaSet = {
0		{
2			["gcd"] = false,
2			["b"] = 0,
2			["anim1"] = 4,
2			["g"] = 0.807843137254902,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Mount_JungleTiger",
2			["size"] = 0.699999988079071,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = 45,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 7,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 1,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = 100,
2				["h"] = 1,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 20,
2			["exact"] = true,
2			["InactiveDueToState"] = false,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 1,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 1,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Tiger's Fury",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [1]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 4,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2			["size"] = 0.2999999821186066,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = 35,
2			["x"] = -65,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 26,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 2,
2				["cents"] = true,
2				["HideLeadingZeros"] = false,
2				["enabled"] = false,
2				["Showing"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "6",
2			["inVehicle"] = false,
2			["speed"] = 1.5,
2			["sound"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = true,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 2,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 2,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Rake",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = true,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [2]
0		{
2			["gcd"] = false,
2			["b"] = 0.02352941176470588,
2			["anim1"] = 4,
2			["g"] = 0,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2			["size"] = 0.2899999916553497,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = 35,
2			["x"] = 65,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 26,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 3,
2				["cents"] = true,
2				["HideLeadingZeros"] = false,
2				["enabled"] = false,
2				["Showing"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "6",
2			["inVehicle"] = false,
2			["speed"] = 1.5,
2			["sound"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = true,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 3,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = true,
2			["id"] = 3,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Rip",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = true,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [3]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 5,
2			["g"] = 0.7019607843137254,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Shadow_ManaBurn",
2			["size"] = 0.4399999976158142,
2			["torsion"] = 1.399999976158142,
2			["r"] = 0.4470588235294117,
2			["y"] = 10,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 23,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 4,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = 5,
2				["h"] = 0.75,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = false,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 4,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 4,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Clearcasting",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [4]
0		{
2			["gcd"] = false,
2			["b"] = 0.9137254901960784,
2			["anim1"] = 1,
2			["g"] = 0,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2			["size"] = 0.5099999904632568,
2			["torsion"] = 0.800000011920929,
2			["r"] = 0.9803921568627451,
2			["y"] = 60,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 2,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 5,
2				["cents"] = true,
2				["HideLeadingZeros"] = false,
2				["enabled"] = false,
2				["Showing"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "12/15",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 5,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Faerie Fire",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = true,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [5]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2			["size"] = 0.75,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 14,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = false,
2			["stance"] = 3,
2			["textaura"] = false,
2			["Children"] = {
2				[2] = true,
2				[3] = true,
2				[13] = true,
2			},
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 6,
2			["HideRequest"] = true,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "???",
2			["begin"] = 0,
2			["off"] = true,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [6]
0		{
2			["gcd"] = false,
2			["b"] = 0,
2			["anim1"] = 2,
2			["g"] = 0.5372549019607843,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Hunter_Pet_Cat",
2			["size"] = 0.3799999952316284,
2			["torsion"] = 1.399999976158142,
2			["r"] = 1,
2			["y"] = 10,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 3,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 7,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = 20,
2				["h"] = 0.800000011920929,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1.5,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = true,
2			["InactiveDueToState"] = false,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 7,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 7,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Predator's Swiftness",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [7]
0		{
2			["gcd"] = false,
2			["b"] = 0,
2			["anim1"] = 4,
2			["g"] = 0.611764705882353,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Nature_StoneClawTotem",
2			["size"] = 0.6699999570846558,
2			["torsion"] = 0.800000011920929,
2			["r"] = 1,
2			["y"] = 60,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 3,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 3,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 8,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = -12,
2				["h"] = 1,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = false,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 8,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 8,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 5,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Barkskin",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [8]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2			["size"] = 0.75,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 14,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["InactiveDueToState"] = false,
2			["threshold"] = 50,
2			["exact"] = false,
2			["stance"] = 1,
2			["textaura"] = false,
2			["Children"] = {
2				[14] = true,
2			},
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 9,
2			["HideRequest"] = true,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "???",
2			["begin"] = 0,
2			["off"] = true,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [9]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2			["size"] = 0.239999994635582,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 10,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = 60,
2				["h"] = 0.800000011920929,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 4,
2				["x"] = -42,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = true,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 10,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = 0,
2			["id"] = 10,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Rake",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [10]
0		{
2			["gcd"] = false,
2			["b"] = 0,
2			["anim1"] = 1,
2			["g"] = 0.01568627450980392,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2			["size"] = 0.239999994635582,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 11,
2				["cents"] = false,
2				["HideLeadingZeros"] = false,
2				["enabled"] = true,
2				["Showing"] = false,
2				["y"] = 60,
2				["h"] = 0.800000011920929,
2				["ShowOnAuraHide"] = false,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 4,
2				["x"] = 42,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["party"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = true,
2			["Stacks"] = {
2				["a"] = 1,
2				["Showing"] = false,
2				["HideLeadingZeros"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["id"] = 11,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["enabled"] = false,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["inParty"] = true,
2			["id"] = 11,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Rip",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [11]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "",
2			["size"] = 0.75,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 14,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = false,
2			["stance"] = 0,
2			["textaura"] = false,
2			["Children"] = {
2				[5] = true,
2			},
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 12,
2			["HideRequest"] = true,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "???",
2			["begin"] = 0,
2			["off"] = true,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [12]
0		{
2			["gcd"] = false,
2			["b"] = 0.91372549019608,
2			["anim1"] = 1,
2			["g"] = 0,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2			["size"] = 0.5099999904632568,
2			["torsion"] = 0.800000011920929,
2			["r"] = 0.9803921568627501,
2			["y"] = 60,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 2,
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "6/16",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 13,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Faerie Fire",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = true,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [13]
0		{
2			["gcd"] = false,
2			["b"] = 0.91372549019608,
2			["anim1"] = 1,
2			["g"] = 0,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = true,
2			["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2			["size"] = 0.5099999904632568,
2			["torsion"] = 0.800000011920929,
2			["r"] = 0.9803921568627501,
2			["y"] = 60,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 2,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 2,
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "9/16",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["InactiveDueToState"] = true,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 14,
2			["HideRequest"] = false,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = false,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Faerie Fire",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = true,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 0,
2		}, -- [14]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2			["size"] = 0.75,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 7,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 15,
2				["cents"] = true,
2				["HideLeadingZeros"] = false,
2				["enabled"] = false,
2				["Showing"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["ShowOnAuraHide"] = true,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["Children"] = {
2				[5] = true,
2			},
2			["threshold"] = 50,
2			["exact"] = true,
2			["stance"] = 10,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 15,
2			["HideRequest"] = true,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Faerie Fire",
2			["begin"] = 0,
2			["off"] = false,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
2		}, -- [15]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["stacksLower"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2			["size"] = 0.75,
2			["torsion"] = 1,
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["isAlive"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 7,
2			["stacks"] = 0,
2			["focus"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["a"] = 1,
2				["dual"] = false,
2				["HideRequest"] = true,
2				["id"] = 16,
2				["cents"] = true,
2				["HideLeadingZeros"] = false,
2				["enabled"] = false,
2				["Showing"] = false,
2				["y"] = 0,
2				["h"] = 1,
2				["ShowOnAuraHide"] = true,
2				["Transparent"] = false,
2				["UpdatePing"] = false,
2				["InvertAuraBelow"] = 0,
2				["x"] = 0,
2				["Texture"] = "Default",
2			},
2			["soundfile"] = "",
2			["owntex"] = false,
2			["isResting"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["sound"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["InactiveDueToState"] = false,
2			["threshold"] = 50,
2			["exact"] = true,
2			["Children"] = {
2				[13] = true,
2				[14] = true,
2			},
2			["stance"] = 10,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["party"] = false,
2			["inParty"] = 0,
2			["id"] = 16,
2			["HideRequest"] = true,
2			["aurastextfont"] = 1,
2			["Active"] = false,
2			["anim2"] = 0,
2			["beginSpin"] = false,
2			["customtex"] = true,
2			["tooltipCheck"] = "",
2			["isSecondary"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["inRaid"] = 0,
2			["spec1"] = true,
2			["Showing"] = false,
2			["UseOldAnimations"] = false,
2			["buffname"] = "Faerie Fire (Feral)",
2			["begin"] = 0,
2			["off"] = true,
2			["texmode"] = 2,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["finish"] = 1,
0		}, -- [16]
2	}
2	PowaMisc = {
2		["AnimationLimit"] = 0,
2		["TimerRoundUp"] = true,
2		["Disabled"] = false,
2		["DefaultTimerTexture"] = "Original",
2		["AnimationFps"] = 30,
2		["Version"] = "2.6.3W",
2		["debug"] = false,
2		["DefaultStacksTexture"] = "Original",
2		["OnUpdateLimit"] = 0,
2		["UseGTFO"] = true,
2	}
2	PowaTimer = {
2	}
2	PowaPlayerListe = {
2		"Page 1", -- [1]
2		"Page 2", -- [2]
2		"Page 3", -- [3]
2		"Page 4", -- [4]
0		"Page 5", -- [5]
2	}
2	PowaState = {
2		["Inventory"] = {
2			["ItemCooldown"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				0, -- [5]
2				0, -- [6]
2				0, -- [7]
2				0, -- [8]
2				0, -- [9]
2				0, -- [10]
2				0, -- [11]
2				0, -- [12]
2				0, -- [13]
2				0, -- [14]
2				0, -- [15]
2				0, -- [16]
2				0, -- [17]
2				0, -- [18]
2				0, -- [19]
2				0, -- [20]
2				0, -- [21]
2				0, -- [22]
2				0, -- [23]
2				[0] = 0,
2			},
2			["ItemLink"] = {
2				"|cff1eff00|Hitem:29940:0:0:0:0:0:0:1091287424:60|h[Veteran's Skullcap]|h|r", -- [1]
2				"|cff1eff00|Hitem:25061:0:0:0:0:0:-5:1508376599:60|h[Hiddenite Necklace of the Monkey]|h|r", -- [2]
2				"|cff1eff00|Hitem:9647:0:0:0:0:0:0:1012585920:60|h[Failed Flying Experiment]|h|r", -- [3]
2				"|cffffffff|Hitem:2577:0:0:0:0:0:0:350017280:60|h[Blue Linen Shirt]|h|r", -- [4]
2				"|cff0070dd|Hitem:28051:0:0:0:0:0:0:101761912:60|h[Jerkin of the Untamed Spirit]|h|r", -- [5]
2				"|cff1eff00|Hitem:10145:0:0:0:0:0:704:1739999616:60|h[Mighty Girdle of the Tiger]|h|r", -- [6]
2				"|cff1eff00|Hitem:29939:0:0:0:0:0:0:2026151680:60|h[Flayer-Hide Leggings]|h|r", -- [7]
2				"|cff1eff00|Hitem:4109:0:0:0:0:0:0:2029892864:60|h[Excelsior Boots]|h|r", -- [8]
2				"|cff0070dd|Hitem:16710:0:0:0:0:0:0:1725331840:60|h[Shadowcraft Bracers]|h|r", -- [9]
2				"|cff0070dd|Hitem:16712:0:0:0:0:0:0:-1632467840:60|h[Shadowcraft Gloves]|h|r", -- [10]
2				"|cff0070dd|Hitem:18585:0:0:0:0:0:0:771285824:60|h[Band of Allegiance]|h|r", -- [11]
2				"|cff1eff00|Hitem:24118:0:0:0:0:0:0:942140032:60|h[Signet of Argas]|h|r", -- [12]
2				"|cff1eff00|Hitem:19120:0:0:0:0:0:0:739521792:60|h[Rune of the Guard Captain]|h|r", -- [13]
2				"|cff1eff00|Hitem:25787:0:0:0:0:0:0:1704501376:60|h[Charm of Alacrity]|h|r", -- [14]
2				"|cff1eff00|Hitem:27731:0:0:0:0:0:0:1378774784:60|h[Vindicator's Cloak]|h|r", -- [15]
2				"|cff1eff00|Hitem:25227:0:0:0:0:0:-40:-1866334170:60|h[Sha'tari Longspear of the Bandit]|h|r", -- [16]
2				nil, -- [17]
0				nil, -- [18]
2				"|cffffffff|Hitem:5976:0:0:0:0:0:0:0:60|h[Guild Tabard]|h|r", -- [19]
2				"|cff1eff00|Hitem:21841:0:0:0:0:0:0:36647852:60|h[Netherweave Bag]|h|r", -- [20]
2				"|cff1eff00|Hitem:21841:0:0:0:0:0:0:1694101167:60|h[Netherweave Bag]|h|r", -- [21]
2				"|cff1eff00|Hitem:21841:0:0:0:0:0:0:998800539:60|h[Netherweave Bag]|h|r", -- [22]
0				"|cff1eff00|Hitem:21841:0:0:0:0:0:0:99327153:60|h[Netherweave Bag]|h|r", -- [23]
2			},
2			["Slot"] = {
0				{
2					["Id"] = 1,
2					["Tooltip"] = {
2						["Left1"] = "Veteran's Skullcap",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Agility",
2						["Left7"] = "Durability 50 / 50",
2						["Left9"] = " ",
2						["Left6"] = "+30 Stamina",
2						["Right3"] = "Leather",
2						["Left3"] = "Head",
2						["Left4"] = "160 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 38.",
2					},
2					["Slot"] = "HeadSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Head.blp",
2				}, -- [1]
0				{
2					["Id"] = 2,
2					["Tooltip"] = {
2						["Left1"] = "Hiddenite Necklace of the Monkey",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+23 Stamina|r",
2						["Left7"] = " ",
2						["Left3"] = "Neck",
2						["Left6"] = "Requires Level 60",
2						["NumLines"] = 7,
2						["Left4"] = "|cffffffff+15 Agility|r",
2					},
2					["Slot"] = "NeckSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Neck.blp",
2				}, -- [2]
0				{
2					["Id"] = 3,
2					["Tooltip"] = {
2						["Left1"] = "Failed Flying Experiment",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+10 Strength",
2						["Left7"] = "Durability 50 / 50",
2						["Left6"] = "+10 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Shoulder",
2						["Left4"] = "96 Armor",
2						["NumLines"] = 8,
2						["Left8"] = " ",
2					},
2					["Slot"] = "ShoulderSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shoulder.blp",
2				}, -- [3]
0				{
2					["Id"] = 4,
2					["Tooltip"] = {
2						["Left1"] = "Blue Linen Shirt",
2						["Left2"] = "Shirt",
2						["Left3"] = "|cff00ff00<Made by Jimmysrealmd>|r",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "ShirtSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shirt.blp",
2				}, -- [4]
0				{
2					["Id"] = 5,
2					["Tooltip"] = {
2						["Left1"] = "Jerkin of the Untamed Spirit",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+26 Strength",
2						["Left7"] = "+34 Stamina",
2						["Left9"] = " ",
2						["Left6"] = "+25 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Chest",
2						["Left4"] = "225 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Durability 100 / 100",
2					},
2					["Slot"] = "ChestSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				}, -- [5]
0				{
2					["Id"] = 6,
2					["Tooltip"] = {
2						["Left1"] = "Mighty Girdle of the Tiger",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+12 Agility|r",
2						["Left7"] = "Durability 30 / 30",
2						["Left9"] = " ",
2						["Left6"] = "|cffffffff+13 Strength|r",
2						["Right3"] = "Leather",
2						["Left3"] = "Waist",
2						["Left4"] = "86 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Requires Level 54",
2					},
2					["Slot"] = "WaistSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Waist.blp",
2				}, -- [6]
0				{
2					["Id"] = 7,
2					["Tooltip"] = {
2						["Left1"] = "Flayer-Hide Leggings",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Agility",
2						["Left7"] = "Durability 65 / 65",
2						["Left9"] = " ",
2						["Left6"] = "+30 Stamina",
2						["Right3"] = "Leather",
2						["Left3"] = "Legs",
2						["Left4"] = "172 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 38.",
2					},
2					["Slot"] = "LegsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Legs.blp",
2				}, -- [7]
0				{
2					["Id"] = 8,
2					["Tooltip"] = {
2						["Left1"] = "Excelsior Boots",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+7 Strength",
2						["Left7"] = "Durability 45 / 45",
2						["Left6"] = "+9 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Feet",
2						["Left4"] = "77 Armor",
2						["NumLines"] = 8,
2						["Left8"] = " ",
2					},
2					["Slot"] = "FeetSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Feet.blp",
2				}, -- [8]
0				{
2					["Id"] = 9,
2					["Tooltip"] = {
2						["Left14"] = "  Shadowcraft Tunic",
2						["Right3"] = "Leather",
2						["Left20"] = "Set: +200 Armor.",
2						["Left7"] = "Durability 35 / 35",
2						["Left24"] = " ",
2						["Left17"] = "  Shadowcraft Gloves",
2						["Left3"] = "Wrist",
2						["Left15"] = "  Shadowcraft Spaulders",
2						["Left18"] = "  Shadowcraft Cap",
2						["Left23"] = "(8) Set: +8 All Resistances.",
2						["Left1"] = "Shadowcraft Bracers",
2						["Left22"] = "(6) Set: Chance on melee attack to restore 35 energy.",
2						["Left4"] = "71 Armor",
2						["Left5"] = "+15 Agility",
2						["Left12"] = "  Shadowcraft Boots",
2						["Left19"] = " ",
2						["Left21"] = "(4) Set: Increases attack power by 40.",
2						["Left9"] = " ",
2						["Left10"] = "Shadowcraft Armor (2/8)",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+7 Stamina",
2						["Left13"] = "  Shadowcraft Bracers",
2						["Left11"] = "  Shadowcraft Belt",
2						["Left16"] = "  Shadowcraft Pants",
2						["NumLines"] = 24,
2						["Left8"] = "Requires Level 52",
2					},
2					["Slot"] = "WristSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Wrists.blp",
2				}, -- [9]
0				{
2					["Id"] = 10,
2					["Tooltip"] = {
2						["Left14"] = "  Shadowcraft Boots",
2						["Right3"] = "Leather",
2						["Left20"] = "  Shadowcraft Cap",
2						["Left7"] = "+9 Stamina",
2						["Left24"] = "(6) Set: Chance on melee attack to restore 35 energy.",
2						["Left22"] = "Set: +200 Armor.",
2						["Left17"] = "  Shadowcraft Spaulders",
2						["Left26"] = " ",
2						["Left3"] = "Hands",
2						["Left15"] = "  Shadowcraft Bracers",
2						["Left18"] = "  Shadowcraft Pants",
2						["Left23"] = "(4) Set: Increases attack power by 40.",
2						["Left1"] = "Shadowcraft Gloves",
2						["Left25"] = "(8) Set: +8 All Resistances.",
2						["Left4"] = "105 Armor",
2						["Left5"] = "+9 Strength",
2						["Left12"] = "Shadowcraft Armor (2/8)",
2						["Left19"] = "  Shadowcraft Gloves",
2						["Left21"] = " ",
2						["Left9"] = "Durability 35 / 35",
2						["Left10"] = "Requires Level 54",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+14 Agility",
2						["Left13"] = "  Shadowcraft Belt",
2						["Left11"] = " ",
2						["Left16"] = "  Shadowcraft Tunic",
2						["NumLines"] = 26,
2						["Left8"] = "+10 Spirit",
2					},
2					["Slot"] = "HandsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Hands.blp",
2				}, -- [10]
0				{
2					["Id"] = 11,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Band of Allegiance",
2						["Left4"] = "+9 Strength",
2						["Left5"] = "+4 Stamina",
2						["Left3"] = "Finger",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Finger0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				}, -- [11]
0				{
2					["Id"] = 12,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Signet of Argas",
2						["Left4"] = "+6 Agility",
2						["Left5"] = "+3 Stamina",
2						["Left3"] = "Finger",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Finger1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				}, -- [12]
0				{
2					["Id"] = 13,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Rune of the Guard Captain",
2						["Left4"] = "Equip: Increases attack power by 20.",
2						["Left5"] = "Equip: Increases your hit rating by 10.",
2						["Left3"] = "Trinket",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				}, -- [13]
0				{
2					["Id"] = 14,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Charm of Alacrity",
2						["Left4"] = "Trinket",
2						["Left5"] = "Use: Increases dodge rating by 192 for 10 sec. (1 Min 30 Sec Cooldown)",
2						["Left3"] = "Unique",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				}, -- [14]
0				{
2					["Id"] = 15,
2					["Tooltip"] = {
2						["Left1"] = "Vindicator's Cloak",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+10 Agility",
2						["Left7"] = "Equip: Improves hit rating by 10.",
2						["Left9"] = " ",
2						["Left4"] = "56 Armor",
2						["Left3"] = "Back",
2						["Left6"] = "+15 Stamina",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 20.",
2					},
2					["Slot"] = "BackSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				}, -- [15]
0				{
2					["Id"] = 16,
2					["Tooltip"] = {
2						["Left1"] = "Sha'tari Longspear of the Bandit",
2						["Left4"] = "166 - 250 Damage",
2						["Right3"] = "Polearm",
2						["Left12"] = " ",
2						["Left7"] = "|cffffffff+29 Stamina|r",
2						["Left2"] = "Soulbound",
2						["Left6"] = "|cffffffff+19 Agility|r",
2						["Right4"] = "Speed 3.50",
2						["Left5"] = "(59.4 damage per second)",
2						["Left10"] = "Requires Level 58",
2						["Left11"] = "Increases attack power by 65 in Cat, Bear, Dire Bear, and Moonkin forms only.",
2						["Left9"] = "Durability 85 / 85",
2						["Left3"] = "Two-Hand",
2						["NumLines"] = 12,
2						["Left8"] = "|cffffffff+39 Attack Power|r",
2					},
2					["Slot"] = "MainHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-MainHand.blp",
2				}, -- [16]
0				{
2					["Id"] = 17,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "SecondaryHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-SecondaryHand.blp",
2				}, -- [17]
0				{
2					["Id"] = 18,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "RangedSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				}, -- [18]
0				{
2					["Id"] = 19,
2					["Tooltip"] = {
2						["Left1"] = "Guild Tabard",
2						["Left2"] = "Tabard",
2						["Left3"] = " ",
2						["NumLines"] = 3,
2					},
2					["Slot"] = "TabardSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Tabard.blp",
2				}, -- [19]
0				{
2					["Id"] = 20,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [20]
0				{
2					["Id"] = 21,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [21]
0				{
2					["Id"] = 22,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag2Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [22]
0				{
2					["Id"] = 23,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag3Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
0				}, -- [23]
2				[0] = {
2					["Id"] = 0,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "AmmoSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["WristSlot"] = {
2					["Id"] = 9,
2					["Tooltip"] = {
2						["Left14"] = "  Shadowcraft Tunic",
2						["Right3"] = "Leather",
2						["Left20"] = "Set: +200 Armor.",
2						["Left7"] = "Durability 35 / 35",
2						["Left24"] = " ",
2						["Left17"] = "  Shadowcraft Gloves",
2						["Left3"] = "Wrist",
2						["Left15"] = "  Shadowcraft Spaulders",
2						["Left18"] = "  Shadowcraft Cap",
2						["Left23"] = "(8) Set: +8 All Resistances.",
2						["Left1"] = "Shadowcraft Bracers",
2						["Left22"] = "(6) Set: Chance on melee attack to restore 35 energy.",
2						["Left4"] = "71 Armor",
2						["Left5"] = "+15 Agility",
2						["Left12"] = "  Shadowcraft Boots",
2						["Left19"] = " ",
2						["Left21"] = "(4) Set: Increases attack power by 40.",
2						["Left9"] = " ",
2						["Left10"] = "Shadowcraft Armor (2/8)",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+7 Stamina",
2						["Left13"] = "  Shadowcraft Bracers",
2						["Left11"] = "  Shadowcraft Belt",
2						["Left16"] = "  Shadowcraft Pants",
2						["NumLines"] = 24,
2						["Left8"] = "Requires Level 52",
2					},
2					["Slot"] = "WristSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Wrists.blp",
2				},
2				["Bag2Slot"] = {
2					["Id"] = 22,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag2Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["BackSlot"] = {
2					["Id"] = 15,
2					["Tooltip"] = {
2						["Left1"] = "Vindicator's Cloak",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+10 Agility",
2						["Left7"] = "Equip: Improves hit rating by 10.",
2						["Left9"] = " ",
2						["Left4"] = "56 Armor",
2						["Left3"] = "Back",
2						["Left6"] = "+15 Stamina",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 20.",
2					},
2					["Slot"] = "BackSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				},
2				["Trinket0Slot"] = {
2					["Id"] = 13,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Rune of the Guard Captain",
2						["Left4"] = "Equip: Increases attack power by 20.",
2						["Left5"] = "Equip: Increases your hit rating by 10.",
2						["Left3"] = "Trinket",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				},
2				["LegsSlot"] = {
2					["Id"] = 7,
2					["Tooltip"] = {
2						["Left1"] = "Flayer-Hide Leggings",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Agility",
2						["Left7"] = "Durability 65 / 65",
2						["Left9"] = " ",
2						["Left6"] = "+30 Stamina",
2						["Right3"] = "Leather",
2						["Left3"] = "Legs",
2						["Left4"] = "172 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 38.",
2					},
2					["Slot"] = "LegsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Legs.blp",
2				},
2				["Bag3Slot"] = {
2					["Id"] = 23,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag3Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["TabardSlot"] = {
2					["Id"] = 19,
2					["Tooltip"] = {
2						["Left1"] = "Guild Tabard",
2						["Left2"] = "Tabard",
2						["Left3"] = " ",
2						["NumLines"] = 3,
2					},
2					["Slot"] = "TabardSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Tabard.blp",
2				},
2				["FeetSlot"] = {
2					["Id"] = 8,
2					["Tooltip"] = {
2						["Left1"] = "Excelsior Boots",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+7 Strength",
2						["Left7"] = "Durability 45 / 45",
2						["Left6"] = "+9 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Feet",
2						["Left4"] = "77 Armor",
2						["NumLines"] = 8,
2						["Left8"] = " ",
2					},
2					["Slot"] = "FeetSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Feet.blp",
2				},
2				["HandsSlot"] = {
2					["Id"] = 10,
2					["Tooltip"] = {
2						["Left14"] = "  Shadowcraft Boots",
2						["Right3"] = "Leather",
2						["Left20"] = "  Shadowcraft Cap",
2						["Left7"] = "+9 Stamina",
2						["Left24"] = "(6) Set: Chance on melee attack to restore 35 energy.",
2						["Left22"] = "Set: +200 Armor.",
2						["Left17"] = "  Shadowcraft Spaulders",
2						["Left26"] = " ",
2						["Left3"] = "Hands",
2						["Left15"] = "  Shadowcraft Bracers",
2						["Left18"] = "  Shadowcraft Pants",
2						["Left23"] = "(4) Set: Increases attack power by 40.",
2						["Left1"] = "Shadowcraft Gloves",
2						["Left25"] = "(8) Set: +8 All Resistances.",
2						["Left4"] = "105 Armor",
2						["Left5"] = "+9 Strength",
2						["Left12"] = "Shadowcraft Armor (2/8)",
2						["Left19"] = "  Shadowcraft Gloves",
2						["Left21"] = " ",
2						["Left9"] = "Durability 35 / 35",
2						["Left10"] = "Requires Level 54",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+14 Agility",
2						["Left13"] = "  Shadowcraft Belt",
2						["Left11"] = " ",
2						["Left16"] = "  Shadowcraft Tunic",
2						["NumLines"] = 26,
2						["Left8"] = "+10 Spirit",
2					},
2					["Slot"] = "HandsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Hands.blp",
2				},
2				["Finger1Slot"] = {
2					["Id"] = 12,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Signet of Argas",
2						["Left4"] = "+6 Agility",
2						["Left5"] = "+3 Stamina",
2						["Left3"] = "Finger",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Finger1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				},
2				["ChestSlot"] = {
2					["Id"] = 5,
2					["Tooltip"] = {
2						["Left1"] = "Jerkin of the Untamed Spirit",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+26 Strength",
2						["Left7"] = "+34 Stamina",
2						["Left9"] = " ",
2						["Left6"] = "+25 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Chest",
2						["Left4"] = "225 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Durability 100 / 100",
2					},
2					["Slot"] = "ChestSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				},
2				["Bag1Slot"] = {
2					["Id"] = 21,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["Trinket1Slot"] = {
2					["Id"] = 14,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Charm of Alacrity",
2						["Left4"] = "Trinket",
2						["Left5"] = "Use: Increases dodge rating by 192 for 10 sec. (1 Min 30 Sec Cooldown)",
2						["Left3"] = "Unique",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				},
2				["HeadSlot"] = {
2					["Id"] = 1,
2					["Tooltip"] = {
2						["Left1"] = "Veteran's Skullcap",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Agility",
2						["Left7"] = "Durability 50 / 50",
2						["Left9"] = " ",
2						["Left6"] = "+30 Stamina",
2						["Right3"] = "Leather",
2						["Left3"] = "Head",
2						["Left4"] = "160 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Increases attack power by 38.",
2					},
2					["Slot"] = "HeadSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Head.blp",
2				},
2				["AmmoSlot"] = {
2					["Id"] = 0,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "AmmoSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["MainHandSlot"] = {
2					["Id"] = 16,
2					["Tooltip"] = {
2						["Left1"] = "Sha'tari Longspear of the Bandit",
2						["Left4"] = "166 - 250 Damage",
2						["Right3"] = "Polearm",
2						["Left12"] = " ",
2						["Left7"] = "|cffffffff+29 Stamina|r",
2						["Left2"] = "Soulbound",
2						["Left6"] = "|cffffffff+19 Agility|r",
2						["Right4"] = "Speed 3.50",
2						["Left5"] = "(59.4 damage per second)",
2						["Left10"] = "Requires Level 58",
2						["Left11"] = "Increases attack power by 65 in Cat, Bear, Dire Bear, and Moonkin forms only.",
2						["Left9"] = "Durability 85 / 85",
2						["Left3"] = "Two-Hand",
2						["NumLines"] = 12,
2						["Left8"] = "|cffffffff+39 Attack Power|r",
2					},
2					["Slot"] = "MainHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-MainHand.blp",
2				},
2				["RangedSlot"] = {
2					["Id"] = 18,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "RangedSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["ShirtSlot"] = {
2					["Id"] = 4,
2					["Tooltip"] = {
2						["Left1"] = "Blue Linen Shirt",
2						["Left2"] = "Shirt",
2						["Left3"] = "|cff00ff00<Made by Jimmysrealmd>|r",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "ShirtSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shirt.blp",
2				},
2				["SecondaryHandSlot"] = {
2					["Id"] = 17,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "SecondaryHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-SecondaryHand.blp",
2				},
2				["Finger0Slot"] = {
2					["Id"] = 11,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "Band of Allegiance",
2						["Left4"] = "+9 Strength",
2						["Left5"] = "+4 Stamina",
2						["Left3"] = "Finger",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Finger0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				},
2				["ShoulderSlot"] = {
2					["Id"] = 3,
2					["Tooltip"] = {
2						["Left1"] = "Failed Flying Experiment",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+10 Strength",
2						["Left7"] = "Durability 50 / 50",
2						["Left6"] = "+10 Agility",
2						["Right3"] = "Leather",
2						["Left3"] = "Shoulder",
2						["Left4"] = "96 Armor",
2						["NumLines"] = 8,
2						["Left8"] = " ",
2					},
2					["Slot"] = "ShoulderSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shoulder.blp",
2				},
2				["WaistSlot"] = {
2					["Id"] = 6,
2					["Tooltip"] = {
2						["Left1"] = "Mighty Girdle of the Tiger",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+12 Agility|r",
2						["Left7"] = "Durability 30 / 30",
2						["Left9"] = " ",
2						["Left6"] = "|cffffffff+13 Strength|r",
2						["Right3"] = "Leather",
2						["Left3"] = "Waist",
2						["Left4"] = "86 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Requires Level 54",
2					},
2					["Slot"] = "WaistSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Waist.blp",
2				},
2				["Bag0Slot"] = {
2					["Id"] = 20,
2					["Tooltip"] = {
2						["Left1"] = "Netherweave Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "16 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["NeckSlot"] = {
2					["Id"] = 2,
2					["Tooltip"] = {
2						["Left1"] = "Hiddenite Necklace of the Monkey",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+23 Stamina|r",
2						["Left7"] = " ",
2						["Left3"] = "Neck",
2						["Left6"] = "Requires Level 60",
2						["NumLines"] = 7,
2						["Left4"] = "|cffffffff+15 Agility|r",
2					},
2					["Slot"] = "NeckSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Neck.blp",
2				},
2			},
2		},
2		["CurrentMapZone"] = 2,
2		["Zone"] = "Hellfire Peninsula",
2		["Bags"] = {
2			{
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:23669:0:0:0:0:0:0:825316864:60|h[Ancestral Spirit Wolf Totem]|h|r",
2					["Texture"] = "Interface\\Icons\\Ability_Hunter_Pet_Wolf",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:31702:0:0:0:0:0:0:1703803008:60|h[Challenge from the Horde]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_BannerPVP_01",
2				}, -- [2]
0				{
2					["Count"] = 8,
2					["Name"] = "|cffffffff|Hitem:2836:0:0:0:0:0:0:1097385408:60|h[Coarse Stone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Stone_09",
2				}, -- [3]
0				{
2					["Count"] = 9,
2					["Name"] = "|cffffffff|Hitem:21877:0:0:0:0:0:0:659966656:60|h[Netherweave Cloth]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Fabric_Netherweave",
2				}, -- [4]
0				{
2					["Count"] = 19,
2					["Name"] = "|cffffffff|Hitem:8170:0:0:0:0:0:0:1420210176:60|h[Rugged Leather]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_LeatherScrap_02",
2				}, -- [5]
0				{
2					["Count"] = 11,
2					["Name"] = "|cffffffff|Hitem:7912:0:0:0:0:0:0:1692941184:60|h[Solid Stone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Stone_10",
2				}, -- [6]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:23485:0:0:0:0:0:0:1147348992:60|h[Empty Birdcage]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Box_PetCarrier_01",
2				}, -- [7]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:29399:0:0:0:0:0:0:245796176:60|h[Rod of the Void Caller]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Staff_Draenei_A_03",
2				}, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:29938:0:0:0:0:0:0:29393928:60|h[Battle Seeker Chestguard]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Chest_Leather_07",
2				}, -- [9]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:27859:0:0:0:0:0:0:-1549212672:60|h[Zangar Caps]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Mushroom_04",
2				}, -- [10]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:14530:0:0:0:0:0:0:1967272704:60|h[Heavy Runecloth Bandage]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Bandage_12",
2				}, -- [11]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:10780:0:0:0:0:0:0:1811881914:60|h[Mark of Hakkar]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_05",
2				}, -- [12]
0				{
2					["Count"] = 6,
2					["Name"] = "|cffffffff|Hitem:22577:0:0:0:0:0:0:2101123584:60|h[Mote of Shadow]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Elemental_Mote_Shadow01",
2				}, -- [13]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:15804:0:0:0:0:0:0:1672871040:60|h[Cerise Drape]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Cape_18",
2				}, -- [14]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:10190:0:0:0:0:0:1041:-1944276736:60|h[Swashbuckler's Belt of the Whale]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Belt_13",
2				}, -- [15]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:13475:0:0:0:0:0:0:2058641536:60|h[Dalson Family Wedding Ring]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_03",
0				}, -- [16]
2				["Slots"] = 16,
2			}, -- [1]
2			{
0				{
2					["Count"] = 2,
2					["Name"] = "|cffffffff|Hitem:25649:0:0:0:0:0:0:1074263936:60|h[Knothide Leather Scraps]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_LeatherScrap_09",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:10183:0:0:0:0:0:784:2001991552:60|h[Swashbuckler's Boots of the Owl]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Boots_08",
2				}, -- [2]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:29910:0:0:0:0:0:0:1426305152:60|h[The Staff of Twin Worlds]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Staff_13",
0				}, -- [3]
2				nil, -- [4]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:12846:0:0:0:0:0:0:120362168:60|h[Argent Dawn Commission]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Talisman_07",
0				}, -- [5]
2				nil, -- [6]
0				{
2					["Count"] = 9,
2					["Name"] = "|cffffffff|Hitem:2838:0:0:0:0:0:0:-1922521856:60|h[Heavy Stone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Stone_12",
2				}, -- [7]
0				{
2					["Count"] = 2,
2					["Name"] = "|cffffffff|Hitem:14047:0:0:0:0:0:0:1812967936:60|h[Runecloth]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Fabric_PurpleFire_01",
0				}, -- [8]
2				nil, -- [9]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:4112:0:0:0:0:0:0:1163224704:60|h[Choker of the High Shaman]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Necklace_04",
0				}, -- [10]
2				nil, -- [11]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:10183:0:0:0:0:0:334:1019476288:60|h[Swashbuckler's Boots of Stamina]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Boots_08",
2				}, -- [12]
0				{
2					["Count"] = 2,
2					["Name"] = "|cffffffff|Hitem:3857:0:0:0:0:0:0:-1833914624:60|h[Coal]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Ore_Tin_01",
2				}, -- [13]
0				{
2					["Count"] = 16,
2					["Name"] = "|cffffffff|Hitem:3858:0:0:0:0:0:0:848868224:60|h[Mithril Ore]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Ore_Mithril_02",
0				}, -- [14]
2				["Slots"] = 16,
2			}, -- [2]
2			{
0				{
2					["Count"] = 19,
2					["Name"] = "|cffffffff|Hitem:14047:0:0:0:0:0:0:1375161088:60|h[Runecloth]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Fabric_PurpleFire_01",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:16714:0:0:0:0:0:0:447207296:60|h[Wildheart Bracers]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Bracer_09",
2				}, -- [2]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:16717:0:0:0:0:0:0:-1294563456:60|h[Wildheart Gloves]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Gauntlets_17",
0				}, -- [3]
2				nil, -- [4]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:10189:0:0:0:0:0:386:1159586496:60|h[Swashbuckler's Shoulderpads of Intellect]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Shoulder_23",
2				}, -- [5]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:16716:0:0:0:0:0:0:1063521904:60|h[Wildheart Belt]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Belt_15",
0				}, -- [6]
2				nil, -- [7]
2				nil, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:19038:0:0:0:0:0:0:1796370560:60|h[Ring of Subtlety]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_03",
0				}, -- [9]
2				nil, -- [10]
2				nil, -- [11]
0				{
2					["Count"] = 6,
2					["Name"] = "|cffffffff|Hitem:13444:0:0:0:0:0:0:1555916544:60|h[Major Mana Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_76",
2				}, -- [12]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:11871:0:0:0:0:0:0:2028544384:60|h[Snarkshaw Spaulders]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Shoulder_15",
2				}, -- [13]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:29930:0:0:0:0:0:0:1037612928:60|h[Nature-Stitched Kilt]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Pants_Leather_05",
0				}, -- [14]
2				nil, -- [15]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:1645:0:0:0:0:0:0:2019563776:60|h[Moonberry Juice]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Drink_02",
0				}, -- [16]
2				["Slots"] = 16,
2			}, -- [3]
0			{
2				["Slots"] = 16,
2				[9] = {
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:25981:0:0:0:0:0:0:335854720:60|h[Dirigible Crash Helmet]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Helmet_50",
2				},
0			}, -- [4]
2			[0] = {
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:6948:0:0:0:0:0:0:0:60|h[Hearthstone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Rune_01",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:7005:0:0:0:0:0:0:0:60|h[Skinning Knife]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Weapon_ShortBlade_01",
2				}, -- [2]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:2901:0:0:0:0:0:0:0:60|h[Mining Pick]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Pick_02",
2				}, -- [3]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:37710:0:0:0:0:0:0:871401765:60|h[Crashin' Thrashin' Racer Controller]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Gizmo_05",
2				}, -- [4]
0				{
2					["Count"] = 5,
2					["Name"] = "|cff0070dd|Hitem:46765:0:0:0:0:0:0:330155360:60|h[Blue War Fuel]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Inscription_InkBlueWhite01",
2				}, -- [5]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:6669:0:0:0:0:0:0:91546816:60|h[Sacred Band]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_12",
2				}, -- [6]
0				{
2					["Count"] = 3,
2					["Name"] = "|cffffffff|Hitem:28399:0:0:0:0:0:0:1332198784:60|h[Filtered Draenic Water]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Drink_Waterskin_11",
2				}, -- [7]
0				{
2					["Count"] = 7,
2					["Name"] = "|cffffffff|Hitem:10620:0:0:0:0:0:0:553242208:60|h[Thorium Ore]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Ore_Thorium_02",
2				}, -- [8]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:17026:0:0:0:0:0:0:0:60|h[Wild Thornroot]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Root_01",
2				}, -- [9]
0				{
2					["Count"] = 14,
2					["Name"] = "|cffffffff|Hitem:13446:0:0:0:0:0:0:1981823104:60|h[Major Healing Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_54",
2				}, -- [10]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:17038:0:0:0:0:0:0:0:60|h[Ironwood Seed]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_02",
2				}, -- [11]
0				{
2					["Count"] = 5,
2					["Name"] = "|cffffffff|Hitem:2772:0:0:0:0:0:0:844082112:60|h[Iron Ore]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Ore_Iron_01",
2				}, -- [12]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:21877:0:0:0:0:0:0:667461888:60|h[Netherweave Cloth]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Fabric_Netherweave",
2				}, -- [13]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:29929:0:0:0:0:0:0:225615904:60|h[Raging Spirit Harness]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Chest_Leather_09",
2				}, -- [14]
0				{
2					["Count"] = 12,
2					["Name"] = "|cffffffff|Hitem:12365:0:0:0:0:0:0:821677664:60|h[Dense Stone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_StoneTablet_07",
2				}, -- [15]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:31715:0:0:0:0:0:0:1288392064:60|h[Demoniac Soul Prison]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Gem_Amethyst_02",
0				}, -- [16]
2				["Slots"] = 16,
2			},
2		},
2		["BuildInfo"] = {
2			["BuildNum"] = "10505",
2			["BuildDate"] = "Sep 23 2009",
2			["Version"] = "3.2.2",
2		},
2		["Locale"] = "enUS",
2		["ActiveTalentGroup"] = 1,
2		["Time"] = 1669.369,
2		["PowaPlayerListe"] = {
2			"Page 1", -- [1]
2			"Page 2", -- [2]
2			"Page 3", -- [3]
2			"Page 4", -- [4]
0			"Page 5", -- [5]
2		},
2		["target"] = {
2			["Visible"] = 1,
2			["ChannelInfo"] = {
2			},
2			["Mana"] = 0,
2			["Enemy"] = 1,
2			["HealthMax"] = 5158,
2			["CastingInfo"] = {
2			},
2			["Damage"] = 0,
2			["AttackBothHands"] = 0,
2			["Power"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				0, -- [5]
2				0, -- [6]
2				["Default"] = 0,
2				[0] = 0,
2			},
2			["RangedAttackPower"] = 0,
2			["Stats"] = {
0				{
2					["Type"] = "Strength",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Agility",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [2]
0				{
2					["Type"] = "Stamina",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [3]
0				{
2					["Type"] = "Intellect",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [4]
0				{
2					["Type"] = "Spirit",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
0				}, -- [5]
2			},
2			["XPMax"] = 0,
2			["InteractDistance"] = {
2				1, -- [1]
2				[4] = 1,
2			},
2			["PowerTypeString"] = "RAGE",
2			["PowerType"] = 1,
2			["Health"] = 5158,
2			["RuneType"] = {
2				1, -- [1]
2				1, -- [2]
2				2, -- [3]
2				2, -- [4]
2				3, -- [5]
0				3, -- [6]
2			},
2			["LocClass"] = "Forge Camp Legionnaire",
2			["Debuffs"] = {
2			},
2			["AttackSpeed"] = 2.000000094994903,
2			["PVPRank"] = 0,
2			["Class"] = "WARRIOR",
2			["RangedAttack"] = 0,
2			["ManaMax"] = 0,
2			["PVPName"] = "Forge Camp Legionnaire",
2			["RangedDamage"] = 0,
2			["RuneCooldown"] = {
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [1]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [2]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [3]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [4]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [5]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
0				}, -- [6]
2			},
2			["Armor"] = 0,
2			["Level"] = 61,
2			["XP"] = 0,
2			["RemoveableDebuffs"] = {
2			},
2			["AttackPower"] = 0,
2			["Defense"] = 0,
2			["Resistances"] = {
0				{
2					["Type"] = "Holy",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Fire",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [2]
0				{
2					["Type"] = "Nature",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [3]
0				{
2					["Type"] = "Frost",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [4]
0				{
2					["Type"] = "Shadow",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [5]
0				{
2					["Type"] = "Arcane",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
0				}, -- [6]
2				[0] = {
2					["Type"] = "Physical",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				},
2			},
2			["UnitHasVehicleUI"] = false,
2			["Classification"] = "normal",
2			["Tooltip"] = {
2				["Left1"] = "Forge Camp Legionnaire",
2				["NumLines"] = 2,
2				["Left2"] = "Level 61 Demon",
2			},
2			["Unit"] = "target",
2			["Connected"] = 1,
2			["CreatureType"] = "Demon",
2			["PowerMax"] = {
2				0, -- [1]
2				100, -- [2]
2				100, -- [3]
2				1000, -- [4]
2				0, -- [5]
2				0, -- [6]
2				["Default"] = 0,
2				[0] = 0,
2			},
2			["Name"] = "Forge Camp Legionnaire",
2			["Sex"] = 1,
2			["CanAttack"] = 1,
2			["Buffs"] = {
0				{
2					["Source"] = "target",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Weapon Chain",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Weapon Chain",
2						["NumLines"] = 2,
2						["Left2"] = "Immune to Disarm.",
2					},
2					["Icon"] = "Interface\\Icons\\INV_Belt_18",
2					["Rank"] = "",
0				}, -- [1]
2			},
2			["CanBeAttacked"] = 1,
2			["Pos"] = {
2				["Y"] = 0,
2				["X"] = 0,
2			},
2		},
2		["PowaGlobalListe"] = {
2			"Global 1", -- [1]
2			"Global 2", -- [2]
2			"Global 3", -- [3]
2			"Global 4", -- [4]
2			"Global 5", -- [5]
2			"Global 6", -- [6]
2			"Global 7", -- [7]
2			"Global 8", -- [8]
2			"Global 9", -- [9]
0			"Global 10", -- [10]
2		},
2		["ComboPoints"] = {
2			["vehicle"] = 0,
2			["player"] = 0,
2		},
2		["Realm"] = "Dunemaul",
2		["PartyLeaderIndex"] = 0,
2		["CurrentMapContinent"] = 3,
2		["Powa"] = {
2			["Frames"] = {
2				[5] = {
2					[0] = nil --[[ skipped userdata ]],
2					["baseH"] = 256,
2					["baseL"] = 256,
2					["texture"] = {
2						[0] = nil --[[ skipped userdata ]],
2					},
2				},
2				[15] = {
2					[0] = nil --[[ skipped userdata ]],
2					["baseH"] = 256,
2					["baseL"] = 256,
2					["texture"] = {
2						[0] = nil --[[ skipped userdata ]],
2					},
2				},
2				[14] = {
2					[0] = nil --[[ skipped userdata ]],
2					["baseH"] = 256,
2					["baseL"] = 256,
2					["texture"] = {
2						[0] = nil --[[ skipped userdata ]],
2					},
2				},
2				[9] = {
2					[0] = nil --[[ skipped userdata ]],
2					["baseH"] = 256,
2					["baseL"] = 256,
2					["texture"] = {
2						[0] = nil --[[ skipped userdata ]],
2					},
2				},
2			},
2			["SecondaryFrames"] = {
2			},
2			["OptionHideables"] = {
2				"PowaGroupAnyButton", -- [1]
2				"PowaBarTooltipCheck", -- [2]
2				"PowaBarThresholdSlider", -- [3]
2				"PowaThresholdInvertButton", -- [4]
2				"PowaBarBuffStacks", -- [5]
0				"PowaDropDownStance", -- [6]
2			},
2			["Anim"] = {
2				"Static", -- [1]
2				"Flashing", -- [2]
2				"Growing", -- [3]
2				"Pulse", -- [4]
2				"Bubble", -- [5]
2				"Water drop", -- [6]
2				"Electric", -- [7]
2				"Shrinking", -- [8]
2				"Flame", -- [9]
2				"Orbit", -- [10]
2				[0] = "[Invisible]",
2			},
2			["Tstep"] = 0.09765625,
2			["SecondaryAuras"] = {
2			},
2			["SetupDone"] = true,
2			["BuffTypes"] = {
2				["Enchant"] = 5,
2				["EnergyRagePower"] = 10,
2				["Combo"] = 6,
2				["Mana"] = 9,
2				["StealableSpell"] = 16,
2				["Debuff"] = 2,
2				["PvP"] = 12,
2				["TypeDebuff"] = 3,
2				["Aggro"] = 11,
2				["PurgeableSpell"] = 17,
2				["SpellAlert"] = 13,
2				["Health"] = 8,
2				["OwnSpell"] = 15,
2				["ActionReady"] = 7,
2				["Buff"] = 1,
2				["AoE"] = 4,
2				["Stance"] = 14,
2			},
2			["TimerFrame"] = {
2			},
2			["AoeAuraFaded"] = {
2			},
2			["EndAnimDisplay"] = {
2				"Grow", -- [1]
2				"Shrink", -- [2]
2				"Fade Out", -- [3]
2				"Spin", -- [4]
2				"Spin In", -- [5]
2				[0] = "[None]",
2			},
2			["AuraClasses"] = {
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["auraType"] = "buff",
2					["CanHaveInvertTime"] = true,
2					["buffAuraType"] = "HELPFUL",
2					["ShowOptions"] = {
2						["PowaGroupAnyButton"] = 1,
2						["PowaBarBuffStacks"] = 1,
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaPartyButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2						["PowaOwntexButton"] = 1,
2					},
2					["InvertTimeHides"] = true,
2					["_base"] = {
2						["CanHaveTimer"] = true,
2						["CanHaveStacks"] = true,
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["CanHaveInvertTime"] = true,
2						["ShowOptions"] = {
2							["PowaGroupAnyButton"] = 1,
2							["PowaBarBuffStacks"] = 1,
2							["PowaBarTooltipCheck"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaPartyButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaIngoreCaseButton"] = 1,
2							["PowaOwntexButton"] = 1,
2						},
2						["InvertTimeHides"] = true,
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["OptionText"] = {
2						["typeText"] = "Buff",
2						["mineText"] = "Cast by me",
2						["buffNameTooltip"] = "Enter here the name of the buff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Super Buff/Power)",
2						["targetFriendText"] = "Friendly Target",
2						["targetFriendTooltip"] = "Check this to test a friendly target only.",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Check this to test only buffs/debuffs cast by the player",
2					},
2					["TooltipOptions"] = {
2						["r"] = 0,
2						["showBuffName"] = true,
2						["stacksColour"] = {
2							["r"] = 0.7,
2							["g"] = 1,
2							["b"] = 0.7,
2						},
2						["g"] = 1,
2						["b"] = 1,
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [1]
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["auraType"] = "debuff",
2					["CanHaveInvertTime"] = true,
2					["buffAuraType"] = "HARMFUL",
2					["ShowOptions"] = {
2						["PowaGroupAnyButton"] = 1,
2						["PowaBarBuffStacks"] = 1,
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaPartyButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2						["PowaOwntexButton"] = 1,
2					},
2					["InvertTimeHides"] = true,
2					["_base"] = {
2						["CanHaveTimer"] = true,
2						["CanHaveStacks"] = true,
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["CanHaveInvertTime"] = true,
2						["ShowOptions"] = {
2							["PowaGroupAnyButton"] = 1,
2							["PowaBarBuffStacks"] = 1,
2							["PowaBarTooltipCheck"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaPartyButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaIngoreCaseButton"] = 1,
2							["PowaOwntexButton"] = 1,
2						},
2						["InvertTimeHides"] = true,
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["OptionText"] = {
2						["typeText"] = "Debuff",
2						["buffNameTooltip"] = "Enter here the name of the debuff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Dark Disease/Plague)",
2						["mineText"] = "Cast by me",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Check this to test only buffs/debuffs cast by the player",
2					},
2					["TooltipOptions"] = {
2						["r"] = 1,
2						["showBuffName"] = true,
2						["stacksColour"] = {
2							["r"] = 1,
2							["g"] = 0.7,
2							["b"] = 0.7,
2						},
2						["g"] = 0.8,
2						["b"] = 0.8,
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [2]
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["auraType"] = "debuff type",
2					["CanHaveInvertTime"] = true,
2					["buffAuraType"] = "HARMFUL",
2					["ShowOptions"] = {
2						["PowaGroupAnyButton"] = 1,
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaPartyButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["InvertTimeHides"] = true,
2					["_base"] = {
2						["CanHaveTimer"] = true,
2						["CanHaveStacks"] = true,
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["CanHaveInvertTime"] = true,
2						["ShowOptions"] = {
2							["PowaGroupAnyButton"] = 1,
2							["PowaBarBuffStacks"] = 1,
2							["PowaBarTooltipCheck"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaPartyButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaIngoreCaseButton"] = 1,
2							["PowaOwntexButton"] = 1,
2						},
2						["InvertTimeHides"] = true,
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["OptionText"] = {
2						["typeText"] = "Debuff type",
2						["mineText"] = "I can dispell",
2						["buffNameTooltip"] = "Enter here the type of the debuff which must activate or deactivate the effect (Poison, Disease, Curse, Magic, CC, Silence, Stun, Snare, Root or None). You can enter several types (ex: Disease/Poison)",
2						["targetFriendText"] = "Friendly Target",
2						["targetFriendTooltip"] = "Check this to test a friendly target only.",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Check to show only buffs that are dispellable",
2					},
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.8,
2						["g"] = 1,
2						["b"] = 0.8,
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [3]
0				{
2					["ShowOptions"] = {
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.6,
2						["g"] = 0.4,
2						["b"] = 1,
2					},
2					["OptionText"] = {
2						["typeText"] = "AOE Debuff",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["buffNameTooltip"] = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["AuraType"] = "Aoe",
2				}, -- [4]
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["AuraType"] = "Enchants",
2					["CanHaveInvertTime"] = true,
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 1,
2						["g"] = 0.8,
2						["b"] = 1,
2					},
2					["ShowOptions"] = {
2						["PowaBarBuffStacks"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["CanHaveTimerOnInverse"] = true,
2					["OptionText"] = {
2						["typeText"] = "Weapon Enchant",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["buffNameTooltip"] = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["InvertTimeHides"] = true,
2				}, -- [5]
0				{
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 1,
2						["g"] = 1,
2						["b"] = 0,
2					},
2					["CanHaveStacks"] = true,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["OptionText"] = {
2						["typeText"] = "Combo Points",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["buffNameTooltip"] = "Enter here the number of combo points that must activate this effect (ex : 1 or 1/2/3 or 0/4/5 etc...) ",
2					},
2					["CheckBoxes"] = {
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["AuraType"] = "Combo",
2				}, -- [6]
0				{
2					["CanHaveTimer"] = true,
2					["AuraType"] = "Actions",
2					["CanHaveInvertTime"] = true,
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.8,
2						["g"] = 0.8,
2						["b"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["CanHaveTimerOnInverse"] = true,
2					["OptionText"] = {
2						["typeText"] = "Action Usable",
2						["buffNameTooltip"] = "Enter here the name, or a part of the name, of an action in your action bars. The effect will be active when this action is usable.",
2						["mineText"] = "Display Only Depends on Cooldown",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Ignores if spell is usable (just uses cooldown)",
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["CooldownAura"] = true,
2				}, -- [7]
0				{
2					["ShowOptions"] = {
2						["PowaBarThresholdSlider"] = 1,
2						["PowaThresholdInvertButton"] = 1,
2					},
2					["OptionText"] = {
2						["typeText"] = "Health",
2					},
2					["_base"] = {
2						["ShowOptions"] = {
2							["PowaBarThresholdSlider"] = 1,
2							["PowaThresholdInvertButton"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaPartyButton"] = 1,
2						},
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2						["__index"] = nil --[[ skipped recursive table ]],
2						["OptionText"] = {
2							["targetFriendText"] = "Friendly Target",
2							["targetFriendTooltip"] = "Check this to test a friendly target only.",
2						},
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaPartyButton"] = 1,
2					},
2					["ValueName"] = "Health",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["TooltipOptions"] = {
2						["r"] = 0.2,
2						["showThreshold"] = true,
2						["g"] = 1,
2						["b"] = 0.2,
2					},
2				}, -- [8]
0				{
2					["ShowOptions"] = {
2						["PowaBarThresholdSlider"] = 1,
2						["PowaThresholdInvertButton"] = 1,
2					},
2					["OptionText"] = {
2						["typeText"] = "Mana",
2					},
2					["_base"] = {
2						["ShowOptions"] = {
2							["PowaBarThresholdSlider"] = 1,
2							["PowaThresholdInvertButton"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaPartyButton"] = 1,
2						},
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2						["__index"] = nil --[[ skipped recursive table ]],
2						["OptionText"] = {
2							["targetFriendText"] = "Friendly Target",
2							["targetFriendTooltip"] = "Check this to test a friendly target only.",
2						},
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaPartyButton"] = 1,
2					},
2					["ValueName"] = "Mana",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["TooltipOptions"] = {
2						["r"] = 0.2,
2						["showThreshold"] = true,
2						["g"] = 0.2,
2						["b"] = 1,
2					},
2				}, -- [9]
0				{
2					["ShowOptions"] = {
2						["PowaBarThresholdSlider"] = 1,
2						["PowaThresholdInvertButton"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaGroupAnyButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaOptunitnButton"] = 1,
2						["PowaPartyButton"] = 1,
2					},
2					["_base"] = {
2						["ShowOptions"] = {
2							["PowaBarThresholdSlider"] = 1,
2							["PowaThresholdInvertButton"] = 1,
2						},
2						["OptionText"] = {
2							["typeText"] = "Mana",
2						},
2						["_base"] = {
2							["ShowOptions"] = {
2								["PowaBarThresholdSlider"] = 1,
2								["PowaThresholdInvertButton"] = 1,
2							},
2							["CheckBoxes"] = {
2								["PowaInverseButton"] = 1,
2								["PowaRaidButton"] = 1,
2								["PowaTargetButton"] = 1,
2								["PowaFocusButton"] = 1,
2								["PowaGroupAnyButton"] = 1,
2								["PowaGroupOrSelfButton"] = 1,
2								["PowaOptunitnButton"] = 1,
2								["PowaPartyButton"] = 1,
2							},
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2								["TooltipOptions"] = {
2									["r"] = 1,
2									["g"] = 1,
2									["b"] = 1,
2								},
2							},
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2							["__index"] = nil --[[ skipped recursive table ]],
2							["OptionText"] = {
2								["targetFriendText"] = "Friendly Target",
2								["targetFriendTooltip"] = "Check this to test a friendly target only.",
2							},
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaPartyButton"] = 1,
2						},
2						["ValueName"] = "Mana",
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 0.2,
2							["showThreshold"] = true,
2							["g"] = 0.2,
2							["b"] = 1,
2						},
2					},
2					["TooltipOptions"] = {
2						["r"] = 1,
2						["showThreshold"] = true,
2						["g"] = 0.4,
2						["b"] = 0,
2					},
2					["ValueName"] = "RageEnergy",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OptionText"] = {
2						["typeText"] = "Rage/Energy/Runic",
2					},
2				}, -- [10]
0				{
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaPartyButton"] = 1,
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["TooltipOptions"] = {
2						["r"] = 1,
2						["g"] = 0.4,
2						["b"] = 0.2,
2					},
2					["ValueName"] = "Aggro",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OptionText"] = {
2						["typeText"] = "Aggro",
2					},
2				}, -- [11]
0				{
2					["CheckBoxes"] = {
2						["PowaTargetButton"] = 1,
2						["PowaGroupOrSelfButton"] = 1,
2						["PowaRaidButton"] = 1,
2						["PowaPartyButton"] = 1,
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["TooltipOptions"] = {
2						["r"] = 1,
2						["g"] = 1,
2						["b"] = 0.8,
2					},
2					["ValueName"] = "PvP",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OptionText"] = {
2						["typeText"] = "PvP",
2						["targetFriendText"] = "Friendly Target",
2						["targetFriendTooltip"] = "Check this to test a friendly target only.",
2					},
2				}, -- [12]
0				{
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.4,
2						["g"] = 0.4,
2						["b"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["OptionText"] = {
2						["typeText"] = "Spell Alert",
2						["mineText"] = "Can be Interrupted",
2						["buffNameTooltip"] = "Enter here the Spell Name that will trigger a spell alert Aura.",
2						["targetFriendText"] = "Player Casting",
2						["targetFriendTooltip"] = "Check if Player is casting a spell",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Check to show only for spells that can be Interrupted",
2					},
2					["CanHaveInvertTime"] = true,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["AuraType"] = "SpellAlert",
2				}, -- [13]
0				{
2					["ShowOptions"] = {
2						["PowaDropDownStance"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaInverseButton"] = 1,
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["TooltipOptions"] = {
2						["showStance"] = true,
2						["r"] = 1,
2						["g"] = 0.6,
2						["b"] = 0.2,
2					},
2					["OptionText"] = {
2						["typeText"] = "Stance",
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["AuraType"] = "Stance",
2				}, -- [14]
0				{
2					["CanHaveTimer"] = true,
2					["AuraType"] = "OwnSpells",
2					["CanHaveInvertTime"] = true,
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 1,
2						["g"] = 0.6,
2						["b"] = 0.2,
2					},
2					["ShowOptions"] = {
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["CanHaveTimerOnInverse"] = true,
2					["OptionText"] = {
2						["typeText"] = "My Spell Cooldown",
2						["buffNameTooltip"] = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
2						["mineText"] = "Display Only Depends on Cooldown",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["mineTooltip"] = "Ignores if spell is usable (just uses cooldown)",
2					},
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["CooldownAura"] = true,
2				}, -- [15]
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["auraType"] = "stealable spell type",
2					["CanHaveInvertTime"] = true,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["buffAuraType"] = "HARMFUL",
2					["_base"] = {
2						["CanHaveTimer"] = true,
2						["CanHaveStacks"] = true,
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["CanHaveInvertTime"] = true,
2						["ShowOptions"] = {
2							["PowaGroupAnyButton"] = 1,
2							["PowaBarBuffStacks"] = 1,
2							["PowaBarTooltipCheck"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaPartyButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaIngoreCaseButton"] = 1,
2							["PowaOwntexButton"] = 1,
2						},
2						["InvertTimeHides"] = true,
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["ShowOptions"] = {
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["CanHaveTimerOnInverse"] = false,
2					["target"] = true,
2					["InvertTimeHides"] = true,
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.8,
2						["g"] = 0.8,
2						["b"] = 0.2,
2					},
2					["OptionText"] = {
2						["typeText"] = "Stealable Spell",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["buffNameTooltip"] = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
2					},
2				}, -- [16]
0				{
2					["CanHaveTimer"] = true,
2					["CanHaveStacks"] = true,
2					["auraType"] = "purgeable spell type",
2					["CanHaveInvertTime"] = true,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["buffAuraType"] = "HARMFUL",
2					["_base"] = {
2						["CanHaveTimer"] = true,
2						["CanHaveStacks"] = true,
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["TooltipOptions"] = {
2								["r"] = 1,
2								["g"] = 1,
2								["b"] = 1,
2							},
2						},
2						["CanHaveInvertTime"] = true,
2						["ShowOptions"] = {
2							["PowaGroupAnyButton"] = 1,
2							["PowaBarBuffStacks"] = 1,
2							["PowaBarTooltipCheck"] = 1,
2						},
2						["CheckBoxes"] = {
2							["PowaInverseButton"] = 1,
2							["PowaRaidButton"] = 1,
2							["PowaGroupAnyButton"] = 1,
2							["PowaPartyButton"] = 1,
2							["PowaTargetButton"] = 1,
2							["PowaFocusButton"] = 1,
2							["PowaOptunitnButton"] = 1,
2							["PowaGroupOrSelfButton"] = 1,
2							["PowaIngoreCaseButton"] = 1,
2							["PowaOwntexButton"] = 1,
2						},
2						["InvertTimeHides"] = true,
2						["__index"] = nil --[[ skipped recursive table ]],
2						["TooltipOptions"] = {
2							["r"] = 1,
2							["g"] = 1,
2							["b"] = 1,
2						},
2					},
2					["ShowOptions"] = {
2						["PowaBarTooltipCheck"] = 1,
2					},
2					["CheckBoxes"] = {
2						["PowaOwntexButton"] = 1,
2						["PowaFocusButton"] = 1,
2						["PowaInverseButton"] = 1,
2						["PowaTargetButton"] = 1,
2						["PowaIngoreCaseButton"] = 1,
2					},
2					["CanHaveTimerOnInverse"] = false,
2					["target"] = true,
2					["InvertTimeHides"] = true,
2					["TooltipOptions"] = {
2						["showBuffName"] = true,
2						["r"] = 0.2,
2						["g"] = 0.8,
2						["b"] = 0.2,
2					},
2					["OptionText"] = {
2						["typeText"] = "Purgeable Spell",
2						["exactTooltip"] = "Check this to test the exact name of the buff/debuff/action.",
2						["buffNameTooltip"] = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
2					},
0				}, -- [17]
2			},
2			["OptionTernary"] = {
2			},
2			["TimerUpdateThrottleTimer"] = 0,
2			["WeAreMounted"] = false,
2			["DoCheck"] = {
2				["Combo"] = true,
2				["Mana"] = true,
2				["PlayerSpells"] = false,
2				["RageEnergy"] = true,
2				["NamedUnitHealth"] = false,
2				["Aoe"] = false,
2				["GroupOrSelfBuffs"] = true,
2				["PurgeableTargetSpells"] = true,
2				["TargetRageEnergy"] = true,
2				["RaidPvP"] = false,
2				["Aggro"] = false,
2				["Spells"] = false,
2				["UnitBuffs"] = false,
2				["StealableTargetSpells"] = true,
2				["PartyPvP"] = false,
2				["Health"] = true,
2				["All"] = false,
2				["FocusRageEnergy"] = false,
2				["Stance"] = true,
2				["TargetPvP"] = false,
2				["PartyBuffs"] = false,
2				["TargetMana"] = true,
2				["RaidBuffs"] = false,
2				["PartyHealth"] = false,
2				["FocusBuffs"] = false,
2				["OwnSpells"] = true,
2				["Others"] = false,
2				["TargetHealth"] = true,
2				["Actions"] = true,
2				["RaidRageEnergy"] = false,
2				["PartyMana"] = false,
2				["UnitRageEnergy"] = false,
2				["TargetSpells"] = true,
2				["NamedUnitMana"] = false,
2				["FocusSpells"] = false,
2				["FocusMana"] = false,
2				["RaidHealth"] = false,
2				["TargetBuffs"] = false,
2				["Enchants"] = false,
2				["FocusHealth"] = false,
2				["PvP"] = false,
2				["PartyAggro"] = false,
2				["RaidAggro"] = false,
2				["Buffs"] = false,
2				["PartyRageEnergy"] = false,
2				["RaidMana"] = false,
2			},
2			["allowedOperators"] = {
2				["!"] = true,
2				[">="] = true,
2				["="] = true,
2				["-"] = true,
2				["<"] = true,
2				["<="] = true,
2				[">"] = true,
2			},
2			["VariablesLoaded"] = true,
2			["AoeAuraAdded"] = {
2			},
2			["maxtextures"] = 67,
2			["Pending"] = {
2			},
2			["AnimationBeginTypes"] = {
2				["TranslateBottomLeft"] = 11,
2				["TranslateTopRight"] = 7,
2				["None"] = 0,
2				["Bounce"] = 12,
2				["TranslateBottomRight"] = 9,
2				["TranslateRight"] = 8,
2				["TranslateBottom"] = 10,
2				["TranslateTop"] = 6,
2				["ZoomIn"] = 1,
2				["TranslateLeft"] = 4,
2				["ZoomOut"] = 2,
2				["FadeIn"] = 3,
2				["TranslateTopLeft"] = 5,
2			},
2			["Version"] = "2.6.3W",
2			["OptionCheckBoxes"] = {
2				"PowaTargetButton", -- [1]
2				"PowaPartyButton", -- [2]
2				"PowaGroupOrSelfButton", -- [3]
2				"PowaRaidButton", -- [4]
2				"PowaIngoreCaseButton", -- [5]
2				"PowaOwntexButton", -- [6]
2				"PowaInverseButton", -- [7]
2				"PowaFocusButton", -- [8]
2				"PowaOptunitnButton", -- [9]
0				"PowaGroupAnyButton", -- [10]
2			},
2			["TimerTextures"] = {
2				"Original", -- [1]
2				"AccidentalPresidency", -- [2]
2				"Crystal", -- [3]
2				"Digital", -- [4]
2				"Monofonto", -- [5]
2				"OCR", -- [6]
0				"WhiteRabbit", -- [7]
2			},
2			["MoveEffect"] = 0,
2			["DebugTimer"] = 440.2080218698829,
2			["DebugCycle"] = false,
2			["WeAreInCombat"] = false,
2			["WeAreInVehicle"] = false,
2			["DebuffCatSpells"] = {
2				["Silenced - Gag Order"] = 2,
2				["Detonate Mana"] = 10,
2				["Blade Twisting"] = 3,
2				["Froststorm Breath"] = 3,
2				["Polymorph"] = 1,
2				["Hammer of Justice"] = 6,
2				["Frostbite"] = 4,
2				["Cone of Cold"] = 3,
2				["Bash"] = 6,
2				["Freeze"] = 4,
2				["Feral Charge Effect"] = 4,
2				["Frostweave Net"] = 4,
2				["Blind"] = 1,
2				["Piercing Howl"] = 3,
2				["Curse of Exhaustion"] = 3,
2				["Mind Flay"] = 3,
2				["Silenced - Shield of the Templar"] = 2,
2				["Impact"] = 6,
2				["Psychic Scream"] = 1,
2				["Gravity Bomb"] = 10,
2				["Mark of the Faceless"] = 10,
2				["Net-o-Matic"] = 4,
2				["Frost Nova"] = 4,
2				["Mutating Injection"] = 10,
2				["Desecration"] = 3,
2				["Cyclone"] = 1,
2				["Glyph of Heart Strike"] = 3,
2				["Typhoon"] = 3,
2				["Shackle Undead"] = 1,
2				["Chimera Shot - Scorpid"] = 5,
2				["Disarm"] = 5,
2				["Nature's Fury"] = 10,
2				["Shadowfury"] = 6,
2				["Gouge"] = 1,
2				["Scatter Shot"] = 1,
2				["Chains of Ice"] = 3,
2				["Hamstring"] = 3,
2				["Frost Grenade"] = 4,
2				["Silenced - Improved Kick"] = 2,
2				["Slow"] = 3,
2				["Ravage"] = 6,
2				["Improved Fire Nova Totem"] = 6,
2				["Hex"] = 1,
2				["Adamantite Grenade"] = 6,
2				["Howl of Terror"] = 1,
2				["Stoneclaw Stun"] = 6,
2				["Positive Charge"] = 10,
2				["Maim"] = 6,
2				["Concussive Barrage"] = 3,
2				["Intimidation"] = 6,
2				["Chilled"] = 3,
2				["Venom Web Spray"] = 4,
2				["Sap"] = 1,
2				["Spell Lock"] = 2,
2				["Judgement of Justice"] = 3,
2				["Dragon's Breath"] = 1,
2				["Wing Clip"] = 3,
2				["Improved Hamstring"] = 4,
2				["Strangulate"] = 2,
2				["Fear"] = 1,
2				["Negative Charge"] = 10,
2				["Silence"] = 2,
2				["Death Coil"] = 1,
2				["Fiery Payback"] = 5,
2				["Web"] = 4,
2				["Earthbind"] = 3,
2				["Silencing Shot"] = 2,
2				["Shockwave"] = 6,
2				["Deadly Throw"] = 3,
2				["Dazed"] = 3,
2				["Stun"] = 6,
2				["Charge Stun"] = 6,
2				["Pounce"] = 6,
2				["Infected Wounds"] = 3,
2				["Fel Iron Bomb"] = 6,
2				["Holy Wrath"] = 6,
2				["Freezing Trap Effect"] = 1,
2				["Counterattack"] = 4,
2				["Concussive Shot"] = 3,
2				["Frost Shock"] = 3,
2				["Glyph of Freezing Trap"] = 3,
2				["Seduction"] = 1,
2				["Entrapment"] = 4,
2				["Arcane Torrent"] = 2,
2				["Searing Light"] = 10,
2				["Blast Wave"] = 3,
2				["Gnaw"] = 6,
2				["Pin"] = 4,
2				["War Stomp"] = 6,
2				["Banish"] = 1,
2				["Garrote - Silence"] = 2,
2				["Intimidating Shout"] = 1,
2				["Concussion Blow"] = 6,
2				["Revenge Stun"] = 6,
2				["Hibernate"] = 1,
2				["Frostbolt"] = 3,
2				["Crippling Poison"] = 3,
2				["Shattered Barrier"] = 4,
2				["Dismantle"] = 5,
2				["Glyph of Hamstring"] = 4,
2				["Entangling Roots"] = 4,
2				["Deep Freeze"] = 6,
2				["Frostfire Bolt"] = 3,
2				["Kidney Shot"] = 6,
2				["Psychic Horror"] = 1,
2				["Cheap Shot"] = 6,
2				["Frost Trap Aura"] = 3,
2				["Turn Evil"] = 1,
2				["Frostbrand Attack"] = 3,
2				["Icy Clutch"] = 3,
2				["Wyvern Sting"] = 1,
2				["Snatch"] = 5,
2				["Earthgrab"] = 4,
2				["Intercept"] = 6,
2				["Tendon Rip"] = 3,
2				["Mind Control"] = 1,
2				["Silenced - Improved Counterspell"] = 2,
2				["Hungering Cold"] = 1,
2				["Aftermath"] = 3,
2				["Scare Beast"] = 1,
2				["Sonic Blast"] = 6,
2				["Repentance"] = 1,
2			},
2			["WowTextures"] = {
2				"Spells\\AuraRune_B", -- [1]
2				"Spells\\AuraRune256b", -- [2]
2				"Spells\\Circle", -- [3]
2				"Spells\\GENERICGLOW2B", -- [4]
2				"Spells\\GenericGlow2b1", -- [5]
2				"Spells\\ShockRingCrescent256", -- [6]
2				"SPELLS\\AuraRune1", -- [7]
2				"SPELLS\\AuraRune5Green", -- [8]
2				"SPELLS\\AuraRune7", -- [9]
2				"SPELLS\\AuraRune8", -- [10]
2				"SPELLS\\AuraRune9", -- [11]
2				"SPELLS\\AuraRune11", -- [12]
2				"SPELLS\\AuraRune_A", -- [13]
2				"SPELLS\\AuraRune_C", -- [14]
2				"SPELLS\\AuraRune_D", -- [15]
2				"SPELLS\\Holy_Rune1", -- [16]
2				"SPELLS\\Rune1d_GLOWless", -- [17]
2				"SPELLS\\Rune4blue", -- [18]
2				"SPELLS\\RuneBC1", -- [19]
2				"SPELLS\\RuneBC2", -- [20]
2				"SPELLS\\RUNEFROST", -- [21]
2				"Spells\\Holy_Rune_128", -- [22]
2				"Spells\\Nature_Rune_128", -- [23]
2				"SPELLS\\Death_Rune", -- [24]
2				"SPELLS\\DemonRune6", -- [25]
2				"SPELLS\\DemonRune7", -- [26]
2				"Spells\\DemonRune5backup", -- [27]
2				"Particles\\Intellect128_outline", -- [28]
2				"Spells\\Intellect_128", -- [29]
2				"SPELLS\\GHOST1", -- [30]
2				"Spells\\Aspect_Beast", -- [31]
2				"Spells\\Aspect_Hawk", -- [32]
2				"Spells\\Aspect_Wolf", -- [33]
2				"Spells\\Aspect_Snake", -- [34]
2				"Spells\\Aspect_Cheetah", -- [35]
2				"Spells\\Aspect_Monkey", -- [36]
2				"Spells\\Blobs", -- [37]
2				"Spells\\Blobs2", -- [38]
2				"Spells\\GradientCrescent2", -- [39]
2				"Spells\\InnerFire_Rune_128", -- [40]
2				"Spells\\RapidFire_Rune_128", -- [41]
2				"Spells\\Protect_128", -- [42]
2				"Spells\\Reticle_128", -- [43]
2				"Spells\\Star2A", -- [44]
2				"Spells\\Star4", -- [45]
2				"Spells\\Strength_128", -- [46]
2				"Particles\\STUNWHIRL", -- [47]
2				"SPELLS\\BloodSplash1", -- [48]
2				"SPELLS\\DarkSummon", -- [49]
2				"SPELLS\\EndlessRage", -- [50]
2				"SPELLS\\Rampage", -- [51]
2				"SPELLS\\Eye", -- [52]
2				"SPELLS\\Eyes", -- [53]
0				"SPELLS\\Zap1b", -- [54]
2			},
2			["AurasByType"] = {
2				["Combo"] = {
2				},
2				["Mana"] = {
2				},
2				["PlayerSpells"] = {
2				},
2				["PurgeableFocusSpells"] = {
2				},
2				["RageEnergy"] = {
2				},
2				["NamedUnitHealth"] = {
2				},
2				["Aoe"] = {
2				},
2				["GroupOrSelfBuffs"] = {
2				},
2				["PurgeableTargetSpells"] = {
2				},
2				["TargetRageEnergy"] = {
2				},
2				["StealableFocusSpells"] = {
2				},
2				["RaidMana"] = {
2				},
2				["Aggro"] = {
2				},
2				["Spells"] = {
2				},
2				["UnitBuffs"] = {
2				},
2				["StealableTargetSpells"] = {
2				},
2				["PartyPvP"] = {
2				},
2				["Health"] = {
2				},
2				["PartyAggro"] = {
2				},
2				["FocusRageEnergy"] = {
2				},
2				["Stance"] = {
2				},
2				["TargetPvP"] = {
2				},
2				["PartyBuffs"] = {
2				},
2				["TargetMana"] = {
2				},
2				["Actions"] = {
2				},
2				["PartyHealth"] = {
2				},
2				["FocusBuffs"] = {
2				},
2				["OwnSpells"] = {
2				},
2				["RaidPvP"] = {
2				},
2				["TargetHealth"] = {
2				},
2				["PurgeableSpells"] = {
2				},
2				["RaidRageEnergy"] = {
2				},
2				["PartyMana"] = {
2				},
2				["UnitRageEnergy"] = {
2				},
2				["TargetSpells"] = {
2				},
2				["NamedUnitMana"] = {
2				},
2				["StealableSpells"] = {
2				},
2				["FocusMana"] = {
2				},
2				["RaidHealth"] = {
2				},
2				["TargetBuffs"] = {
2					2, -- [1]
2					3, -- [2]
2					5, -- [3]
2					10, -- [4]
2					11, -- [5]
2					13, -- [6]
0					14, -- [7]
2				},
2				["Enchants"] = {
2				},
2				["FocusHealth"] = {
2				},
2				["PvP"] = {
2				},
2				["FocusSpells"] = {
2				},
2				["RaidAggro"] = {
2				},
2				["Buffs"] = {
2					1, -- [1]
2					4, -- [2]
2					7, -- [3]
0					8, -- [4]
2				},
2				["PartyRageEnergy"] = {
2				},
2				["RaidBuffs"] = {
2				},
2			},
2			["AnimationMainClasses"] = {
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [1]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [2]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [3]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [4]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [5]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OffsetY"] = 0,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2				}, -- [6]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OffsetY"] = 0,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2				}, -- [7]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [8]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OffsetY"] = 0,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2				}, -- [9]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["OffsetY"] = 0,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
0				}, -- [10]
2			},
2			["playerclass"] = "DRUID",
2			["WeAreInParty"] = false,
2			["WeAreAlive"] = true,
2			["Fonts"] = {
2				"Fonts\\FRIZQT__.TTF", -- [1]
2				"Fonts\\ARIALN.TTF", -- [2]
2				"Fonts\\skurri.ttf", -- [3]
2				"Fonts\\MORPHEUS.ttf", -- [4]
2				"Interface\\Addons\\PowerAuras\\Fonts\\All_Star_Resort.ttf", -- [5]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army.ttf", -- [6]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army_Condensed.ttf", -- [7]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army_Expanded.ttf", -- [8]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Blazed.ttf", -- [9]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Blox2.ttf", -- [10]
2				"Interface\\Addons\\PowerAuras\\Fonts\\CloisterBlack.ttf", -- [11]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Moonstar.ttf", -- [12]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Neon.ttf", -- [13]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Pulse_virgin.ttf", -- [14]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Punk_s_not_dead.ttf", -- [15]
2				"Interface\\Addons\\PowerAuras\\Fonts\\whoa!.ttf", -- [16]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Hexagon.ttf", -- [17]
0				"Interface\\Addons\\PowerAuras\\Fonts\\Starcraft_Normal.ttf", -- [18]
2			},
2			["MaxAuras"] = 360,
2			["ThrottleTimer"] = 0,
2			["BeginAnimDisplay"] = {
2				"Zoom In", -- [1]
2				"Zoom Out", -- [2]
2				"Fade In", -- [3]
2				"Left", -- [4]
2				"Top-Left", -- [5]
2				"Top", -- [6]
2				"Top-Right", -- [7]
2				"Right", -- [8]
2				"Bottom-Right", -- [9]
2				"Bottom", -- [10]
2				"Bottom-Left", -- [11]
2				"Bounce", -- [12]
2				[0] = "[None]",
2			},
2			["AnimationTypes"] = {
2				["Invisible"] = 0,
2				["Static"] = 1,
2				["Flashing"] = 2,
2				["Bubble"] = 5,
2				["Orbit"] = 10,
2				["Pulse"] = 4,
2				["Shrinking"] = 8,
2				["WaterDrop"] = 6,
2				["Electric"] = 7,
2				["Flame"] = 9,
2				["Growing"] = 3,
2			},
2			["ChecksTimer"] = 118.2610073182732,
2			["Initialising"] = false,
2			["NextCheck"] = 0.2,
2			["Cascade"] = {
2			},
2			["StacksFrames"] = {
2			},
2			["Auras"] = {
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0.807843137254902,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 1,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Mount_JungleTiger",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = 45,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 7,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = 0,
2						["id"] = 1,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = 100,
2						["h"] = 1,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 20,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 0,
2					["size"] = 0.699999988079071,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Tiger's Fury",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 4,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 1,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = false,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [1]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 2,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = 35,
2					["x"] = -65,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 26,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = false,
2						["dual"] = false,
2						["cents"] = true,
2						["id"] = 2,
2						["HideLeadingZeros"] = false,
2						["x"] = 0,
2						["InvertAuraBelow"] = 0,
2						["y"] = 0,
2						["h"] = 1,
2						["UpdatePing"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "6",
2					["inVehicle"] = false,
2					["speed"] = 1.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = true,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 1,
2					["size"] = 0.2999999821186066,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Rake",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 4,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 2,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = true,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = true,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [2]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 3,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = 35,
2					["x"] = 65,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 26,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = false,
2						["dual"] = false,
2						["cents"] = true,
2						["id"] = 3,
2						["HideLeadingZeros"] = false,
2						["x"] = 0,
2						["InvertAuraBelow"] = 0,
2						["y"] = 0,
2						["h"] = 1,
2						["UpdatePing"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "6",
2					["inVehicle"] = false,
2					["speed"] = 1.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = true,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = true,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 0.02352941176470588,
2					["size"] = 0.2899999916553497,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Rip",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 4,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 3,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = true,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = true,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [3]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0.7019607843137254,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 4,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Shadow_ManaBurn",
2					["beginSpin"] = false,
2					["torsion"] = 1.399999976158142,
2					["r"] = 0.4470588235294117,
2					["y"] = 10,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 1,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 23,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = 0,
2						["id"] = 4,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = 5,
2						["h"] = 0.75,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 1,
2					["size"] = 0.4399999976158142,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Clearcasting",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 5,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 4,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = false,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [4]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2					["beginSpin"] = false,
2					["torsion"] = 0.800000011920929,
2					["r"] = 0.9803921568627451,
2					["y"] = 60,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 2,
2					["Timer"] = {
2						["enabled"] = false,
2						["dual"] = false,
2						["cents"] = true,
2						["id"] = 5,
2						["HideLeadingZeros"] = false,
2						["x"] = 0,
2						["InvertAuraBelow"] = 0,
2						["y"] = 0,
2						["h"] = 1,
2						["UpdatePing"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "12/15",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["anim2"] = 0,
2					["aurastextfont"] = 1,
2					["b"] = 0.9137254901960784,
2					["spec2"] = true,
2					["size"] = 0.5099999904632568,
2					["customtex"] = false,
2					["off"] = false,
2					["begin"] = 0,
2					["buffname"] = "Faerie Fire",
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 5,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["spec1"] = true,
2					["InactiveDueToState"] = true,
2					["texmode"] = 2,
2					["inverse"] = true,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [5]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = false,
2					["InactiveDueToState"] = false,
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 14,
2					["stacks"] = 0,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 1,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["party"] = false,
2					["Active"] = false,
2					["aurastextfont"] = 1,
2					["anim2"] = 0,
2					["spec2"] = true,
2					["off"] = true,
2					["customtex"] = true,
2					["begin"] = 0,
2					["buffname"] = "???",
2					["ignoremaj"] = true,
2					["anim1"] = 1,
2					["optunitn"] = false,
2					["inRaid"] = 0,
2					["Showing"] = false,
2					["id"] = 6,
2					["UseOldAnimations"] = false,
2					["spec1"] = true,
2					["icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2					["size"] = 0.75,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = true,
2					["Children"] = {
2						[2] = true,
2						[3] = true,
2						[13] = true,
2					},
2					["stance"] = 3,
2				}, -- [6]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0.5372549019607843,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 7,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Hunter_Pet_Cat",
2					["beginSpin"] = false,
2					["torsion"] = 1.399999976158142,
2					["r"] = 1,
2					["y"] = 10,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 1,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 3,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = 0,
2						["id"] = 7,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = 20,
2						["h"] = 0.800000011920929,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1.5,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 0,
2					["size"] = 0.3799999952316284,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Predator's Swiftness",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 2,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 7,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = false,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [7]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0.611764705882353,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 8,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Nature_StoneClawTotem",
2					["beginSpin"] = false,
2					["torsion"] = 0.800000011920929,
2					["r"] = 1,
2					["y"] = 60,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 1,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 3,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 3,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = 0,
2						["id"] = 8,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = -12,
2						["h"] = 1,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 5,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 0,
2					["size"] = 0.6699999570846558,
2					["off"] = false,
2					["customtex"] = false,
2					["begin"] = 0,
2					["buffname"] = "Barkskin",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 4,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 8,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = false,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [8]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 14,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 1,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["HideRequest"] = true,
2					["aurastextfont"] = 1,
2					["Active"] = false,
2					["anim2"] = 0,
2					["spec2"] = true,
2					["customtex"] = true,
2					["off"] = true,
2					["begin"] = 0,
2					["buffname"] = "???",
2					["anim1"] = 1,
2					["optunitn"] = false,
2					["inRaid"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 9,
2					["UseOldAnimations"] = false,
2					["Showing"] = false,
2					["spec1"] = true,
2					["size"] = 0.75,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["stacks"] = 0,
2					["Children"] = {
2						[14] = true,
2					},
2					["stance"] = 1,
2				}, -- [9]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 10,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = -42,
2						["id"] = 10,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 4,
2						["UpdatePing"] = false,
2						["y"] = 60,
2						["h"] = 0.800000011920929,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = true,
2					["finish"] = 1,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 1,
2					["size"] = 0.239999994635582,
2					["off"] = false,
2					["customtex"] = true,
2					["begin"] = 0,
2					["buffname"] = "Rake",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 10,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = true,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [10]
0				{
2					["gcd"] = false,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0.01568627450980392,
2					["thresholdinvert"] = false,
2					["Stacks"] = {
2						["a"] = 1,
2						["id"] = 11,
2						["HideLeadingZeros"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["Showing"] = false,
2						["Transparent"] = false,
2						["UpdatePing"] = false,
2						["x"] = 0,
2						["enabled"] = false,
2						["Texture"] = "Default",
2					},
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = true,
2						["dual"] = false,
2						["cents"] = false,
2						["x"] = 42,
2						["id"] = 11,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 4,
2						["UpdatePing"] = false,
2						["y"] = 60,
2						["h"] = 0.800000011920929,
2						["ShowOnAuraHide"] = false,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = true,
2					["finish"] = 1,
2					["randomcolor"] = false,
2					["inParty"] = true,
2					["anim2"] = 0,
2					["tooltipCheck"] = "",
2					["aurastextfont"] = 1,
2					["b"] = 0,
2					["size"] = 0.239999994635582,
2					["off"] = false,
2					["customtex"] = true,
2					["begin"] = 0,
2					["buffname"] = "Rip",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 11,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["InactiveDueToState"] = true,
2					["spec2"] = true,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [11]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 14,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 1,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["HideRequest"] = true,
2					["aurastextfont"] = 1,
2					["Active"] = false,
2					["anim2"] = 0,
2					["spec2"] = true,
2					["customtex"] = true,
2					["off"] = true,
2					["begin"] = 0,
2					["buffname"] = "???",
2					["anim1"] = 1,
2					["optunitn"] = false,
2					["inRaid"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 12,
2					["UseOldAnimations"] = false,
2					["Showing"] = false,
2					["spec1"] = true,
2					["size"] = 0.75,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["stacks"] = 0,
2					["Children"] = {
2						[5] = true,
2					},
2					["stance"] = 0,
2				}, -- [12]
0				{
2					["gcd"] = false,
2					["TimerInactiveDueToMulti"] = true,
2					["Active"] = false,
2					["isSecondary"] = false,
2					["g"] = 0,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = true,
2					["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2					["beginSpin"] = false,
2					["torsion"] = 0.800000011920929,
2					["r"] = 0.9803921568627501,
2					["y"] = 60,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["party"] = false,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 2,
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "6/16",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["anim2"] = 0,
2					["aurastextfont"] = 1,
2					["b"] = 0.91372549019608,
2					["spec2"] = true,
2					["size"] = 0.5099999904632568,
2					["customtex"] = false,
2					["off"] = false,
2					["begin"] = 0,
2					["buffname"] = "Faerie Fire",
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 13,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["spec1"] = true,
2					["InactiveDueToState"] = false,
2					["texmode"] = 2,
2					["inverse"] = true,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = false,
2					["stacks"] = 0,
2					["stance"] = 10,
2				}, -- [13]
0				{
2					["gcd"] = false,
2					["b"] = 0.91372549019608,
2					["isSecondary"] = false,
2					["g"] = 0,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = true,
2					["InactiveDueToState"] = true,
2					["beginSpin"] = false,
2					["torsion"] = 0.800000011920929,
2					["r"] = 0.9803921568627501,
2					["y"] = 60,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 2,
2					["stacks"] = 0,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 2,
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "9/16",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 0,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["anim2"] = 0,
2					["aurastextfont"] = 1,
2					["party"] = false,
2					["spec2"] = true,
2					["size"] = 0.5099999904632568,
2					["customtex"] = false,
2					["off"] = false,
2					["begin"] = 0,
2					["buffname"] = "Faerie Fire",
2					["anim1"] = 1,
2					["optunitn"] = false,
2					["inRaid"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 14,
2					["UseOldAnimations"] = false,
2					["Showing"] = false,
2					["spec1"] = true,
2					["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2					["texmode"] = 2,
2					["inverse"] = true,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["Active"] = false,
2					["HideRequest"] = false,
2					["stance"] = 10,
2				}, -- [14]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 7,
2					["stacks"] = 0,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = false,
2						["dual"] = false,
2						["cents"] = true,
2						["x"] = 0,
2						["id"] = 15,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["ShowOnAuraHide"] = true,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 1,
2					["inParty"] = 0,
2					["randomcolor"] = false,
2					["party"] = false,
2					["aurastextfont"] = 1,
2					["Active"] = false,
2					["anim2"] = 0,
2					["spec2"] = true,
2					["customtex"] = true,
2					["off"] = true,
2					["begin"] = 0,
2					["buffname"] = "Faerie Fire",
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 15,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["spec1"] = true,
2					["size"] = 0.75,
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["HideRequest"] = true,
2					["Children"] = {
2						[5] = true,
2					},
2					["stance"] = 10,
2				}, -- [15]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["isSecondary"] = false,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["stacksLower"] = 0,
2					["target"] = false,
2					["InactiveDueToState"] = false,
2					["beginSpin"] = false,
2					["torsion"] = 1,
2					["r"] = 1,
2					["y"] = -30,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["isAlive"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 7,
2					["stacks"] = 0,
2					["focus"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["enabled"] = false,
2						["dual"] = false,
2						["cents"] = true,
2						["x"] = 0,
2						["id"] = 16,
2						["HideLeadingZeros"] = false,
2						["InvertAuraBelow"] = 0,
2						["UpdatePing"] = false,
2						["y"] = 0,
2						["h"] = 1,
2						["ShowOnAuraHide"] = true,
2						["Transparent"] = false,
2						["HideRequest"] = true,
2						["a"] = 1,
2						["Showing"] = false,
2						["Texture"] = "Default",
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["isResting"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["finish"] = 1,
2					["randomcolor"] = false,
2					["inParty"] = 0,
2					["HideRequest"] = true,
2					["Active"] = false,
2					["aurastextfont"] = 1,
2					["anim2"] = 0,
2					["size"] = 0.75,
2					["off"] = true,
2					["customtex"] = true,
2					["begin"] = 0,
2					["buffname"] = "Faerie Fire (Feral)",
2					["spec1"] = true,
2					["Showing"] = false,
2					["anim1"] = 1,
2					["inRaid"] = 0,
2					["optunitn"] = false,
2					["id"] = 16,
2					["UseOldAnimations"] = false,
2					["ignoremaj"] = true,
2					["spec2"] = true,
2					["icon"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2					["texmode"] = 2,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["party"] = false,
2					["Children"] = {
2						[13] = true,
2						[14] = true,
2					},
2					["stance"] = 10,
0				}, -- [16]
2			},
2			["DefaultOperator"] = ">=",
2			["ActiveTalentGroup"] = 1,
2			["CurrentAuraId"] = 5,
2			["PowaStance"] = {
2				"Dire Bear Form", -- [1]
2				"Aquatic Form", -- [2]
2				"Cat Form", -- [3]
2				"Travel Form", -- [4]
2				"Flight Form", -- [5]
2				[0] = "Humanoid",
2			},
2			["ResetTargetTimers"] = false,
2			["AoeAuraTexture"] = {
2			},
2			["Sound"] = {
2				"LEVELUP", -- [1]
2				"LOOTWINDOWCOINSOUND", -- [2]
2				"MapPing", -- [3]
2				"Exploration", -- [4]
2				"QUESTADDED", -- [5]
2				"QUESTCOMPLETED", -- [6]
2				"WriteQuest", -- [7]
2				"Fishing Reel in", -- [8]
2				"igPVPUpdate", -- [9]
2				"ReadyCheck", -- [10]
2				"RaidWarning", -- [11]
2				"AuctionWindowOpen", -- [12]
2				"AuctionWindowClose", -- [13]
2				"TellMessage", -- [14]
2				"igBackPackOpen", -- [15]
2				[0] = "None",
2			},
2			["Colors"] = {
2				["Blue"] = "|cff6666ff",
2				["Grey"] = "|cff999999",
2				["Purple"] = "|cffB0A0ff",
2				["Red"] = "|cffff2020",
2				["BGrey"] = "|c00D0D0D0",
2				["Green"] = "|cff66cc33",
2				["Gold"] = "|cffffff00",
2				["Yellow"] = "|cffffff40",
2				["Orange"] = "|cffff9930",
2				["White"] = "|c00FFFFFF",
2			},
2			["Textures"] = {
2				[5] = {
2					[0] = nil --[[ skipped userdata ]],
2				},
2				[15] = {
2					[0] = nil --[[ skipped userdata ]],
2				},
2				[14] = {
2					[0] = nil --[[ skipped userdata ]],
2				},
2				[9] = {
2					[0] = nil --[[ skipped userdata ]],
2				},
2			},
2			["DebuffCatType"] = {
2				["Root"] = 4,
2				["CC"] = 1,
2				["Snare"] = 3,
2				["Silence"] = 2,
2				["Disarm"] = 5,
2				["Stun"] = 6,
2				["PvE"] = 10,
2			},
2			["MainOptionPage"] = 1,
2			["AnimationEndTypes"] = {
2				["GrowAndFade"] = 1,
2				["SpinShrinkAndFade"] = 5,
2				["SpinAndFade"] = 4,
2				["ShrinkAndFade"] = 2,
2				["None"] = 0,
2				["Fade"] = 3,
2			},
2			["AnimationBeginClasses"] = {
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [1]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [2]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [3]
0				{
2					["DirectionY"] = 0,
2					["TranslationSpeed"] = 2,
2					["OffsetX"] = -100,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = 1,
2					["OffsetY"] = 0,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [4]
0				{
2					["DirectionY"] = -1,
2					["TranslationSpeed"] = 1.5,
2					["OffsetX"] = -75,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = 1,
2					["OffsetY"] = 75,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [5]
0				{
2					["DirectionY"] = -1,
2					["TranslationSpeed"] = 2,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = 0,
2					["OffsetY"] = 100,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [6]
0				{
2					["DirectionY"] = -1,
2					["TranslationSpeed"] = 1.5,
2					["OffsetX"] = 75,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = -1,
2					["OffsetY"] = 75,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [7]
0				{
2					["DirectionY"] = 0,
2					["TranslationSpeed"] = 2,
2					["OffsetX"] = 100,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = -1,
2					["OffsetY"] = 0,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [8]
0				{
2					["DirectionY"] = 1,
2					["TranslationSpeed"] = 1.5,
2					["OffsetX"] = 75,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = -1,
2					["OffsetY"] = -75,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [9]
0				{
2					["DirectionY"] = 1,
2					["TranslationSpeed"] = 2,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = 0,
2					["OffsetY"] = -100,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [10]
0				{
2					["DirectionY"] = 1,
2					["TranslationSpeed"] = 1.5,
2					["OffsetX"] = -75,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2					["DirectionX"] = 1,
2					["OffsetY"] = -75,
2					["__index"] = nil --[[ skipped recursive table ]],
2				}, -- [11]
0				{
2					["Acceleration"] = 1000,
2					["OffsetX"] = 0,
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2					["OffsetY"] = 100,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["MinVelocity"] = 100,
0				}, -- [12]
2				[0] = {
2					["__index"] = nil --[[ skipped recursive table ]],
2				},
2			},
2			["ModTest"] = true,
2			["AnimationEndClasses"] = {
0				{
2					["Direction"] = -1,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2				}, -- [1]
0				{
2					["Direction"] = 1,
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2				}, -- [2]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
0				}, -- [3]
2				[0] = {
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				},
2			},
2			["Events"] = {
2				"ACTIONBAR_SLOT_CHANGED", -- [1]
2				"ACTIONBAR_UPDATE_COOLDOWN", -- [2]
2				"ACTIONBAR_UPDATE_USABLE", -- [3]
2				"BAG_UPDATE_COOLDOWN", -- [4]
2				"COMBAT_LOG_EVENT_UNFILTERED", -- [5]
2				"PARTY_MEMBERS_CHANGED", -- [6]
2				"PLAYER_ALIVE", -- [7]
2				"PLAYER_DEAD", -- [8]
2				"PLAYER_FOCUS_CHANGED", -- [9]
2				"PLAYER_REGEN_DISABLED", -- [10]
2				"PLAYER_REGEN_ENABLED", -- [11]
2				"PLAYER_TALENT_UPDATE", -- [12]
2				"PLAYER_TARGET_CHANGED", -- [13]
2				"PLAYER_UNGHOST", -- [14]
2				"PLAYER_UPDATE_RESTING", -- [15]
2				"PLAYER_UPDATE_RESTING", -- [16]
2				"RAID_ROSTER_UPDATE", -- [17]
2				"SPELL_UPDATE_COOLDOWN", -- [18]
2				"UNIT_AURA", -- [19]
2				"UNIT_AURASTATE", -- [20]
2				"UNIT_COMBO_POINTS", -- [21]
2				"UNIT_ENERGY", -- [22]
2				"UNIT_ENTERED_VEHICLE", -- [23]
2				"UNIT_EXITED_VEHICLE", -- [24]
2				"UNIT_FACTION", -- [25]
2				"UNIT_HEALTH", -- [26]
2				"UNIT_INVENTORY_CHANGED", -- [27]
2				"UNIT_MANA", -- [28]
2				"UNIT_MAXENERGY", -- [29]
2				"UNIT_MAXHEALTH", -- [30]
2				"UNIT_MAXMANA", -- [31]
2				"UNIT_MAXRUNIC_POWER", -- [32]
2				"UNIT_RAGE", -- [33]
2				"UNIT_RUNIC_POWER", -- [34]
2				"UNIT_SPELLCAST_CHANNEL_START", -- [35]
2				"UNIT_SPELLCAST_CHANNEL_STOP", -- [36]
2				"UNIT_SPELLCAST_CHANNEL_UPDATE", -- [37]
2				"UNIT_SPELLCAST_DELAYED", -- [38]
2				"UNIT_SPELLCAST_FAILED", -- [39]
2				"UNIT_SPELLCAST_INTERRUPTED", -- [40]
2				"UNIT_SPELLCAST_START", -- [41]
2				"UNIT_SPELLCAST_STOP", -- [42]
2				"UNIT_SPELLCAST_SUCCEEDED", -- [43]
2				"UNIT_THREAT_SITUATION_UPDATE", -- [44]
2				"UPDATE_SHAPESHIFT_FORM", -- [45]
0				"UPDATE_SHAPESHIFT_FORMS", -- [46]
2			},
2			["SecondaryTextures"] = {
2			},
2			["WeAreInRaid"] = false,
2			["CurrentAuraPage"] = 1,
2			["NextDebugCheck"] = 0,
2			["PowaMiscDefault"] = {
2				["AnimationLimit"] = 0,
2				["TimerRoundUp"] = true,
2				["debug"] = false,
2				["UseGTFO"] = true,
2				["AnimationFps"] = 30,
2				["Version"] = "2.6.3W",
2				["DefaultTimerTexture"] = "Original",
2				["DefaultStacksTexture"] = "Original",
2				["OnUpdateLimit"] = 0,
2				["Disabled"] = false,
2			},
2			["SetColours"] = {
2				["PowaTargetButton"] = {
2					["r"] = 1,
2					["g"] = 0.2,
2					["b"] = 0.2,
2				},
2				["PowaRaidButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2				["PowaFocusButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2				["PowaOptunitnButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2				["PowaGroupOrSelfButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2				["PowaTargetFriendButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2				["PowaPartyButton"] = {
2					["r"] = 0.2,
2					["g"] = 1,
2					["b"] = 0.2,
2				},
2			},
2			["DebuffTypeSpellIds"] = {
2				[6789] = 1,
2				[122] = 4,
2				[54706] = 4,
2				[50519] = 6,
2				[20184] = 3,
2				[47610] = 3,
2				[11113] = 3,
2				[1513] = 1,
2				[50245] = 4,
2				[58179] = 3,
2				[50436] = 3,
2				[118] = 1,
2				[710] = 1,
2				[5782] = 1,
2				[5211] = 6,
2				[1715] = 3,
2				[2812] = 6,
2				[39796] = 6,
2				[35101] = 3,
2				[61394] = 3,
2				[2974] = 3,
2				[116] = 3,
2				[6358] = 1,
2				[25046] = 2,
2				[34490] = 2,
2				[30217] = 6,
2				[12355] = 6,
2				[28084] = 10,
2				[55080] = 4,
2				[3355] = 1,
2				[33395] = 4,
2				[120] = 3,
2				[47476] = 2,
2				[55666] = 3,
2				[30283] = 6,
2				[19386] = 1,
2				[13810] = 3,
2				[15407] = 3,
2				[51209] = 1,
2				[31589] = 3,
2				[12798] = 6,
2				[853] = 6,
2				[19503] = 1,
2				[20170] = 6,
2				[63018] = 10,
2				[63276] = 10,
2				[54644] = 3,
2				[18498] = 2,
2				[62589] = 10,
2				[33786] = 1,
2				[61391] = 3,
2				[22570] = 6,
2				[5484] = 1,
2				[605] = 1,
2				[47481] = 6,
2				[58617] = 3,
2				[63685] = 4,
2				[9005] = 6,
2				[9484] = 1,
2				[53359] = 5,
2				[3600] = 3,
2				[2094] = 1,
2				[15487] = 2,
2				[19185] = 4,
2				[30216] = 6,
2				[28059] = 10,
2				[1833] = 6,
2				[1776] = 1,
2				[44572] = 6,
2				[20066] = 1,
2				[24259] = 2,
2				[11071] = 4,
2				[27819] = 10,
2				[12323] = 3,
2				[24394] = 6,
2				[408] = 6,
2				[26679] = 3,
2				[12809] = 6,
2				[5116] = 3,
2				[339] = 4,
2				[31125] = 3,
2				[51722] = 5,
2				[6770] = 1,
2				[18425] = 2,
2				[5246] = 1,
2				[4167] = 4,
2				[6136] = 3,
2				[13099] = 4,
2				[31661] = 1,
2				[51514] = 1,
2				[2637] = 1,
2				[39965] = 4,
2				[50271] = 3,
2				[1330] = 2,
2				[50518] = 6,
2				[8034] = 3,
2				[18469] = 2,
2				[19306] = 4,
2				[50541] = 5,
2				[20253] = 6,
2				[18223] = 3,
2				[19675] = 4,
2				[7922] = 6,
2				[676] = 5,
2				[64346] = 5,
2				[23694] = 4,
2				[63529] = 2,
2				[46968] = 6,
2				[10326] = 1,
2				[63024] = 10,
2				[64044] = 1,
2				[18118] = 3,
2				[55536] = 4,
2				[58373] = 4,
2				[64695] = 4,
2				[29703] = 3,
2				[8056] = 3,
2				[51880] = 6,
2				[3409] = 3,
2				[45524] = 3,
2				[20549] = 6,
2				[8122] = 1,
2				[28169] = 10,
2			},
2			["Text"] = {
2				["aidePowaTimerHideAuraSlider"] = "Hide the aura and timer when the duration is greater than this limit (0 to deactivate)",
2				["aideCustomTextures"] = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
2				["aideTexture"] = "The texture to be shown. You can easily replace textures by changing the files Aura#.tga in the Addon's directory.",
2				["nomReasonAuraOff"] = "Aura off",
2				["nomCheckInverse"] = "Invert",
2				["nomCheckFocus"] = "Focus",
2				["nomReasonNoFocus"] = "No focus",
2				["nomTest"] = "Test",
2				["nomTalentGroup2"] = "Spec 2",
2				["nomRandomColor"] = "Random Colors",
2				["aideBuff5"] = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
2				["aideRename"] = "Rename the selected effect's page.",
2				["nomThreshold"] = "Threshold",
2				["nomDebug"] = "Activate Debug Messages",
2				["nomOwnTex"] = "Use own Texture",
2				["nomStance"] = "Stance",
2				["nomHideLeadingZeros"] = "Hide Leading Zeros",
2				["nomWowTextures"] = "WoW Textures",
2				["aideExportSet"] = "Press Ctrl-C to copy all the Auras on this page for sharing.",
2				["nomWhatever"] = "Ignored",
2				["nomReasonStateOK"] = "State OK",
2				["nomTexture"] = "Texture",
2				["nomAnim1"] = "Main Animation",
2				["nomBegin"] = "Begin Animation",
2				["aideSpells"] = "Enter here the Spell Name that will trigger a spell alert Aura.",
2				["aideParty"] = "Check this to test a party member only.",
2				["aideUnitn"] = "Enter here the name of the unit, which must activate/deactivate the effect. You can enter only names, if they are in your raid or group.",
2				["aideStance"] = "Select which Stance,Aura or Form trigger the event.",
2				["nomTabSound"] = "Sound",
2				["nomReasonPartyTargetPurgeablePresent"] = "Party$1Target has has Purgeable spell $2",
2				["aideAnim2"] = "This animation will be shown with less opacity than the main animaton. Attention, to not overload the screen.",
2				["nomReasonNotInRaid"] = "Not in Raid",
2				["nomReasonSpellNotReady"] = "Spell $1 Not Ready, on cooldown, timer invert",
2				["aideStacks"] = "Enter here the operator and the amount of stacks, required activate/deactivate the effect. Operator is required ex: '<5' '>3' '=11' '!5' '>=0' '<=6' '2-8'",
2				["nomDel"] = "Delete",
2				["nomCheckShowSpinAtBeginning"] = "Show Spin after begin animation ends",
2				["nomCentiemes"] = "Show hundredth",
2				["nomEdit"] = "Edit",
2				["aideBuff"] = "Enter here the name of the buff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Super Buff/Power)",
2				["nomReasonSpellUsable"] = "Spell $1 usable",
2				["nomEffectEditor"] = "Effect Editor",
2				["nomReasonBuffMissing"] = "$1 doesn't have $2 $3",
2				["nomFPS"] = "Global Animation FPS",
2				["nomClose"] = "Close",
2				["nomReasonStance"] = "Current Stance $1, matches $2",
2				["aideAddEffect"] = "Add an effect for edition.",
2				["nomReset"] = "Reset Editor Positions",
2				["aideTalentGroup1"] = "Show this effect only when you are in your primary talent spec.",
2				["nomReasonDisabled"] = "Power Auras Disabled",
2				["nomTransparent"] = "Use transparent textures",
2				["aucun"] = "None",
2				["nomReasonBuffFound"] = "Buff present",
2				["aideRaid"] = "Check this to test a raid member only.",
2				["nomReasonNotMounted"] = "Not Mounted",
2				["nomReasonPartyTargetStealablePresent"] = "Party$1Target has has Stealable spell $2",
2				["nomReasonInRaid"] = "In Raid",
2				["nomEnd"] = "End Animation",
2				["welcome"] = "Type /powa to view the options.",
2				["ReasonStat"] = {
2					["RageEnergy"] = {
2						["NoMatchReason"] = "$1 EnergyRagePower not low enough",
2						["MatchReason"] = "$1 EnergyRagePower low",
2					},
2					["Aggro"] = {
2						["NoMatchReason"] = "$1 does not have aggro",
2						["MatchReason"] = "$1 has aggro",
2					},
2					["PvP"] = {
2						["NoMatchReason"] = "$1 PvP flag not set",
2						["MatchReason"] = "$1 PvP flag set",
2					},
2					["Mana"] = {
2						["NoMatchReason"] = "$1 Mana not low enough",
2						["MatchReason"] = "$1 Mana low",
2					},
2					["Health"] = {
2						["NoMatchReason"] = "$1 Health not low enough",
2						["MatchReason"] = "$1 Health low",
2					},
2				},
2				["aideDebug"] = "Enable Debug Messages",
2				["nomReasonActionNotReadyInvert"] = "Action Not Ready (on cooldown), timer invert",
2				["aideFont"] = "Click here to pick Font. Press OK to apply the selection.",
2				["nomReasonAoETrigger"] = "AoE $1 triggered",
2				["nomImportSet"] = "Import Set",
2				["nomSpeed"] = "Animation speed",
2				["nomCheckOptunitn"] = "Unitname",
2				["nomReasonPlayerAlive"] = "Player is Alive",
2				["nomReasonInVehicle"] = "In Vehicle",
2				["aideMaxTex"] = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
2				["nomReasonEnchantOffInvert"] = "Off Hand $1 enchant found, timer invert",
2				["aideUnitn2"] = "Only for raid/group.",
2				["nomReasonNotInCombat"] = "Not in combat",
2				["nomReasonTargetAlive"] = "Target is Alive",
2				["nomReasonBuffPresentTimerInvert"] = "Buff present, timer invert",
2				["aideStealableSpells"] = "Enter here the Stealable Spell Name that will trigger the Aura (use * for any stealable spell).",
2				["nomActivationBy"] = "Activation by :",
2				["mainHand"] = "main",
2				["nomCheckFriend"] = "Friendly Target",
2				["TernaryYes"] = {
2					["isAlive"] = "Only When Alive",
2					["combat"] = "Only When In Combat",
2					["isResting"] = "Only When Resting",
2					["inVehicle"] = "Only When In Vehicle",
2					["inParty"] = "Only When In Party",
2					["ismounted"] = "Only When Mounted",
2					["inRaid"] = "Only When In Raid",
2				},
2				["nomTimerUpdate"] = "Timer update speed",
2				["nomReasonNoUseCombo"] = "You do not use combo points",
2				["nomReasonRaidTargetPurgeablePresent"] = "Raid$1Target has has Purgeable spell $2",
2				["nomExport"] = "Export",
2				["aideImportSet"] = "Press Ctrl-V to paste the Aura-Set-string and press 'Accept' this will erase all auras on this page",
2				["nomMine"] = "Cast by me",
2				["aideIgnoreUseable"] = "Ignores if spell is usable (just uses cooldown)",
2				["aideGTFO"] = "Use GTFO (Boss) spell matches for AoE detection",
2				["nomReasonAuraBad"] = "Aura bad",
2				["nomDefaultStacksTexture"] = "Default Stacks Texture",
2				["nomReasonBuffFoundButIncomplete"] = "$2 $3 found for $1 but\n$4",
2				["nomMaxTex"] = "Maximum of textures available",
2				["nomReasonNoPurgeablePresent"] = "Nobody has Purgeable spell $1",
2				["Ternary"] = {
2					["isAlive"] = "Alive",
2					["combat"] = "In Combat",
2					["isResting"] = "Resting",
2					["inVehicle"] = "In Vehicle",
2					["inParty"] = "In Party",
2					["ismounted"] = "Mounted",
2					["inRaid"] = "In Raid",
2				},
2				["aideDispellable"] = "Check to show only buffs that are dispellable",
2				["aidePurgeableSpells"] = "Enter here the Purgeable Spell Name that will trigger the Aura (use * for any purgeable spell).",
2				["nomReasonOneInGroupHasBuff"] = "$1 has $2 $3",
2				["nomReasonMulti"] = "All multiples match $1",
2				["nomTimerTexture"] = "Timer Texture",
2				["aideSound"] = "Plays a sound at the beginning.",
2				["nomCheckShowStacks"] = "Show",
2				["nomSymetrie"] = "Symmetry",
2				["nomReasonTargetNotFriendly"] = "Target not Friendly",
2				["nomCustomSound"] = "OR soundfile:",
2				["nomExportSet"] = "Export Set",
2				["nomReasonNotInParty"] = "Not in Party",
2				["bothHands"] = "both",
2				["aidePlayerSpell"] = "Check if Player is casting a spell",
2				["aideTalentGroup2"] = "Show this effect only when you are in your secondary talent spec.",
2				["aideBuff3"] = "Enter here the type of the debuff which must activate or deactivate the effect (Poison, Disease, Curse, Magic, CC, Silence, Stun, Snare, Root or None). You can enter several types (ex: Disease/Poison)",
2				["aideTargetFriend"] = "Check this to test a friendly target only.",
2				["aideMultiID"] = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.",
2				["aideExport"] = "Press Ctrl-C to copy the Aura-string for sharing.",
2				["aideShowTimer"] = "Check this to show the timer of this effect.",
2				["nomReasonNoOneInGroupHasBuff"] = "No one in $1 has $2 $3",
2				["nomIgnoreUseable"] = "Display Only Depends on Cooldown",
2				["aideBuff6"] = "Enter here the number of combo points that must activate this effect (ex : 1 or 1/2/3 or 0/4/5 etc...) ",
2				["AuraType"] = {
2					"Buff", -- [1]
2					"Debuff", -- [2]
2					"Debuff type", -- [3]
2					"AOE Debuff", -- [4]
2					"Weapon Enchant", -- [5]
2					"Combo Points", -- [6]
2					"Action Usable", -- [7]
2					"Health", -- [8]
2					"Mana", -- [9]
2					"Rage/Energy/Runic", -- [10]
2					"Aggro", -- [11]
2					"PvP", -- [12]
2					"Spell Alert", -- [13]
2					"Stance", -- [14]
2					"My Spell Cooldown", -- [15]
2					"Stealable Spell", -- [16]
0					"Purgeable Spell", -- [17]
2				},
2				["aideBuff4"] = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
2				["nomRename"] = "Rename",
2				["nomPlayerEffects"] = "Character effects",
2				["nomReasonYouAreCasting"] = "You are casting $1",
2				["nomPlayerSpell"] = "Player Casting",
2				["aideAnim1"] = "Animate the texture or not, with various effects.",
2				["ListePlayer"] = "Page",
2				["nomCheckParty"] = "Partymember",
2				["nomReasonPlayerDead"] = "Player is DEAD",
2				["aideInverse"] = "Invert the logic to show this effect only when buff/debuff is not active.",
2				["nomCheckGroupAny"] = "Any",
2				["nomReasonNoCustomUnit"] = "Can't find custom unit not in party, raid or with pet unit=$1",
2				["aideTimerDuration"] = "Show a timer to simulate buff/debuff duration on the target (0 to deactivate)",
2				["aideEffectTooltip"] = "(Shift-click to toggle effect ON or OFF)",
2				["aideGroupAny"] = "Check this to test buff on 'Any' party/raid member. Unchecked: Test that 'All' are buffed.",
2				["Default"] = "Default",
2				["nomReasonComboMatch"] = "Combo points $1 match $2",
2				["nomReasonFocusCasting"] = "Focus casting $1",
2				["nomPos"] = "Position",
2				["aideBuff7"] = "Enter here the name, or a part of the name, of an action in your action bars. The effect will be active when this action is usable.",
2				["nomReasonAllInGroupHaveBuff"] = "All in $1 have $2 $3",
2				["aideSelectTimer"] = "Select which timer will show the duration",
2				["aideEnable"] = "Enable all Power Auras effects",
2				["nomExact"] = "Exact Name",
2				["nomHide"] = "Hide all",
2				["aideCustomSound"] = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
2				["aideColor"] = "Click here to change the color of the texture.",
2				["nomTimerDuration"] = "Duration",
2				["aideTextAura"] = "Check this to type text instead of texture.",
2				["aideGroupOrSelf"] = "Check this to test a party or raid member or self.",
2				["aideCopy"] = "Copy the effect here.",
2				["nomTabAnim"] = "Animation",
2				["TernaryNo"] = {
2					["isAlive"] = "Only When Dead",
2					["combat"] = "Only When Not in Combat",
2					["isResting"] = "Only When Not Resting",
2					["inVehicle"] = "Only When Not in Vehicle",
2					["inParty"] = "Only When Not in Party",
2					["ismounted"] = "Only When Not Mounted",
2					["inRaid"] = "Only When Not in Raid",
2				},
2				["aideShowSpinAtBeginning"] = "At the end of the begin animation show a 360 degree spin",
2				["aideTarget"] = "Check this to test an enemy target only.",
2				["nomStacks"] = "Stacks",
2				["aideTooltipCheck"] = "Also check the tooltip contains this text",
2				["nomTaille"] = "Size",
2				["nomReasonActionNotReady"] = "Action Not Ready (on cooldown)",
2				["nomReasonNoStance"] = "Current Stance $1, does not match $2",
2				["nomCanInterrupt"] = "Can be Interrupted",
2				["aideImport"] = "Press Ctrl-V to paste the Aura-string and press 'Accept'",
2				["aideExact"] = "Check this to test the exact name of the buff/debuff/action.",
2				["aideThreshInv"] = "Check this to invert the threshold logic. Unchecked = Low Warning / Checked = High Warning.",
2				["nomTabActiv"] = "Activation",
2				["nomEnable"] = "Activate Power Auras",
2				["aideBuff2"] = "Enter here the name of the debuff, or a part of the name, which must activate/deactivate the effect. You can enter several names (ex: Dark Disease/Plague)",
2				["ListeGlobal"] = "Global",
2				["nomUpdatePing"] = "Animate on refresh",
2				["nomReasonYouAreNotCasting"] = "You are not casting $1",
2				["nomReasonNotResting"] = "Not Resting",
2				["nomReasonStacksMismatch"] = "Stacks = $1 expecting $2",
2				["aideMine"] = "Check this to test only buffs/debuffs cast by the player",
2				["nomReasonTargetCasting"] = "Target casting $1",
2				["nomReasonActionReady"] = "Action Ready",
2				["nomReasonNotForTalentSpec"] = "Aura not active for this talent spec",
2				["nomReasonAoENoTrigger"] = "AoE no trigger for $1",
2				["nomGlobalEffects"] = "Global\neffects",
2				["nomReasonNoComboMatch"] = "Combo points $1 no match with $2",
2				["nomDefaultTimerTexture"] = "Default Timer Texture",
2				["nomTalentGroup1"] = "Spec 1",
2				["aideSelectTimerDebuff"] = "Select which timer will show the duration (this one is reserved for player's debuffs)",
2				["nomReasonSpellNotFound"] = "Spell $1 not found",
2				["nomPowaShowAuraBrowser"] = "Show Aura Browser",
2				["nomReasonInCombat"] = "In combat",
2				["nomReasonEnchantOff"] = "Off Hand $1 enchant found",
2				["nomNew"] = "New",
2				["nomReasonWontShow"] = "Won't show because $1",
2				["nomCheckGroupOrSelf"] = "Raid/Party or self",
2				["nomCheckRaid"] = "Raidmember",
2				["aideWowTextures"] = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
2				["nomReasonInverted"] = "$1 (inverted)",
2				["nomReasonResting"] = "Resting",
2				["nomReasonTargetFriendly"] = "Target is Friendly",
2				["aideOptunitn"] = "Check this to test a spezial char in raid/group only.",
2				["nomReasonSpellOnCooldown"] = "Spell $1 on Cooldown",
2				["aideIgnoreMaj"] = "Check this to ignore upper/lowercase of buff/debuff names.",
2				["nomReasonNotAllInGroupHaveBuff"] = "Not all in $1 have $2 $3",
2				["nomDispellable"] = "I can dispell",
2				["nomReasonRaidTargetStealablePresent"] = "Raid$1Target has has Stealable spell $2",
2				["nomReasonSpellNotUsable"] = "Spell $1 not usable",
2				["nomReasonActionNotFound"] = "not found on Action Bar",
2				["nomImport"] = "Import",
2				["nomReasonMounted"] = "Mounted",
2				["nomReasonStealablePresent"] = "$1 has Stealable spell $2",
2				["nomTimerInvertAura"] = "Invert Aura When Time Below",
2				["Enabled"] = "Enabled",
2				["nomReasonPurgeablePresent"] = "$1 has Purgeable spell $2",
2				["nomCheckTarget"] = "Enemy Target",
2				["nomReasonRaidTargetCasting"] = "Raid$1Target casting $2",
2				["nomReasonNotInVehicle"] = "Not In Vehicle",
2				["nomReasonNoEnchant"] = "No enchant found on weapons for $1",
2				["nomReasonActionNotUsable"] = "Action not usable",
2				["nomReasonShouldShow"] = "Should show because $1",
2				["nomDuration"] = "Anim. duration",
2				["nomReasonActionlNotEnabled"] = "Action not enabled",
2				["aideDel"] = "Remove the selected effect (Hold CTRL to allow this button to work)",
2				["nomReasonEnchantMainInvert"] = "Main Hand $1 enchant found, timer invert",
2				["aideTexMode"] = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.",
2				["nomReasonTargetPlayer"] = "Target is you",
2				["nomReasonEnchantMain"] = "Main Hand $1 enchant found",
2				["aideTimerRounding"] = "When checked will round the timer up",
2				["nomReasonAuraMissing"] = "Aura missing",
2				["nomReasonPartyTargetCasting"] = "Party$1Target casting $2",
2				["nomReasonNoTarget"] = "No Target",
2				["offHand"] = "off",
2				["nomReasonNoCasting"] = "Nobody's target casting $1",
2				["nomReasonTargetDead"] = "Target is Dead",
2				["aideMove"] = "Move the effect here.",
2				["nomStacksTexture"] = "Stacks Texture",
2				["nomGTFO"] = "Use GTFO for AoE",
2				["largeur"] = "Width",
2				["aidePowaTimerInvertAuraSlider"] = "Invert the aura when the duration is less than this limit (0 to deactivate)",
2				["nomReasonNoStealablePresent"] = "Nobody has Stealable spell $1",
2				["nomTimerHideAura"] = "Hide Aura & Timer Until Time Above",
2				["nomSound"] = "Sound to play",
2				["aucune"] = "None",
2				["TernaryAide"] = {
2					["isAlive"] = "Effect modified by Alive status.",
2					["combat"] = "Effect modified by Combat status.",
2					["isResting"] = "Effect modified by Resting status.",
2					["inVehicle"] = "Effect modified by Vehicle status.",
2					["inParty"] = "Effect modified by Party status.",
2					["ismounted"] = "Effect modified by Mounted status.",
2					["inRaid"] = "Effect modified by Raid status.",
2				},
2				["aideTernary"] = "Sets how the status effects how this aura is shown.",
2				["nomTabTimer"] = "Timer",
2				["nomReasonGlobalCooldown"] = "Ignore Global Cool-down",
2				["aideFocus"] = "Check this to test the focus only.",
2				["nomReasonSpellNotEnabled"] = "Spell $1 not enabled ",
2				["aideDeform"] = "Stretch the texture in height or in width.",
2				["nomCopy"] = "Copy",
2				["nomRealaura"] = "Real Aura",
2				["nomAnim2"] = "Secondary Animation",
2				["nomTextAura"] = "Text Aura",
2				["nomCheckShowTimer"] = "Show",
2				["nomThreshInv"] = "</>",
2				["aideRandomColor"] = "Check this to tell this effect to use random color each time it will be activated.",
2				["nomTexMode"] = "Glow",
2				["nomCustomTextures"] = "Custom Textures",
2				["nomReasonInParty"] = "In Party",
2				["aideDuration"] = "After this time, this effect will disapear (0 to deactivate)",
2				["nomDual"] = "Show two timers",
2				["hauteur"] = "Height",
2				["nomDeform"] = "Deformation",
2				["aideSelectTimerBuff"] = "Select which timer will show the duration (this one is reserved for player's buffs)",
2				["aideBuff8"] = "Enter here the name, or a part of the name, of a spell from your spellbook. You can enter a spell id [12345].",
2				["DebuffType"] = {
2					["Disease"] = "Disease",
2					["Curse"] = "Curse",
2					["Magic"] = "Magic",
2					["Poison"] = "Poison",
2				},
2				["nomTabStacks"] = "Stacks",
2				["aideOwnTex"] = "Use the De/Buff or Ability Texture instead.",
2				["nomAdvOptions"] = "Options",
2				["nomTimerRounding"] = "Round Timer Up",
2				["nomMove"] = "Move",
2				["aideRealaura"] = "Real Aura",
2				["nomCheckIgnoreMaj"] = "Ignore uppercase",
2				["aideCanInterrupt"] = "Check to show only for spells that can be Interrupted",
2				["nomReasonBuffPresent"] = "$1 has $2 $3",
2				["DebuffCatType"] = {
2					"CC", -- [1]
2					"Silence", -- [2]
2					"Snare", -- [3]
2					"Root", -- [4]
2					"Disarm", -- [5]
2					"Stun", -- [6]
2					[10] = "PvE",
2				},
2				["nomAlpha"] = "Opacity",
2				["nomUpdateSpeed"] = "Update speed",
2			},
2		},
2		["Macros"] = {
0			{
2				["Body"] = "#showtooltip Horde Lance<LF>/outfitter wear ArgentTourney<LF>",
2				["Name"] = "ArgentTourney",
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2			}, -- [1]
0			{
2				["Body"] = "/clearfocus<LF>",
2				["Name"] = "ClearFocus",
2				["Texture"] = "Interface\\Icons\\Ability_Rogue_Disguise",
2			}, -- [2]
0			{
2				["Body"] = "/assist Hobbes<LF>",
2				["Name"] = "Der Assist Helper",
2				["Texture"] = "Interface\\Icons\\Ability_BackStab",
2			}, -- [3]
0			{
2				["Body"] = "/script VehicleExit()<LF>",
2				["Name"] = "Exit Vehicle",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_BeaconofLight",
2			}, -- [4]
0			{
2				["Body"] = "#showtooltip Fishing<LF>/outfitter wear Fishing<LF>",
2				["Name"] = "Fishing",
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2			}, -- [5]
0			{
2				["Body"] = "/congrats<LF>/clap<LF>/applaud<LF>/thank<LF>/cheer<LF>/sigh<LF>",
2				["Name"] = "Gratz!",
2				["Texture"] = "Interface\\Icons\\Ability_Mage_ColdAsIce",
2			}, -- [6]
0			{
2				["Body"] = "/outfitter wear Healing<LF>/outfitter wear TabardChampioning<LF>",
2				["Name"] = "Healing",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyGuidance",
2			}, -- [7]
0			{
2				["Body"] = "/hl toggle<LF>/du show<LF>",
2				["Name"] = "HigherLearning",
2				["Texture"] = "Interface\\Icons\\Ability_Spy",
2			}, -- [8]
0			{
2				["Body"] = "/kiss<LF>",
2				["Name"] = "Kiss",
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_DeathAndDecay",
2			}, -- [9]
0			{
2				["Body"] = "/1 DPS LFG for HH.   Have summon.  PST.<LF>/4 DPS LFG for HH.   Have summon.  PST.<LF>",
2				["Name"] = "LFG",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2			}, -- [10]
0			{
2				["Body"] = "/macro<LF>",
2				["Name"] = "Macro",
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_04",
2			}, -- [11]
0			{
2				["Body"] = "/p One sec for mana, please.<LF>",
2				["Name"] = "Mana",
2				["Texture"] = "Interface\\Icons\\Spell_Misc_Drink",
2			}, -- [12]
0			{
2				["Body"] = "/outfitter wear PvE<LF>/outfitter wear TabardChampioning<LF>",
2				["Name"] = "PvE",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_EnchantArmor",
2			}, -- [13]
0			{
2				["Body"] = "/outfitter wear PvP<LF>",
2				["Name"] = "PvP",
2				["Texture"] = "Interface\\Icons\\Spell_Misc_HellifrePVPThrallmarFavor",
2			}, -- [14]
0			{
2				["Body"] = "/random 1-100<LF>",
2				["Name"] = "Roll",
2				["Texture"] = "Interface\\Icons\\Ability_GolemStormBolt",
2			}, -- [15]
0			{
2				["Body"] = "/focus<LF>",
2				["Name"] = "SetFocus",
2				["Texture"] = "Interface\\Icons\\Ability_CheapShot",
2			}, -- [16]
0			{
2				["Body"] = "/outfitter wear Tanking<LF>/outfitter wear TabardChampioning<LF>",
2				["Name"] = "Tanking",
2				["Texture"] = "Interface\\Icons\\Ability_Defend",
2			}, -- [17]
0			{
2				["Body"] = "/target theramore infiltrator<LF>",
2				["Name"] = "Target",
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_05",
2			}, -- [18]
0			{
2			}, -- [19]
0			{
2			}, -- [20]
0			{
2			}, -- [21]
0			{
2			}, -- [22]
0			{
2			}, -- [23]
0			{
2			}, -- [24]
0			{
2			}, -- [25]
0			{
2			}, -- [26]
0			{
2			}, -- [27]
0			{
2			}, -- [28]
0			{
2			}, -- [29]
0			{
2			}, -- [30]
0			{
2			}, -- [31]
0			{
2			}, -- [32]
0			{
2			}, -- [33]
0			{
2			}, -- [34]
0			{
2			}, -- [35]
0			{
0			}, -- [36]
2		},
2		["WeaponEnchant"] = {
2		},
2		["SpellTabs"] = {
0			{
2				["Offset"] = 0,
2				["Count"] = 14,
2				["Name"] = "General",
2				["Texture"] = "Interface\\Icons\\Ability_Kick",
2			}, -- [1]
0			{
2				["Offset"] = 14,
2				["Count"] = 56,
2				["Name"] = "Balance",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2			}, -- [2]
0			{
2				["Offset"] = 70,
2				["Count"] = 31,
2				["Name"] = "Feral Combat",
2				["Texture"] = "Interface\\Icons\\Ability_Racial_BearForm",
2			}, -- [3]
0			{
2				["Offset"] = 101,
2				["Count"] = 57,
2				["Name"] = "Restoration",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2			}, -- [4]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [5]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [6]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [7]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
0			}, -- [8]
2		},
2		["SpellInfo"] = {
2		},
2		["player"] = {
2			["Visible"] = 1,
2			["FactionGroup"] = "Horde",
2			["InParty"] = 1,
2			["ChannelInfo"] = {
2			},
2			["Unit"] = "player",
2			["XPMax"] = 290000,
2			["HealthMax"] = 4387,
2			["Mana"] = 100,
2			["CastingInfo"] = {
2			},
2			["Damage"] = 135.6039428710938,
2			["IsPlayer"] = 1,
2			["AttackBothHands"] = 10,
2			["Target"] = "Forge Camp Legionnaire",
2			["Power"] = {
2				0, -- [1]
2				0, -- [2]
2				100, -- [3]
2				0, -- [4]
2				8, -- [5]
2				0, -- [6]
2				["Default"] = 100,
2				[0] = 3049,
2			},
2			["RangedAttackPower"] = 253,
2			["PVP"] = 1,
2			["InteractDistance"] = {
2				1, -- [1]
2				1, -- [2]
2				1, -- [3]
0				1, -- [4]
2			},
2			["PowerMax"] = {
2				100, -- [1]
2				100, -- [2]
2				100, -- [3]
2				0, -- [4]
2				8, -- [5]
2				100, -- [6]
2				["Default"] = 100,
2				[0] = 3049,
2			},
2			["PowerType"] = 3,
2			["Health"] = 3326,
2			["RangedAttack"] = 13,
2			["Race"] = "Tauren",
2			["PVPRank"] = 0,
2			["PVPName"] = "Brayan",
2			["LocClass"] = "Druid",
2			["Debuffs"] = {
2			},
2			["AttackSpeed"] = 1.000000047497451,
2			["RuneType"] = {
2				1, -- [1]
2				1, -- [2]
2				2, -- [3]
2				2, -- [4]
2				3, -- [5]
0				3, -- [6]
2			},
2			["RuneCooldown"] = {
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [1]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [2]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [3]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [4]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [5]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
0				}, -- [6]
2			},
2			["Class"] = "DRUID",
2			["Friend"] = 1,
2			["ManaMax"] = 100,
2			["PowerTypeString"] = "ENERGY",
2			["RangedDamage"] = 0,
2			["Armor"] = 1616,
2			["Level"] = 60,
2			["XP"] = 200158,
2			["RemoveableDebuffs"] = {
2			},
2			["AttackPower"] = 764,
2			["Defense"] = 298,
2			["UnitHasVehicleUI"] = false,
2			["Stats"] = {
0				{
2					["Type"] = "Strength",
2					["PosBuff"] = 97,
2					["NegBuff"] = 0,
2					["Base"] = 172,
2					["Stat"] = 172,
2				}, -- [1]
0				{
2					["Type"] = "Agility",
2					["PosBuff"] = 204,
2					["NegBuff"] = 0,
2					["Base"] = 263,
2					["Stat"] = 263,
2				}, -- [2]
0				{
2					["Type"] = "Stamina",
2					["PosBuff"] = 216,
2					["NegBuff"] = 0,
2					["Base"] = 301,
2					["Stat"] = 301,
2				}, -- [3]
0				{
2					["Type"] = "Intellect",
2					["PosBuff"] = 20,
2					["NegBuff"] = 0,
2					["Base"] = 139,
2					["Stat"] = 139,
2				}, -- [4]
0				{
2					["Type"] = "Spirit",
2					["PosBuff"] = 28,
2					["NegBuff"] = 0,
2					["Base"] = 149,
2					["Stat"] = 149,
0				}, -- [5]
2			},
2			["Tooltip"] = {
2				["Left1"] = "Brayan",
2				["Left2"] = "Beatdown",
2				["Left3"] = "Level 60 Tauren Druid (Player)",
2				["NumLines"] = 4,
2				["Left4"] = "PvP",
2			},
2			["CanCooperate"] = 1,
2			["Connected"] = 1,
2			["Classification"] = "normal",
2			["Player"] = 1,
2			["Name"] = "Brayan",
2			["Sex"] = 2,
2			["CreatureType"] = "Beast",
2			["Buffs"] = {
0				{
2					["Type"] = "Magic",
2					["Source"] = "player",
2					["Duration"] = 3600,
2					["Expires"] = 3340.021,
2					["Name"] = "Thorns",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Thorns",
2						["Left2"] = "Causes 18 Nature damage to attackers.",
2						["Right1"] = "Magic",
2						["Left3"] = "28 minutes remaining",
2						["NumLines"] = 3,
2					},
2					["Icon"] = "Interface\\Icons\\Spell_Nature_Thorns",
2					["Rank"] = "Rank 6",
2				}, -- [1]
0				{
2					["Type"] = "Magic",
2					["Source"] = "player",
2					["Duration"] = 1800,
2					["Expires"] = 3332.161,
2					["Name"] = "Mark of the Wild",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Mark of the Wild",
2						["Left2"] = "Increases armor by 285, all attributes by 12 and all resistances by 20.",
2						["Right1"] = "Magic",
2						["Left3"] = "28 minutes remaining",
2						["NumLines"] = 3,
2					},
2					["Icon"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2					["Rank"] = "Rank 7",
2				}, -- [2]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Master Shapeshifter",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Master Shapeshifter",
2						["NumLines"] = 2,
2						["Left2"] = "Critical strike chance increased.",
2					},
2					["Icon"] = "Interface\\Icons\\Ability_Druid_MasterShapeshifter",
2					["Rank"] = "",
2				}, -- [3]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Leader of the Pack",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Leader of the Pack",
2						["NumLines"] = 2,
2						["Left2"] = "Increases ranged and melee critical chance by 5%.",
2					},
2					["Icon"] = "Interface\\Icons\\Spell_Nature_UnyeildingStamina",
2					["Rank"] = "",
2				}, -- [4]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Cat Form",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Cat Form",
2						["NumLines"] = 2,
2						["Left2"] = "Immunity to Polymorph effects.  Increases melee attack power by 120 plus Agility.",
2					},
2					["Icon"] = "Interface\\Icons\\Ability_Druid_CatForm",
2					["Rank"] = "Shapeshift",
2				}, -- [5]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Prowl",
2					["Applications"] = 1,
2					["Tooltip"] = {
2						["Left1"] = "Prowl",
2						["NumLines"] = 2,
2						["Left2"] = "Stealthed.  Movement speed slowed by 30%.",
2					},
2					["Icon"] = "Interface\\Icons\\Ability_Ambush",
2					["Rank"] = "Rank 3",
0				}, -- [6]
2			},
2			["Resistances"] = {
0				{
2					["Type"] = "Holy",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Fire",
2					["Malus"] = 0,
2					["Total"] = 28,
2					["Base"] = 0,
2					["Bonus"] = 28,
2				}, -- [2]
0				{
2					["Type"] = "Nature",
2					["Malus"] = 0,
2					["Total"] = 28,
2					["Base"] = 0,
2					["Bonus"] = 28,
2				}, -- [3]
0				{
2					["Type"] = "Frost",
2					["Malus"] = 0,
2					["Total"] = 28,
2					["Base"] = 0,
2					["Bonus"] = 28,
2				}, -- [4]
0				{
2					["Type"] = "Shadow",
2					["Malus"] = 0,
2					["Total"] = 28,
2					["Base"] = 0,
2					["Bonus"] = 28,
2				}, -- [5]
0				{
2					["Type"] = "Arcane",
2					["Malus"] = 0,
2					["Total"] = 28,
2					["Base"] = 0,
2					["Bonus"] = 28,
0				}, -- [6]
2				[0] = {
2					["Type"] = "Physical",
2					["Malus"] = 0,
2					["Total"] = 2215,
2					["Base"] = 1616,
2					["Bonus"] = 599,
2				},
2			},
2			["Pos"] = {
2				["Y"] = 0.3438783884048462,
2				["X"] = 0.5638328790664673,
2			},
2		},
2		["ShapeshiftForm"] = 3,
2		["ActionSlots"] = {
0			{
2				["ActionText"] = "Exit Vehicle",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_BeaconofLight",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [1]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Faerie Fire (Feral)",
2					["Left4"] = "Requires Cat Form, Bear Form, Dire Bear Form",
2					["Left5"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.  Deals 168 damage and additional threat when used in Bear Form or Dire Bear Form.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "6 sec cooldown",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [2]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Faerie Fire",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [3]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [4]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [5]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [6]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Soothe Animal",
2					["Left2"] = "87 Mana",
2					["Right1"] = "Rank 3",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Soothes the target beast, reducing the range at which it will attack you by 10 yards.  Only affects Beast and Dragonkin targets level 70 or lower.  Lasts 15 sec.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastSoothe",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [7]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Right1"] = "Rank 6",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 270 Nature damage over 27 sec.  Damage caused may interrupt the effect.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [8]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Prowl",
2					["Left2"] = "Instant",
2					["Right1"] = "Rank 3",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "10 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Allows the Druid to prowl around, but reduces your movement speed by 30%.  Lasts until cancelled.",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Invisibilty",
2				["Cooldown"] = {
2					["Start"] = 1669.495,
2					["Duration"] = 10,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [9]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Faerie Fire (Feral)",
2					["Left4"] = "Requires Cat Form, Bear Form, Dire Bear Form",
2					["Left5"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.  Deals 168 damage and additional threat when used in Bear Form or Dire Bear Form.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "6 sec cooldown",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [10]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Faerie Fire",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [11]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [12]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [13]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [14]
0			{
2				["ActionText"] = "SetFocus",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_CheapShot",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [15]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [16]
0			{
2				["ActionText"] = "Healing",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyGuidance",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [17]
0			{
2				["ActionText"] = "Roll",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_GolemStormBolt",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [18]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Lesser Healing Potion",
2					["Left2"] = "Requires Level 3",
2					["Left3"] = "Use: Restores 140 to 180 health.",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Potion_50",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [19]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Minor Rejuvenation Potion",
2					["Left2"] = "Requires Level 5",
2					["Left3"] = "Use: Restores 90 to 150 mana and 90 to 150 health.",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Potion_02",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [20]
0			{
2				["ActionText"] = "ClearFocus",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Rogue_Disguise",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [21]
0			{
2				["ActionText"] = "Target",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_05",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [22]
0			{
2				["ActionText"] = "PvE",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_EnchantArmor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [23]
0			{
2				["ActionText"] = "PvP",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Misc_HellifrePVPThrallmarFavor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [24]
0			{
2				["Tooltip"] = {
2					["Left1"] = "First Aid",
2					["Left2"] = "Allows a physician to make and use bandages up to a potential skill of 300.   The cloth used to make those bandages are found on humanoids in the world.",
2					["Right1"] = "Artisan",
2					["NumLines"] = 2,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [25]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Smelting",
2					["NumLines"] = 2,
2					["Left2"] = "Allows the miner to turn ore into metal bars.  This skill requires a forge.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Fire_FlameBlades",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [26]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Find Minerals",
2					["Left2"] = "Instant",
2					["Left3"] = "Nearby mineral veins appear on the minimap. Only one form of tracking can be active at a time.",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Earthquake",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [27]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [28]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [29]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [30]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Rip",
2					["Left2"] = "30 Energy",
2					["Right1"] = "Rank 6",
2					["Left5"] = "Finishing move that causes damage over time.  Damage increases per combo point and by your attack power:<CR><LF>   1 point: 337 damage over 12 sec.<CR><LF>   2 points: 571 damage over 12 sec.<CR><LF>   3 points: 806 damage over 12 sec.<CR><LF>   4 points: 1041 damage over 12 sec.<CR><LF>   5 points: 1276 damage over 12 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Cat Form",
2				},
2				["Count"] = 0,
2				["InRange"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [31]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Right1"] = "Rank 6",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 18 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [32]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [33]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [34]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [35]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 2200 health and 2800 mana.",
2					["Left4"] = "Reagents: |nIronwood Seed",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Right1"] = "Rank 5",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 20,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [36]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [37]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [38]
0			{
2				["ActionText"] = "LFG",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [39]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [40]
0			{
2				["ActionText"] = "Macro",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_04",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [41]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [42]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [43]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [44]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Lesser Healing Potion",
2					["Left2"] = "Requires Level 3",
2					["Left3"] = "Use: Restores 140 to 180 health.",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Potion_50",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [45]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Minor Mana Potion",
2					["Left2"] = "Requires Level 5",
2					["Left3"] = "Use: Restores 140 to 180 mana.",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Potion_70",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [46]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [47]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [48]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [49]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Enrage",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Bear Form, Dire Bear Form",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Generates 20 rage, and then generates an additional 10 rage over 10 sec, but reduces base armor by 27% in Bear Form and 16% in Dire Bear Form.",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Enrage",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [50]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Bash",
2					["Left2"] = "10 Rage",
2					["Right3"] = "1 min cooldown",
2					["Left5"] = "Stuns the target for 4 sec and interrupts non-player spellcasting for 3 sec.",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Right1"] = "Rank 3",
2				},
2				["Count"] = 0,
2				["InRange"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Bash",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [51]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Growl",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Taunts the target to attack you, but has no effect if the target is already attacking you.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "8 sec cooldown",
2				},
2				["Count"] = 0,
2				["InRange"] = 1,
2				["Texture"] = "Interface\\Icons\\Ability_Physical_Taunt",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [52]
0			{
2				["ActionText"] = "Humping",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_PredatoryInstincts",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [53]
0			{
2				["ActionText"] = "Travel",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_FlightForm",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [54]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Swipe (Bear)",
2					["Left2"] = "15 Rage",
2					["Right1"] = "Rank 5",
2					["Left5"] = "Swipe nearby enemies, inflicting 70 to 71 damage.  Damage increased by attack power.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_MonsterClaw_03",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [55]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [56]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Cat Form",
2					["Left2"] = "304 Mana",
2					["Right1"] = "Shapeshift",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into cat form, increasing melee attack power by 120 plus Agility.  Also protects the caster from Polymorph effects and allows the use of various cat abilities.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["CurrentAction"] = 1,
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [57]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 1,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["AttackAction"] = 1,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatFormAttack",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [58]
0			{
2				["ActionText"] = "Der Assist Helper",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_BackStab",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [59]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Burning Bleeding Hollow Torch",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Duration: 5 min",
2					["NumLines"] = 3,
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Torch_Lit",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [60]
0			{
2				["ActionText"] = "SetFocus",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_CheapShot",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [61]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [62]
0			{
2				["ActionText"] = "Tanking",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Defend",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [63]
0			{
2				["ActionText"] = "PvE",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_EnchantArmor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [64]
0			{
2				["ActionText"] = "PvP",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Misc_HellifrePVPThrallmarFavor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [65]
0			{
2				["ActionText"] = "Roll",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_GolemStormBolt",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [66]
0			{
2				["ActionText"] = "ClearFocus",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Rogue_Disguise",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [67]
0			{
2				["ActionText"] = "Target",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_05",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [68]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [69]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [70]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [71]
0			{
2				["ActionText"] = "Healing",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyGuidance",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [72]
0			{
2				["ActionText"] = "LFG",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [73]
0			{
2				["ActionText"] = "Macro",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_04",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [74]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [75]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [76]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [77]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [78]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [79]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [80]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [81]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [82]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [83]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [84]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [85]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [86]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [87]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [88]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Teleport: Moonglade",
2					["Left2"] = "120 Mana",
2					["Left3"] = "10 sec cast",
2					["NumLines"] = 4,
2					["Left4"] = "Teleports the caster to the Moonglade.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_TeleportMoonglade",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [89]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [90]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [91]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [92]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [93]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [94]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [95]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [96]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 1,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["AttackAction"] = 1,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatFormAttack",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [97]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [98]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [99]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [100]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [101]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [102]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [103]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [104]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [105]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [106]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [107]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [108]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 1,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["AttackAction"] = 1,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatFormAttack",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [109]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [110]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [111]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [112]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [113]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [114]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [115]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [116]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [117]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [118]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [119]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
0			}, -- [120]
2		},
2		["SpellBook"] = {
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Attack",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatFormAttack",
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 2,
2					["Left2"] = "31.43% chance to crit",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [1]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Basic Campfire",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_Fire",
2				["Tooltip"] = {
2					["Left1"] = "Basic Campfire",
2					["Left2"] = "2 sec cast",
2					["Left3"] = "Builds a campfire that increases the spirits of those nearby by 4 and allows cooking.",
2					["Right2"] = "5 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [2]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Cooking",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Food_15",
2				["Tooltip"] = {
2					["Left1"] = "Cooking",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a cook to make basic recipes up to a maximum potential skill of 75.  Requires meat from beasts and fire to make food.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Apprentice",
2			}, -- [3]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Cultivation",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Flower_01",
2				["Tooltip"] = {
2					["Left1"] = "Cultivation",
2					["NumLines"] = 2,
2					["Left2"] = "Herbalism skill increased by 15.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [4]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Dodge",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Invisibilty",
2				["Tooltip"] = {
2					["Left1"] = "Dodge",
2					["Left2"] = "22.90% chance to dodge",
2					["Left3"] = "Gives a chance to dodge enemy melee attacks.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [5]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Endurance",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_UnyeildingStamina",
2				["Tooltip"] = {
2					["Left1"] = "Endurance",
2					["NumLines"] = 2,
2					["Left2"] = "Base Health increased by 5%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [6]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Find Minerals",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Earthquake",
2				["Tooltip"] = {
2					["Left1"] = "Find Minerals",
2					["Left2"] = "Instant",
2					["Left3"] = "Nearby mineral veins appear on the minimap. Only one form of tracking can be active at a time.",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [7]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "First Aid",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Tooltip"] = {
2					["Left1"] = "First Aid",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a physician to make and use bandages up to a potential skill of 300.   The cloth used to make those bandages are found on humanoids in the world.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Artisan",
2			}, -- [8]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Master of Anatomy",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Organ_01",
2				["Tooltip"] = {
2					["Left1"] = "Master of Anatomy",
2					["NumLines"] = 2,
2					["Left2"] = "Skinning all those dead animals has broadened your anatomical knowledge, increasing your critical strike rating by 12.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [9]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature Resistance",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_SpiritArmor",
2				["Tooltip"] = {
2					["Left1"] = "Nature Resistance",
2					["NumLines"] = 2,
2					["Left2"] = "Reduces the chance you will be hit by Nature spells by 2%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [10]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Skinning",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Pelt_Wolf_01",
2				["Tooltip"] = {
2					["Left1"] = "Skinning",
2					["Left2"] = "5 yd range",
2					["Left5"] = "Master skill in skinning the hides from beasts for use in Leatherworking.  Gives a potential skinning skill of 375.  Requires a Skinning Knife.",
2					["Left3"] = "1.5 sec cast",
2					["NumLines"] = 5,
2					["Left4"] = "Tools: Skinning Knife",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Master",
2			}, -- [11]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Smelting",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_FlameBlades",
2				["Tooltip"] = {
2					["Left1"] = "Smelting",
2					["NumLines"] = 2,
2					["Left2"] = "Allows the miner to turn ore into metal bars.  This skill requires a forge.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [12]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Toughness",
2				["Texture"] = "Interface\\Icons\\Ability_GolemThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Toughness",
2					["NumLines"] = 2,
2					["Left2"] = "All your hard work spent mining has made you exceptionally tough, increasing your Stamina by 7.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [13]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "War Stomp",
2				["Texture"] = "Interface\\Icons\\Ability_WarStomp",
2				["Tooltip"] = {
2					["Left1"] = "War Stomp",
2					["Left2"] = "0.5 sec cast",
2					["Left3"] = "Stuns up to 5 enemies within 8 yds for 2 sec.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial",
2			}, -- [14]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Barkskin",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StoneClawTotem",
2				["Tooltip"] = {
2					["Left1"] = "Barkskin",
2					["Left2"] = "Instant",
2					["Left3"] = "The druid's skin becomes as tough as bark.  All damage taken is reduced by 20%.  While protected, damaging attacks will not cause spellcasting delays.  This spell is usable while stunned, frozen, incapacitated, feared or asleep.  Useable in all forms.  Lasts 12 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [15]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 20 Nature damage over 12 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [16]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 50 Nature damage over 15 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [17]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 90 Nature damage over 18 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [18]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 140 Nature damage over 21 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [19]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 200 Nature damage over 24 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [20]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 270 Nature damage over 27 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [21]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Faerie Fire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Tooltip"] = {
2					["Left1"] = "Faerie Fire",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [22]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hibernate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Sleep",
2				["Tooltip"] = {
2					["Left1"] = "Hibernate",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Forces the enemy target to sleep for up to 20 sec.  Any damage will awaken the target.  Only one target can be forced to hibernate at a time.  Only works on Beasts and Dragonkin.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [23]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hibernate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Sleep",
2				["Tooltip"] = {
2					["Left1"] = "Hibernate",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Forces the enemy target to sleep for up to 30 sec.  Any damage will awaken the target.  Only one target can be forced to hibernate at a time.  Only works on Beasts and Dragonkin.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [24]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hibernate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Sleep",
2				["Tooltip"] = {
2					["Left1"] = "Hibernate",
2					["Left2"] = "87 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Forces the enemy target to sleep for up to 40 sec.  Any damage will awaken the target.  Only one target can be forced to hibernate at a time.  Only works on Beasts and Dragonkin.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [25]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hurricane",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Cyclone",
2				["Tooltip"] = {
2					["Left1"] = "Hurricane",
2					["Left2"] = "1132 Mana",
2					["Left3"] = "Channeled",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Creates a violent storm in the target area causing 101 to 102 Nature damage to enemies every 1 sec, and increasing the time between attacks of enemies by 20%.  Lasts 10 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [26]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hurricane",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Cyclone",
2				["Tooltip"] = {
2					["Left1"] = "Hurricane",
2					["Left2"] = "1132 Mana",
2					["Left3"] = "Channeled",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Creates a violent storm in the target area causing 143 to 144 Nature damage to enemies every 1 sec, and increasing the time between attacks by 20%.  Lasts 10 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [27]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Hurricane",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Cyclone",
2				["Tooltip"] = {
2					["Left1"] = "Hurricane",
2					["Left2"] = "1132 Mana",
2					["Left3"] = "Channeled",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Creates a violent storm in the target area causing 190 Nature damage to enemies every 1 sec, and increasing the time between attacks by 20%.  Lasts 10 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [28]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Innervate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Lightning",
2				["Tooltip"] = {
2					["Left1"] = "Innervate",
2					["Left2"] = "30 yd range",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant",
2					["NumLines"] = 4,
2					["Left4"] = "Causes the target to regenerate mana equal to 225% of the casting Druid's base mana pool over 10 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [29]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 9 to 12 Arcane damage and then an additional 12 Arcane damage over 9 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [30]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 17 to 21 Arcane damage and then an additional 32 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [31]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 30 to 37 Arcane damage and then an additional 52 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [32]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 47 to 55 Arcane damage and then an additional 80 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [33]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 70 to 82 Arcane damage and then an additional 124 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [34]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 91 to 108 Arcane damage and then an additional 164 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [35]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 117 to 137 Arcane damage and then an additional 212 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [36]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 143 to 168 Arcane damage and then an additional 264 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [37]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 172 to 200 Arcane damage and then an additional 320 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [38]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 195 to 228 Arcane damage and then an additional 384 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [39]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 1). 1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [40]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 2). 1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [41]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 3). 1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [42]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 4). 1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [43]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 5). 1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [44]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 6).  1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [45]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Soothe Animal",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastSoothe",
2				["Tooltip"] = {
2					["Left1"] = "Soothe Animal",
2					["Left2"] = "87 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Soothes the target beast, reducing the range at which it will attack you by 10 yards.  Only affects Beast and Dragonkin targets level 40 or lower.  Lasts 15 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [46]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Soothe Animal",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastSoothe",
2				["Tooltip"] = {
2					["Left1"] = "Soothe Animal",
2					["Left2"] = "87 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Soothes the target beast, reducing the range at which it will attack you by 10 yards.  Only affects Beast and Dragonkin targets level 55 or lower.  Lasts 15 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [47]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Soothe Animal",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastSoothe",
2				["Tooltip"] = {
2					["Left1"] = "Soothe Animal",
2					["Left2"] = "87 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Soothes the target beast, reducing the range at which it will attack you by 10 yards.  Only affects Beast and Dragonkin targets level 70 or lower.  Lasts 15 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [48]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 127 to 155 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [49]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 198 to 241 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [50]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 283 to 340 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [51]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 383 to 456 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [52]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 501 to 592 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [53]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 621 to 731 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [54]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 693 to 817 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [55]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Teleport: Moonglade",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_TeleportMoonglade",
2				["Tooltip"] = {
2					["Left1"] = "Teleport: Moonglade",
2					["Left2"] = "120 Mana",
2					["Left3"] = "10 sec cast",
2					["NumLines"] = 4,
2					["Left4"] = "Teleports the caster to the Moonglade.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [56]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 3 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [57]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 6 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [58]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 9 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [59]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 12 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [60]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 15 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [61]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 18 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [62]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 18 to 21 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [63]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "1.7 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 35 to 40 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [64]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 53 to 62 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [65]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 74 to 84 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [66]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 137 to 156 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [67]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 178 to 201 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [68]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 225 to 252 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [69]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 318 to 357 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [70]
0			{
2				["Name"] = "Aquatic Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_AquaticForm",
2				["Tooltip"] = {
2					["Left1"] = "Aquatic Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into aquatic form, increasing swim speed by 50% and allowing the druid to breathe underwater.  Also protects the caster from Polymorph effects.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			}, -- [71]
0			{
2				["Name"] = "Bash",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Bash",
2				["Tooltip"] = {
2					["Left1"] = "Bash",
2					["Left2"] = "10 Rage",
2					["Right3"] = "1 min cooldown",
2					["Left5"] = "Stuns the target for 4 sec and interrupts non-player spellcasting for 3 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [72]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Cat Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatForm",
2				["Tooltip"] = {
2					["Left1"] = "Cat Form",
2					["Left2"] = "304 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into cat form, increasing melee attack power by 120 plus Agility.  Also protects the caster from Polymorph effects and allows the use of various cat abilities.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			}, -- [73]
0			{
2				["Name"] = "Challenging Roar",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_ChallangingRoar",
2				["Tooltip"] = {
2					["Left2"] = "15 Rage",
2					["Left1"] = "Challenging Roar",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Forces all nearby enemies within 10 yards to focus attacks on you for 6 sec.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "3 min cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [74]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Claw",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Rake",
2				["Tooltip"] = {
2					["Left1"] = "Claw",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Claw the enemy, causing 138 additional damage.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [75]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Cower",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Cower",
2				["Tooltip"] = {
2					["Left1"] = "Cower",
2					["Left2"] = "20 Energy",
2					["Right3"] = "10 sec cooldown",
2					["Left5"] = "Cower, causing no damage but lowering your threat a large amount, making the enemy less likely to attack you.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Cat Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [76]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Dash",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Dash",
2				["Tooltip"] = {
2					["Left1"] = "Dash",
2					["Left2"] = "Instant",
2					["Left3"] = "Increases movement speed by 60% while in Cat Form for 15 sec.  Does not break prowling.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [77]
0			{
2				["Name"] = "Demoralizing Roar",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_DemoralizingRoar",
2				["Tooltip"] = {
2					["Left1"] = "Demoralizing Roar",
2					["Left2"] = "10 Rage",
2					["Left5"] = "The druid roars, decreasing nearby enemies' melee attack power by 146.  Lasts 30 sec.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [78]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Dire Bear Form",
2				["Texture"] = "Interface\\Icons\\Ability_Racial_BearForm",
2				["Tooltip"] = {
2					["Left1"] = "Dire Bear Form",
2					["Left2"] = "304 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into dire bear form, increasing melee attack power by 180, armor contribution from cloth and leather items by 370%, and Stamina by 25%.  Also protects the caster from Polymorph effects and allows the use of various bear abilities.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			}, -- [79]
0			{
2				["Name"] = "Enrage",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Enrage",
2				["Tooltip"] = {
2					["Left1"] = "Enrage",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Bear Form, Dire Bear Form",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Generates 20 rage, and then generates an additional 10 rage over 10 sec, but reduces base armor by 27% in Bear Form and 16% in Dire Bear Form.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [80]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Faerie Fire (Feral)",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Faerie Fire (Feral)",
2					["Left4"] = "Requires Cat Form, Bear Form, Dire Bear Form",
2					["Left5"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.  Deals 168 damage and additional threat when used in Bear Form or Dire Bear Form.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "6 sec cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [81]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Feline Grace",
2				["Texture"] = "Interface\\Icons\\INV_Feather_01",
2				["Tooltip"] = {
2					["Left1"] = "Feline Grace",
2					["Left2"] = "Requires Cat Form",
2					["Left3"] = "Reduces damage from falling.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [82]
0			{
2				["Name"] = "Feral Charge - Bear",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_Pet_Bear",
2				["Tooltip"] = {
2					["Left1"] = "Feral Charge - Bear",
2					["Left2"] = "5 Rage",
2					["Right3"] = "15 sec cooldown",
2					["Left5"] = "Causes you to charge an enemy, immobilizing and interrupting any spell being cast for 4 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "8-25 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [83]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Feral Charge - Cat",
2				["Texture"] = "Interface\\Icons\\spell_druid_feralchargecat",
2				["Tooltip"] = {
2					["Left1"] = "Feral Charge - Cat",
2					["Left2"] = "10 Energy",
2					["Right3"] = "30 sec cooldown",
2					["Left5"] = "Causes you to leap behind an enemy, dazing them for 3 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "8-25 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Cat Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [84]
0			{
2				["Name"] = "Ferocious Bite",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_FerociousBite",
2				["Tooltip"] = {
2					["Left1"] = "Ferocious Bite",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Finishing move that causes damage per combo point and converts each extra point of energy (up to a maximum of 30 extra energy) into 4.8 additional damage.  Damage is increased by your attack power.<CR><LF>   1 point  : 277-337 damage<CR><LF>   2 points: 502-562 damage<CR><LF>   3 points: 727-787 damage<CR><LF>   4 points: 951-1011 damage<CR><LF>   5 points: 1176-1236 damage",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [85]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Flight Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_FlightForm",
2				["Tooltip"] = {
2					["Left1"] = "Flight Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into flight form, increasing movement speed by 150% and allowing you to fly.  Cannot use in combat.  Can only use this form in Outland or Northrend.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			}, -- [86]
0			{
2				["Name"] = "Frenzied Regeneration",
2				["Texture"] = "Interface\\Icons\\Ability_BullRush",
2				["Tooltip"] = {
2					["Left1"] = "Frenzied Regeneration",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Bear Form, Dire Bear Form",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Converts up to 10 rage per second into health for 10 sec.  Each point of rage is converted into 0.3% of max health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [87]
0			{
2				["Name"] = "Growl",
2				["Texture"] = "Interface\\Icons\\Ability_Physical_Taunt",
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Growl",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Taunts the target to attack you, but has no effect if the target is already attacking you.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "8 sec cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [88]
0			{
2				["Name"] = "Maul",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Maul",
2				["Tooltip"] = {
2					["Left1"] = "Maul",
2					["Left2"] = "10 Rage",
2					["Left5"] = "A strong attack that increases melee damage by 230 to 231 and causes a high amount of threat.  Effects which increase Bleed damage also increase Maul damage.",
2					["Left3"] = "Next melee",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [89]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Pounce",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_SupriseAttack",
2				["Tooltip"] = {
2					["Left1"] = "Pounce",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Pounce, stunning the target for 3 sec and causing 450 damage over 18 sec.  Must be prowling.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "50 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [90]
0			{
2				["Name"] = "Prowl",
2				["Texture"] = "Interface\\Icons\\Ability_Ambush",
2				["Tooltip"] = {
2					["Left1"] = "Prowl",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "10 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Allows the Druid to prowl around, but reduces your movement speed by 30%.  Lasts until cancelled.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 0,
2					["StartTime"] = 1669.45,
2					["Duration"] = 10,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [91]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rake",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2				["Tooltip"] = {
2					["Left1"] = "Rake",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Rake the target for 87 bleed damage and an additional 554 damage over 9 sec.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [92]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Ravage",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Ravage",
2				["Tooltip"] = {
2					["Left1"] = "Ravage",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Ravage the target, causing 385% damage plus 377 to the target.  Must be prowling and behind the target.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "60 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [93]
0			{
2				["Name"] = "Rip",
2				["Texture"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2				["Tooltip"] = {
2					["Left1"] = "Rip",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Finishing move that causes damage over time.  Damage increases per combo point and by your attack power:<CR><LF>   1 point: 337 damage over 12 sec.<CR><LF>   2 points: 571 damage over 12 sec.<CR><LF>   3 points: 806 damage over 12 sec.<CR><LF>   4 points: 1041 damage over 12 sec.<CR><LF>   5 points: 1276 damage over 12 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "30 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [94]
0			{
2				["Name"] = "Savage Defense",
2				["Texture"] = "Interface\\Icons\\Ability_Racial_Cannibalize",
2				["Tooltip"] = {
2					["Left1"] = "Savage Defense",
2					["Left2"] = "Requires Bear Form, Dire Bear Form",
2					["Left3"] = "Each time you deal a critical strike while in Bear Form or Dire Bear Form, you gain Savage Defense, reducing the damage taken from the next physical attack that strikes you by 25% of your attack power.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [95]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Shred",
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_VampiricAura",
2				["Tooltip"] = {
2					["Left1"] = "Shred",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Shred the target, causing 225% damage plus 180 to the target.  Must be behind the target.  Awards 1 combo point.  Effects which increase Bleed damage also increase Shred damage.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "60 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [96]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Survival Instincts",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_TigersRoar",
2				["Tooltip"] = {
2					["Left1"] = "Survival Instincts",
2					["Left2"] = "Instant",
2					["Left3"] = "When activated, this ability temporarily grants you 30% of your maximum health for 20 sec while in Bear Form, Cat Form, or Dire Bear Form.  After the effect expires, the health is lost.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [97]
0			{
2				["Name"] = "Swipe (Bear)",
2				["Texture"] = "Interface\\Icons\\INV_Misc_MonsterClaw_03",
2				["Tooltip"] = {
2					["Left1"] = "Swipe (Bear)",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Swipe nearby enemies, inflicting 70 to 71 damage.  Damage increased by attack power.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "15 Rage",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [98]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Tiger's Fury",
2				["Texture"] = "Interface\\Icons\\Ability_Mount_JungleTiger",
2				["Tooltip"] = {
2					["Left1"] = "Tiger's Fury",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "30 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Increases damage done by 40 for 6 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [99]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Track Humanoids",
2				["Texture"] = "Interface\\Icons\\Ability_Tracking",
2				["Tooltip"] = {
2					["Left1"] = "Track Humanoids",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Shows the location of all nearby humanoids on the minimap.  Only one type of thing can be tracked at a time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [100]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Travel Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_TravelForm",
2				["Tooltip"] = {
2					["Left1"] = "Travel Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into travel form, increasing movement speed by 40%.  Also protects the caster from Polymorph effects.  Only useable outdoors.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			}, -- [101]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Abolish Poison",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NullifyPoison_02",
2				["Tooltip"] = {
2					["Left1"] = "Abolish Poison",
2					["Left2"] = "161 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Attempts to cure 1 poison effect on the target, and 1 more poison effect every 3 seconds for 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [102]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Cure Poison",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NullifyPoison",
2				["Tooltip"] = {
2					["Left1"] = "Cure Poison",
2					["Left2"] = "161 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Cures 1 poison effect on the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [103]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Gift of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_GiftoftheWild",
2				["Tooltip"] = {
2					["Left1"] = "Gift of the Wild",
2					["Left4"] = "Reagents: |n|cffff2020Wild Berries|r",
2					["Left5"] = "Gives the Gift of the Wild to all party and raid members, increasing armor by 336, all attributes by 14 and all resistances by 21 for 1 hour.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "447 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [104]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Gift of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_GiftoftheWild",
2				["Tooltip"] = {
2					["Left1"] = "Gift of the Wild",
2					["Left4"] = "Reagents: |nWild Thornroot",
2					["Left5"] = "Gives the Gift of the Wild to all party and raid members, increasing armor by 399, all attributes by 16 and all resistances by 28 for 1 hour.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "447 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [105]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "1 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 40 to 55.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [106]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 94 to 119.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [107]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 204 to 253.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [108]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 376 to 459.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [109]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 505 to 609.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [110]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 653 to 783.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [111]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 821 to 980.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [112]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1221 to 1450.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [113]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1324 to 1565.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [114]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1642 to 1935.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [115]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1944 to 2294.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 11",
2			}, -- [116]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 35 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [117]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 91 and all attributes by 2 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [118]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 147 and all attributes by 5 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [119]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 210, all attributes by 8 and all resistances by 7 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [120]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 273, all attributes by 11 and all resistances by 14 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [121]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 336, all attributes by 14 and all resistances by 21 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [122]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 399, all attributes by 16 and all resistances by 28 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [123]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 400 health and 700 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |n|cffff2020Maple Seed|r",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [124]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 750 health and 1200 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |n|cffff2020Stranglethorn Seed|r",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [125]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 1100 health and 1700 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |n|cffff2020Ashwood Seed|r",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [126]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 1600 health and 2200 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |n|cffff2020Hornbeam Seed|r",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [127]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 2200 health and 2800 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |nIronwood Seed",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [128]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 93 to 107 and another 98 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [129]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 176 to 201 and another 175 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [130]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 255 to 290 and another 259 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [131]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 336 to 378 and another 343 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [132]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 425 to 478 and another 427 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [133]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 534 to 599 and another 546 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [134]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 672 to 751 and another 686 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [135]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 839 to 935 and another 861 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [136]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1003 to 1119 and another 1064 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [137]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 32 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [138]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 56 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [139]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 116 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [140]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 180 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [141]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 244 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [142]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 304 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [143]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 388 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [144]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 488 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [145]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 608 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [146]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 756 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [147]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 888 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 11",
2			}, -- [148]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Remove Curse",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RemoveCurse",
2				["Tooltip"] = {
2					["Left1"] = "Remove Curse",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Dispels 1 Curse from a friendly target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [149]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 65 health and 120 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [150]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 150 health and 260 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [151]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 250 health and 420 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [152]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 400 health and 600 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [153]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 600 health and 800 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [154]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Tranquility",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Tranquility",
2				["Tooltip"] = {
2					["Left1"] = "Tranquility",
2					["Left2"] = "970 Mana",
2					["Right3"] = "10 min cooldown",
2					["Left3"] = "Channeled",
2					["NumLines"] = 4,
2					["Left4"] = "Heals all nearby group members for 364 every 2 seconds for 8 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [155]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Tranquility",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Tranquility",
2				["Tooltip"] = {
2					["Left1"] = "Tranquility",
2					["Left2"] = "970 Mana",
2					["Right3"] = "10 min cooldown",
2					["Left3"] = "Channeled",
2					["NumLines"] = 4,
2					["Left4"] = "Heals all nearby group members for 530 every 2 seconds for 8 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [156]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Tranquility",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Tranquility",
2				["Tooltip"] = {
2					["Left1"] = "Tranquility",
2					["Left2"] = "970 Mana",
2					["Right3"] = "10 min cooldown",
2					["Left3"] = "Channeled",
2					["NumLines"] = 4,
2					["Left4"] = "Heals all nearby group members for 785 every 2 seconds for 8 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [157]
0			{
2				["UsableSpell"] = 1,
2				["Name"] = "Tranquility",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Tranquility",
2				["Tooltip"] = {
2					["Left1"] = "Tranquility",
2					["Left2"] = "970 Mana",
2					["Right3"] = "10 min cooldown",
2					["Left3"] = "Channeled",
2					["NumLines"] = 4,
2					["Left4"] = "Heals all nearby group members for 1097 every 2 seconds for 8 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
0			}, -- [158]
2			["Smelting"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Smelting",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_FlameBlades",
2				["Tooltip"] = {
2					["Left1"] = "Smelting",
2					["NumLines"] = 2,
2					["Left2"] = "Allows the miner to turn ore into metal bars.  This skill requires a forge.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Endurance"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Endurance",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_UnyeildingStamina",
2				["Tooltip"] = {
2					["Left1"] = "Endurance",
2					["NumLines"] = 2,
2					["Left2"] = "Base Health increased by 5%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			},
2			["Remove Curse"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Remove Curse",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RemoveCurse",
2				["Tooltip"] = {
2					["Left1"] = "Remove Curse",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Dispels 1 Curse from a friendly target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Aquatic Form"] = {
2				["Name"] = "Aquatic Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_AquaticForm",
2				["Tooltip"] = {
2					["Left1"] = "Aquatic Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into aquatic form, increasing swim speed by 50% and allowing the druid to breathe underwater.  Also protects the caster from Polymorph effects.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			},
2			["Hibernate"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Hibernate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Sleep",
2				["Tooltip"] = {
2					["Left1"] = "Hibernate",
2					["Left2"] = "87 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Forces the enemy target to sleep for up to 40 sec.  Any damage will awaken the target.  Only one target can be forced to hibernate at a time.  Only works on Beasts and Dragonkin.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Ravage"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Ravage",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Ravage",
2				["Tooltip"] = {
2					["Left1"] = "Ravage",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Ravage the target, causing 385% damage plus 377 to the target.  Must be prowling and behind the target.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "60 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Feral Charge - Bear"] = {
2				["Name"] = "Feral Charge - Bear",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_Pet_Bear",
2				["Tooltip"] = {
2					["Left1"] = "Feral Charge - Bear",
2					["Left2"] = "5 Rage",
2					["Right3"] = "15 sec cooldown",
2					["Left5"] = "Causes you to charge an enemy, immobilizing and interrupting any spell being cast for 4 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "8-25 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Starfire"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Starfire",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_StarFire",
2				["Tooltip"] = {
2					["Left1"] = "Starfire",
2					["Left2"] = "223 Mana",
2					["Left3"] = "3.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 693 to 817 Arcane damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			},
2			["Pounce"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Pounce",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_SupriseAttack",
2				["Tooltip"] = {
2					["Left1"] = "Pounce",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Pounce, stunning the target for 3 sec and causing 450 damage over 18 sec.  Must be prowling.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "50 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Challenging Roar"] = {
2				["Name"] = "Challenging Roar",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_ChallangingRoar",
2				["Tooltip"] = {
2					["Left2"] = "15 Rage",
2					["Left1"] = "Challenging Roar",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Forces all nearby enemies within 10 yards to focus attacks on you for 6 sec.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "3 min cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Track Humanoids"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Track Humanoids",
2				["Texture"] = "Interface\\Icons\\Ability_Tracking",
2				["Tooltip"] = {
2					["Left1"] = "Track Humanoids",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Shows the location of all nearby humanoids on the minimap.  Only one type of thing can be tracked at a time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Flight Form"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Flight Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_FlightForm",
2				["Tooltip"] = {
2					["Left1"] = "Flight Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into flight form, increasing movement speed by 150% and allowing you to fly.  Cannot use in combat.  Can only use this form in Outland or Northrend.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			},
2			["Feline Grace"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Feline Grace",
2				["Texture"] = "Interface\\Icons\\INV_Feather_01",
2				["Tooltip"] = {
2					["Left1"] = "Feline Grace",
2					["Left2"] = "Requires Cat Form",
2					["Left3"] = "Reduces damage from falling.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			},
2			["Claw"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Claw",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Rake",
2				["Tooltip"] = {
2					["Left1"] = "Claw",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Claw the enemy, causing 138 additional damage.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Swipe (Bear)"] = {
2				["Name"] = "Swipe (Bear)",
2				["Texture"] = "Interface\\Icons\\INV_Misc_MonsterClaw_03",
2				["Tooltip"] = {
2					["Left1"] = "Swipe (Bear)",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Swipe nearby enemies, inflicting 70 to 71 damage.  Damage increased by attack power.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "15 Rage",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Find Minerals"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Find Minerals",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Earthquake",
2				["Tooltip"] = {
2					["Left1"] = "Find Minerals",
2					["Left2"] = "Instant",
2					["Left3"] = "Nearby mineral veins appear on the minimap. Only one form of tracking can be active at a time.",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Soothe Animal"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Soothe Animal",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastSoothe",
2				["Tooltip"] = {
2					["Left1"] = "Soothe Animal",
2					["Left2"] = "87 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Soothes the target beast, reducing the range at which it will attack you by 10 yards.  Only affects Beast and Dragonkin targets level 70 or lower.  Lasts 15 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Dodge"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Dodge",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Invisibilty",
2				["Tooltip"] = {
2					["Left1"] = "Dodge",
2					["Left2"] = "22.90% chance to dodge",
2					["Left3"] = "Gives a chance to dodge enemy melee attacks.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			},
2			["Revive"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Revive",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_LunarGuidance",
2				["Tooltip"] = {
2					["Left1"] = "Revive",
2					["Left2"] = "895 Mana",
2					["Left3"] = "10 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Returns the spirit to the body, restoring a dead target to life with 600 health and 800 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Frenzied Regeneration"] = {
2				["Name"] = "Frenzied Regeneration",
2				["Texture"] = "Interface\\Icons\\Ability_BullRush",
2				["Tooltip"] = {
2					["Left1"] = "Frenzied Regeneration",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Bear Form, Dire Bear Form",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Converts up to 10 rage per second into health for 10 sec.  Each point of rage is converted into 0.3% of max health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			},
2			["Rake"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Rake",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Disembowel",
2				["Tooltip"] = {
2					["Left1"] = "Rake",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Rake the target for 87 bleed damage and an additional 554 damage over 9 sec.  Awards 1 combo point.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Rip"] = {
2				["Name"] = "Rip",
2				["Texture"] = "Interface\\Icons\\Ability_GhoulFrenzy",
2				["Tooltip"] = {
2					["Left1"] = "Rip",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Finishing move that causes damage over time.  Damage increases per combo point and by your attack power:<CR><LF>   1 point: 337 damage over 12 sec.<CR><LF>   2 points: 571 damage over 12 sec.<CR><LF>   3 points: 806 damage over 12 sec.<CR><LF>   4 points: 1041 damage over 12 sec.<CR><LF>   5 points: 1276 damage over 12 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "30 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			},
2			["Nature's Grasp"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Nature's Grasp",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NaturesWrath",
2				["Tooltip"] = {
2					["Left1"] = "Nature's Grasp",
2					["Left2"] = "Instant",
2					["Left3"] = "While active, any time an enemy strikes the caster they have a 100% chance to become afflicted by Entangling Roots (Rank 6).  1 charge.  Lasts 45 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			},
2			["First Aid"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "First Aid",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Tooltip"] = {
2					["Left1"] = "First Aid",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a physician to make and use bandages up to a potential skill of 300.   The cloth used to make those bandages are found on humanoids in the world.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Artisan",
2			},
2			["Barkskin"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Barkskin",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StoneClawTotem",
2				["Tooltip"] = {
2					["Left1"] = "Barkskin",
2					["Left2"] = "Instant",
2					["Left3"] = "The druid's skin becomes as tough as bark.  All damage taken is reduced by 20%.  While protected, damaging attacks will not cause spellcasting delays.  This spell is usable while stunned, frozen, incapacitated, feared or asleep.  Useable in all forms.  Lasts 12 sec.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Teleport: Moonglade"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Teleport: Moonglade",
2				["Texture"] = "Interface\\Icons\\Spell_Arcane_TeleportMoonglade",
2				["Tooltip"] = {
2					["Left1"] = "Teleport: Moonglade",
2					["Left2"] = "120 Mana",
2					["Left3"] = "10 sec cast",
2					["NumLines"] = 4,
2					["Left4"] = "Teleports the caster to the Moonglade.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Wrath"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_AbolishMagic",
2				["Tooltip"] = {
2					["Left1"] = "Wrath",
2					["Left2"] = "161 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 318 to 357 Nature damage to the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			},
2			["Survival Instincts"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Survival Instincts",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_TigersRoar",
2				["Tooltip"] = {
2					["Left1"] = "Survival Instincts",
2					["Left2"] = "Instant",
2					["Left3"] = "When activated, this ability temporarily grants you 30% of your maximum health for 20 sec while in Bear Form, Cat Form, or Dire Bear Form.  After the effect expires, the health is lost.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Rejuvenation"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Rejuvenation",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Rejuvenation",
2				["Tooltip"] = {
2					["Left1"] = "Rejuvenation",
2					["Left2"] = "261 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals the target for 888 over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 11",
2			},
2			["Thorns"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Thorns",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Thorns",
2				["Tooltip"] = {
2					["Left1"] = "Thorns",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Thorns sprout from the friendly target causing 18 Nature damage to attackers when hit.  Lasts 10 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			},
2			["Cower"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Cower",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Cower",
2				["Tooltip"] = {
2					["Left1"] = "Cower",
2					["Left2"] = "20 Energy",
2					["Right3"] = "10 sec cooldown",
2					["Left5"] = "Cower, causing no damage but lowering your threat a large amount, making the enemy less likely to attack you.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Cat Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Entangling Roots"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Entangling Roots",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StrangleVines",
2				["Tooltip"] = {
2					["Left1"] = "Entangling Roots",
2					["Left2"] = "99 Mana",
2					["Left3"] = "1.5 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Roots the target in place and causes 270 Nature damage over 27 sec.  Damage caused may interrupt the effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			},
2			["Demoralizing Roar"] = {
2				["Name"] = "Demoralizing Roar",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_DemoralizingRoar",
2				["Tooltip"] = {
2					["Left1"] = "Demoralizing Roar",
2					["Left2"] = "10 Rage",
2					["Left5"] = "The druid roars, decreasing nearby enemies' melee attack power by 146.  Lasts 30 sec.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Shred"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Shred",
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_VampiricAura",
2				["Tooltip"] = {
2					["Left1"] = "Shred",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Shred the target, causing 225% damage plus 180 to the target.  Must be behind the target.  Awards 1 combo point.  Effects which increase Bleed damage also increase Shred damage.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "60 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Rebirth"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Rebirth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Reincarnation",
2				["Tooltip"] = {
2					["Left1"] = "Rebirth",
2					["Left2"] = "845 Mana",
2					["Right3"] = "20 min cooldown",
2					["Left5"] = "Returns the spirit to the body, restoring a dead target to life with 2200 health and 2800 mana.",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |nIronwood Seed",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Basic Campfire"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Basic Campfire",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_Fire",
2				["Tooltip"] = {
2					["Left1"] = "Basic Campfire",
2					["Left2"] = "2 sec cast",
2					["Left3"] = "Builds a campfire that increases the spirits of those nearby by 4 and allows cooking.",
2					["Right2"] = "5 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Master of Anatomy"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Master of Anatomy",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Organ_01",
2				["Tooltip"] = {
2					["Left1"] = "Master of Anatomy",
2					["NumLines"] = 2,
2					["Left2"] = "Skinning all those dead animals has broadened your anatomical knowledge, increasing your critical strike rating by 12.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Travel Form"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Travel Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_TravelForm",
2				["Tooltip"] = {
2					["Left1"] = "Travel Form",
2					["Left2"] = "112 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into travel form, increasing movement speed by 40%.  Also protects the caster from Polymorph effects.  Only useable outdoors.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			},
2			["Healing Touch"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Healing Touch",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_HealingTouch",
2				["Tooltip"] = {
2					["Left1"] = "Healing Touch",
2					["Left2"] = "472 Mana",
2					["Left3"] = "2.5 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1944 to 2294.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 11",
2			},
2			["Faerie Fire"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Faerie Fire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Tooltip"] = {
2					["Left1"] = "Faerie Fire",
2					["Left2"] = "99 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Dire Bear Form"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Dire Bear Form",
2				["Texture"] = "Interface\\Icons\\Ability_Racial_BearForm",
2				["Tooltip"] = {
2					["Left1"] = "Dire Bear Form",
2					["Left2"] = "304 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into dire bear form, increasing melee attack power by 180, armor contribution from cloth and leather items by 370%, and Stamina by 25%.  Also protects the caster from Polymorph effects and allows the use of various bear abilities.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			},
2			["Hurricane"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Hurricane",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Cyclone",
2				["Tooltip"] = {
2					["Left1"] = "Hurricane",
2					["Left2"] = "1132 Mana",
2					["Left3"] = "Channeled",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Creates a violent storm in the target area causing 190 Nature damage to enemies every 1 sec, and increasing the time between attacks by 20%.  Lasts 10 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Tranquility"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Tranquility",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Tranquility",
2				["Tooltip"] = {
2					["Left1"] = "Tranquility",
2					["Left2"] = "970 Mana",
2					["Right3"] = "10 min cooldown",
2					["Left3"] = "Channeled",
2					["NumLines"] = 4,
2					["Left4"] = "Heals all nearby group members for 1097 every 2 seconds for 8 sec.  Druid must channel to maintain the spell.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Regrowth"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Regrowth",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_ResistNature",
2				["Tooltip"] = {
2					["Left1"] = "Regrowth",
2					["Left2"] = "410 Mana",
2					["Left3"] = "2 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1003 to 1119 and another 1064 over 21 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			},
2			["Enrage"] = {
2				["Name"] = "Enrage",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Enrage",
2				["Tooltip"] = {
2					["Left1"] = "Enrage",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Bear Form, Dire Bear Form",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Generates 20 rage, and then generates an additional 10 rage over 10 sec, but reduces base armor by 27% in Bear Form and 16% in Dire Bear Form.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Cooking"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Cooking",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Food_15",
2				["Tooltip"] = {
2					["Left1"] = "Cooking",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a cook to make basic recipes up to a maximum potential skill of 75.  Requires meat from beasts and fire to make food.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Apprentice",
2			},
2			["Mark of the Wild"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Mark of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Regeneration",
2				["Tooltip"] = {
2					["Left1"] = "Mark of the Wild",
2					["Left2"] = "167 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the friendly target's armor by 399, all attributes by 16 and all resistances by 28 for 30 min.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			},
2			["Faerie Fire (Feral)"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Faerie Fire (Feral)",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_FaerieFire",
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Faerie Fire (Feral)",
2					["Left4"] = "Requires Cat Form, Bear Form, Dire Bear Form",
2					["Left5"] = "Decrease the armor of the target by 5% for 5 min.  While affected, the target cannot stealth or turn invisible.  Deals 168 damage and additional threat when used in Bear Form or Dire Bear Form.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "6 sec cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Gift of the Wild"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Gift of the Wild",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_GiftoftheWild",
2				["Tooltip"] = {
2					["Left1"] = "Gift of the Wild",
2					["Left4"] = "Reagents: |nWild Thornroot",
2					["Left5"] = "Gives the Gift of the Wild to all party and raid members, increasing armor by 399, all attributes by 16 and all resistances by 28 for 1 hour.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "447 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			},
2			["Maul"] = {
2				["Name"] = "Maul",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Maul",
2				["Tooltip"] = {
2					["Left1"] = "Maul",
2					["Left2"] = "10 Rage",
2					["Left5"] = "A strong attack that increases melee damage by 230 to 231 and causes a high amount of threat.  Effects which increase Bleed damage also increase Maul damage.",
2					["Left3"] = "Next melee",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			},
2			["Toughness"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Toughness",
2				["Texture"] = "Interface\\Icons\\Ability_GolemThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Toughness",
2					["NumLines"] = 2,
2					["Left2"] = "All your hard work spent mining has made you exceptionally tough, increasing your Stamina by 7.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Cure Poison"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Cure Poison",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NullifyPoison",
2				["Tooltip"] = {
2					["Left1"] = "Cure Poison",
2					["Left2"] = "161 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Cures 1 poison effect on the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Abolish Poison"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Abolish Poison",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_NullifyPoison_02",
2				["Tooltip"] = {
2					["Left1"] = "Abolish Poison",
2					["Left2"] = "161 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Attempts to cure 1 poison effect on the target, and 1 more poison effect every 3 seconds for 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["War Stomp"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "War Stomp",
2				["Texture"] = "Interface\\Icons\\Ability_WarStomp",
2				["Tooltip"] = {
2					["Left1"] = "War Stomp",
2					["Left2"] = "0.5 sec cast",
2					["Left3"] = "Stuns up to 5 enemies within 8 yds for 2 sec.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial",
2			},
2			["Tiger's Fury"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Tiger's Fury",
2				["Texture"] = "Interface\\Icons\\Ability_Mount_JungleTiger",
2				["Tooltip"] = {
2					["Left1"] = "Tiger's Fury",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "30 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Increases damage done by 40 for 6 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			},
2			["Skinning"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Skinning",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Pelt_Wolf_01",
2				["Tooltip"] = {
2					["Left1"] = "Skinning",
2					["Left2"] = "5 yd range",
2					["Left5"] = "Master skill in skinning the hides from beasts for use in Leatherworking.  Gives a potential skinning skill of 375.  Requires a Skinning Knife.",
2					["Left3"] = "1.5 sec cast",
2					["NumLines"] = 5,
2					["Left4"] = "Tools: Skinning Knife",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Master",
2			},
2			["Prowl"] = {
2				["Name"] = "Prowl",
2				["Texture"] = "Interface\\Icons\\Ability_Ambush",
2				["Tooltip"] = {
2					["Left1"] = "Prowl",
2					["Left2"] = "Instant",
2					["Left3"] = "Requires Cat Form",
2					["Right2"] = "10 sec cooldown",
2					["NumLines"] = 4,
2					["Left4"] = "Allows the Druid to prowl around, but reduces your movement speed by 30%.  Lasts until cancelled.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 0,
2					["StartTime"] = 1669.45,
2					["Duration"] = 10,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Savage Defense"] = {
2				["Name"] = "Savage Defense",
2				["Texture"] = "Interface\\Icons\\Ability_Racial_Cannibalize",
2				["Tooltip"] = {
2					["Left1"] = "Savage Defense",
2					["Left2"] = "Requires Bear Form, Dire Bear Form",
2					["Left3"] = "Each time you deal a critical strike while in Bear Form or Dire Bear Form, you gain Savage Defense, reducing the damage taken from the next physical attack that strikes you by 25% of your attack power.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			},
2			["Cultivation"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Cultivation",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Flower_01",
2				["Tooltip"] = {
2					["Left1"] = "Cultivation",
2					["NumLines"] = 2,
2					["Left2"] = "Herbalism skill increased by 15.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			},
2			["Moonfire"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Moonfire",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_StarFall",
2				["Tooltip"] = {
2					["Left1"] = "Moonfire",
2					["Left2"] = "298 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Burns the enemy for 195 to 228 Arcane damage and then an additional 384 Arcane damage over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			},
2			["Feral Charge - Cat"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Feral Charge - Cat",
2				["Texture"] = "Interface\\Icons\\spell_druid_feralchargecat",
2				["Tooltip"] = {
2					["Left1"] = "Feral Charge - Cat",
2					["Left2"] = "10 Energy",
2					["Right3"] = "30 sec cooldown",
2					["Left5"] = "Causes you to leap behind an enemy, dazing them for 3 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "8-25 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Cat Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Ferocious Bite"] = {
2				["Name"] = "Ferocious Bite",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_FerociousBite",
2				["Tooltip"] = {
2					["Left1"] = "Ferocious Bite",
2					["Left4"] = "Requires Cat Form",
2					["Left5"] = "Finishing move that causes damage per combo point and converts each extra point of energy (up to a maximum of 30 extra energy) into 4.8 additional damage.  Damage is increased by your attack power.<CR><LF>   1 point  : 277-337 damage<CR><LF>   2 points: 502-562 damage<CR><LF>   3 points: 727-787 damage<CR><LF>   4 points: 951-1011 damage<CR><LF>   5 points: 1176-1236 damage",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left2"] = "35 Energy",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			},
2			["Growl"] = {
2				["Name"] = "Growl",
2				["Texture"] = "Interface\\Icons\\Ability_Physical_Taunt",
2				["Tooltip"] = {
2					["Left2"] = "30 yd range",
2					["Left1"] = "Growl",
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2					["Left5"] = "Taunts the target to attack you, but has no effect if the target is already attacking you.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "8 sec cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Cat Form"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Cat Form",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatForm",
2				["Tooltip"] = {
2					["Left1"] = "Cat Form",
2					["Left2"] = "304 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Shapeshift into cat form, increasing melee attack power by 120 plus Agility.  Also protects the caster from Polymorph effects and allows the use of various cat abilities.<CR><LF><CR><LF>The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Shapeshift",
2			},
2			["Nature Resistance"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Nature Resistance",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_SpiritArmor",
2				["Tooltip"] = {
2					["Left1"] = "Nature Resistance",
2					["NumLines"] = 2,
2					["Left2"] = "Reduces the chance you will be hit by Nature spells by 2%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			},
2			["Dash"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Dash",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Dash",
2				["Tooltip"] = {
2					["Left1"] = "Dash",
2					["Left2"] = "Instant",
2					["Left3"] = "Increases movement speed by 60% while in Cat Form for 15 sec.  Does not break prowling.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			},
2			["Innervate"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Innervate",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Lightning",
2				["Tooltip"] = {
2					["Left1"] = "Innervate",
2					["Left2"] = "30 yd range",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant",
2					["NumLines"] = 4,
2					["Left4"] = "Causes the target to regenerate mana equal to 225% of the casting Druid's base mana pool over 10 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2			["Bash"] = {
2				["Name"] = "Bash",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Bash",
2				["Tooltip"] = {
2					["Left1"] = "Bash",
2					["Left2"] = "10 Rage",
2					["Right3"] = "1 min cooldown",
2					["Left5"] = "Stuns the target for 4 sec and interrupts non-player spellcasting for 3 sec.",
2					["Left3"] = "Instant",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Bear Form, Dire Bear Form",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			},
2			["Attack"] = {
2				["UsableSpell"] = 1,
2				["Name"] = "Attack",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_CatFormAttack",
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 2,
2					["Left2"] = "31.43% chance to crit",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			},
2		},
2		["NumShapeshiftForms"] = 5,
2		["ShapeshiftFormInfo"] = {
0			{
2				["Name"] = "Dire Bear Form",
2				["Icon"] = "Interface\\Icons\\Ability_Racial_BearForm",
2				["Castable"] = 1,
2			}, -- [1]
0			{
2				["Name"] = "Aquatic Form",
2				["Icon"] = "Interface\\Icons\\Ability_Druid_AquaticForm",
2			}, -- [2]
0			{
2				["Castable"] = 1,
2				["Name"] = "Cat Form",
2				["Icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2				["Active"] = 1,
2			}, -- [3]
0			{
2				["Name"] = "Travel Form",
2				["Icon"] = "Interface\\Icons\\Ability_Druid_TravelForm",
2				["Castable"] = 1,
2			}, -- [4]
0			{
2				["Name"] = "Flight Form",
2				["Icon"] = "Interface\\Icons\\Ability_Druid_FlightForm",
2				["Castable"] = 1,
0			}, -- [5]
2		},
2		["Battlefields"] = {
0			{
2				["Status"] = "none",
2				["Id"] = 0,
2			}, -- [1]
0			{
2				["Status"] = "none",
2				["Id"] = 0,
0			}, -- [2]
2		},
2	}

==============================================================================
dumps/SoloPaladin.lua
==============================================================================
	
2	PowaSet = {
0		{
2			["gcd"] = false,
2			["b"] = 0.1019607843137255,
2			["anim1"] = 1,
2			["g"] = 0.4705882352941176,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Warrior_InnerRage",
2			["size"] = 0.3799999952316284,
2			["buffname"] = "Seal of Command",
2			["r"] = 0.8313725490196078,
2			["y"] = 11,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 7,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 30,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 1,
2				["h"] = 0.6000000238418579,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 0.949999988079071,
2			["begin"] = 0,
2			["id"] = 1,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [1]
0		{
2			["gcd"] = false,
2			["b"] = 0.85490196078431,
2			["anim1"] = 5,
2			["g"] = 0.1921568627451,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2			["size"] = 1.240000009536743,
2			["buffname"] = "???",
2			["r"] = 0.10980392156863,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 9,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 3,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 2,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 0.5,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 60,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 1,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1.25,
2			["begin"] = 0,
2			["id"] = 2,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [2]
0		{
2			["gcd"] = false,
2			["b"] = 0.027450980392157,
2			["anim1"] = 5,
2			["g"] = 0.043137254901961,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2			["size"] = 1.699999928474426,
2			["buffname"] = "???",
2			["r"] = 0.85490196078431,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 8,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 6,
2			["alpha"] = 0.5,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 15,
2				["x"] = 60,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 3,
2				["h"] = 0.5,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 0.5,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 60,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1.200000047683716,
2			["begin"] = 0,
2			["id"] = 3,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [3]
0		{
2			["gcd"] = false,
2			["b"] = 0.85490196078431,
2			["anim1"] = 5,
2			["g"] = 0.1921568627451,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2			["size"] = 1.240000009536743,
2			["buffname"] = "???",
2			["r"] = 0.10980392156863,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 9,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 3,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 4,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 0.5,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 80,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 2,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1.25,
2			["begin"] = 0,
2			["id"] = 4,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [4]
0		{
2			["gcd"] = false,
2			["b"] = 0.1882352941176471,
2			["anim1"] = 1,
2			["g"] = 0.8666666666666667,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_BlessedMending",
2			["size"] = 0.2000000029802322,
2			["buffname"] = "Sacred Shield",
2			["r"] = 1,
2			["y"] = 81,
2			["x"] = -55,
2			["customname"] = "",
2			["groupany"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 21,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 50,
2				["x"] = -35,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 5,
2				["h"] = 0.550000011920929,
2				["a"] = 1,
2				["enabled"] = true,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = true,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = true,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "Each",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 5,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [5]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 8,
2			["g"] = 0.4666666666666667,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2			["size"] = 0.7599999904632568,
2			["buffname"] = "Divine Plea",
2			["r"] = 0.2941176470588235,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 7,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 26,
2			["alpha"] = 0.699999988079071,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 6,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 15,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "2",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 6,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [6]
0		{
2			["gcd"] = false,
2			["b"] = 0.2705882352941176,
2			["anim1"] = 8,
2			["g"] = 0.9176470588235294,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_CrusaderAura",
2			["size"] = 0.7599999904632568,
2			["buffname"] = "Crusader Aura",
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 34,
2			["alpha"] = 0.4000000059604645,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 7,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 0.5,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 7,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = true,
2			["ismounted"] = true,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [7]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 8,
2			["g"] = 0.4666666666666667,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2			["size"] = 0.7599999904632568,
2			["buffname"] = "Divine Plea",
2			["r"] = 0.2941176470588235,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 7,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 26,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 30,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 8,
2				["h"] = 0.5,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 15,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "4",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 2,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 8,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [8]
0		{
2			["gcd"] = false,
2			["b"] = 0.18823529411765,
2			["anim1"] = 3,
2			["g"] = 0.86666666666667,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_GaurdedbytheLight",
2			["size"] = 0.3400000035762787,
2			["buffname"] = "Sacred Shield",
2			["r"] = 1,
2			["y"] = 81,
2			["x"] = -55,
2			["customname"] = "",
2			["groupany"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 5,
2			["alpha"] = 1,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 9,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = true,
2			["textaura"] = false,
2			["wowtex"] = true,
2			["groupOrSelf"] = true,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "Absorbs",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 2,
2			["id"] = 9,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		}, -- [9]
0		{
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 5,
2			["g"] = 0.5215686274509804,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2			["size"] = 0.1400000005960465,
2			["buffname"] = "???",
2			["r"] = 0.3568627450980392,
2			["y"] = 80,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 9,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 21,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 10,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 0.6000000238418579,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 86,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = true,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 1,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "igPVPUpdate",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 0.800000011920929,
2			["begin"] = 6,
2			["id"] = 10,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 9,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
0		}, -- [10]
2		[25] = {
2			["gcd"] = false,
2			["b"] = 0.3529411764705882,
2			["anim1"] = 1,
2			["g"] = 0.9529411764705882,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_InfusionofLight",
2			["size"] = 0.8399999737739563,
2			["buffname"] = "Infusion of Light",
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 1,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 4,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 25,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 25,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[0] = {
2			["gcd"] = false,
2			["b"] = 1,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "",
2			["size"] = 0.75,
2			["buffname"] = "",
2			["r"] = 1,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 1,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 0,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = ">=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 0,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[27] = {
2			["gcd"] = false,
2			["b"] = 0.6549019607843137,
2			["anim1"] = 1,
2			["g"] = 0.4196078431372549,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_RighteousnessAura",
2			["size"] = 0.3799999952316284,
2			["buffname"] = "Seal of Wisdom",
2			["r"] = 0.2,
2			["y"] = 11,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 7,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 27,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 0.949999988079071,
2			["begin"] = 0,
2			["id"] = 27,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[28] = {
2			["gcd"] = false,
2			["b"] = 0.1254901960784314,
2			["anim1"] = 4,
2			["g"] = 0.4941176470588236,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_BeaconofLight",
2			["size"] = 0.1800000071525574,
2			["buffname"] = "Beacon",
2			["r"] = 1,
2			["y"] = 49,
2			["x"] = -48,
2			["customname"] = "",
2			["groupany"] = true,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 13,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 30,
2				["x"] = -45,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 28,
2				["h"] = 0.6000000238418579,
2				["a"] = 1,
2				["enabled"] = true,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = true,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 1,
2			["id"] = 28,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 2,
2		},
2		[29] = {
2			["gcd"] = false,
2			["b"] = 0.996078431372549,
2			["anim1"] = 1,
2			["g"] = 0.996078431372549,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_JudgementofthePure",
2			["size"] = 0.2599999904632568,
2			["buffname"] = "Judgements of the Pure",
2			["r"] = 0.996078431372549,
2			["y"] = 78,
2			["x"] = 46,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 25,
2			["alpha"] = 0.300000011920929,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 50,
2				["x"] = 30,
2				["dual"] = false,
2				["cents"] = false,
2				["id"] = 29,
2				["h"] = 0.6000000238418579,
2				["a"] = 1,
2				["enabled"] = true,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = true,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 2,
2			["id"] = 29,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[50] = {
2			["gcd"] = false,
2			["b"] = 0,
2			["anim1"] = 1,
2			["g"] = 0.9803921568627451,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Racial_Avatar",
2			["size"] = 0.1200000047683716,
2			["buffname"] = "Vengeance",
2			["r"] = 0.996078431372549,
2			["y"] = 29,
2			["x"] = 53,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 10,
2			["alpha"] = 0.550000011920929,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 50,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 50,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[51] = {
2			["gcd"] = false,
2			["b"] = 0.1058823529411765,
2			["anim1"] = 1,
2			["g"] = 0.1176470588235294,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_SealOfBlood",
2			["size"] = 0.3799999952316284,
2			["buffname"] = "Seal of the Martyr",
2			["r"] = 0.6549019607843137,
2			["y"] = 11,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 7,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 51,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 0.949999988079071,
2			["begin"] = 0,
2			["id"] = 51,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[49] = {
2			["gcd"] = false,
2			["b"] = 0.5215686274509804,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Ability_Paladin_ArtofWar",
2			["size"] = 0.7599999904632568,
2			["buffname"] = "Art of War",
2			["r"] = 0.9529411764705882,
2			["y"] = -30,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 5,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 49,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "LEVELUP",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 49,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 1,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2		[26] = {
2			["gcd"] = false,
2			["b"] = 0.5019607843137255,
2			["anim1"] = 1,
2			["g"] = 1,
2			["optunitn"] = false,
2			["ignoremaj"] = true,
2			["opt2"] = 0,
2			["target"] = false,
2			["icon"] = "Interface\\Icons\\Spell_Holy_LightsGrace",
2			["size"] = 0.4399999976158142,
2			["buffname"] = "Light's Grace",
2			["r"] = 0.9686274509803922,
2			["y"] = 20,
2			["x"] = 0,
2			["customname"] = "",
2			["groupany"] = false,
2			["timerduration"] = 0,
2			["unitn"] = "Only for raid/group.",
2			["bufftype"] = 1,
2			["stacks"] = 0,
2			["focus"] = false,
2			["isenchant"] = false,
2			["raid"] = false,
2			["texture"] = 22,
2			["alpha"] = 0.75,
2			["aurastext"] = "",
2			["symetrie"] = 0,
2			["Timer"] = {
2				["y"] = 0,
2				["x"] = 0,
2				["dual"] = false,
2				["cents"] = true,
2				["id"] = 26,
2				["h"] = 1,
2				["a"] = 1,
2				["enabled"] = false,
2			},
2			["opt1"] = 0,
2			["owntex"] = false,
2			["duration"] = 0,
2			["mine"] = false,
2			["multiids"] = "",
2			["inVehicle"] = false,
2			["speed"] = 1,
2			["anim2"] = 0,
2			["stacksOperator"] = "=",
2			["realaura"] = 1,
2			["threshold"] = 50,
2			["exact"] = false,
2			["textaura"] = false,
2			["wowtex"] = false,
2			["groupOrSelf"] = false,
2			["customsound"] = "",
2			["combat"] = 0,
2			["aurastextfont"] = 1,
2			["tooltipCheck"] = "",
2			["stance"] = 10,
2			["customtex"] = false,
2			["soundfile"] = "",
2			["isdebufftype"] = false,
2			["thresholdinvert"] = false,
2			["spec2"] = true,
2			["spec1"] = true,
2			["torsion"] = 1,
2			["begin"] = 0,
2			["id"] = 26,
2			["off"] = false,
2			["party"] = false,
2			["sound"] = 0,
2			["isdebuff"] = false,
2			["texmode"] = 1,
2			["inverse"] = false,
2			["ismounted"] = false,
2			["targetfriend"] = false,
2			["randomcolor"] = false,
2			["isinraid"] = false,
2			["finish"] = 1,
2		},
2	}
2	PowaMisc = {
2		["Bdual"] = false,
2		["maxeffects"] = 100,
2		["disabled"] = false,
2		["BTimerX"] = 0,
2		["BTimerA"] = 1,
2		["playerclass"] = "PALADIN",
2		["debug"] = false,
2		["BTimerY"] = 0,
2		["BTimerScale"] = 1,
2		["BCents"] = true,
2	}
2	PowaTimer = {
2	}
2	PowaPlayerListe = {
2		"Page 1", -- [1]
2		"Page 2", -- [2]
2		"Page 3", -- [3]
2		"Page 4", -- [4]
0		"Page 5", -- [5]
2	}
2	PowaState = {
2		["Inventory"] = {
2			["ItemCooldown"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				0, -- [5]
2				0, -- [6]
2				0, -- [7]
2				0, -- [8]
2				0, -- [9]
2				0, -- [10]
2				0, -- [11]
2				0, -- [12]
2				0, -- [13]
2				0, -- [14]
2				0, -- [15]
2				0, -- [16]
2				0, -- [17]
2				0, -- [18]
2				0, -- [19]
2				0, -- [20]
2				0, -- [21]
2				0, -- [22]
2				0, -- [23]
2				[0] = 0,
2			},
2			["ItemLink"] = {
2				"|cff0070dd|Hitem:46349:0:0:0:0:0:0:0:80|h[Chef's Hat]|h|r", -- [1]
2				"|cffa335ee|Hitem:34679:0:0:0:0:0:0:0:80|h[Shattered Sun Pendant of Might]|h|r", -- [2]
2				nil, -- [3]
2				"|cffffffff|Hitem:10034:0:0:0:0:0:0:2130184448:80|h[Tuxedo Shirt]|h|r", -- [4]
2				nil, -- [5]
2				"|cff1eff00|Hitem:7052:0:0:0:0:0:0:316745312:80|h[Azure Silk Belt]|h|r", -- [6]
2				"|cff0070dd|Hitem:44596:0:0:0:0:0:0:953440492:80|h[Wrynn's Legplates of Carnage]|h|r", -- [7]
2				"|cffa335ee|Hitem:40880:3826:3460:0:0:0:0:0:80|h[Deadly Gladiator's Greaves of Triumph]|h|r", -- [8]
2				nil, -- [9]
0				nil, -- [10]
2				"|cff0070dd|Hitem:43251:0:3446:0:0:0:0:390773760:80|h[Ring of Scarlet Shadows]|h|r", -- [11]
2				"|cff1eff00|Hitem:39481:0:0:0:0:0:0:1372279553:80|h[Signet of the Avenging Heart]|h|r", -- [12]
2				"|cff0070dd|Hitem:44324:0:0:0:0:0:0:949761216:80|h[Mighty Alchemist's Stone]|h|r", -- [13]
2				"|cff0070dd|Hitem:38259:0:0:0:0:0:0:1198550477:80|h[First Mate's Pocketwatch]|h|r", -- [14]
2				"|cff0070dd|Hitem:37647:0:0:0:0:0:0:1165695296:80|h[Cloak of Bloodied Waters]|h|r", -- [15]
2				"|cffa335ee|Hitem:41257:3828:0:0:0:0:0:1868707328:80|h[Titansteel Destroyer]|h|r", -- [16]
2				nil, -- [17]
2				"|cff0070dd|Hitem:38362:0:0:0:0:0:0:0:80|h[Venture Co. Libram of Retribution]|h|r", -- [18]
2				nil, -- [19]
2				"|cffa335ee|Hitem:38082:0:0:0:0:0:0:0:80|h[\"Gigantique\" Bag]|h|r", -- [20]
2				"|cffa335ee|Hitem:38082:0:0:0:0:0:0:0:80|h[\"Gigantique\" Bag]|h|r", -- [21]
2				"|cffa335ee|Hitem:38082:0:0:0:0:0:0:0:80|h[\"Gigantique\" Bag]|h|r", -- [22]
0				"|cff0070dd|Hitem:38225:0:0:0:0:0:0:1258493560:80|h[Mycah's Botanical Bag]|h|r", -- [23]
2			},
2			["Slot"] = {
0				{
2					["Id"] = 1,
2					["Tooltip"] = {
2						["Left1"] = "Chef's Hat",
2						["Left2"] = "Soulbound",
2						["Left3"] = "Head",
2						["NumLines"] = 4,
2						["Left4"] = "Equip: Allows you to cook faster.",
2					},
2					["Slot"] = "HeadSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Head.blp",
2				}, -- [1]
0				{
2					["Id"] = 2,
2					["Tooltip"] = {
2						["Left1"] = "Shattered Sun Pendant of Might",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Stamina",
2						["Left7"] = "Requires Shattered Sun Offensive - Exalted",
2						["Left10"] = " ",
2						["Left9"] = "Equip: Your melee and ranged attacks have a chance to call on the power of the Arcane if you're exalted with the Scryers, or the Light if you're exalted with the Aldor.",
2						["Left4"] = "+18 Agility",
2						["Left3"] = "Neck",
2						["Left6"] = "Requires Level 70",
2						["NumLines"] = 10,
2						["Left8"] = "Equip: Increases attack power by 64.",
2					},
2					["Slot"] = "NeckSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Neck.blp",
2				}, -- [2]
0				{
2					["Id"] = 3,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "ShoulderSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shoulder.blp",
2				}, -- [3]
0				{
2					["Id"] = 4,
2					["Tooltip"] = {
2						["Left1"] = "Tuxedo Shirt",
2						["Left2"] = "Shirt",
2						["Left3"] = " ",
2						["NumLines"] = 3,
2					},
2					["Slot"] = "ShirtSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shirt.blp",
2				}, -- [4]
0				{
2					["Id"] = 5,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "ChestSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				}, -- [5]
0				{
2					["Id"] = 6,
2					["Tooltip"] = {
2						["Left9"] = "|cff00ff00<Made by Campino>|r",
2						["Left1"] = "Azure Silk Belt",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+5 Intellect",
2						["Left6"] = "Durability 25 / 25",
2						["Left7"] = "Requires Level 30",
2						["Left10"] = " ",
2						["Right3"] = "Cloth",
2						["Left3"] = "Waist",
2						["Left4"] = "26 Armor",
2						["NumLines"] = 10,
2						["Left8"] = "Equip: Increases swim speed by 15%.",
2					},
2					["Slot"] = "WaistSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Waist.blp",
2				}, -- [6]
0				{
2					["Id"] = 7,
2					["Tooltip"] = {
2						["Left1"] = "Wrynn's Legplates of Carnage",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+37 Strength",
2						["Left7"] = "Equip: Improves critical strike rating by 65.",
2						["Left9"] = " ",
2						["Left6"] = "Durability 98 / 100",
2						["Right3"] = "Plate",
2						["Left3"] = "Legs",
2						["Left4"] = "1438 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Improves hit rating by 28.",
2					},
2					["Slot"] = "LegsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Legs.blp",
2				}, -- [7]
0				{
2					["Id"] = 8,
2					["Tooltip"] = {
2						["Left1"] = "Deadly Gladiator's Greaves of Triumph",
2						["Right3"] = "Plate",
2						["Left7"] = "+12 Hit Rating and +12 Critical Strike Rating",
2						["Left9"] = "Socket Bonus: +4 Resilience Rating",
2						["Left15"] = "<Shift Right Click to Socket>",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+111 Stamina",
2						["Left12"] = "Requires Level 80",
2						["Left4"] = "1580 Armor",
2						["Left14"] = "Equip: Improves your resilience rating by 50.",
2						["Left10"] = "Durability 73 / 75",
2						["Left5"] = "+67 Strength",
2						["Left11"] = "Classes: Warrior, Paladin, Death Knight",
2						["Left13"] = "Equip: Improves critical strike rating by 42.",
2						["Left3"] = "Feet",
2						["NumLines"] = 15,
2						["Left8"] = "|cffffffff+16 Hit Rating|r",
2					},
2					["Slot"] = "FeetSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Feet.blp",
2				}, -- [8]
0				{
2					["Id"] = 9,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "WristSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Wrists.blp",
2				}, -- [9]
0				{
2					["Id"] = 10,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "HandsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Hands.blp",
2				}, -- [10]
0				{
2					["Id"] = 11,
2					["Tooltip"] = {
2						["Left1"] = "Ring of Scarlet Shadows",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+16 Strength|r",
2						["Left12"] = " ",
2						["Left7"] = "Requires Level 78",
2						["Left10"] = "Equip: Improves hit rating by 38.",
2						["Left9"] = "Equip: Improves critical strike rating by 31.",
2						["Left4"] = "Finger",
2						["Left11"] = "<Shift Right Click to Socket>",
2						["Left3"] = "Unique-Equipped",
2						["Left6"] = "Socket Bonus: +8 Attack Power",
2						["NumLines"] = 12,
2						["Left8"] = "Equip: Increases attack power by 60.",
2					},
2					["Slot"] = "Finger0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				}, -- [11]
0				{
2					["Id"] = 12,
2					["Tooltip"] = {
2						["Left1"] = "Signet of the Avenging Heart",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+34 Stamina",
2						["Left7"] = " ",
2						["Left3"] = "Finger",
2						["Left6"] = "Equip: Improves hit rating by 32.",
2						["NumLines"] = 7,
2						["Left4"] = "+22 Strength",
2					},
2					["Slot"] = "Finger1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				}, -- [12]
0				{
2					["Id"] = 13,
2					["Tooltip"] = {
2						["Left1"] = "Mighty Alchemist's Stone",
2						["Left2"] = "Soulbound",
2						["Left5"] = "Requires Level 75",
2						["Left7"] = "Equip: Increases attack power by 100.",
2						["Left10"] = "|cff00ff00<Made by Smacker>|r",
2						["Left9"] = "Equip: Increases the effect that healing and mana potions have on the wearer by 40%.  This effect does not stack.",
2						["Left4"] = "Trinket",
2						["Left11"] = " ",
2						["Left3"] = "Unique",
2						["Left6"] = "Requires Alchemy (400)",
2						["NumLines"] = 11,
2						["Left8"] = "Equip: Improves critical strike rating by 50.",
2					},
2					["Slot"] = "Trinket0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				}, -- [13]
0				{
2					["Id"] = 14,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "First Mate's Pocketwatch",
2						["Left4"] = "Equip: Increases attack power by 88.",
2						["Left5"] = "Use: Increases your haste rating by 140 for 20 sec. (2 Min Cooldown)",
2						["Left3"] = "Trinket",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				}, -- [14]
0				{
2					["Id"] = 15,
2					["Tooltip"] = {
2						["Left1"] = "Cloak of Bloodied Waters",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+60 Strength",
2						["Left7"] = "Requires Level 80",
2						["Left9"] = " ",
2						["Left4"] = "145 Armor",
2						["Left3"] = "Back",
2						["Left6"] = "+37 Stamina",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Improves critical strike rating by 34.",
2					},
2					["Slot"] = "BackSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				}, -- [15]
0				{
2					["Id"] = 16,
2					["Tooltip"] = {
2						["Left1"] = "Titansteel Destroyer",
2						["Left7"] = "+124 Strength",
2						["Left3"] = "Unique-Equipped",
2						["Right5"] = "Speed 3.40",
2						["Left4"] = "Two-Hand",
2						["Left5"] = "507 - 761 Damage",
2						["Left12"] = "Equip: Improves hit rating by 54.",
2						["Left14"] = " ",
2						["Left13"] = "|cff00ff00<Made by Avtar>|r",
2						["Right4"] = "Mace",
2						["Left2"] = "Soulbound",
2						["Left6"] = "(186.5 damage per second)",
2						["Left11"] = "Requires Level 80",
2						["Left10"] = "Durability 119 / 120",
2						["Left9"] = "+85 Attack Power",
2						["NumLines"] = 14,
2						["Left8"] = "+105 Stamina",
2					},
2					["Slot"] = "MainHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-MainHand.blp",
2				}, -- [16]
0				{
2					["Id"] = 17,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "SecondaryHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-SecondaryHand.blp",
2				}, -- [17]
0				{
2					["Id"] = 18,
2					["Tooltip"] = {
2						["Left1"] = "Venture Co. Libram of Retribution",
2						["Left2"] = "Soulbound",
2						["Left6"] = "Equip: Causes your Divine Storm to deal an additional 81 damage.",
2						["Right4"] = "Libram",
2						["Left3"] = "Unique",
2						["Left4"] = "Relic",
2						["NumLines"] = 6,
2						["Left5"] = "Requires Level 74",
2					},
2					["Slot"] = "RangedSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				}, -- [18]
0				{
2					["Id"] = 19,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "TabardSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Tabard.blp",
2				}, -- [19]
0				{
2					["Id"] = 20,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [20]
0				{
2					["Id"] = 21,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [21]
0				{
2					["Id"] = 22,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag2Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				}, -- [22]
0				{
2					["Id"] = 23,
2					["Tooltip"] = {
2						["Left1"] = "Mycah's Botanical Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "28 Slot Herb Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag3Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
0				}, -- [23]
2				[0] = {
2					["Id"] = 0,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "AmmoSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["WristSlot"] = {
2					["Id"] = 9,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "WristSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Wrists.blp",
2				},
2				["Bag2Slot"] = {
2					["Id"] = 22,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag2Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["BackSlot"] = {
2					["Id"] = 15,
2					["Tooltip"] = {
2						["Left1"] = "Cloak of Bloodied Waters",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+60 Strength",
2						["Left7"] = "Requires Level 80",
2						["Left9"] = " ",
2						["Left4"] = "145 Armor",
2						["Left3"] = "Back",
2						["Left6"] = "+37 Stamina",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Improves critical strike rating by 34.",
2					},
2					["Slot"] = "BackSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				},
2				["Trinket0Slot"] = {
2					["Id"] = 13,
2					["Tooltip"] = {
2						["Left1"] = "Mighty Alchemist's Stone",
2						["Left2"] = "Soulbound",
2						["Left5"] = "Requires Level 75",
2						["Left7"] = "Equip: Increases attack power by 100.",
2						["Left10"] = "|cff00ff00<Made by Smacker>|r",
2						["Left9"] = "Equip: Increases the effect that healing and mana potions have on the wearer by 40%.  This effect does not stack.",
2						["Left4"] = "Trinket",
2						["Left11"] = " ",
2						["Left3"] = "Unique",
2						["Left6"] = "Requires Alchemy (400)",
2						["NumLines"] = 11,
2						["Left8"] = "Equip: Improves critical strike rating by 50.",
2					},
2					["Slot"] = "Trinket0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				},
2				["LegsSlot"] = {
2					["Id"] = 7,
2					["Tooltip"] = {
2						["Left1"] = "Wrynn's Legplates of Carnage",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+37 Strength",
2						["Left7"] = "Equip: Improves critical strike rating by 65.",
2						["Left9"] = " ",
2						["Left6"] = "Durability 98 / 100",
2						["Right3"] = "Plate",
2						["Left3"] = "Legs",
2						["Left4"] = "1438 Armor",
2						["NumLines"] = 9,
2						["Left8"] = "Equip: Improves hit rating by 28.",
2					},
2					["Slot"] = "LegsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Legs.blp",
2				},
2				["Bag3Slot"] = {
2					["Id"] = 23,
2					["Tooltip"] = {
2						["Left1"] = "Mycah's Botanical Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "28 Slot Herb Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag3Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["TabardSlot"] = {
2					["Id"] = 19,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "TabardSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Tabard.blp",
2				},
2				["FeetSlot"] = {
2					["Id"] = 8,
2					["Tooltip"] = {
2						["Left1"] = "Deadly Gladiator's Greaves of Triumph",
2						["Right3"] = "Plate",
2						["Left7"] = "+12 Hit Rating and +12 Critical Strike Rating",
2						["Left9"] = "Socket Bonus: +4 Resilience Rating",
2						["Left15"] = "<Shift Right Click to Socket>",
2						["Left2"] = "Soulbound",
2						["Left6"] = "+111 Stamina",
2						["Left12"] = "Requires Level 80",
2						["Left4"] = "1580 Armor",
2						["Left14"] = "Equip: Improves your resilience rating by 50.",
2						["Left10"] = "Durability 73 / 75",
2						["Left5"] = "+67 Strength",
2						["Left11"] = "Classes: Warrior, Paladin, Death Knight",
2						["Left13"] = "Equip: Improves critical strike rating by 42.",
2						["Left3"] = "Feet",
2						["NumLines"] = 15,
2						["Left8"] = "|cffffffff+16 Hit Rating|r",
2					},
2					["Slot"] = "FeetSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Feet.blp",
2				},
2				["HandsSlot"] = {
2					["Id"] = 10,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "HandsSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Hands.blp",
2				},
2				["Finger1Slot"] = {
2					["Id"] = 12,
2					["Tooltip"] = {
2						["Left1"] = "Signet of the Avenging Heart",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+34 Stamina",
2						["Left7"] = " ",
2						["Left3"] = "Finger",
2						["Left6"] = "Equip: Improves hit rating by 32.",
2						["NumLines"] = 7,
2						["Left4"] = "+22 Strength",
2					},
2					["Slot"] = "Finger1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				},
2				["ChestSlot"] = {
2					["Id"] = 5,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "ChestSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Chest.blp",
2				},
2				["Bag1Slot"] = {
2					["Id"] = 21,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["Trinket1Slot"] = {
2					["Id"] = 14,
2					["Tooltip"] = {
2						["Left6"] = " ",
2						["Left1"] = "First Mate's Pocketwatch",
2						["Left4"] = "Equip: Increases attack power by 88.",
2						["Left5"] = "Use: Increases your haste rating by 140 for 20 sec. (2 Min Cooldown)",
2						["Left3"] = "Trinket",
2						["NumLines"] = 6,
2						["Left2"] = "Soulbound",
2					},
2					["Slot"] = "Trinket1Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Trinket.blp",
2				},
2				["HeadSlot"] = {
2					["Id"] = 1,
2					["Tooltip"] = {
2						["Left1"] = "Chef's Hat",
2						["Left2"] = "Soulbound",
2						["Left3"] = "Head",
2						["NumLines"] = 4,
2						["Left4"] = "Equip: Allows you to cook faster.",
2					},
2					["Slot"] = "HeadSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Head.blp",
2				},
2				["AmmoSlot"] = {
2					["Id"] = 0,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "AmmoSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["MainHandSlot"] = {
2					["Id"] = 16,
2					["Tooltip"] = {
2						["Left1"] = "Titansteel Destroyer",
2						["Left7"] = "+124 Strength",
2						["Left3"] = "Unique-Equipped",
2						["Right5"] = "Speed 3.40",
2						["Left4"] = "Two-Hand",
2						["Left5"] = "507 - 761 Damage",
2						["Left12"] = "Equip: Improves hit rating by 54.",
2						["Left14"] = " ",
2						["Left13"] = "|cff00ff00<Made by Avtar>|r",
2						["Right4"] = "Mace",
2						["Left2"] = "Soulbound",
2						["Left6"] = "(186.5 damage per second)",
2						["Left11"] = "Requires Level 80",
2						["Left10"] = "Durability 119 / 120",
2						["Left9"] = "+85 Attack Power",
2						["NumLines"] = 14,
2						["Left8"] = "+105 Stamina",
2					},
2					["Slot"] = "MainHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-MainHand.blp",
2				},
2				["RangedSlot"] = {
2					["Id"] = 18,
2					["Tooltip"] = {
2						["Left1"] = "Venture Co. Libram of Retribution",
2						["Left2"] = "Soulbound",
2						["Left6"] = "Equip: Causes your Divine Storm to deal an additional 81 damage.",
2						["Right4"] = "Libram",
2						["Left3"] = "Unique",
2						["Left4"] = "Relic",
2						["NumLines"] = 6,
2						["Left5"] = "Requires Level 74",
2					},
2					["Slot"] = "RangedSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Ranged.blp",
2				},
2				["ShirtSlot"] = {
2					["Id"] = 4,
2					["Tooltip"] = {
2						["Left1"] = "Tuxedo Shirt",
2						["Left2"] = "Shirt",
2						["Left3"] = " ",
2						["NumLines"] = 3,
2					},
2					["Slot"] = "ShirtSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shirt.blp",
2				},
2				["SecondaryHandSlot"] = {
2					["Id"] = 17,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "SecondaryHandSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-SecondaryHand.blp",
2				},
2				["Finger0Slot"] = {
2					["Id"] = 11,
2					["Tooltip"] = {
2						["Left1"] = "Ring of Scarlet Shadows",
2						["Left2"] = "Soulbound",
2						["Left5"] = "|cffffffff+16 Strength|r",
2						["Left12"] = " ",
2						["Left7"] = "Requires Level 78",
2						["Left10"] = "Equip: Improves hit rating by 38.",
2						["Left9"] = "Equip: Improves critical strike rating by 31.",
2						["Left4"] = "Finger",
2						["Left11"] = "<Shift Right Click to Socket>",
2						["Left3"] = "Unique-Equipped",
2						["Left6"] = "Socket Bonus: +8 Attack Power",
2						["NumLines"] = 12,
2						["Left8"] = "Equip: Increases attack power by 60.",
2					},
2					["Slot"] = "Finger0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Finger.blp",
2				},
2				["ShoulderSlot"] = {
2					["Id"] = 3,
2					["Tooltip"] = {
2						["NumLines"] = 0,
2					},
2					["Slot"] = "ShoulderSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Shoulder.blp",
2				},
2				["WaistSlot"] = {
2					["Id"] = 6,
2					["Tooltip"] = {
2						["Left9"] = "|cff00ff00<Made by Campino>|r",
2						["Left1"] = "Azure Silk Belt",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+5 Intellect",
2						["Left6"] = "Durability 25 / 25",
2						["Left7"] = "Requires Level 30",
2						["Left10"] = " ",
2						["Right3"] = "Cloth",
2						["Left3"] = "Waist",
2						["Left4"] = "26 Armor",
2						["NumLines"] = 10,
2						["Left8"] = "Equip: Increases swim speed by 15%.",
2					},
2					["Slot"] = "WaistSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Waist.blp",
2				},
2				["Bag0Slot"] = {
2					["Id"] = 20,
2					["Tooltip"] = {
2						["Left1"] = "\"Gigantique\" Bag",
2						["Left2"] = "Soulbound",
2						["Left3"] = "22 Slot Bag",
2						["NumLines"] = 4,
2						["Left4"] = " ",
2					},
2					["Slot"] = "Bag0Slot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Bag.blp",
2				},
2				["NeckSlot"] = {
2					["Id"] = 2,
2					["Tooltip"] = {
2						["Left1"] = "Shattered Sun Pendant of Might",
2						["Left2"] = "Soulbound",
2						["Left5"] = "+19 Stamina",
2						["Left7"] = "Requires Shattered Sun Offensive - Exalted",
2						["Left10"] = " ",
2						["Left9"] = "Equip: Your melee and ranged attacks have a chance to call on the power of the Arcane if you're exalted with the Scryers, or the Light if you're exalted with the Aldor.",
2						["Left4"] = "+18 Agility",
2						["Left3"] = "Neck",
2						["Left6"] = "Requires Level 70",
2						["NumLines"] = 10,
2						["Left8"] = "Equip: Increases attack power by 64.",
2					},
2					["Slot"] = "NeckSlot",
2					["Texture"] = "interface\\paperdoll\\UI-PaperDoll-Slot-Neck.blp",
2				},
2			},
2		},
2		["CurrentMapZone"] = 3,
2		["Zone"] = "Dalaran",
2		["PowaPlayerListe"] = {
2			"Page 1", -- [1]
2			"Page 2", -- [2]
2			"Page 3", -- [3]
2			"Page 4", -- [4]
0			"Page 5", -- [5]
2		},
2		["Bags"] = {
2			{
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44894:0:3489:0:0:0:0:0:80|h[Titan-Forged Greaves of Salvation]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Boots_Plate_08",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:43570:0:0:0:0:0:0:1340230938:80|h[Endless Mana Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Alchemy_EndlessFlask_04",
2				}, -- [2]
0				{
2					["Count"] = 16,
2					["Name"] = "|cffffffff|Hitem:43012:0:0:0:0:0:0:-1759526528:80|h[Rhino Meat]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_119_RhinoMeat",
2				}, -- [3]
0				{
2					["Count"] = 6,
2					["Name"] = "|cffffffff|Hitem:34768:0:0:0:0:0:0:826668800:80|h[Spicy Blue Nettlefish]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_139_Fish",
2				}, -- [4]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:40971:0:0:0:0:0:0:608659192:80|h[Brann's Communicator]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_EngGizmos_08",
2				}, -- [5]
0				{
2					["Count"] = 5,
2					["Name"] = "|cffffffff|Hitem:40077:0:0:0:0:0:0:1518855040:80|h[Crazy Alchemist's Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_27",
0				}, -- [6]
2				nil, -- [7]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:41609:3831:0:0:0:0:0:1820025472:80|h[Wispcloak]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Cape_02",
2				}, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40705:0:0:0:0:0:0:0:80|h[Libram of Renewal]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Relics_LibramofGrace",
2				}, -- [9]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44283:0:0:0:0:0:0:0:80|h[Signet of Hopeful Light]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_70",
2				}, -- [10]
0				{
2					["Count"] = 45,
2					["Name"] = "|cffffffff|Hitem:43007:0:0:0:0:0:0:-1704917910:80|h[Northern Spices]|h|r",
2					["Texture"] = "Interface\\Icons\\Inv_Misc_ammo_Gunpowder_05",
2				}, -- [11]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:28065:0:0:0:0:0:0:1947039243:80|h[Libram of Wracking]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Relics_LibramofTruth",
2				}, -- [12]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40879:0:3464:3446:0:0:0:0:80|h[Deadly Gladiator's Girdle of Triumph]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Belt_14",
2				}, -- [13]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44322:0:0:0:0:0:0:1391430016:80|h[Mercurial Alchemist Stone]|h|r",
2					["Texture"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2				}, -- [14]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:33820:0:0:0:0:0:0:195434847:80|h[Weather-Beaten Fishing Hat]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Helmet_31",
0				}, -- [15]
2				[18] = {
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:42647:0:3486:0:0:0:0:739228800:80|h[Titanium Spellshock Necklace]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Necklace_35",
2				},
2				[19] = {
2					["Count"] = 19,
2					["Name"] = "|cffffffff|Hitem:44228:0:0:0:0:0:0:-755520705:80|h[Baby Spice]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Powder_Green",
2				},
2				[20] = {
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44296:3820:3627:3510:0:0:0:0:80|h[Helm of Purified Thoughts]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Helmet_20",
2				},
2				[21] = {
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:25644:0:0:0:0:0:0:1035988531:80|h[Blessed Book of Nagrand]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Relics_LibramofHope",
2				},
2				["Slots"] = 22,
2			}, -- [1]
2			{
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:6948:0:0:0:0:0:0:897347328:80|h[Hearthstone]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Rune_01",
2				}, -- [1]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44043:0:3486:0:0:0:0:1419028736:80|h[Girdle of Eternal Memory]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Belt_27",
2				}, -- [2]
0				{
2					["Count"] = 5,
2					["Name"] = "|cffffffff|Hitem:31841:0:0:0:0:0:0:0:80|h[Major Combat Mana Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_82",
2				}, -- [3]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:42545:0:0:0:0:0:0:219947232:80|h[Runic Mana Injector]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Gizmo_RunicManaInjector",
2				}, -- [4]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:32538:0:0:0:0:0:0:0:80|h[Skywitch's Drape]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Cape_05",
2				}, -- [5]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:42055:0:0:0:0:0:0:0:80|h[Hateful Gladiator's Cloak of Dominance]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Cape_19",
2				}, -- [6]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44901:3797:3802:3466:0:0:0:0:80|h[Titan-Forged Plate Headcover of Salvation]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Helmet_134",
2				}, -- [7]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:20748:0:0:0:0:0:0:1376772824:80|h[Brilliant Mana Oil]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_100",
2				}, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:34498:0:0:0:0:0:0:0:80|h[Paper Zeppelin Kit]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Toy_05",
2				}, -- [9]
0				{
2					["Count"] = 250,
2					["Name"] = "|cffffffff|Hitem:43089:0:0:0:0:0:0:545875392:80|h[Vrykul Bones]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Bone_01",
2				}, -- [10]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:43135:0:0:0:0:0:0:845991104:80|h[Fate Rune of Fleet Feet]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Rune_08",
2				}, -- [11]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40925:2934:3454:0:0:0:0:0:80|h[Hateful Gladiator's Ornamented Gloves]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_GAUNTLETS_62",
2				}, -- [12]
0				{
2					["Count"] = 4,
2					["Name"] = "|cffffffff|Hitem:36782:0:0:0:0:0:0:1340806400:80|h[Succulent Clam Meat]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_126_ClamMeat",
2				}, -- [13]
0				{
2					["Count"] = 11,
2					["Name"] = "|cffffffff|Hitem:21537:0:0:0:0:0:0:1430685874:80|h[Festival Dumplings]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_DimSum",
2				}, -- [14]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40187:3826:3486:0:0:0:0:-2084997888:80|h[Poignant Sabatons]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Boots_Plate_03",
0				}, -- [15]
2				[17] = {
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:45167:3252:3473:0:0:0:0:923829376:80|h[Lifeforge Breastplate]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Chest_Plate19",
2				},
2				[18] = {
2					["Count"] = 97,
2					["Name"] = "|cffffffff|Hitem:42780:0:0:0:0:0:0:-2092070400:80|h[Relic of Ulduar]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Rune_14",
2				},
2				[20] = {
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:38623:0:0:0:0:0:0:1115095424:80|h[Jaloot's Favorite Crystal]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Gem_Diamond_05",
2				},
2				[21] = {
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44176:0:3486:3448:0:0:0:0:80|h[Girdle of the Warrior Magi]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Belt_34",
2				},
2				["Slots"] = 22,
2			}, -- [2]
2			{
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:37650:3721:3448:0:0:0:0:1375066240:80|h[Shardling Legguards]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Pants_Plate_20",
2				}, -- [1]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:44114:0:0:0:0:0:0:2082001878:80|h[Old Spices]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Powder_Purple",
2				}, -- [2]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:32023:2746:0:0:0:0:0:0:80|h[Merciless Gladiator's Ornamented Legplates]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Pants_Plate_17",
2				}, -- [3]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40961:3806:3458:0:0:0:0:0:80|h[Hateful Gladiator's Ornamented Spaulders]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_SHOULDER_62",
2				}, -- [4]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44013:0:0:0:0:0:0:347083872:80|h[Cannoneer's Fuselighter]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Gizmo_ElementalBlastingPowder",
2				}, -- [5]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:46057:0:0:0:0:0:0:0:80|h[Titan-Forged Chestguard of Salvation]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Chest_Plate_25",
2				}, -- [6]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:45680:2326:0:0:0:0:0:1669604096:80|h[Armbands of the Construct]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Bracer_29",
2				}, -- [7]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:17904:0:0:0:0:0:0:1239379516:80|h[Stormpike Insignia Rank 6]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_StormPikeTrinket_05",
2				}, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:37835:0:0:0:0:0:0:-1921367680:80|h[Je'Tze's Bell]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Bell_01",
2				}, -- [9]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44313:1128:0:0:0:0:0:-1759582592:80|h[Zom's Crackling Bulwark]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Shield_34",
2				}, -- [10]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:46087:0:0:0:0:0:0:0:80|h[Platinum Disks of Sorcery]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Platnumdisks",
0				}, -- [11]
2				nil, -- [12]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44352:0:0:0:0:0:0:1427372416:80|h[Shoulderplates of the Abolished]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Shoulder_92",
2				}, -- [13]
0				{
2					["Count"] = 9,
2					["Name"] = "|cffffffff|Hitem:8827:0:0:0:0:0:0:-587203413:80|h[Elixir of Water Walking]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_166",
2				}, -- [14]
0				{
2					["Count"] = 5,
2					["Name"] = "|cffffffff|Hitem:33447:0:0:0:0:0:0:1053995328:80|h[Runic Healing Potion]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Alchemy_Elixir_05",
2				}, -- [15]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44058:0:0:0:0:0:0:0:80|h[Whalebone Carapace]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Chest_Plate05",
2				}, -- [16]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff1eff00|Hitem:39449:0:0:0:0:0:0:2117228696:80|h[Wristguards of Titanic Vengeance]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Bracer_17",
2				}, -- [17]
0				{
2					["Count"] = 5,
2					["Name"] = "|cffffffff|Hitem:17033:0:0:0:0:0:0:0:80|h[Symbol of Divinity]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Stone_WeightStone_05",
2				}, -- [18]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:40802:1603:3446:0:0:0:0:0:80|h[Hateful Gladiator's Scaled Gauntlets]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_GAUNTLETS_62",
2				}, -- [19]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:18256:0:0:0:0:0:0:0:80|h[Imbued Vial]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Alchemy_ImbuedVial",
2				}, -- [20]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:42644:0:3486:0:0:0:0:194831520:80|h[Titanium Spellshock Ring]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Jewelry_Ring_63",
2				}, -- [21]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:43156:0:0:0:0:0:0:0:80|h[Tabard of the Wyrmrest Accord]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Shirt_GuildTabard_01",
0				}, -- [22]
2				["Slots"] = 22,
2			}, -- [3]
2			{
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:36903:0:0:0:0:0:0:1883774592:80|h[Adder's Tongue]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_EvergreenMoss",
2				}, -- [1]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36905:0:0:0:0:0:0:379460216:80|h[Lichbloom]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Whispervine",
2				}, -- [2]
0				{
2					["Count"] = 16,
2					["Name"] = "|cff1eff00|Hitem:35625:0:0:0:0:0:0:1705401728:80|h[Eternal Life]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Elemental_Eternal_Life",
2				}, -- [3]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36901:0:0:0:0:0:0:746845792:80|h[Goldclover]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_GoldClover",
2				}, -- [4]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36906:0:0:0:0:0:0:-1921058304:80|h[Icethorn]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_IceThorn",
2				}, -- [5]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36905:0:0:0:0:0:0:455927552:80|h[Lichbloom]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Whispervine",
2				}, -- [6]
0				{
2					["Count"] = 11,
2					["Name"] = "|cffffffff|Hitem:37921:0:0:0:0:0:0:2139956480:80|h[Deadnettle]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_ConstrictorGrass",
2				}, -- [7]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36906:0:0:0:0:0:0:319523172:80|h[Icethorn]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_IceThorn",
2				}, -- [8]
0				{
2					["Count"] = 14,
2					["Name"] = "|cffffffff|Hitem:36906:0:0:0:0:0:0:324653704:80|h[Icethorn]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_IceThorn",
2				}, -- [9]
0				{
2					["Count"] = 9,
2					["Name"] = "|cffffffff|Hitem:36907:0:0:0:0:0:0:1430867584:80|h[Talandra's Rose]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_TalandrasRose",
2				}, -- [10]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36906:0:0:0:0:0:0:439672240:80|h[Icethorn]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_IceThorn",
2				}, -- [11]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36901:0:0:0:0:0:0:563410432:80|h[Goldclover]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_GoldClover",
2				}, -- [12]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:37704:0:0:0:0:0:0:-1634626304:80|h[Crystallized Life]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Elemental_Crystal_Life",
2				}, -- [13]
0				{
2					["Count"] = 12,
2					["Name"] = "|cffffffff|Hitem:36905:0:0:0:0:0:0:1748979328:80|h[Lichbloom]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Whispervine",
0				}, -- [14]
2				[17] = {
2					["Count"] = 2,
2					["Name"] = "|cffffffff|Hitem:22795:0:0:0:0:0:0:-1905635298:80|h[Fel Blossom]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Felblossom",
2				},
2				[25] = {
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36903:0:0:0:0:0:0:394037536:80|h[Adder's Tongue]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_EvergreenMoss",
2				},
2				["Slots"] = 28,
2				[22] = {
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:36905:0:0:0:0:0:0:1453444864:80|h[Lichbloom]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Whispervine",
2				},
2			}, -- [4]
2			[0] = {
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:41384:2666:0:0:0:0:0:1700329728:80|h[Titansteel Guardian]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Mace_87",
2				}, -- [1]
0				{
2					["Count"] = 13,
2					["Name"] = "|cff1eff00|Hitem:23123:0:0:0:0:0:0:950479674:80|h[Blessed Wizard Oil]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Potion_26",
2				}, -- [2]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffffffff|Hitem:39878:0:0:0:0:0:0:0:80|h[Mysterious Egg]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Egg_02",
2				}, -- [3]
0				{
2					["Count"] = 3,
2					["Name"] = "|cffffffff|Hitem:34722:0:0:0:0:0:0:1348672768:80|h[Heavy Frostweave Bandage]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Bandage_Frostweave_Heavy",
2				}, -- [4]
0				{
2					["Count"] = 9,
2					["Name"] = "|cffffffff|Hitem:19996:0:0:0:0:0:0:-1959073624:80|h[Harvest Fish]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Fish_19",
2				}, -- [5]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:44050:3269:0:0:0:0:0:0:80|h[Mastercraft Kalu'ak Fishing Pole]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Fishingpole_03",
0				}, -- [6]
2				nil, -- [7]
0				{
2					["Count"] = 100,
2					["Name"] = "|cffffffff|Hitem:21177:0:0:0:0:0:0:0:80|h[Symbol of Kings]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_SymbolofKings_01",
2				}, -- [8]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:36871:0:0:0:0:0:0:1392328407:80|h[Fury of the Encroaching Storm]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_DataCrystal06",
2				}, -- [9]
0				{
2					["Count"] = 10,
2					["Name"] = "|cffffffff|Hitem:21177:0:0:0:0:0:0:0:80|h[Symbol of Kings]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_SymbolofKings_01",
2				}, -- [10]
0				{
2					["Count"] = 2,
2					["Name"] = "|cffffffff|Hitem:43089:0:0:0:0:0:0:771272000:80|h[Vrykul Bones]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Bone_01",
2				}, -- [11]
0				{
2					["Count"] = 20,
2					["Name"] = "|cffffffff|Hitem:21537:0:0:0:0:0:0:1814398253:80|h[Festival Dumplings]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_DimSum",
0				}, -- [12]
2				nil, -- [13]
0				{
2					["Count"] = 8,
2					["Name"] = "|cffffffff|Hitem:34766:0:0:0:0:0:0:1405439616:80|h[Poached Northern Sculpin]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Misc_Food_77",
2				}, -- [14]
0				{
2					["Count"] = 1,
2					["Name"] = "|cffa335ee|Hitem:28356:0:0:0:0:0:0:0:80|h[Gladiator's Libram of Justice]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Relics_LibramofHope",
2				}, -- [15]
0				{
2					["Count"] = 1,
2					["Name"] = "|cff0070dd|Hitem:44412:0:0:0:0:0:0:837796928:80|h[Faceguard of Punishment]|h|r",
2					["Texture"] = "Interface\\Icons\\INV_Helmet_130",
0				}, -- [16]
2				["Slots"] = 16,
2			},
2		},
2		["BuildInfo"] = {
2			["BuildNum"] = "10192",
2			["BuildDate"] = "Jul 31 2009",
2			["Version"] = "3.2.0",
2		},
2		["PowaGlobalListe"] = {
2			"Global 1", -- [1]
2			"Global 2", -- [2]
2			"Global 3", -- [3]
2			"Global 4", -- [4]
2			"Global 5", -- [5]
2			"Global 6", -- [6]
2			"Global 7", -- [7]
2			"Global 8", -- [8]
2			"Global 9", -- [9]
0			"Global 10", -- [10]
2		},
2		["Locale"] = "enUS",
2		["ActiveTalentGroup"] = 2,
2		["Time"] = 13727.384,
2		["CurrentMapContinent"] = 4,
2		["target"] = {
2			["Visible"] = 1,
2			["FactionGroup"] = "Horde",
2			["Mana"] = 3561,
2			["Enemy"] = 1,
2			["HealthMax"] = 10635,
2			["CastingInfo"] = {
2			},
2			["Damage"] = 0,
2			["Classification"] = "normal",
2			["Power"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				0, -- [5]
2				0, -- [6]
2				["Default"] = 3561,
2				[0] = 3561,
2			},
2			["RangedAttackPower"] = 0,
2			["InteractDistance"] = {
2			},
2			["PowerType"] = 0,
2			["Health"] = 10635,
2			["ChannelInfo"] = {
2			},
2			["PowerTypeString"] = "MANA",
2			["XPMax"] = 0,
2			["LocClass"] = "Warp-Huntress Kula",
2			["Stats"] = {
0				{
2					["Type"] = "Strength",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Agility",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [2]
0				{
2					["Type"] = "Stamina",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [3]
0				{
2					["Type"] = "Intellect",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
2				}, -- [4]
0				{
2					["Type"] = "Spirit",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 0,
2					["Stat"] = 0,
0				}, -- [5]
2			},
2			["AttackSpeed"] = 2.000000094994903,
2			["Class"] = "PALADIN",
2			["RangedAttack"] = 0,
2			["ManaMax"] = 3561,
2			["PVPRank"] = 0,
2			["RangedDamage"] = 0,
2			["PVPName"] = "Warp-Huntress Kula",
2			["Armor"] = 0,
2			["Level"] = 75,
2			["XP"] = 0,
2			["RuneType"] = {
2				1, -- [1]
2				1, -- [2]
2				2, -- [3]
2				2, -- [4]
2				3, -- [5]
0				3, -- [6]
2			},
2			["AttackPower"] = 0,
2			["Defense"] = 0,
2			["RuneCooldown"] = {
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [1]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [2]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [3]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [4]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [5]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
0				}, -- [6]
2			},
2			["UnitHasVehicleUI"] = false,
2			["Debuffs"] = {
2			},
2			["Tooltip"] = {
2				["Left1"] = "Warp-Huntress Kula",
2				["NumLines"] = 2,
2				["Left2"] = "Level 75 Humanoid",
2			},
2			["Connected"] = 1,
2			["Unit"] = "target",
2			["AttackBothHands"] = 0,
2			["PowerMax"] = {
2				0, -- [1]
2				100, -- [2]
2				100, -- [3]
2				1000, -- [4]
2				0, -- [5]
2				0, -- [6]
2				["Default"] = 3561,
2				[0] = 3561,
2			},
2			["Name"] = "Warp-Huntress Kula",
2			["Sex"] = 3,
2			["CreatureType"] = "Humanoid",
2			["Buffs"] = {
2			},
2			["Resistances"] = {
0				{
2					["Type"] = "Holy",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Fire",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [2]
0				{
2					["Type"] = "Nature",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [3]
0				{
2					["Type"] = "Frost",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [4]
0				{
2					["Type"] = "Shadow",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [5]
0				{
2					["Type"] = "Arcane",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
0				}, -- [6]
2				[0] = {
2					["Type"] = "Physical",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				},
2			},
2			["Pos"] = {
2				["Y"] = 0,
2				["X"] = 0,
2			},
2		},
2		["PowaGlobal"] = {
2			["maxtextures"] = 50,
2		},
2		["ComboPoints"] = {
2			["vehicle"] = 0,
2			["player"] = 0,
2		},
2		["Realm"] = "Shadowsong",
2		["PartyLeaderIndex"] = 0,
2		["PowaGlobalSet"] = {
2		},
2		["Powa"] = {
2			["MoveEffect"] = 0,
2			["Frames"] = {
2				[0] = {
2					[0] = nil --[[ skipped userdata ]],
2					["baseH"] = 256,
2					["baseL"] = 256,
2					["texture"] = {
2						[0] = nil --[[ skipped userdata ]],
2					},
2				},
2			},
2			["WeAreInCombat"] = false,
2			["WeAreInVehicle"] = false,
2			["DebuffCatSpells"] = {
2				["Silenced - Gag Order"] = 2,
2				["Detonate Mana"] = 6,
2				["Blade Twisting"] = 3,
2				["Froststorm Breath"] = 3,
2				["Polymorph"] = 1,
2				["Hammer of Justice"] = 1,
2				["Frostbite"] = 4,
2				["Cone of Cold"] = 3,
2				["Bash"] = 1,
2				["Freeze"] = 4,
2				["Feral Charge Effect"] = 4,
2				["Frostweave Net"] = 4,
2				["Blind"] = 1,
2				["Piercing Howl"] = 3,
2				["Curse of Exhaustion"] = 3,
2				["Mind Flay"] = 3,
2				["Silenced - Shield of the Templar"] = 2,
2				["Impact"] = 1,
2				["Psychic Scream"] = 1,
2				["Gravity Bomb"] = 6,
2				["Mark of the Faceless"] = 6,
2				["Net-o-Matic"] = 4,
2				["Frost Nova"] = 4,
2				["Mutating Injection"] = 6,
2				["Desecration"] = 3,
2				["Cyclone"] = 1,
2				["Glyph of Heart Strike"] = 3,
2				["Typhoon"] = 3,
2				["Shackle Undead"] = 1,
2				["Chimera Shot - Scorpid"] = 5,
2				["Disarm"] = 5,
2				["Nature's Fury"] = 6,
2				["Shadowfury"] = 1,
2				["Gouge"] = 1,
2				["Scatter Shot"] = 1,
2				["Chains of Ice"] = 3,
2				["Hamstring"] = 3,
2				["Frost Grenade"] = 4,
2				["Silenced - Improved Kick"] = 2,
2				["Slow"] = 3,
2				["Ravage"] = 1,
2				["Improved Fire Nova Totem"] = 1,
2				["Hex"] = 1,
2				["Adamantite Grenade"] = 1,
2				["Howl of Terror"] = 1,
2				["Stoneclaw Stun"] = 1,
2				["Positive Charge"] = 6,
2				["Maim"] = 1,
2				["Concussive Barrage"] = 3,
2				["Intimidation"] = 1,
2				["Chilled"] = 3,
2				["Venom Web Spray"] = 4,
2				["Sap"] = 1,
2				["Spell Lock"] = 2,
2				["Judgement of Justice"] = 3,
2				["Dragon's Breath"] = 1,
2				["Wing Clip"] = 3,
2				["Improved Hamstring"] = 4,
2				["Strangulate"] = 2,
2				["Fear"] = 1,
2				["Negative Charge"] = 6,
2				["Silence"] = 2,
2				["Death Coil"] = 1,
2				["Fiery Payback"] = 5,
2				["Web"] = 4,
2				["Earthbind"] = 3,
2				["Silencing Shot"] = 2,
2				["Shockwave"] = 1,
2				["Deadly Throw"] = 3,
2				["Dazed"] = 3,
2				["Stun"] = 1,
2				["Charge Stun"] = 1,
2				["Pounce"] = 1,
2				["Infected Wounds"] = 3,
2				["Fel Iron Bomb"] = 1,
2				["Holy Wrath"] = 1,
2				["Freezing Trap Effect"] = 1,
2				["Counterattack"] = 4,
2				["Concussive Shot"] = 3,
2				["Frost Shock"] = 3,
2				["Glyph of Freezing Trap"] = 3,
2				["Seduction"] = 1,
2				["Entrapment"] = 4,
2				["Arcane Torrent"] = 2,
2				["Searing Light"] = 6,
2				["Blast Wave"] = 3,
2				["Gnaw"] = 1,
2				["Pin"] = 4,
2				["War Stomp"] = 1,
2				["Banish"] = 1,
2				["Garrote - Silence"] = 2,
2				["Intimidating Shout"] = 1,
2				["Concussion Blow"] = 1,
2				["Revenge Stun"] = 1,
2				["Hibernate"] = 1,
2				["Frostbolt"] = 3,
2				["Crippling Poison"] = 3,
2				["Shattered Barrier"] = 4,
2				["Dismantle"] = 5,
2				["Glyph of Hamstring"] = 4,
2				["Entangling Roots"] = 4,
2				["Deep Freeze"] = 1,
2				["Frostfire Bolt"] = 3,
2				["Kidney Shot"] = 1,
2				["Psychic Horror"] = 1,
2				["Cheap Shot"] = 1,
2				["Frost Trap Aura"] = 3,
2				["Turn Evil"] = 1,
2				["Frostbrand Attack"] = 3,
2				["Icy Clutch"] = 3,
2				["Wyvern Sting"] = 1,
2				["Snatch"] = 5,
2				["Earthgrab"] = 4,
2				["Intercept"] = 1,
2				["Tendon Rip"] = 3,
2				["Mind Control"] = 1,
2				["Silenced - Improved Counterspell"] = 2,
2				["Hungering Cold"] = 1,
2				["Aftermath"] = 3,
2				["Scare Beast"] = 1,
2				["Sonic Blast"] = 1,
2				["Repentance"] = 1,
2			},
2			["DebuffSpells"] = {
2			},
2			["Anim"] = {
2				"Static", -- [1]
2				"Flashing", -- [2]
2				"Growing", -- [3]
2				"Pulse", -- [4]
2				"Bubble", -- [5]
2				"Water drop", -- [6]
2				"Electric", -- [7]
2				"Shrinking", -- [8]
2				"Flame", -- [9]
2				"Orbit", -- [10]
2				[0] = "[Invisible]",
2			},
2			["Tstep"] = 0.09765625,
2			["ModTest"] = false,
2			["playerclass"] = "PALADIN",
2			["DoCheck"] = {
2				["Mounted"] = false,
2				["Combo"] = false,
2				["Mana"] = false,
2				["RaidBuffs"] = false,
2				["RageEnergy"] = false,
2				["NamedUnitHealth"] = false,
2				["RaidAggro"] = false,
2				["GroupOrSelfBuffs"] = false,
2				["TargetRageEnergy"] = false,
2				["RaidPvP"] = false,
2				["Aggro"] = false,
2				["Spells"] = false,
2				["UnitBuffs"] = false,
2				["PartyPvP"] = false,
2				["Health"] = false,
2				["PartyAggro"] = false,
2				["FocusRageEnergy"] = false,
2				["Stance"] = false,
2				["TargetPvP"] = false,
2				["PartyBuffs"] = false,
2				["PartyHealth"] = false,
2				["FocusBuffs"] = false,
2				["InVehicle"] = false,
2				["TargetMana"] = false,
2				["TargetHealth"] = false,
2				["Actions"] = false,
2				["RaidRageEnergy"] = false,
2				["Aoe"] = false,
2				["Others"] = true,
2				["TargetSpells"] = false,
2				["NamedUnitMana"] = false,
2				["FocusSpells"] = false,
2				["FocusMana"] = false,
2				["RaidHealth"] = false,
2				["TargetBuffs"] = false,
2				["PartyMana"] = false,
2				["FocusHealth"] = false,
2				["UnitRageEnergy"] = false,
2				["Enchants"] = false,
2				["PvP"] = false,
2				["Buffs"] = false,
2				["PartyRageEnergy"] = false,
2				["RaidMana"] = false,
2			},
2			["AuraHide"] = false,
2			["DefaultOperator"] = ">=",
2			["PowaStance"] = {
2				"Devotion Aura", -- [1]
2				"Retribution Aura", -- [2]
2				"Concentration Aura", -- [3]
2				"Shadow Resistance Aura", -- [4]
2				"Frost Resistance Aura", -- [5]
2				"Fire Resistance Aura", -- [6]
2				"Crusader Aura", -- [7]
2				[0] = "Humanoid",
2			},
2			["WeAreAlive"] = true,
2			["Fonts"] = {
2				"Fonts\\FRIZQT__.TTF", -- [1]
2				"Fonts\\ARIALN.TTF", -- [2]
2				"Fonts\\skurri.ttf", -- [3]
2				"Fonts\\MORPHEUS.ttf", -- [4]
2				"Interface\\Addons\\PowerAuras\\Fonts\\All_Star_Resort.ttf", -- [5]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army.ttf", -- [6]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army_Condensed.ttf", -- [7]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Army_Expanded.ttf", -- [8]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Blazed.ttf", -- [9]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Blox2.ttf", -- [10]
2				"Interface\\Addons\\PowerAuras\\Fonts\\CloisterBlack.ttf", -- [11]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Moonstar.ttf", -- [12]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Neon.ttf", -- [13]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Pulse_virgin.ttf", -- [14]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Punk_s_not_dead.ttf", -- [15]
2				"Interface\\Addons\\PowerAuras\\Fonts\\whoa!.ttf", -- [16]
2				"Interface\\Addons\\PowerAuras\\Fonts\\Hexagon.ttf", -- [17]
0				"Interface\\Addons\\PowerAuras\\Fonts\\Starcraft_Normal.ttf", -- [18]
2			},
2			["Events"] = {
2				"PLAYER_ENTERING_WORLD", -- [1]
2				"PLAYER_TARGET_CHANGED", -- [2]
2				"PLAYER_FOCUS_CHANGED", -- [3]
2				"PLAYER_REGEN_DISABLED", -- [4]
2				"PLAYER_REGEN_ENABLED", -- [5]
2				"PLAYER_DEAD", -- [6]
2				"PLAYER_ALIVE", -- [7]
2				"PLAYER_UNGHOST", -- [8]
2				"PLAYER_UPDATE_RESTING", -- [9]
2				"UNIT_HEALTH", -- [10]
2				"UNIT_MAXHEALTH", -- [11]
2				"UNIT_MANA", -- [12]
2				"UNIT_MAXMANA", -- [13]
2				"UNIT_RAGE", -- [14]
2				"UNIT_ENERGY", -- [15]
2				"UNIT_MAXENERGY", -- [16]
2				"UNIT_COMBO_POINTS", -- [17]
2				"UNIT_RUNIC_POWER", -- [18]
2				"UNIT_MAXRUNIC_POWER", -- [19]
2				"UNIT_AURA", -- [20]
2				"UNIT_AURASTATE", -- [21]
2				"UNIT_FACTION", -- [22]
2				"UNIT_ENTERED_VEHICLE", -- [23]
2				"UNIT_EXITED_VEHICLE", -- [24]
2				"UNIT_SPELLCAST_START", -- [25]
2				"UNIT_SPELLCAST_STOP", -- [26]
2				"UNIT_SPELLCAST_FAILED", -- [27]
2				"UNIT_SPELLCAST_INTERRUPTED", -- [28]
2				"UNIT_SPELLCAST_DELAYED", -- [29]
2				"UNIT_SPELLCAST_CHANNEL_START", -- [30]
2				"UNIT_SPELLCAST_CHANNEL_UPDATE", -- [31]
2				"UNIT_SPELLCAST_CHANNEL_STOP", -- [32]
2				"UNIT_SPELLCAST_SUCCEEDED", -- [33]
2				"PARTY_MEMBERS_CHANGED", -- [34]
2				"RAID_ROSTER_UPDATE", -- [35]
2				"COMBAT_LOG_EVENT_UNFILTERED", -- [36]
2				"UPDATE_SHAPESHIFT_FORM", -- [37]
2				"ACTIONBAR_UPDATE_USABLE", -- [38]
2				"ACTIONBAR_UPDATE_COOLDOWN", -- [39]
2				"ACTIONBAR_SLOT_CHANGED", -- [40]
2				"UPDATE_SHAPESHIFT_FORMS", -- [41]
2				"VARIABLES_LOADED", -- [42]
0				"PLAYER_TALENT_UPDATE", -- [43]
2			},
2			["Colors"] = {
2				["Red"] = "|cffff2020",
2				["BGrey"] = "|c00D0D0D0",
2				["Blue"] = "|cff6666ff",
2				["Green"] = "|cff66cc33",
2				["Grey"] = "|cff999999",
2				["Yellow"] = "|cffffff40",
2				["Orange"] = "|cffff9930",
2				["White"] = "|c00FFFFFF",
2			},
2			["Text"] = {
2				["aideMultiID"] = "Enter here other Aura IDs to combine checks. Multiple IDs must be separated with '/'. Aura ID can be found as [#] on first line of Aura tooltip.",
2				["aideCustomTextures"] = "Check this to use textures in the 'Custom' subdirectory. Put the name of the texture below (ex: myTexture.tga). You can also use a Spell Name (ex: Feign Death) or SpellID (ex: 5384).",
2				["aideExport"] = "Press Ctrl-C to copy the Aura-string for sharing.",
2				["nomCheckInverse"] = "Invert",
2				["nomCheckFocus"] = "Focus",
2				["nomTest"] = "Test",
2				["aideShowTimer"] = "Check this to show the timer of this effect.",
2				["nomTalentGroup2"] = "Spec 2",
2				["nomRandomColor"] = "Random Colors",
2				["aideBuff5"] = "Enter here the temporary enchant which must activate this effect : optionally prepend it with 'main/' or 'off/ to designate mainhand or offhand slot. (ex: main/crippling)",
2				["aideRename"] = "Rename the selected effect's page.",
2				["aideBuff6"] = "You can entrer here the numbers of combo points that must activate this effect (ex : 1 or 123 or 045 etc...) ",
2				["nomThreshold"] = "Threshold",
2				["nomDebug"] = "Activate Debug Messages",
2				["nomDuration"] = "Anim. duration",
2				["nomIsInRaid"] = "Only if in Raid",
2				["nomStance"] = "Stance",
2				["nomRename"] = "Rename",
2				["nomWowTextures"] = "WoW Textures",
2				["nomCheckRageEnergy"] = "Rage/Energy/Runic",
2				["nomMove"] = "Move",
2				["ListePlayer"] = "Page",
2				["aideMove"] = "Move the effect here.",
2				["nomCheckAoeDebuff"] = "AOE Debuff",
2				["aideInverse"] = "Invert the logic to show this effect only when buff/debuff is not active.",
2				["nomCheckGroupAny"] = "Any",
2				["aideTimerDuration"] = "Show a timer to simulate buff/debuff duration on the target (0 to deactivate)",
2				["nomAnim1"] = "Main Animation",
2				["nomBegin"] = "Begin Animation",
2				["aideSpells"] = "Enter here the Spell Name that will trigger a spell alert Aura.",
2				["aideGroupAny"] = "Check this to test buff on 'Any' party/raid member. Unchecked: Test that 'All' are buffed.",
2				["nomCheckPvP"] = "PvP",
2				["aideUnitn"] = "Enter here the name of the unit, which must activate/deactivate the effect. You can enter only names, if they are in your raid or group.",
2				["nomCheckBuff"] = "Buff",
2				["nomPos"] = "Position",
2				["aideBuff7"] = "Enter here the name, or a part of the name, of an action in your action bars. The effect will be active when this action is usable.",
2				["aideAnim2"] = "This animation will be shown with less opacity than the main animaton. Attention, to not overload the screen, only a single secondary animation will be shown at the same time.",
2				["aideIsInRaid"] = "Show this effect only when you are in a raid.",
2				["aideSelectTimer"] = "Select which timer will show the duration",
2				["aideEnable"] = "Enable all Power Auras effects",
2				["nomImport"] = "Import",
2				["nomHide"] = "Hide all",
2				["aideCustomSound"] = "Enter a soundfile that is in the Sounds folder, BEFORE you started the game. mp3 and wav are supported. example: 'cookie.mp3' ;)",
2				["aideColor"] = "Click here to change the color of the texture.",
2				["DebuffType"] = {
2					["Curse"] = "Curse",
2					["Poison"] = "Poison",
2					["Magic"] = "Magic",
2					["Disease"] = "Disease",
2				},
2				["aideTextAura"] = "Check this to type text instead of texture.",
2				["aideGroupOrSelf"] = "Check this to test a party or raid member or self.",
2				["aideCopy"] = "Copy the effect here.",
2				["nomCentiemes"] = "Show hundredth",
2				["aideOwnTex"] = "Use the De/Buff or Ability Texture instead.",
2				["nomEdit"] = "Edit",
2				["aideBuff"] = "Enter here the name of the buff, or a part of the name, which must activate/deactivate the effect. You can enter several names if they are decently separated (ex: Super Buff/Power)",
2				["nomCheckTarget"] = "Enemy Target",
2				["nomEffectEditor"] = "Effect Editor",
2				["aideTarget"] = "Check this to test an enemy target only.",
2				["aideNotInCombat"] = "Show this effect only when you are NOT in combat.",
2				["nomCheckCombo"] = "Combo Points",
2				["nomStacks"] = "Stacks",
2				["aideAddEffect"] = "Add an effect for edition.",
2				["aideTooltipCheck"] = "Also check the tooltip starts with this text",
2				["nomTaille"] = "Size",
2				["aideOptunitn"] = "Check this to test a spezial char in raid/group only.",
2				["aideImport"] = "Press Ctrl-V to paste the Aura-string and press 'Accept'",
2				["aucun"] = "None",
2				["aideRaid"] = "Check this to test a raid member only.",
2				["aideThreshInv"] = "Check this to invert the threshold logic. Health/Mana: default = Low Warning / checked = High Warning. Energy/Rage/Power: default = High Warning / checked = Low Warning",
2				["nomCheckDebuffType"] = "Debuff's type",
2				["nomTabActiv"] = "Activation",
2				["nomEnable"] = "Activate Power Auras",
2				["hauteur"] = "Height",
2				["welcome"] = "Type /powa to view the options.",
2				["ListeGlobal"] = "Global",
2				["aideDebug"] = "Enable Debug Messages",
2				["aideFont"] = "Click here to pick Font. Press OK to apply the selection.",
2				["nomCheckGroupOrSelf"] = "Raid/Party or self",
2				["aideInCombat"] = "Show this effect only when you are in combat.",
2				["nomGlobalEffects"] = "Global\neffects",
2				["nomCheckOptunitn"] = "Unitname",
2				["aideMine"] = "Check this to test only buffs/debuffs cast by the player",
2				["aideMaxTex"] = "Define the maximum number of textures available on the Effect Editor. If you add textures on the Mod directory (with the names AURA1.tga to AURA50.tga), you must indicate the correct number here.",
2				["nomGCD"] = "Global Cooldown",
2				["aideUnitn2"] = "Only for raid/group.",
2				["nomTalentGroup1"] = "Spec 1",
2				["nomInVehicle"] = "Only if in Vehicle",
2				["nomNew"] = "New",
2				["nomActivationBy"] = "Activation by :",
2				["nomCheckRaid"] = "Raidmember",
2				["aideWowTextures"] = "Check this to use the texture of WoW instead of textures in the Power Auras directory for this effect.",
2				["nomCheckFriend"] = "Friendly Target",
2				["nomCheckHealth"] = "Health",
2				["DebuffCatType"] = {
2					"Crowd Control", -- [1]
2					"Silence", -- [2]
2					"Snare", -- [3]
2					"Root", -- [4]
2					"Disarm", -- [5]
0					"PvE", -- [6]
2				},
2				["aideIgnoreMaj"] = "Check this to ignore upper/lowercase of buff/debuff names.",
2				["nomCheckSkill"] = "Action Usable",
2				["nomExport"] = "Export",
2				["aideTargetFriend"] = "Check this to test a friendly target only.",
2				["nomIsMounted"] = "Only if Mounted",
2				["nomMine"] = "Cast by me",
2				["nomNotInCombat"] = "Only if not in Combat",
2				["nomCheckSpells"] = "Spell Alert",
2				["aideSelectTimerDebuff"] = "Select which timer will show the duration (this one is reserved for player's debuffs)",
2				["nomTexture"] = "Texture",
2				["aideTexture"] = "The texture to be shown. You can easily replace textures by changing the files Aura#.tga in the Addon's directory.",
2				["aideAnim1"] = "Animate the texture or not, with various effects.",
2				["nomInCombat"] = "Only if in Combat",
2				["aideDeform"] = "Stretch the texture in height or in width.",
2				["aideBuff2"] = "Enter here the name of the debuff, or a part of the name, which must activate/deactivate the effect. You can enter several names if they are decently separated (ex: Dark Disease/Plague)",
2				["nomCopy"] = "Copy",
2				["aideBuff4"] = "Enter here the name of area of effect that must trigger this effect (like a rain of fire for example, the name of this AOE can be found in the combat log)",
2				["aideDel"] = "Remove the selected effect (Hold CTRL to allow this button to work)",
2				["nomAdvOptions"] = "Options",
2				["aideStacks"] = "Enter here the operator and the amount of stacks, which must activate/deactivate the effect. It works only with an operator! ex: '<5' or '>3' or '=11'",
2				["nomEnd"] = "End Animation",
2				["nomMaxTex"] = "Maximum of textures available",
2				["nomCustomSound"] = "OR soundfile:",
2				["aideDuration"] = "After this time, this effect will disapear (0 to deactivate)",
2				["nomSpeed"] = "Animation speed",
2				["nomTimerDuration"] = "Duration",
2				["nomAlpha"] = "Opacity",
2				["nomExact"] = "Exact Name",
2				["nomCheckDebuff"] = "Debuff",
2				["nomSymetrie"] = "Symmetry",
2				["nomCheckIgnoreMaj"] = "Ignore uppercase",
2				["aideStance"] = "Select which Stance,Aura or Form trigger the event.",
2				["largeur"] = "Width",
2				["aideGCD"] = "Check this and the Global Cooldown triggers with 'action usable'. May cause blinking the aura, when an action only has a Global Cooldown.",
2				["aideExact"] = "Check this to test the exact name of the buff/debuff/action.",
2				["nomCheckEnchant"] = "Weapon Enchant",
2				["nomSound"] = "Sound to play",
2				["aideFocus"] = "Check this to test the focus only.",
2				["aideParty"] = "Check this to test a party member only.",
2				["nomDel"] = "Delete",
2				["nomTabTimer"] = "Timer",
2				["aideRealaura"] = "Real Aura",
2				["nomCheckAggro"] = "Aggro",
2				["nomCheckStance"] = "Stance",
2				["nomCheckParty"] = "Partymember",
2				["aucune"] = "None",
2				["aideSound"] = "Plays a sound at the beginning.",
2				["nomAnim2"] = "Secondary Animation",
2				["offHand"] = "off",
2				["nomCheckShowTimer"] = "Show",
2				["nomThreshInv"] = "</>",
2				["aideRandomColor"] = "Check this to tell this effect to use random color each time it will be activated.",
2				["nomTexMode"] = "Glow",
2				["nomCustomTextures"] = "Custom Textures",
2				["nomOwnTex"] = "Use own Texture",
2				["aideTexMode"] = "Uncheck this to use the texture opacity. By default, the darkest colors will be more transparent.",
2				["nomDual"] = "Show 2 timers",
2				["nomPlayerEffects"] = "Character effects",
2				["nomDeform"] = "Deformation",
2				["aideSelectTimerBuff"] = "Select which timer will show the duration (this one is reserved for player's buffs)",
2				["nomCheckMana"] = "Mana",
2				["nomClose"] = "Close",
2				["aideIsMounted"] = "Checked: Only when on mount. Uncheked: Only when dismounted.",
2				["nomTabAnim"] = "Animation",
2				["mainHand"] = "main",
2				["nomTabSound"] = "Sound",
2				["aideEffectTooltip"] = "(Shift-click to toggle effect ON or OFF)",
2				["bothHands"] = "both",
2				["nomTextAura"] = "Text Aura",
2				["aideInVehicle"] = "Checked: Only when in vehicle. Uncheked: Only when not in vehicle.",
2				["aideTalentGroup1"] = "Show this effect only when you are in your primary talent spec.",
2				["aideTalentGroup2"] = "Show this effect only when you are in your secondary talent spec.",
2				["aideBuff3"] = "Enter here the type of the debuff which must activate or deactivate the effect (Poison, Disease, Curse, Magic or None). You can also enter several types of debuff.",
2				["nomRealaura"] = "Real Aura",
2			},
2			["minScale"] = {
2				["a"] = 0,
2				["h"] = 0,
2				["w"] = 0,
2			},
2			["TimerFrame"] = {
2			},
2			["MaxAuras"] = 360,
2			["CurrentSecondeAura"] = 0,
2			["WowTextures"] = {
2				"Spells\\AuraRune_B", -- [1]
2				"Spells\\AuraRune256b", -- [2]
2				"Spells\\Circle", -- [3]
2				"Spells\\GENERICGLOW2B", -- [4]
2				"Spells\\GenericGlow2b1", -- [5]
2				"Spells\\ShockRingCrescent256", -- [6]
2				"SPELLS\\AuraRune1", -- [7]
2				"SPELLS\\AuraRune5Green", -- [8]
2				"SPELLS\\AuraRune7", -- [9]
2				"SPELLS\\AuraRune8", -- [10]
2				"SPELLS\\AuraRune9", -- [11]
2				"SPELLS\\AuraRune11", -- [12]
2				"SPELLS\\AuraRune_A", -- [13]
2				"SPELLS\\AuraRune_C", -- [14]
2				"SPELLS\\AuraRune_D", -- [15]
2				"SPELLS\\Holy_Rune1", -- [16]
2				"SPELLS\\Rune1d_GLOWless", -- [17]
2				"SPELLS\\Rune4blue", -- [18]
2				"SPELLS\\RuneBC1", -- [19]
2				"SPELLS\\RuneBC2", -- [20]
2				"SPELLS\\RUNEFROST", -- [21]
2				"Spells\\Holy_Rune_128", -- [22]
2				"Spells\\Nature_Rune_128", -- [23]
2				"SPELLS\\Death_Rune", -- [24]
2				"SPELLS\\DemonRune6", -- [25]
2				"SPELLS\\DemonRune7", -- [26]
2				"Spells\\DemonRune5backup", -- [27]
2				"Particles\\Intellect128_outline", -- [28]
2				"Spells\\Intellect_128", -- [29]
2				"SPELLS\\GHOST1", -- [30]
2				"Spells\\Aspect_Beast", -- [31]
2				"Spells\\Aspect_Hawk", -- [32]
2				"Spells\\Aspect_Wolf", -- [33]
2				"Spells\\Aspect_Snake", -- [34]
2				"Spells\\Aspect_Cheetah", -- [35]
2				"Spells\\Aspect_Monkey", -- [36]
2				"Spells\\Blobs", -- [37]
2				"Spells\\Blobs2", -- [38]
2				"Spells\\GradientCrescent2", -- [39]
2				"Spells\\InnerFire_Rune_128", -- [40]
2				"Spells\\RapidFire_Rune_128", -- [41]
2				"Spells\\Protect_128", -- [42]
2				"Spells\\Reticle_128", -- [43]
2				"Spells\\Star2A", -- [44]
2				"Spells\\Star4", -- [45]
2				"Spells\\Strength_128", -- [46]
2				"Particles\\STUNWHIRL", -- [47]
2				"SPELLS\\BloodSplash1", -- [48]
2				"SPELLS\\DarkSummon", -- [49]
2				"SPELLS\\EndlessRage", -- [50]
2				"SPELLS\\Rampage", -- [51]
2				"SPELLS\\Eye", -- [52]
2				"SPELLS\\Eyes", -- [53]
0				"SPELLS\\Zap1b", -- [54]
2			},
2			["Misc"] = {
2				["Bdual"] = false,
2				["maxeffects"] = 100,
2				["playerclass"] = "PALADIN",
2				["BTimerX"] = 0,
2				["BTimerA"] = 1,
2				["debug"] = false,
2				["BTimerScale"] = 1,
2				["disabled"] = false,
2				["BTimerY"] = 0,
2				["BCents"] = true,
2			},
2			["CurrentAuraPage"] = 1,
2			["AuraClasses"] = {
0				{
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["buffAuraType"] = "HELPFUL",
2				}, -- [1]
0				{
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["buffAuraType"] = "HARMFUL",
2				}, -- [2]
0				{
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2					["__index"] = nil --[[ skipped recursive table ]],
2					["buffAuraType"] = "HARMFUL",
2				}, -- [3]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [4]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [5]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [6]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [7]
0				{
2					["ValueName"] = "Health",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2				}, -- [8]
0				{
2					["ValueName"] = "Mana",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2						},
2					},
2				}, -- [9]
0				{
2					["ValueName"] = "EnergyRagePower",
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["ValueName"] = "Mana",
2						["__index"] = nil --[[ skipped recursive table ]],
2						["_base"] = {
2							["__index"] = nil --[[ skipped recursive table ]],
2							["_base"] = {
2								["__index"] = nil --[[ skipped recursive table ]],
2							},
2						},
2					},
2				}, -- [10]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [11]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [12]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
2				}, -- [13]
0				{
2					["__index"] = nil --[[ skipped recursive table ]],
2					["_base"] = {
2						["__index"] = nil --[[ skipped recursive table ]],
2					},
0				}, -- [14]
2			},
2			["Textures"] = {
2				[0] = {
2					[0] = nil --[[ skipped userdata ]],
2				},
2			},
2			["NextCheck"] = 0.2,
2			["maxScale"] = {
2				["a"] = 0,
2				["h"] = 0,
2				["w"] = 0,
2			},
2			["WeAreMounted"] = false,
2			["allowedOperators"] = {
2				["!"] = true,
2				[">="] = true,
2				["="] = true,
2				["<"] = true,
2				["<="] = true,
2				[">"] = true,
2			},
2			["ActiveTalentGroup"] = 2,
2			["CurrentAuraId"] = 1,
2			["Auras"] = {
0				{
2					["gcd"] = false,
2					["b"] = 0.1019607843137255,
2					["anim1"] = 1,
2					["g"] = 0.4705882352941176,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Warrior_InnerRage",
2					["size"] = 0.3799999952316284,
2					["torsion"] = 0.949999988079071,
2					["r"] = 0.8313725490196078,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 7,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 30,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.6000000238418579,
2						["id"] = 1,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 11,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 1,
2					["off"] = false,
2					["buffname"] = "Seal of Command",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [1]
0				{
2					["gcd"] = false,
2					["b"] = 0.85490196078431,
2					["anim1"] = 5,
2					["g"] = 0.1921568627451,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2					["size"] = 1.240000009536743,
2					["torsion"] = 1.25,
2					["r"] = 0.10980392156863,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 9,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 3,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 2,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 0.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 60,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 1,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 2,
2					["off"] = false,
2					["buffname"] = "???",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [2]
0				{
2					["gcd"] = false,
2					["b"] = 0.027450980392157,
2					["anim1"] = 5,
2					["g"] = 0.043137254901961,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2					["size"] = 1.699999928474426,
2					["torsion"] = 1.200000047683716,
2					["r"] = 0.85490196078431,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 8,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 6,
2					["alpha"] = 0.5,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 15,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.5,
2						["id"] = 3,
2						["x"] = 60,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 0.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 60,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 3,
2					["off"] = false,
2					["buffname"] = "???",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [3]
0				{
2					["gcd"] = false,
2					["b"] = 0.85490196078431,
2					["anim1"] = 5,
2					["g"] = 0.1921568627451,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2					["size"] = 1.240000009536743,
2					["torsion"] = 1.25,
2					["r"] = 0.10980392156863,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 9,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 3,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 4,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 0.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 80,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 2,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 4,
2					["off"] = false,
2					["buffname"] = "???",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [4]
0				{
2					["gcd"] = false,
2					["b"] = 0.1882352941176471,
2					["anim1"] = 1,
2					["g"] = 0.8666666666666667,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "Each",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_BlessedMending",
2					["size"] = 0.2000000029802322,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 0,
2					["x"] = -55,
2					["customname"] = "",
2					["groupany"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 21,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 50,
2						["dual"] = false,
2						["enabled"] = true,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.550000011920929,
2						["id"] = 5,
2						["x"] = -35,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = true,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 81,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 5,
2					["off"] = false,
2					["buffname"] = "Sacred Shield",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [5]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["anim1"] = 8,
2					["g"] = 0.4666666666666667,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2					["size"] = 0.7599999904632568,
2					["torsion"] = 1,
2					["r"] = 0.2941176470588235,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 7,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 26,
2					["alpha"] = 0.699999988079071,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 6,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "2",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 15,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 6,
2					["off"] = false,
2					["buffname"] = "Divine Plea",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [6]
0				{
2					["gcd"] = false,
2					["b"] = 0.2705882352941176,
2					["anim1"] = 8,
2					["g"] = 0.9176470588235294,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_CrusaderAura",
2					["size"] = 0.7599999904632568,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 34,
2					["alpha"] = 0.4000000059604645,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 7,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 0.5,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 7,
2					["off"] = false,
2					["buffname"] = "Crusader Aura",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = true,
2					["ismounted"] = true,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [7]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["anim1"] = 8,
2					["g"] = 0.4666666666666667,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2					["size"] = 0.7599999904632568,
2					["torsion"] = 1,
2					["r"] = 0.2941176470588235,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 7,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 26,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 30,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.5,
2						["id"] = 8,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "4",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 2,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 15,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 8,
2					["off"] = false,
2					["buffname"] = "Divine Plea",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [8]
0				{
2					["gcd"] = false,
2					["b"] = 0.18823529411765,
2					["anim1"] = 3,
2					["g"] = 0.86666666666667,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "Absorbs",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_GaurdedbytheLight",
2					["size"] = 0.3400000035762787,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 2,
2					["x"] = -55,
2					["customname"] = "",
2					["groupany"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 5,
2					["alpha"] = 1,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 9,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = true,
2					["textaura"] = false,
2					["wowtex"] = true,
2					["groupOrSelf"] = true,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 81,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 9,
2					["off"] = false,
2					["buffname"] = "Sacred Shield",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				}, -- [9]
0				{
2					["gcd"] = false,
2					["b"] = 1,
2					["anim1"] = 5,
2					["g"] = 0.5215686274509804,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\icons\\Spell_fire_meteorstorm",
2					["size"] = 0.1400000005960465,
2					["torsion"] = 0.800000011920929,
2					["r"] = 0.3568627450980392,
2					["begin"] = 6,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 9,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 21,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 10,
2						["x"] = 0,
2					},
2					["soundfile"] = "igPVPUpdate",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 0.6000000238418579,
2					["sound"] = 9,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 86,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = true,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 1,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 80,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 10,
2					["off"] = false,
2					["buffname"] = "???",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
0				}, -- [10]
2				[25] = {
2					["gcd"] = false,
2					["b"] = 0.3529411764705882,
2					["anim1"] = 1,
2					["g"] = 0.9529411764705882,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_InfusionofLight",
2					["size"] = 0.8399999737739563,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 1,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 4,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 25,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 25,
2					["off"] = false,
2					["buffname"] = "Infusion of Light",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[0] = {
2					["gcd"] = false,
2					["b"] = 1,
2					["anim1"] = 1,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "",
2					["size"] = 0.75,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 1,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 0,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = ">=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 0,
2					["off"] = false,
2					["buffname"] = "",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[27] = {
2					["gcd"] = false,
2					["b"] = 0.6549019607843137,
2					["anim1"] = 1,
2					["g"] = 0.4196078431372549,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_RighteousnessAura",
2					["size"] = 0.3799999952316284,
2					["torsion"] = 0.949999988079071,
2					["r"] = 0.2,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 7,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 27,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 11,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 27,
2					["off"] = false,
2					["buffname"] = "Seal of Wisdom",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[28] = {
2					["gcd"] = false,
2					["b"] = 0.1254901960784314,
2					["anim1"] = 4,
2					["g"] = 0.4941176470588236,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_BeaconofLight",
2					["size"] = 0.1800000071525574,
2					["torsion"] = 1,
2					["r"] = 1,
2					["begin"] = 1,
2					["x"] = -48,
2					["customname"] = "",
2					["groupany"] = true,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 13,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 30,
2						["dual"] = false,
2						["enabled"] = true,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.6000000238418579,
2						["id"] = 28,
2						["x"] = -45,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = true,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 2,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 49,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 28,
2					["off"] = false,
2					["buffname"] = "Beacon",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[29] = {
2					["gcd"] = false,
2					["b"] = 0.996078431372549,
2					["anim1"] = 1,
2					["g"] = 0.996078431372549,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_JudgementofthePure",
2					["size"] = 0.2599999904632568,
2					["torsion"] = 1,
2					["r"] = 0.996078431372549,
2					["begin"] = 2,
2					["x"] = 46,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 25,
2					["alpha"] = 0.300000011920929,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 50,
2						["dual"] = false,
2						["enabled"] = true,
2						["a"] = 1,
2						["cents"] = false,
2						["h"] = 0.6000000238418579,
2						["id"] = 29,
2						["x"] = 30,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = true,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 78,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 29,
2					["off"] = false,
2					["buffname"] = "Judgements of the Pure",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[50] = {
2					["gcd"] = false,
2					["b"] = 0,
2					["anim1"] = 1,
2					["g"] = 0.9803921568627451,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Racial_Avatar",
2					["size"] = 0.1200000047683716,
2					["torsion"] = 1,
2					["r"] = 0.996078431372549,
2					["begin"] = 0,
2					["x"] = 53,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 10,
2					["alpha"] = 0.550000011920929,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 50,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 29,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 50,
2					["off"] = false,
2					["buffname"] = "Vengeance",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[26] = {
2					["gcd"] = false,
2					["b"] = 0.5019607843137255,
2					["anim1"] = 1,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_LightsGrace",
2					["size"] = 0.4399999976158142,
2					["torsion"] = 1,
2					["r"] = 0.9686274509803922,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 22,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 26,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 20,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 26,
2					["off"] = false,
2					["buffname"] = "Light's Grace",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[49] = {
2					["gcd"] = false,
2					["b"] = 0.5215686274509804,
2					["anim1"] = 1,
2					["g"] = 1,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Ability_Paladin_ArtofWar",
2					["size"] = 0.7599999904632568,
2					["torsion"] = 1,
2					["r"] = 0.9529411764705882,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 5,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 49,
2						["x"] = 0,
2					},
2					["soundfile"] = "LEVELUP",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 1,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = -30,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 49,
2					["off"] = false,
2					["buffname"] = "Art of War",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2				[51] = {
2					["gcd"] = false,
2					["b"] = 0.1058823529411765,
2					["anim1"] = 1,
2					["g"] = 0.1176470588235294,
2					["thresholdinvert"] = false,
2					["tooltipCheck"] = "",
2					["opt2"] = 0,
2					["target"] = false,
2					["icon"] = "Interface\\Icons\\Spell_Holy_SealOfBlood",
2					["size"] = 0.3799999952316284,
2					["torsion"] = 0.949999988079071,
2					["r"] = 0.6549019607843137,
2					["begin"] = 0,
2					["x"] = 0,
2					["customname"] = "",
2					["groupany"] = false,
2					["timerduration"] = 0,
2					["unitn"] = "Only for raid/group.",
2					["bufftype"] = 1,
2					["stacks"] = 0,
2					["focus"] = false,
2					["isenchant"] = false,
2					["raid"] = false,
2					["texture"] = 7,
2					["alpha"] = 0.75,
2					["aurastext"] = "",
2					["symetrie"] = 0,
2					["Timer"] = {
2						["y"] = 0,
2						["dual"] = false,
2						["enabled"] = false,
2						["a"] = 1,
2						["cents"] = true,
2						["h"] = 1,
2						["id"] = 51,
2						["x"] = 0,
2					},
2					["soundfile"] = "",
2					["owntex"] = false,
2					["duration"] = 0,
2					["mine"] = false,
2					["multiids"] = "",
2					["inVehicle"] = false,
2					["speed"] = 1,
2					["sound"] = 0,
2					["stacksOperator"] = "=",
2					["realaura"] = 1,
2					["threshold"] = 50,
2					["exact"] = false,
2					["textaura"] = false,
2					["wowtex"] = false,
2					["groupOrSelf"] = false,
2					["customsound"] = "",
2					["combat"] = 0,
2					["aurastextfont"] = 1,
2					["finish"] = 1,
2					["spec2"] = true,
2					["customtex"] = false,
2					["randomcolor"] = false,
2					["isdebufftype"] = false,
2					["y"] = 11,
2					["opt1"] = 0,
2					["optunitn"] = false,
2					["anim2"] = 0,
2					["ignoremaj"] = true,
2					["id"] = 51,
2					["off"] = false,
2					["buffname"] = "Seal of the Martyr",
2					["texmode"] = 1,
2					["party"] = false,
2					["isdebuff"] = false,
2					["inverse"] = false,
2					["ismounted"] = false,
2					["targetfriend"] = false,
2					["spec1"] = true,
2					["isinraid"] = false,
2					["stance"] = 10,
2				},
2			},
2			["ResetTargetTimers"] = false,
2			["ChecksTimer"] = 0.1000000014901161,
2			["Sound"] = {
2				"LEVELUP", -- [1]
2				"LOOTWINDOWCOINSOUND", -- [2]
2				"MapPing", -- [3]
2				"Exploration", -- [4]
2				"QUESTADDED", -- [5]
2				"QUESTCOMPLETED", -- [6]
2				"WriteQuest", -- [7]
2				"Fishing Reel in", -- [8]
2				"igPVPUpdate", -- [9]
2				"ReadyCheck", -- [10]
2				"RaidWarning", -- [11]
2				"AuctionWindowOpen", -- [12]
2				"AuctionWindowClose", -- [13]
2				"TellMessage", -- [14]
2				"igBackPackOpen", -- [15]
2				[0] = "None",
2			},
2			["curScale"] = {
2				["a"] = 0,
2				["h"] = 0,
2				["w"] = 0,
2			},
2			["Enabled"] = 1,
2			["MainOptionPage"] = 1,
2			["FramesVisibleTime"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				0, -- [5]
2				0, -- [6]
2				0, -- [7]
2				0, -- [8]
2				0, -- [9]
2				0, -- [10]
2				0, -- [11]
2				0, -- [12]
2				0, -- [13]
2				0, -- [14]
2				0, -- [15]
2				0, -- [16]
2				0, -- [17]
2				0, -- [18]
2				0, -- [19]
2				0, -- [20]
2				0, -- [21]
2				0, -- [22]
2				0, -- [23]
2				0, -- [24]
2				0, -- [25]
2				0, -- [26]
2				0, -- [27]
2				0, -- [28]
2				0, -- [29]
2				0, -- [30]
2				0, -- [31]
2				0, -- [32]
2				0, -- [33]
2				0, -- [34]
2				0, -- [35]
2				0, -- [36]
2				0, -- [37]
2				0, -- [38]
2				0, -- [39]
2				0, -- [40]
2				0, -- [41]
2				0, -- [42]
2				0, -- [43]
2				0, -- [44]
2				0, -- [45]
2				0, -- [46]
2				0, -- [47]
2				0, -- [48]
2				0, -- [49]
2				0, -- [50]
2				0, -- [51]
2				0, -- [52]
2				0, -- [53]
2				0, -- [54]
2				0, -- [55]
2				0, -- [56]
2				0, -- [57]
2				0, -- [58]
2				0, -- [59]
2				0, -- [60]
2				0, -- [61]
2				0, -- [62]
2				0, -- [63]
2				0, -- [64]
2				0, -- [65]
2				0, -- [66]
2				0, -- [67]
2				0, -- [68]
2				0, -- [69]
2				0, -- [70]
2				0, -- [71]
2				0, -- [72]
2				0, -- [73]
2				0, -- [74]
2				0, -- [75]
2				0, -- [76]
2				0, -- [77]
2				0, -- [78]
2				0, -- [79]
2				0, -- [80]
2				0, -- [81]
2				0, -- [82]
2				0, -- [83]
2				0, -- [84]
2				0, -- [85]
2				0, -- [86]
2				0, -- [87]
2				0, -- [88]
2				0, -- [89]
2				0, -- [90]
2				0, -- [91]
2				0, -- [92]
2				0, -- [93]
2				0, -- [94]
2				0, -- [95]
2				0, -- [96]
2				0, -- [97]
2				0, -- [98]
2				0, -- [99]
2				0, -- [100]
2				0, -- [101]
2				0, -- [102]
2				0, -- [103]
2				0, -- [104]
2				0, -- [105]
2				0, -- [106]
2				0, -- [107]
2				0, -- [108]
2				0, -- [109]
2				0, -- [110]
2				0, -- [111]
2				0, -- [112]
2				0, -- [113]
2				0, -- [114]
2				0, -- [115]
2				0, -- [116]
2				0, -- [117]
2				0, -- [118]
2				0, -- [119]
2				0, -- [120]
2				0, -- [121]
2				0, -- [122]
2				0, -- [123]
2				0, -- [124]
2				0, -- [125]
2				0, -- [126]
2				0, -- [127]
2				0, -- [128]
2				0, -- [129]
2				0, -- [130]
2				0, -- [131]
2				0, -- [132]
2				0, -- [133]
2				0, -- [134]
2				0, -- [135]
2				0, -- [136]
2				0, -- [137]
2				0, -- [138]
2				0, -- [139]
2				0, -- [140]
2				0, -- [141]
2				0, -- [142]
2				0, -- [143]
2				0, -- [144]
2				0, -- [145]
2				0, -- [146]
2				0, -- [147]
2				0, -- [148]
2				0, -- [149]
2				0, -- [150]
2				0, -- [151]
2				0, -- [152]
2				0, -- [153]
2				0, -- [154]
2				0, -- [155]
2				0, -- [156]
2				0, -- [157]
2				0, -- [158]
2				0, -- [159]
2				0, -- [160]
2				0, -- [161]
2				0, -- [162]
2				0, -- [163]
2				0, -- [164]
2				0, -- [165]
2				0, -- [166]
2				0, -- [167]
2				0, -- [168]
2				0, -- [169]
2				0, -- [170]
2				0, -- [171]
2				0, -- [172]
2				0, -- [173]
2				0, -- [174]
2				0, -- [175]
2				0, -- [176]
2				0, -- [177]
2				0, -- [178]
2				0, -- [179]
2				0, -- [180]
2				0, -- [181]
2				0, -- [182]
2				0, -- [183]
2				0, -- [184]
2				0, -- [185]
2				0, -- [186]
2				0, -- [187]
2				0, -- [188]
2				0, -- [189]
2				0, -- [190]
2				0, -- [191]
2				0, -- [192]
2				0, -- [193]
2				0, -- [194]
2				0, -- [195]
2				0, -- [196]
2				0, -- [197]
2				0, -- [198]
2				0, -- [199]
2				0, -- [200]
2				0, -- [201]
2				0, -- [202]
2				0, -- [203]
2				0, -- [204]
2				0, -- [205]
2				0, -- [206]
2				0, -- [207]
2				0, -- [208]
2				0, -- [209]
2				0, -- [210]
2				0, -- [211]
2				0, -- [212]
2				0, -- [213]
2				0, -- [214]
2				0, -- [215]
2				0, -- [216]
2				0, -- [217]
2				0, -- [218]
2				0, -- [219]
2				0, -- [220]
2				0, -- [221]
2				0, -- [222]
2				0, -- [223]
2				0, -- [224]
2				0, -- [225]
2				0, -- [226]
2				0, -- [227]
2				0, -- [228]
2				0, -- [229]
2				0, -- [230]
2				0, -- [231]
2				0, -- [232]
2				0, -- [233]
2				0, -- [234]
2				0, -- [235]
2				0, -- [236]
2				0, -- [237]
2				0, -- [238]
2				0, -- [239]
2				0, -- [240]
2				0, -- [241]
2				0, -- [242]
2				0, -- [243]
2				0, -- [244]
2				0, -- [245]
2				0, -- [246]
2				0, -- [247]
2				0, -- [248]
2				0, -- [249]
2				0, -- [250]
2				0, -- [251]
2				0, -- [252]
2				0, -- [253]
2				0, -- [254]
2				0, -- [255]
2				0, -- [256]
2				0, -- [257]
2				0, -- [258]
2				0, -- [259]
2				0, -- [260]
2				0, -- [261]
2				0, -- [262]
2				0, -- [263]
2				0, -- [264]
2				0, -- [265]
2				0, -- [266]
2				0, -- [267]
2				0, -- [268]
2				0, -- [269]
2				0, -- [270]
2				0, -- [271]
2				0, -- [272]
2				0, -- [273]
2				0, -- [274]
2				0, -- [275]
2				0, -- [276]
2				0, -- [277]
2				0, -- [278]
2				0, -- [279]
2				0, -- [280]
2				0, -- [281]
2				0, -- [282]
2				0, -- [283]
2				0, -- [284]
2				0, -- [285]
2				0, -- [286]
2				0, -- [287]
2				0, -- [288]
2				0, -- [289]
2				0, -- [290]
2				0, -- [291]
2				0, -- [292]
2				0, -- [293]
2				0, -- [294]
2				0, -- [295]
2				0, -- [296]
2				0, -- [297]
2				0, -- [298]
2				0, -- [299]
2				0, -- [300]
2				0, -- [301]
2				0, -- [302]
2				0, -- [303]
2				0, -- [304]
2				0, -- [305]
2				0, -- [306]
2				0, -- [307]
2				0, -- [308]
2				0, -- [309]
2				0, -- [310]
2				0, -- [311]
2				0, -- [312]
2				0, -- [313]
2				0, -- [314]
2				0, -- [315]
2				0, -- [316]
2				0, -- [317]
2				0, -- [318]
2				0, -- [319]
2				0, -- [320]
2				0, -- [321]
2				0, -- [322]
2				0, -- [323]
2				0, -- [324]
2				0, -- [325]
2				0, -- [326]
2				0, -- [327]
2				0, -- [328]
2				0, -- [329]
2				0, -- [330]
2				0, -- [331]
2				0, -- [332]
2				0, -- [333]
2				0, -- [334]
2				0, -- [335]
2				0, -- [336]
2				0, -- [337]
2				0, -- [338]
2				0, -- [339]
2				0, -- [340]
2				0, -- [341]
2				0, -- [342]
2				0, -- [343]
2				0, -- [344]
2				0, -- [345]
2				0, -- [346]
2				0, -- [347]
2				0, -- [348]
2				0, -- [349]
2				0, -- [350]
2				0, -- [351]
2				0, -- [352]
2				0, -- [353]
2				0, -- [354]
2				0, -- [355]
2				0, -- [356]
2				0, -- [357]
2				0, -- [358]
2				0, -- [359]
2				0, -- [360]
2				[0] = 0,
2			},
2			["DoResetAoe"] = false,
2			["UsablePending"] = {
2			},
2			["AurasByType"] = {
2				["Combo"] = {
2				},
2				["Mana"] = {
2					2, -- [1]
2					4, -- [2]
0					10, -- [3]
2				},
2				["RaidBuffs"] = {
2				},
2				["RageEnergy"] = {
2				},
2				["NamedUnitHealth"] = {
2				},
2				["Aoe"] = {
2				},
2				["GroupOrSelfBuffs"] = {
2					5, -- [1]
2					9, -- [2]
0					28, -- [3]
2				},
2				["TargetRageEnergy"] = {
2				},
2				["RaidPvP"] = {
2				},
2				["Aggro"] = {
2				},
2				["Spells"] = {
2				},
2				["UnitBuffs"] = {
2				},
2				["PartyPvP"] = {
2				},
2				["Health"] = {
0					3, -- [1]
2				},
2				["PartyAggro"] = {
2				},
2				["FocusRageEnergy"] = {
2				},
2				["Stance"] = {
2				},
2				["TargetPvP"] = {
2				},
2				["PartyBuffs"] = {
2				},
2				["PartyHealth"] = {
2				},
2				["FocusBuffs"] = {
2				},
2				["TargetHealth"] = {
2				},
2				["Actions"] = {
2					6, -- [1]
0					8, -- [2]
2				},
2				["RaidRageEnergy"] = {
2				},
2				["TargetMana"] = {
2				},
2				["RaidAggro"] = {
2				},
2				["TargetSpells"] = {
2				},
2				["NamedUnitMana"] = {
2				},
2				["FocusSpells"] = {
2				},
2				["FocusMana"] = {
2				},
2				["RaidHealth"] = {
2				},
2				["TargetBuffs"] = {
2				},
2				["PvP"] = {
2				},
2				["FocusHealth"] = {
2				},
2				["PartyMana"] = {
2				},
2				["UnitRageEnergy"] = {
2				},
2				["Enchants"] = {
2				},
2				["Buffs"] = {
2					1, -- [1]
2					7, -- [2]
2					25, -- [3]
2					26, -- [4]
2					27, -- [5]
2					29, -- [6]
2					49, -- [7]
2					50, -- [8]
0					51, -- [9]
2				},
2				["PartyRageEnergy"] = {
2				},
2				["RaidMana"] = {
2				},
2			},
2			["DebuffCatType"] = {
2				["CC"] = 1,
2				["Snare"] = 3,
2				["Root"] = 4,
2				["Silence"] = 2,
2				["Disarm"] = 5,
2				["PvE"] = 6,
2			},
2			["WeAreInRaid"] = false,
2			["Version"] = "v2.6.2F",
2			["speedScale"] = 0,
2			["Display"] = {
2				"Zoom In", -- [1]
2				"Zoom Out", -- [2]
2				"Opacity only", -- [3]
2				"Left", -- [4]
2				"Top-Left", -- [5]
2				"Top", -- [6]
2				"Top-Right", -- [7]
2				"Right", -- [8]
2				"Bottom-Right", -- [9]
2				"Bottom", -- [10]
2				"Bottom-Left", -- [11]
2				[0] = "[None]",
2			},
2			["SecondeAura"] = 0,
2			["DebuffTypeSpellIds"] = {
2				[6789] = 1,
2				[122] = 4,
2				[54706] = 4,
2				[50519] = 1,
2				[20184] = 3,
2				[47610] = 3,
2				[11113] = 3,
2				[1513] = 1,
2				[50245] = 4,
2				[58179] = 3,
2				[50436] = 3,
2				[118] = 1,
2				[710] = 1,
2				[5782] = 1,
2				[5211] = 1,
2				[1715] = 3,
2				[2812] = 1,
2				[39796] = 1,
2				[35101] = 3,
2				[61394] = 3,
2				[2974] = 3,
2				[116] = 3,
2				[6358] = 1,
2				[25046] = 2,
2				[34490] = 2,
2				[30217] = 1,
2				[12355] = 1,
2				[28084] = 6,
2				[55080] = 4,
2				[3355] = 1,
2				[33395] = 4,
2				[120] = 3,
2				[47476] = 2,
2				[55666] = 3,
2				[30283] = 1,
2				[19386] = 1,
2				[13810] = 3,
2				[15407] = 3,
2				[51209] = 1,
2				[31589] = 3,
2				[12798] = 1,
2				[853] = 1,
2				[19503] = 1,
2				[20170] = 1,
2				[63018] = 6,
2				[63276] = 6,
2				[54644] = 3,
2				[18498] = 2,
2				[62589] = 6,
2				[33786] = 1,
2				[61391] = 3,
2				[22570] = 1,
2				[5484] = 1,
2				[605] = 1,
2				[47481] = 1,
2				[58617] = 3,
2				[63685] = 4,
2				[9005] = 1,
2				[9484] = 1,
2				[53359] = 5,
2				[3600] = 3,
2				[2094] = 1,
2				[15487] = 2,
2				[19185] = 4,
2				[30216] = 1,
2				[28059] = 6,
2				[1833] = 1,
2				[1776] = 1,
2				[44572] = 1,
2				[20066] = 1,
2				[24259] = 2,
2				[11071] = 4,
2				[27819] = 6,
2				[12323] = 3,
2				[24394] = 1,
2				[408] = 1,
2				[26679] = 3,
2				[12809] = 1,
2				[5116] = 3,
2				[339] = 4,
2				[31125] = 3,
2				[51722] = 5,
2				[6770] = 1,
2				[18425] = 2,
2				[5246] = 1,
2				[4167] = 4,
2				[6136] = 3,
2				[13099] = 4,
2				[31661] = 1,
2				[51514] = 1,
2				[2637] = 1,
2				[39965] = 4,
2				[50271] = 3,
2				[1330] = 2,
2				[50518] = 1,
2				[8034] = 3,
2				[18469] = 2,
2				[19306] = 4,
2				[50541] = 5,
2				[20253] = 1,
2				[18223] = 3,
2				[19675] = 4,
2				[7922] = 1,
2				[676] = 5,
2				[64346] = 5,
2				[23694] = 4,
2				[63529] = 2,
2				[46968] = 1,
2				[10326] = 1,
2				[63024] = 6,
2				[64044] = 1,
2				[18118] = 3,
2				[55536] = 4,
2				[58373] = 4,
2				[64695] = 4,
2				[29703] = 3,
2				[8056] = 3,
2				[51880] = 1,
2				[3409] = 3,
2				[45524] = 3,
2				[20549] = 1,
2				[8122] = 1,
2				[28169] = 6,
2			},
2			["BuffTypes"] = {
2				["TypeDebuff"] = 3,
2				["EnergyRagePower"] = 10,
2				["Buff"] = 1,
2				["Aggro"] = 11,
2				["Mana"] = 9,
2				["ActionReady"] = 7,
2				["SpellAlert"] = 13,
2				["Debuff"] = 2,
2				["Health"] = 8,
2				["Enchant"] = 5,
2				["Combo"] = 6,
2				["PvP"] = 12,
2				["AoE"] = 4,
2				["Stance"] = 14,
2			},
2		},
2		["Macros"] = {
0			{
2				["Body"] = "/cleartarget<LF>/tar Dirkee<LF>/tar Vyra<LF>/tar Time<LF>/stopmacro [noexists]<LF>/tell smacker > %t <<LF>/run PlaySoundFile(\"Sound\\\\Music\\\\ZoneMusic\\\\DMF_L70ETC01.mp3\")<LF>",
2				["Name"] = "Drake",
2				["Texture"] = "Interface\\Icons\\Ability_Mount_Drake_Blue",
2			}, -- [1]
0			{
2				["Body"] = "#ShowToolTip<LF>/castsequence Divine Shield, Divine Sacrifice<LF>",
2				["Name"] = "DS",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PowerWordBarrier",
2			}, -- [2]
0			{
2				["Body"] = "/powa dump<LF>",
2				["Name"] = "Dump",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_MarkedForDeath",
2			}, -- [3]
0			{
2				["Body"] = "/use Warts-B-Gone Lip Balm<LF>/kiss<LF>",
2				["Name"] = "Frog",
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2			}, -- [4]
0			{
2				["Body"] = "/p Help! Healer has aggro!<LF>",
2				["Name"] = "Help",
2				["Texture"] = "Interface\\Icons\\Ability_Mage_ChilledToTheBone",
2			}, -- [5]
0			{
2				["Body"] = "/targetexact Ewe<LF>/targetexact Parrot<LF>/targetexact Ram<LF>/love<LF>",
2				["Name"] = "Love",
2				["Texture"] = "Interface\\Icons\\Spell_BrokenHeart",
2			}, -- [6]
0			{
2				["Body"] = "/script UIErrorsFrame:UnregisterEvent(\"UI_ERROR_MESSAGE\");<LF>/console Sound_EnableSFX 0<LF>",
2				["Name"] = "Off",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Eclipse",
2			}, -- [7]
0			{
2				["Body"] = "/script UIErrorsFrame:RegisterEvent(\"UI_ERROR_MESSAGE\");<LF>/console Sound_EnableSFX 1<LF>",
2				["Name"] = "On",
2				["Texture"] = "Interface\\Icons\\Ability_Druid_EclipseOrange",
2			}, -- [8]
0			{
2				["Body"] = "/cleartarget<LF>/click MultiBarLeftButton3<LF>/stopmacro [exists]<LF>/click SilverDragonMacroButton<LF>/stopmacro [noexists]<LF>/tell smacker > %t <<LF>",
2				["Name"] = "rare3",
2				["Texture"] = "Interface\\Icons\\Ability_Spy",
2			}, -- [9]
0			{
2				["Body"] = "#showtooltip Redemption<LF>/cast Redemption<LF>/stopmacro [combat,nohelp,nodead]<LF>/say Upsadaisy, %t!<LF>",
2				["Name"] = "Rez",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2			}, -- [10]
0			{
2				["Body"] = "/console reloadui<LF>",
2				["Name"] = "RL",
2				["Texture"] = "Interface\\Icons\\Ability_Creature_Cursed_04",
2			}, -- [11]
0			{
2				["Body"] = "/click SilverDragonMacroButton<LF>",
2				["Name"] = "SilverDragon",
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_SniperTraining",
2			}, -- [12]
0			{
2				["Body"] = "/target Elder Stranglethorn Tiger<LF>",
2				["Name"] = "Tiger",
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2			}, -- [13]
0			{
2			}, -- [14]
0			{
2			}, -- [15]
0			{
2			}, -- [16]
0			{
2			}, -- [17]
0			{
2			}, -- [18]
0			{
2			}, -- [19]
0			{
2			}, -- [20]
0			{
2			}, -- [21]
0			{
2			}, -- [22]
0			{
2			}, -- [23]
0			{
2			}, -- [24]
0			{
2			}, -- [25]
0			{
2			}, -- [26]
0			{
2			}, -- [27]
0			{
2			}, -- [28]
0			{
2			}, -- [29]
0			{
2			}, -- [30]
0			{
2			}, -- [31]
0			{
2			}, -- [32]
0			{
2			}, -- [33]
0			{
2			}, -- [34]
0			{
2			}, -- [35]
0			{
0			}, -- [36]
2		},
2		["WeaponEnchant"] = {
2		},
2		["SpellTabs"] = {
0			{
2				["Offset"] = 0,
2				["Count"] = 21,
2				["Name"] = "General",
2				["Texture"] = "Interface\\Icons\\Ability_Kick",
2			}, -- [1]
0			{
2				["Offset"] = 21,
2				["Count"] = 76,
2				["Name"] = "Holy",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2			}, -- [2]
0			{
2				["Offset"] = 97,
2				["Count"] = 26,
2				["Name"] = "Protection",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_DevotionAura",
2			}, -- [3]
0			{
2				["Offset"] = 123,
2				["Count"] = 31,
2				["Name"] = "Retribution",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_AuraOfLight",
2			}, -- [4]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [5]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [6]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
2			}, -- [7]
0			{
2				["Offset"] = 0,
2				["Count"] = 0,
0			}, -- [8]
2		},
2		["SpellInfo"] = {
2		},
2		["player"] = {
2			["Visible"] = 1,
2			["FactionGroup"] = "Alliance",
2			["InParty"] = 1,
2			["Unit"] = "player",
2			["HealthMax"] = 11244,
2			["CastingInfo"] = {
2			},
2			["Damage"] = 1037.43310546875,
2			["IsPlayer"] = 1,
2			["Classification"] = "normal",
2			["Power"] = {
2				0, -- [1]
2				0, -- [2]
2				0, -- [3]
2				0, -- [4]
2				8, -- [5]
2				0, -- [6]
2				["Default"] = 5659,
2				[0] = 5659,
2			},
2			["RangedAttackPower"] = 98,
2			["ChannelInfo"] = {
2			},
2			["Stats"] = {
0				{
2					["Type"] = "Strength",
2					["PosBuff"] = 374,
2					["NegBuff"] = 0,
2					["Base"] = 547,
2					["Stat"] = 547,
2				}, -- [1]
0				{
2					["Type"] = "Agility",
2					["PosBuff"] = 18,
2					["NegBuff"] = 0,
2					["Base"] = 108,
2					["Stat"] = 108,
2				}, -- [2]
0				{
2					["Type"] = "Stamina",
2					["PosBuff"] = 306,
2					["NegBuff"] = 0,
2					["Base"] = 449,
2					["Stat"] = 449,
2				}, -- [3]
0				{
2					["Type"] = "Intellect",
2					["PosBuff"] = 5,
2					["NegBuff"] = 0,
2					["Base"] = 103,
2					["Stat"] = 103,
2				}, -- [4]
0				{
2					["Type"] = "Spirit",
2					["PosBuff"] = 0,
2					["NegBuff"] = 0,
2					["Base"] = 108,
2					["Stat"] = 108,
0				}, -- [5]
2			},
2			["InteractDistance"] = {
2				1, -- [1]
2				1, -- [2]
2				1, -- [3]
0				1, -- [4]
2			},
2			["XPMax"] = 1691700,
2			["PowerType"] = 0,
2			["Health"] = 11244,
2			["RuneCooldown"] = {
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [1]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [2]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [3]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [4]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
2				}, -- [5]
0				{
2					["Start"] = 0,
2					["Duration"] = 10,
2					["RuneReady"] = true,
0				}, -- [6]
2			},
2			["Target"] = "Warp-Huntress Kula",
2			["LocClass"] = "Paladin",
2			["Debuffs"] = {
2			},
2			["AttackSpeed"] = 3.301000156789087,
2			["RangedAttack"] = 0,
2			["Race"] = "Human",
2			["Class"] = "PALADIN",
2			["Friend"] = 1,
2			["ManaMax"] = 5659,
2			["PVPRank"] = 0,
2			["PVPName"] = "Chef Smacker",
2			["RangedDamage"] = 0,
2			["RuneType"] = {
2				1, -- [1]
2				1, -- [2]
2				2, -- [3]
2				2, -- [4]
2				3, -- [5]
0				3, -- [6]
2			},
2			["Armor"] = 3660,
2			["Level"] = 80,
2			["XP"] = 603,
2			["PowerTypeString"] = "MANA",
2			["AttackPower"] = 1314,
2			["Defense"] = 400,
2			["PowerMax"] = {
2				100, -- [1]
2				100, -- [2]
2				100, -- [3]
2				0, -- [4]
2				8, -- [5]
2				100, -- [6]
2				["Default"] = 5659,
2				[0] = 5659,
2			},
2			["UnitHasVehicleUI"] = false,
2			["Mana"] = 5659,
2			["Tooltip"] = {
2				["Left1"] = "Chef Smacker",
2				["Left2"] = "The Shadow Hunters",
2				["Left3"] = "Level 80 Human Paladin (Player)",
2				["NumLines"] = 3,
2			},
2			["CanCooperate"] = 1,
2			["AttackBothHands"] = 400,
2			["Connected"] = 1,
2			["Player"] = 1,
2			["Name"] = "Smacker",
2			["Resistances"] = {
0				{
2					["Type"] = "Holy",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [1]
0				{
2					["Type"] = "Fire",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [2]
0				{
2					["Type"] = "Nature",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [3]
0				{
2					["Type"] = "Frost",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [4]
0				{
2					["Type"] = "Shadow",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
2				}, -- [5]
0				{
2					["Type"] = "Arcane",
2					["Malus"] = 0,
2					["Total"] = 0,
2					["Base"] = 0,
2					["Bonus"] = 0,
0				}, -- [6]
2				[0] = {
2					["Type"] = "Physical",
2					["Malus"] = 0,
2					["Total"] = 3660,
2					["Base"] = 3660,
2					["Bonus"] = 0,
2				},
2			},
2			["CreatureType"] = "Humanoid",
2			["Buffs"] = {
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Armistice",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Armistice",
2						["NumLines"] = 2,
2						["Left2"] = "Cannot attack members of the opposing faction while under the banner of the Argent Tournament.",
2					},
2					["Icon"] = "Interface\\Icons\\achievement_reputation_argentcrusader",
2					["Rank"] = "",
2				}, -- [1]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Wyrmrest Champion",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Wyrmrest Champion",
2						["NumLines"] = 2,
2						["Left2"] = "All reputation gains while in level 80 dungeons are applied to your Wyrmrest Accord standing.",
2					},
2					["Icon"] = "Interface\\Icons\\INV_Misc_Head_Dragon_Red",
2					["Rank"] = "",
2				}, -- [2]
0				{
2					["Source"] = "player",
2					["Duration"] = 0,
2					["Expires"] = 0,
2					["Name"] = "Crusader Aura",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Crusader Aura",
2						["NumLines"] = 2,
2						["Left2"] = "Mounted speed increased by 20%.  This does not stack with other movement speed increasing effects.",
2					},
2					["Icon"] = "Interface\\Icons\\Spell_Holy_CrusaderAura",
2					["Rank"] = "",
2				}, -- [3]
0				{
2					["Source"] = "player",
2					["Duration"] = 1800,
2					["Expires"] = 52201.551,
2					["Name"] = "Seal of Wisdom",
2					["Applications"] = 0,
2					["Tooltip"] = {
2						["Left1"] = "Seal of Wisdom",
2						["Left2"] = "Melee attacks have a chance to restore mana.",
2						["Left3"] = "30 minutes remaining",
2						["NumLines"] = 3,
2					},
2					["Icon"] = "Interface\\Icons\\Spell_Holy_RighteousnessAura",
2					["Rank"] = "",
0				}, -- [4]
2			},
2			["Sex"] = 2,
2			["Pos"] = {
2				["Y"] = 0.4868147969245911,
2				["X"] = 0.5921727418899536,
2			},
2		},
2		["ShapeshiftForm"] = 7,
2		["ActionSlots"] = {
0			{
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 1,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["AttackAction"] = 1,
2				["Texture"] = "Interface\\Icons\\INV_Mace_84",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [1]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Avenging Wrath",
2					["Left2"] = "315 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Increases all damage and healing caused by 20% for 20 sec.  Cannot be used within 30 sec of being the target of Divine Shield, Divine Protection, or Hand of Protection.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_AvengineWrath",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [2]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Wisdom",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy, giving each attack a chance to restore 2% of the attacker's base mana.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_JudgementBlue",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [3]
0			{
2				["ActionText"] = "CS",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_CrusaderStrike",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [4]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "315 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left4"] = "Causes 1728 to 1888 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 9",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [5]
0			{
2				["ActionText"] = "DS",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_DivineStorm",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [6]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Justice",
2					["Left2"] = "117 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left4"] = "Stuns the target for 6 sec and interrupts non-player spellcasting for 3 sec.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 4",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfMight",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [7]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "474 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left4"] = "Hurls a hammer that strikes an enemy for 1473 to 1591 Holy damage.  Only usable on enemies that have 20% or less health.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 6",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [8]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "869 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1616 Holy damage over 10 sec to enemies who enter the area.",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 8",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [9]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Every Man for Himself",
2					["Left2"] = "Instant",
2					["Right1"] = "Racial",
2					["Left3"] = "Removes all movement impairing effects and all effects which cause loss of control of your character.  This effect shares a cooldown with other similar effects.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_Charm",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [10]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Divine Protection",
2					["Left2"] = "117 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Reduces all damage taken by 50% for 12 sec.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be used within 30 sec of using Avenging Wrath.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Restoration",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [11]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Divine Shield",
2					["Left2"] = "117 Mana",
2					["Right3"] = "5 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Protects the paladin from all damage and spells for 12 sec, but reduces all damage you deal by 50%.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be used within 30 sec. of using Avenging Wrath.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_DivineIntervention",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [12]
0			{
2				["ActionText"] = "Hor2",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_UnyieldingFaith",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [13]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "790 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Left4"] = "Sends bolts of holy power in all directions, causing 1214 to 1398 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 5",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [14]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Divine Plea",
2					["Left2"] = "Instant",
2					["Left3"] = "You gain 25% of your total mana over 15 sec, but the amount healed by your Flash of Light, Holy Light, and Holy Shock spells is reduced by 50%.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [15]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Justice",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy for 20 sec, preventing them from fleeing and limiting their movement speed.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_JudgementRed",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [16]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Light",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy for 20 sec, granting attacks made against the judged enemy a chance of healing the attacker for 2% of their maximum health.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RighteousFury",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [17]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Seal of Wisdom",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with divine wisdom for 30 min, giving each melee attack a chance to restore 4% of the paladin's maximum mana.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RighteousnessAura",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [18]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Seal of Vengeance",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with holy power, causing attacks to apply Holy Vengeance, which deals 247 additional Holy damage over 15 sec.  Holy Vengeance can stack up to 5 times.  Once stacked to 5 times, each of the Paladin's attacks also deals 33% weapon damage as additional Holy damage.  Only one Seal can be active on the Paladin at any one time.  Lasts 30 min.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 353 Holy damage to an enemy, increased by 10% for each application of Holy Vengeance on the target.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfVengeance",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [19]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Seal of Justice",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with the spirit of justice for 30 min, giving each melee attack a chance to stun for 2 sec.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWrath",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [20]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Seal of Righteousness",
2					["Left2"] = "492 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with holy spirit for 30 min, granting each melee attack 199 additional Holy damage.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will cause 507 Holy damage to an enemy.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_ThunderBolt",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [21]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Seal of Light",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with divine light for 30 min, giving each melee attack a chance to heal the Paladin for 334.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HealingAura",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [22]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [23]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Sacred Shield",
2					["Left2"] = "474 Mana",
2					["Right1"] = "Rank 1",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Each time the target takes damage they gain a Sacred Shield, absorbing 600 damage and increasing the paladin's chance to critically hit with Flash of Light by 50% for up to 12 sec.  They cannot gain this effect more than once every 6 sec.  Lasts 1 min.  This spell cannot be on more than one target at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_BlessedMending",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [24]
0			{
2				["ActionText"] = "LoH",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_LayOnHands",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [25]
0			{
2				["ActionText"] = "Clen",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Renew",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [26]
0			{
2				["ActionText"] = "Turn",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfRighteousness",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [27]
0			{
2				["ActionText"] = "Rez",
2				["UsableAction"] = 1,
2				["HasRange"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [28]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Argent Mana Potion",
2					["Left2"] = "Requires Level 55",
2					["Left3"] = "Use: Restores 1800 to 3000 mana.",
2					["NumLines"] = 3,
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Potion_137",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [29]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "40 yd range",
2					["Left1"] = "Divine Intervention",
2					["Left4"] = "Reagents: |nSymbol of Divinity",
2					["Left5"] = "The paladin sacrifices himself to remove the targeted party member from harm's way.  Enemies will stop attacking the protected party member, who will be immune to all harmful attacks but will not be able to take any action for 3 min.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "20 min cooldown",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 5,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_TimeStop",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [30]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Righteous Defense",
2					["Left2"] = "40 yd range",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant",
2					["NumLines"] = 4,
2					["Left4"] = "Come to the defense of a friendly target, commanding up to 3 enemies attacking the target to attack the Paladin instead.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Shoulder_37",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [31]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Repentance",
2					["Left2"] = "355 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "20 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Puts the enemy target in a state of meditation, incapacitating them for up to 1 min.  Any damage caused will awaken the target.  Usable against Demons, Dragonkin, Giants, Humanoids and Undead.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PrayerOfHealing",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [32]
0			{
2				["Tooltip"] = {
2					["Left6"] = "|cff00ff00<Made by Smacker>|r",
2					["Left1"] = "Endless Mana Potion",
2					["Left4"] = "Use: Restores 1800 to 3000 mana.",
2					["Left5"] = "\"Not consumed when used.\"",
2					["Left3"] = "Requires Alchemy (400)",
2					["NumLines"] = 6,
2					["Left2"] = "Soulbound",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 1,
2				["Texture"] = "Interface\\Icons\\INV_Alchemy_EndlessFlask_04",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [33]
0			{
2				["ActionText"] = "Dam",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PowerWordBarrier",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [34]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Lifeblood",
2					["Left2"] = "Instant",
2					["Right1"] = "Rank 6",
2					["Left3"] = "Uses your skill in Herbalism to absorb energy and nutrients from the earth, healing you for 3600 over 5 sec.  Can be used while stealthed or invisible.<CR><LF><CR><LF>Target must be level 55 or higher.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Nature_WispSplodeGreen",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [35]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Fel Blossom",
2					["Left2"] = "Requires Level 60",
2					["Left3"] = "Requires Herbalism (275)",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Absorbs 750 to 1250 damage.  Lasts 15 sec.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 2,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Herb_Felblossom",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [36]
0			{
2				["ActionText"] = "Dump",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_MarkedForDeath",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [37]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Crystal of the Frozen Grip",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Unique",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Place the Crystal of the Frozen Grip, severely hindering the movement of all nearby wolvar. (30 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Gem_CrystalCut_01",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [38]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Crystal of Unstable Energy",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Unique",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Place the Crystal of Unstable Energy, firing frequent bolts of energy at nearby wolvar. (30 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Gem_EmeraldRough_02",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [39]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Crystal of the Violent Storm",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Unique",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Place the Crystal of the Violent Storm, summoning a storm to damage all nearby wolvar. (15 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Gem_Diamond_02",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [40]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Energized Polished Crystal",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Use: Unleashes the power of the Great Ones, increasing resistance to damage and siphoning energy with all damage dealt.",
2					["NumLines"] = 3,
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Gem_Pearl_06",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [41]
0			{
2				["ActionText"] = "Tiger",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [42]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [43]
0			{
2				["ActionText"] = "Frog",
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_QuestionMark",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [44]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Basic Campfire",
2					["Left2"] = "10 sec cast",
2					["Left3"] = "Builds a campfire that increases the spirits of those nearby by 4 and allows cooking.",
2					["Right2"] = "5 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Fire_Fire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [45]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Spring Robes",
2					["Left2"] = "Binds when picked up",
2					["Left3"] = "Chest",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Plant a flower. (1 Min Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Chest_Cloth_13",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [46]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [47]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Oracle Orphan Whistle",
2					["Left2"] = "Binds when picked up",
2					["Left5"] = "Use: Right Click to summon and dismiss the orphan you've agreed to look after for Children's Week. (1 Sec Cooldown)",
2					["Left3"] = "Unique",
2					["NumLines"] = 5,
2					["Left4"] = "Duration: 7 days",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_BeastCall",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [48]
0			{
2				["ActionText"] = "Off",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_Eclipse",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [49]
0			{
2				["ActionText"] = "On",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Druid_EclipseOrange",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [50]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [51]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [52]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "10-20 yd range",
2					["Left1"] = "Fishing",
2					["Left4"] = "Requires Fishing Poles",
2					["Left5"] = "Equip a fishing pole and find a body of water to fish.  Right-Click on the bob in the water when it splashes to catch your fish.  Higher skill increases your chance of fishing successfully in higher level areas.",
2					["Left3"] = "Channeled",
2					["NumLines"] = 5,
2					["Right1"] = "Grand Master",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Trade_Fishing",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [53]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Consecrated Sharpening Stone",
2					["Left2"] = "Binds when picked up",
2					["Left3"] = "Requires Level 50",
2					["NumLines"] = 4,
2					["Left4"] = "Use: While applied to target weapon it increases attack power against undead by 170. Lasts for 1 hour. Cannot be applied to items higher than level 165. (1 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Stone_SharpeningStone_02",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [54]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Spear of Hodir",
2					["Left2"] = "Quest Item",
2					["Left3"] = "Unique",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Hurls the Spear of Hodir at a Wild Wyrm in the Valley of Ancient Winters. (20 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Spear_04",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [55]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [56]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [57]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [58]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [59]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Titanium Seal of Dalaran",
2					["Left2"] = "Binds when picked up",
2					["Left3"] = "Use: Toss your luck! (10 Sec Cooldown)",
2					["NumLines"] = 4,
2					["Left4"] = "\"Holding the coin up to your eye reveals a level of craftsmanship that you have rarely seen.\"",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Coin_18",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [60]
0			{
2				["ActionText"] = "DS",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PowerWordBarrier",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [61]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Baby Spice",
2					["Left2"] = "Soulbound",
2					["Left3"] = "Use: Reduces the target's size by 50% turning them into a baby. (10 Sec Cooldown)",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 19,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Powder_Green",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [62]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Old Spices",
2					["Left2"] = "Soulbound",
2					["Left3"] = "Use: The aged spices make the target smell great. (10 Sec Cooldown)",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 20,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Powder_Purple",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [63]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Hearthstone",
2					["Left2"] = "Soulbound",
2					["Left3"] = "Unique",
2					["NumLines"] = 4,
2					["Left4"] = "Use: Returns you to Dalaran.  Speak to an Innkeeper in a different place to change your home location. (30 Min Cooldown)",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 1,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Rune_01",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [64]
0			{
2				["ActionText"] = "Help",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Mage_ChilledToTheBone",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [65]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [66]
0			{
2				["ActionText"] = "Love",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_BrokenHeart",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [67]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Magic Eater",
2					["Left2"] = "Requires Level 70",
2					["Left3"] = "Use: Restores 18480 health over 30 sec.  Must remain seated while eating.  If you spend at least 10 seconds eating you aren't real sure what will happen.",
2					["NumLines"] = 4,
2					["Left4"] = " ",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Fish_73",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [68]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Blessed Wizard Oil",
2					["Left2"] = "Soulbound",
2					["Left3"] = "Requires Level 50",
2					["NumLines"] = 4,
2					["Left4"] = "Use: While applied to target weapon it increases spell damage against undead by up to 100. Lasts for 1 hour. Cannot be applied to items higher than level 165. (1 Sec Cooldown)",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 13,
2				["Texture"] = "Interface\\Icons\\INV_Potion_26",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [69]
0			{
2				["ActionText"] = "BubH",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Hunter_Readiness",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [70]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Massive Seaforium Charge",
2					["Left2"] = "Strand of the Ancients",
2					["Left5"] = "Seaforium charges will be dropped on death.",
2					["Left3"] = "Unique",
2					["NumLines"] = 5,
2					["Left4"] = "Use: Places a massive seaforium charge which will detonate after 10 seconds. (1 Sec Cooldown)",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Bomb_05",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [71]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Skywitch's Drape",
2					["Left2"] = "Soulbound",
2					["Left5"] = "+15 Intellect",
2					["Left7"] = "Requires Sha'tari Skyguard - Revered",
2					["Left10"] = " ",
2					["Left9"] = "Use: Reduces your fall speed for 10 sec. (30 Min Cooldown)",
2					["Left4"] = "78 Armor",
2					["Left3"] = "Back",
2					["Left6"] = "Requires Level 70",
2					["NumLines"] = 10,
2					["Left8"] = "Equip: Increases spell power by 30.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 1,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Cape_05",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [72]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "197 Mana",
2					["Right1"] = "Rank 10",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 687 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [73]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "197 Mana",
2					["Right1"] = "Rank 9",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 92 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [74]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Kings",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing total stats by 10% for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Magic_MageArmor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [75]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Righteous Fury",
2					["Left2"] = "948 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the threat generated by your Holy spells by 90%.  Lasts until cancelled.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfFury",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [76]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hand of Protection",
2					["Left2"] = "236 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left4"] = "A targeted party or raid member is protected from all physical attacks for 10 sec, but during that time they cannot attack or use physical abilities.  Players may only have one Hand on them per Paladin at any one time.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be targeted on players who have used Avenging Wrath within the last 30 sec.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Right1"] = "Rank 3",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfProtection",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [77]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hand of Sacrifice",
2					["Left2"] = "236 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the party or raid member, transfering 30% damage taken to the caster.  Lasts 12 sec or until the caster has transfered 100% of their maximum health.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [78]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left2"] = "395 Mana",
2					["Right1"] = "Rank 5",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 687 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |nSymbol of Kings",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 110,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [79]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left2"] = "434 Mana",
2					["Right1"] = "Rank 5",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 92 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left4"] = "Reagents: |nSymbol of Kings",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 110,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [80]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Kings",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Kings, increasing total stats by 10% for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "474 Mana",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 110,
2				["Texture"] = "Interface\\Icons\\Spell_Magic_GreaterBlessingofKings",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [81]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Divine Sacrifice",
2					["Left2"] = "Instant",
2					["Left3"] = "40% of all damage taken by party or raid members within 30 yards is redirected to the Paladin (up to a maximum of 150% of the Paladin's health).  Lasts 10 sec.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\spell_holy_powerwordbarrier",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [82]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hand of Salvation",
2					["Left2"] = "236 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the party or raid member, reducing their total threat by 2% every 1 sec. for 10 sec.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSalvation",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [83]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left1"] = "Hand of Freedom",
2					["Left2"] = "236 Mana",
2					["Right3"] = "25 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the friendly target, granting immunity to movement impairing effects for 10 sec.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfValor",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [84]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [85]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [86]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [87]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [88]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [89]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [90]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [91]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [92]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [93]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [94]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [95]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [96]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [97]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Alchemy",
2					["Left2"] = "Allows an alchemist to brew extraordinary potions up to a maximum potential skill of 450.",
2					["Right1"] = "Grand Master",
2					["NumLines"] = 2,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Trade_Alchemy",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [98]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [99]
0			{
2				["ActionText"] = "Help",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Ability_Mage_ChilledToTheBone",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2				["HasAction"] = 1,
2			}, -- [100]
0			{
2				["Tooltip"] = {
2					["Left1"] = "First Aid",
2					["Left2"] = "Allows a physician to make and use bandages up to a potential skill of 450.   Cloth used to make bandages is found on humanoids.",
2					["Right1"] = "Grand Master",
2					["NumLines"] = 2,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [101]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Cooking",
2					["Left2"] = "Allows a cook to make amazing recipes up to a maximum potential skill of 450.",
2					["Right1"] = "Grand Master",
2					["NumLines"] = 2,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\INV_Misc_Food_15",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [102]
0			{
2				["Tooltip"] = {
2					["Left1"] = "Basic Campfire",
2					["Left2"] = "10 sec cast",
2					["Left3"] = "Builds a campfire that increases the spirits of those nearby by 4 and allows cooking.",
2					["Right2"] = "5 min cooldown",
2					["NumLines"] = 3,
2				},
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Fire_Fire",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [103]
0			{
2				["HasRange"] = 1,
2				["Tooltip"] = {
2					["Left2"] = "10-20 yd range",
2					["Left1"] = "Fishing",
2					["Left4"] = "Requires Fishing Poles",
2					["Left5"] = "Equip a fishing pole and find a body of water to fish.  Right-Click on the bob in the water when it splashes to catch your fish.  Higher skill increases your chance of fishing successfully in higher level areas.",
2					["Left3"] = "Channeled",
2					["NumLines"] = 5,
2					["Right1"] = "Grand Master",
2				},
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Trade_Fishing",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [104]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [105]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [106]
0			{
2				["ActionText"] = "DS",
2				["UsableAction"] = 1,
2				["Count"] = 0,
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PowerWordBarrier",
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 1,
2				},
2				["HasAction"] = 1,
2			}, -- [107]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [108]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [109]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [110]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [111]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [112]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [113]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [114]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [115]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [116]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [117]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [118]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
2			}, -- [119]
0			{
2				["Count"] = 0,
2				["Cooldown"] = {
2					["Start"] = 0,
2					["Duration"] = 0,
2					["Enabled"] = 0,
2				},
0			}, -- [120]
2		},
2		["SpellBook"] = {
0			{
2				["Name"] = "Alchemy",
2				["Texture"] = "Interface\\Icons\\Trade_Alchemy",
2				["Tooltip"] = {
2					["Left1"] = "Alchemy",
2					["NumLines"] = 2,
2					["Left2"] = "Allows an alchemist to brew extraordinary potions up to a maximum potential skill of 450.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Grand Master",
2			}, -- [1]
0			{
2				["Name"] = "Attack",
2				["Texture"] = "Interface\\Icons\\INV_Mace_84",
2				["Tooltip"] = {
2					["Left1"] = "Attack",
2					["NumLines"] = 2,
2					["Left2"] = "18.44% chance to crit",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [2]
0			{
2				["Name"] = "Basic Campfire",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_Fire",
2				["Tooltip"] = {
2					["Left1"] = "Basic Campfire",
2					["Left2"] = "10 sec cast",
2					["Left3"] = "Builds a campfire that increases the spirits of those nearby by 4 and allows cooking.",
2					["Right2"] = "5 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [3]
0			{
2				["Name"] = "Block",
2				["Texture"] = "Interface\\Icons\\Ability_Defend",
2				["Tooltip"] = {
2					["Left1"] = "Block",
2					["Left2"] = "Requires Shield",
2					["Left3"] = "5.00% chance to block",
2					["NumLines"] = 4,
2					["Left4"] = "Gives a chance to block enemy melee and ranged attacks.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [4]
0			{
2				["Name"] = "Cold Weather Flying",
2				["Texture"] = "Interface\\Icons\\Spell_Frost_ArcticWinds",
2				["Tooltip"] = {
2					["Left1"] = "Cold Weather Flying",
2					["NumLines"] = 2,
2					["Left2"] = "Allows the player to ride flying mounts in Northrend.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [5]
0			{
2				["Name"] = "Cooking",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Food_15",
2				["Tooltip"] = {
2					["Left1"] = "Cooking",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a cook to make amazing recipes up to a maximum potential skill of 450.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Grand Master",
2			}, -- [6]
0			{
2				["Name"] = "Diplomacy",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Note_02",
2				["Tooltip"] = {
2					["Left1"] = "Diplomacy",
2					["NumLines"] = 2,
2					["Left2"] = "Reputation gains increased by 10%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [7]
0			{
2				["Name"] = "Dodge",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Invisibilty",
2				["Tooltip"] = {
2					["Left1"] = "Dodge",
2					["Left2"] = "5.31% chance to dodge",
2					["Left3"] = "Gives a chance to dodge enemy melee attacks.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [8]
0			{
2				["Name"] = "Every Man for Himself",
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_Charm",
2				["Tooltip"] = {
2					["Left1"] = "Every Man for Himself",
2					["Left2"] = "Instant",
2					["Left3"] = "Removes all movement impairing effects and all effects which cause loss of control of your character.  This effect shares a cooldown with other similar effects.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial",
2			}, -- [9]
0			{
2				["Name"] = "Find Fish",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Fish_02",
2				["Tooltip"] = {
2					["Left1"] = "Find Fish",
2					["Left2"] = "Instant",
2					["Left3"] = "Nearby fishing nodes appear on the minimap. Only one form of tracking can be active at a time.",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [10]
0			{
2				["Name"] = "Find Herbs",
2				["Texture"] = "Interface\\Icons\\INV_Misc_Flower_02",
2				["Tooltip"] = {
2					["Left1"] = "Find Herbs",
2					["Left2"] = "Instant",
2					["Left3"] = "Nearby herb bushes appear on the minimap. Only one form of tracking can be active at a time.",
2					["Right2"] = "1.5 sec cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [11]
0			{
2				["Name"] = "First Aid",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Tooltip"] = {
2					["Left1"] = "First Aid",
2					["NumLines"] = 2,
2					["Left2"] = "Allows a physician to make and use bandages up to a potential skill of 450.   Cloth used to make bandages is found on humanoids.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Grand Master",
2			}, -- [12]
0			{
2				["Name"] = "Fishing",
2				["Texture"] = "Interface\\Icons\\Trade_Fishing",
2				["Tooltip"] = {
2					["Left1"] = "Fishing",
2					["Left2"] = "10-20 yd range",
2					["Left5"] = "Equip a fishing pole and find a body of water to fish.  Right-Click on the bob in the water when it splashes to catch your fish.  Higher skill increases your chance of fishing successfully in higher level areas.",
2					["Left3"] = "Channeled",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Fishing Poles",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Grand Master",
2			}, -- [13]
0			{
2				["Name"] = "Lifeblood",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_WispSplodeGreen",
2				["Tooltip"] = {
2					["Left1"] = "Lifeblood",
2					["Left2"] = "Instant",
2					["Left3"] = "Uses your skill in Herbalism to absorb energy and nutrients from the earth, healing you for 3600 over 5 sec.  Can be used while stealthed or invisible.<CR><LF><CR><LF>Target must be level 55 or higher.",
2					["Right2"] = "3 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [14]
0			{
2				["Name"] = "Mace Specialization",
2				["Texture"] = "Interface\\Icons\\INV_Hammer_05",
2				["Tooltip"] = {
2					["Left1"] = "Mace Specialization",
2					["Left2"] = "Requires One-Handed Maces, Two-Handed Maces",
2					["Left3"] = "Expertise with Maces and Two-Handed Maces increased by 3.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [15]
0			{
2				["Name"] = "Mixology",
2				["Texture"] = "Interface\\Icons\\INV_Potion_112",
2				["Tooltip"] = {
2					["Left1"] = "Mixology",
2					["NumLines"] = 2,
2					["Left2"] = "You receive an increased effect and duration when you drink any elixir or flask you are able to make.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [16]
0			{
2				["Name"] = "Parry",
2				["Texture"] = "Interface\\Icons\\Ability_Parry",
2				["Tooltip"] = {
2					["Left1"] = "Parry",
2					["Left2"] = "Requires Melee Weapon",
2					["Left3"] = "5.00% chance to parry",
2					["NumLines"] = 4,
2					["Left4"] = "Gives a chance to parry enemy melee attacks.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Passive",
2			}, -- [17]
0			{
2				["Name"] = "Perception",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_Sleep",
2				["Tooltip"] = {
2					["Left1"] = "Perception",
2					["NumLines"] = 2,
2					["Left2"] = "Increases your Stealth detection.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [18]
0			{
2				["Name"] = "Sword Specialization",
2				["Texture"] = "Interface\\Icons\\Ability_MeleeDamage",
2				["Tooltip"] = {
2					["Left1"] = "Sword Specialization",
2					["Left2"] = "Requires One-Handed Swords, Two-Handed Swords",
2					["Left3"] = "Expertise with Swords and Two-Handed Swords increased by 3.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [19]
0			{
2				["Name"] = "The Human Spirit",
2				["Texture"] = "Interface\\Icons\\INV_Enchant_ShardBrilliantSmall",
2				["Tooltip"] = {
2					["Left1"] = "The Human Spirit",
2					["NumLines"] = 2,
2					["Left2"] = "Spirit increased by 3%.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Racial Passive",
2			}, -- [20]
0			{
2				["Name"] = "Transmutation Master",
2				["Texture"] = "Interface\\Icons\\INV_Relics_TotemofLife",
2				["Tooltip"] = {
2					["Left1"] = "Transmutation Master",
2					["NumLines"] = 2,
2					["Left2"] = "Allows an Alchemist to sometimes get greater results when transmuting materials.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [21]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 10 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [22]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 15 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [23]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 20 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [24]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 25 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [25]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 30 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [26]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 33 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [27]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 41 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [28]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 73 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [29]
0			{
2				["Name"] = "Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Wisdom",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, restoring 92 mana every 5 seconds for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [30]
0			{
2				["Name"] = "Cleanse",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Renew",
2				["Tooltip"] = {
2					["Left1"] = "Cleanse",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Cleanses a friendly target, removing 1 poison effect, 1 disease effect, and 1 magic effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [31]
0			{
2				["Name"] = "Concentration Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_MindSooth",
2				["Tooltip"] = {
2					["Left1"] = "Concentration Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "All party or raid members within 40 yards lose 35% less casting or channeling time when damaged.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [32]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "1027 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 784 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [33]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "1027 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 848 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [34]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "1027 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 936 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [35]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "1027 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1048 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [36]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "1027 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1160 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [37]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "869 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1288 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [38]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "869 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1408 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [39]
0			{
2				["Name"] = "Consecration",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_InnerFire",
2				["Tooltip"] = {
2					["Left1"] = "Consecration",
2					["Left2"] = "869 Mana",
2					["Right3"] = "10 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Consecrates the land beneath the Paladin, doing 1616 Holy damage over 10 sec to enemies who enter the area.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [40]
0			{
2				["Name"] = "Divine Plea",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Aspiration",
2				["Tooltip"] = {
2					["Left1"] = "Divine Plea",
2					["Left2"] = "Instant",
2					["Left3"] = "You gain 25% of your total mana over 15 sec, but the amount healed by your Flash of Light, Holy Light, and Holy Shock spells is reduced by 50%.",
2					["Right2"] = "1 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [41]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 471 to 491 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [42]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 578 to 609 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [43]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 685 to 729 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [44]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 822 to 883 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [45]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 963 to 1036 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [46]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "395 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 1117 to 1204 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [47]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "315 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 1280 to 1386 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [48]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "315 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 1418 to 1540 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [49]
0			{
2				["Name"] = "Exorcism",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism_02",
2				["Tooltip"] = {
2					["Left1"] = "Exorcism",
2					["Left2"] = "315 Mana",
2					["Right3"] = "15 sec cooldown",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Causes 1728 to 1888 Holy damage to an enemy target.  If the target is Undead or Demon, it will always critically hit.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [50]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 86 to 98.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [51]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 130 to 151.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [52]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 197 to 219.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [53]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 265 to 298.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [54]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 357 to 401.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [55]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "351 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 458 to 512.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [56]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "307 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 600 to 670.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [57]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "307 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 695 to 778.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [58]
0			{
2				["Name"] = "Flash of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FlashHeal",
2				["Tooltip"] = {
2					["Left1"] = "Flash of Light",
2					["Left2"] = "307 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 788 to 883.  If the target has the Sacred Shield effect, they heal an additional 100% over 12 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [59]
0			{
2				["Name"] = "Greater Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 30 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "513 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [60]
0			{
2				["Name"] = "Greater Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 33 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "513 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [61]
0			{
2				["Name"] = "Greater Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 41 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "434 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [62]
0			{
2				["Name"] = "Greater Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 73 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "434 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [63]
0			{
2				["Name"] = "Greater Blessing of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofWisdom",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Wisdom",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Wisdom, restoring 92 mana every 5 seconds for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "434 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [64]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 53 to 64.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [65]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 101 to 122.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [66]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 211 to 248.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [67]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 409 to 467.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [68]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 643 to 724.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [69]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 913 to 1017.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [70]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1232 to 1372.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [71]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 1621 to 1803.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [72]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 2063 to 2295.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [73]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1493 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 2264 to 2518.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [74]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1274 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 2846 to 3166.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 11",
2			}, -- [75]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1274 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 4240 to 4719.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 12",
2			}, -- [76]
0			{
2				["Name"] = "Holy Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HolyBolt",
2				["Tooltip"] = {
2					["Left1"] = "Holy Light",
2					["Left2"] = "1274 Mana",
2					["Left3"] = "2.43 sec cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for 4888 to 5444.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 13",
2			}, -- [77]
0			{
2				["Name"] = "Holy Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "948 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Sends bolts of holy power in all directions, causing 561 to 634 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [78]
0			{
2				["Name"] = "Holy Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "948 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Sends bolts of holy power in all directions, causing 714 to 813 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [79]
0			{
2				["Name"] = "Holy Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "790 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Sends bolts of holy power in all directions, causing 941 to 1078 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [80]
0			{
2				["Name"] = "Holy Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "790 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Sends bolts of holy power in all directions, causing 1025 to 1175 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [81]
0			{
2				["Name"] = "Holy Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Excorcism",
2				["Tooltip"] = {
2					["Left1"] = "Holy Wrath",
2					["Left2"] = "790 Mana",
2					["Right3"] = "30 sec cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Sends bolts of holy power in all directions, causing 1214 to 1398 Holy damage and stunning all Undead and Demon targets within 10 yds for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [82]
0			{
2				["Name"] = "Lay on Hands",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_LayOnHands",
2				["Tooltip"] = {
2					["Left1"] = "Lay on Hands",
2					["Left2"] = "40 yd range",
2					["Right3"] = "15 min cooldown",
2					["Left3"] = "Instant",
2					["NumLines"] = 4,
2					["Left4"] = "Heals a friendly target for an amount equal to the Paladin's maximum health and restores 1950 of their mana.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [83]
0			{
2				["Name"] = "Purify",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Purify",
2				["Tooltip"] = {
2					["Left1"] = "Purify",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Purifies the friendly target, removing 1 disease effect and 1 poison effect.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [84]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 65 health and 120 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [85]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 150 health and 260 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [86]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 250 health and 420 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [87]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 400 health and 600 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [88]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 600 health and 800 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [89]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 1400 health and 1060 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [90]
0			{
2				["Name"] = "Redemption",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Resurrection",
2				["Tooltip"] = {
2					["Left1"] = "Redemption",
2					["Left2"] = "2812 Mana",
2					["Left3"] = "9.71 sec cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Brings a dead player back to life with 1760 health and 1320 mana.  Cannot be cast when in combat.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [91]
0			{
2				["Name"] = "Sacred Shield",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_BlessedMending",
2				["Tooltip"] = {
2					["Left1"] = "Sacred Shield",
2					["Left2"] = "474 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Each time the target takes damage they gain a Sacred Shield, absorbing 600 damage and increasing the paladin's chance to critically hit with Flash of Light by 50% for up to 12 sec.  They cannot gain this effect more than once every 6 sec.  Lasts 1 min.  This spell cannot be on more than one target at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [92]
0			{
2				["Name"] = "Seal of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_HealingAura",
2				["Tooltip"] = {
2					["Left1"] = "Seal of Light",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with divine light for 30 min, giving each melee attack a chance to heal the Paladin for 334.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [93]
0			{
2				["Name"] = "Seal of Righteousness",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderBolt",
2				["Tooltip"] = {
2					["Left1"] = "Seal of Righteousness",
2					["Left2"] = "492 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with holy spirit for 30 min, granting each melee attack 199 additional Holy damage.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will cause 507 Holy damage to an enemy.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [94]
0			{
2				["Name"] = "Seal of Wisdom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RighteousnessAura",
2				["Tooltip"] = {
2					["Left1"] = "Seal of Wisdom",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with divine wisdom for 30 min, giving each melee attack a chance to restore 4% of the paladin's maximum mana.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [95]
0			{
2				["Name"] = "Sense Undead",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SenseUndead",
2				["Tooltip"] = {
2					["Left1"] = "Sense Undead",
2					["Left2"] = "Instant",
2					["Left3"] = "Shows the location of all nearby undead on the minimap until cancelled.   Only one form of tracking can be active at a time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [96]
0			{
2				["Name"] = "Turn Evil",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_TurnUndead",
2				["Tooltip"] = {
2					["Left1"] = "Turn Evil",
2					["Left2"] = "395 Mana",
2					["Left3"] = "1.46 sec cast",
2					["Right2"] = "20 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "The targeted undead or demon enemy will be compelled to flee for up to 20 sec.  Damage caused may interrupt the effect.  Only one target can be turned at a time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [97]
0			{
2				["Name"] = "Blessing of Kings",
2				["Texture"] = "Interface\\Icons\\Spell_Magic_MageArmor",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Kings",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing total stats by 10% for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [98]
0			{
2				["Name"] = "Devotion Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_DevotionAura",
2				["Tooltip"] = {
2					["Left1"] = "Devotion Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Gives 1205 additional armor to party and raid members within 40 yards.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [99]
0			{
2				["Name"] = "Divine Intervention",
2				["Texture"] = "Interface\\Icons\\Spell_Nature_TimeStop",
2				["Tooltip"] = {
2					["Left2"] = "40 yd range",
2					["Left1"] = "Divine Intervention",
2					["Left4"] = "Reagents: |nSymbol of Divinity",
2					["Left5"] = "The paladin sacrifices himself to remove the targeted party member from harm's way.  Enemies will stop attacking the protected party member, who will be immune to all harmful attacks but will not be able to take any action for 3 min.",
2					["Left3"] = "Instant",
2					["NumLines"] = 5,
2					["Right3"] = "20 min cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [100]
0			{
2				["Name"] = "Divine Protection",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_Restoration",
2				["Tooltip"] = {
2					["Left1"] = "Divine Protection",
2					["Left2"] = "117 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Reduces all damage taken by 50% for 12 sec.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be used within 30 sec of using Avenging Wrath.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [101]
0			{
2				["Name"] = "Divine Sacrifice",
2				["Texture"] = "Interface\\Icons\\spell_holy_powerwordbarrier",
2				["Tooltip"] = {
2					["Left1"] = "Divine Sacrifice",
2					["Left2"] = "Instant",
2					["Left3"] = "40% of all damage taken by party or raid members within 30 yards is redirected to the Paladin (up to a maximum of 150% of the Paladin's health).  Lasts 10 sec.",
2					["Right2"] = "2 min cooldown",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [102]
0			{
2				["Name"] = "Divine Shield",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_DivineIntervention",
2				["Tooltip"] = {
2					["Left1"] = "Divine Shield",
2					["Left2"] = "117 Mana",
2					["Right3"] = "5 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Protects the paladin from all damage and spells for 12 sec, but reduces all damage you deal by 50%.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be used within 30 sec. of using Avenging Wrath.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [103]
0			{
2				["Name"] = "Fire Resistance Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Fire_SealOfFire",
2				["Tooltip"] = {
2					["Left1"] = "Fire Resistance Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Gives 130 additional Fire resistance to all party and raid members within 40 yards.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [104]
0			{
2				["Name"] = "Frost Resistance Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Frost_WizardMark",
2				["Tooltip"] = {
2					["Left1"] = "Frost Resistance Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Gives 130 additional Frost resistance to all party and raid members within 40 yards.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [105]
0			{
2				["Name"] = "Greater Blessing of Kings",
2				["Texture"] = "Interface\\Icons\\Spell_Magic_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Kings",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Kings, increasing total stats by 10% for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "474 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [106]
0			{
2				["Name"] = "Hammer of Justice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfMight",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Justice",
2					["Left2"] = "117 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Stuns the target for 3 sec and interrupts non-player spellcasting for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [107]
0			{
2				["Name"] = "Hammer of Justice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfMight",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Justice",
2					["Left2"] = "117 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Stuns the target for 4 sec and interrupts non-player spellcasting for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [108]
0			{
2				["Name"] = "Hammer of Justice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfMight",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Justice",
2					["Left2"] = "117 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Stuns the target for 5 sec and interrupts non-player spellcasting for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [109]
0			{
2				["Name"] = "Hammer of Justice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfMight",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Justice",
2					["Left2"] = "117 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Stuns the target for 6 sec and interrupts non-player spellcasting for 3 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [110]
0			{
2				["Name"] = "Hand of Freedom",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfValor",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Freedom",
2					["Left2"] = "236 Mana",
2					["Right3"] = "25 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the friendly target, granting immunity to movement impairing effects for 10 sec.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [111]
0			{
2				["Name"] = "Hand of Protection",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfProtection",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Protection",
2					["Left2"] = "236 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "A targeted party or raid member is protected from all physical attacks for 6 sec, but during that time they cannot attack or use physical abilities.  Players may only have one Hand on them per Paladin at any one time.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be targeted on players who have used Avenging Wrath within the last 30 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [112]
0			{
2				["Name"] = "Hand of Protection",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfProtection",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Protection",
2					["Left2"] = "236 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "A targeted party or raid member is protected from all physical attacks for 8 sec, but during that time they cannot attack or use physical abilities.  Players may only have one Hand on them per Paladin at any one time.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be targeted on players who have used Avenging Wrath within the last 30 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [113]
0			{
2				["Name"] = "Hand of Protection",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfProtection",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Protection",
2					["Left2"] = "236 Mana",
2					["Right3"] = "3 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "A targeted party or raid member is protected from all physical attacks for 10 sec, but during that time they cannot attack or use physical abilities.  Players may only have one Hand on them per Paladin at any one time.  Once protected, the target cannot be protected by Divine Shield, Divine Protection or Hand of Protection again for 2 min.  Cannot be targeted on players who have used Avenging Wrath within the last 30 sec.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [114]
0			{
2				["Name"] = "Hand of Reckoning",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_UnyieldingFaith",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Reckoning",
2					["Left2"] = "117 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Taunts the target to attack you.  If the target is not currently targeting you, causes 857 Holy damage.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [115]
0			{
2				["Name"] = "Hand of Sacrifice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSacrifice",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Sacrifice",
2					["Left2"] = "236 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the party or raid member, transfering 30% damage taken to the caster.  Lasts 12 sec or until the caster has transfered 100% of their maximum health.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [116]
0			{
2				["Name"] = "Hand of Salvation",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfSalvation",
2				["Tooltip"] = {
2					["Left1"] = "Hand of Salvation",
2					["Left2"] = "236 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Hand on the party or raid member, reducing their total threat by 2% every 1 sec. for 10 sec.  Players may only have one Hand on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [117]
0			{
2				["Name"] = "Righteous Defense",
2				["Texture"] = "Interface\\Icons\\INV_Shoulder_37",
2				["Tooltip"] = {
2					["Left1"] = "Righteous Defense",
2					["Left2"] = "40 yd range",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant",
2					["NumLines"] = 4,
2					["Left4"] = "Come to the defense of a friendly target, commanding up to 3 enemies attacking the target to attack the Paladin instead.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [118]
0			{
2				["Name"] = "Righteous Fury",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfFury",
2				["Tooltip"] = {
2					["Left1"] = "Righteous Fury",
2					["Left2"] = "948 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Increases the threat generated by your Holy spells by 90%.  Lasts until cancelled.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [119]
0			{
2				["Name"] = "Seal of Justice",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfWrath",
2				["Tooltip"] = {
2					["Left1"] = "Seal of Justice",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with the spirit of justice for 30 min, giving each melee attack a chance to stun for 2 sec.  Only one Seal can be active on the Paladin at any one time.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 403 Holy damage to an enemy.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [120]
0			{
2				["Name"] = "Shadow Resistance Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Shadow_SealOfKings",
2				["Tooltip"] = {
2					["Left1"] = "Shadow Resistance Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Gives 130 additional Shadow resistance to all party and raid members within 40 yards.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [121]
0			{
2				["Name"] = "Shield of Righteousness",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_ShieldofVengeance",
2				["Tooltip"] = {
2					["Left1"] = "Shield of Righteousness",
2					["Left2"] = "236 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left5"] = "Slam the target with your shield, causing Holy damage based on your block value plus an additional 390.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Shields",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [122]
0			{
2				["Name"] = "Shield of Righteousness",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_ShieldofVengeance",
2				["Tooltip"] = {
2					["Left1"] = "Shield of Righteousness",
2					["Left2"] = "236 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left5"] = "Slam the target with your shield, causing Holy damage based on your block value plus an additional 520.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Shields",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [123]
0			{
2				["Name"] = "Avenging Wrath",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_AvengineWrath",
2				["Tooltip"] = {
2					["Left1"] = "Avenging Wrath",
2					["Left2"] = "315 Mana",
2					["Right3"] = "2 min cooldown",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Increases all damage and healing caused by 20% for 20 sec.  Cannot be used within 30 sec of being the target of Divine Shield, Divine Protection, or Hand of Protection.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [124]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 25 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [125]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 43 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [126]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 68 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [127]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 106 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [128]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 162 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [129]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 231 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [130]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "236 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 290 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [131]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 382 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 8",
2			}, -- [132]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 512 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 9",
2			}, -- [133]
0			{
2				["Name"] = "Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_FistOfJustice",
2				["Tooltip"] = {
2					["Left1"] = "Blessing of Might",
2					["Left2"] = "197 Mana",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Places a Blessing on the friendly target, increasing attack power by 687 for 10 min.  Players may only have one Blessing on them per Paladin at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 10",
2			}, -- [134]
0			{
2				["Name"] = "Crusader Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_CrusaderAura",
2				["Tooltip"] = {
2					["Left1"] = "Crusader Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Increases the mounted speed by 20% for all party and raid members within 40 yards.  Players may only have one Aura on them per Paladin at any one time.  This does not stack with other movement speed increasing effects.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [135]
0			{
2				["Name"] = "Crusader Strike",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_CrusaderStrike",
2				["Tooltip"] = {
2					["Left1"] = "Crusader Strike",
2					["Left2"] = "197 Mana",
2					["Right3"] = "4 sec cooldown",
2					["Left5"] = "An instant strike that causes 93% weapon damage.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "Melee Range",
2					["NumLines"] = 5,
2					["Left4"] = "Requires Melee Weapon",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [136]
0			{
2				["Name"] = "Divine Storm",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_DivineStorm",
2				["Tooltip"] = {
2					["Left2"] = "474 Mana",
2					["Left1"] = "Divine Storm",
2					["Left4"] = "Requires Melee Weapon",
2					["Left5"] = "An instant weapon attack that causes 110% of weapon damage to up to 4 enemies within 8 yards.  The Divine Storm heals up to 3 party or raid members totaling 25% of the damage caused.",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 5,
2					["Right3"] = "10 sec cooldown",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [137]
0			{
2				["Name"] = "Greater Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 231 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "474 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [138]
0			{
2				["Name"] = "Greater Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 290 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "474 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [139]
0			{
2				["Name"] = "Greater Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 382 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "395 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [140]
0			{
2				["Name"] = "Greater Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 512 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "395 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [141]
0			{
2				["Name"] = "Greater Blessing of Might",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_GreaterBlessingofKings",
2				["Tooltip"] = {
2					["Left1"] = "Greater Blessing of Might",
2					["Left4"] = "Reagents: |nSymbol of Kings",
2					["Left5"] = "Gives all members of the raid or group that share the same class with the target the Greater Blessing of Might, increasing attack power by 687 for 30 min.  Players may only have one Blessing on them per Paladin at any one time.",
2					["Left3"] = "Instant cast",
2					["Right2"] = "40 yd range",
2					["NumLines"] = 5,
2					["Left2"] = "395 Mana",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [142]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "553 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 697 to 733 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 1",
2			}, -- [143]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "553 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 806 to 855 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 2",
2			}, -- [144]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "553 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 919 to 978 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 3",
2			}, -- [145]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "474 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 1081 to 1157 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 4",
2			}, -- [146]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "474 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 1228 to 1320 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 5",
2			}, -- [147]
0			{
2				["Name"] = "Hammer of Wrath",
2				["Texture"] = "Interface\\Icons\\Ability_ThunderClap",
2				["Tooltip"] = {
2					["Left1"] = "Hammer of Wrath",
2					["Left2"] = "474 Mana",
2					["Right3"] = "6 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "30 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Hurls a hammer that strikes an enemy for 1473 to 1591 Holy damage.  Only usable on enemies that have 20% or less health.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 6",
2			}, -- [148]
0			{
2				["Name"] = "Judgement of Justice",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_JudgementRed",
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Justice",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy for 20 sec, preventing them from fleeing and limiting their movement speed.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [149]
0			{
2				["Name"] = "Judgement of Light",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_RighteousFury",
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Light",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy for 20 sec, granting attacks made against the judged enemy a chance of healing the attacker for 2% of their maximum health.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [150]
0			{
2				["Name"] = "Judgement of Wisdom",
2				["Texture"] = "Interface\\Icons\\Ability_Paladin_JudgementBlue",
2				["Tooltip"] = {
2					["Left1"] = "Judgement of Wisdom",
2					["Left2"] = "197 Mana",
2					["Right3"] = "8 sec cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "10 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Unleashes the energy of a Seal spell to judge an enemy, giving each attack a chance to restore 2% of the attacker's base mana.  Refer to individual Seals for additional Judgement effect.  Only one Judgement per Paladin can be active at any one time.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [151]
0			{
2				["Name"] = "Repentance",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_PrayerOfHealing",
2				["Tooltip"] = {
2					["Left1"] = "Repentance",
2					["Left2"] = "355 Mana",
2					["Right3"] = "1 min cooldown",
2					["Left3"] = "Instant cast",
2					["Right2"] = "20 yd range",
2					["NumLines"] = 4,
2					["Left4"] = "Puts the enemy target in a state of meditation, incapacitating them for up to 1 min.  Any damage caused will awaken the target.  Usable against Demons, Dragonkin, Giants, Humanoids and Undead.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
2			}, -- [152]
0			{
2				["Name"] = "Retribution Aura",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_AuraOfLight",
2				["Tooltip"] = {
2					["Left1"] = "Retribution Aura",
2					["Left2"] = "Instant",
2					["Left3"] = "Causes 168 Holy damage to any enemy that strikes a party or raid member within 40 yards.  Players may only have one Aura on them per Paladin at any one time.",
2					["NumLines"] = 3,
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "Rank 7",
2			}, -- [153]
0			{
2				["Name"] = "Seal of Vengeance",
2				["Texture"] = "Interface\\Icons\\Spell_Holy_SealOfVengeance",
2				["Tooltip"] = {
2					["Left1"] = "Seal of Vengeance",
2					["Left2"] = "553 Mana",
2					["Left3"] = "Instant cast",
2					["NumLines"] = 4,
2					["Left4"] = "Fills the Paladin with holy power, causing attacks to apply Holy Vengeance, which deals 247 additional Holy damage over 15 sec.  Holy Vengeance can stack up to 5 times.  Once stacked to 5 times, each of the Paladin's attacks also deals 33% weapon damage as additional Holy damage.  Only one Seal can be active on the Paladin at any one time.  Lasts 30 min.<CR><LF><CR><LF>Unleashing this Seal's energy will deal 353 Holy damage to an enemy, increased by 10% for each application of Holy Vengeance on the target.",
2				},
2				["Cooldown"] = {
2					["Enabled"] = 1,
2					["StartTime"] = 0,
2					["Duration"] = 0,
2				},
2				["Rank"] = "",
0			}, -- [154]
2		},
2		["NumShapeshiftForms"] = 7,
2		["ShapeshiftFormInfo"] = {
0			{
2				["Name"] = "Devotion Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Holy_DevotionAura",
2				["Castable"] = 1,
2			}, -- [1]
0			{
2				["Name"] = "Retribution Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Holy_AuraOfLight",
2				["Castable"] = 1,
2			}, -- [2]
0			{
2				["Name"] = "Concentration Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Holy_MindSooth",
2				["Castable"] = 1,
2			}, -- [3]
0			{
2				["Name"] = "Shadow Resistance Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Shadow_SealOfKings",
2				["Castable"] = 1,
2			}, -- [4]
0			{
2				["Name"] = "Frost Resistance Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Frost_WizardMark",
2				["Castable"] = 1,
2			}, -- [5]
0			{
2				["Name"] = "Fire Resistance Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Fire_SealOfFire",
2				["Castable"] = 1,
2			}, -- [6]
0			{
2				["Castable"] = 1,
2				["Name"] = "Crusader Aura",
2				["Icon"] = "Interface\\Icons\\Spell_Nature_WispSplode",
2				["Active"] = 1,
0			}, -- [7]
2		},
2		["Battlefields"] = {
0			{
2				["Status"] = "none",
2				["Id"] = 0,
2			}, -- [1]
0			{
2				["Status"] = "none",
2				["Id"] = 0,
2			}, -- [2]
0			{
2				["Status"] = "none",
2				["Id"] = 0,
0			}, -- [3]
2		},
2	}

==============================================================================
luaunit.lua
==============================================================================
	--[[ 
0			luaunit.lua
	
0	Description: A unit testing framework
0	Homepage: http://phil.freehackers.org/luaunit/
0	Initial author: Ryu, Gwang (http://www.gpgstudy.com/gpgiki/LuaUnit)
0	Lot of improvements by Philippe Fremy <phil@freehackers.org>
0	Version: 1.3
0	License: X11 License, see LICENSE.txt
	
0	Changes between 1.3 and 1.2a:
0	- port to lua 5.1
0	- use orderedPairs() to iterate over a table in the right order
0	- change the order of expected, actual in assertEquals() and the default value of
0	  USE_EXPECTED_ACTUAL_IN_ASSERT_EQUALS. This can be adjusted with
0	  USE_EXPECTED_ACTUAL_IN_ASSERT_EQUALS.
	
0	Changes between 1.2a and 1.2:
0	- fix: test classes were not run in the right order
	
0	Changes between 1.2 and 1.1:
0	- tests are now run in alphabetical order
0	- fix a bug that would prevent all tests from being run
	
0	Changes between 1.1 and 1.0:
0	- internal variables are not global anymore
0	- you can choose between assertEquals( actual, expected) or assertEquals(
0	  expected, actual )
0	- you can assert for an error: assertError( f, a, b ) will assert that calling
0	  the function f(a,b) generates an error
0	- display the calling stack when an error is spotted
0	- a dedicated class collects and displays the result, to provide easy
0	  customisation
0	- two verbosity level, like in python unittest
0	]]--
	
1	argv = arg
	
	--[[ Some people like assertEquals( actual, expected ) and some people prefer 
0	assertEquals( expected, actual ).
	
0	]]--
1	USE_EXPECTED_ACTUAL_IN_ASSERT_EQUALS = true
	
1	function assertError(f, ...)
		-- assert that calling f with the arguments will raise an error
		-- example: assertError( f, 1, 2 ) => f(1,2) should generate an error
0		local has_error, error_msg = not pcall( f, ... )
0		if has_error then return end 
0		error( "No error generated", 2 )
	end
	
1	function assertEquals(actual, expected, assertName, tol)
		-- assert that two values are equal and calls error else
3		local compare = false;
3		if (type(actual)=="number" and type(expected)=="number") then
0			local actualInt = math.ceil(actual);
0			local expectedInt = math.ceil(expected);
0			if (actualInt == expectedInt) then
0				local diff = actual - expected;
0				if (tol==nil) then tol = 0.0001; end
0				compare = (diff < tol);
			end
		else
3			compare = (actual == expected);
		end
3		if  not compare  then
0			local function wrapValue( v )
0				if type(v) == 'string' then return "\n"..v end
0				return tostring(v)
			end
0			if not USE_EXPECTED_ACTUAL_IN_ASSERT_EQUALS then
0				expected, actual = actual, expected
			end
	
0			local errorMsg
0			local errorPrefix = "expected";
0			if (assertName~=nil) then
0				errorPrefix = assertName.." "..errorPrefix;
			end
0			if type(expected) == 'string' then
0				errorMsg = "\n"..errorPrefix..": "..wrapValue(expected).."\n"..
0	                             "actual  : "..wrapValue(actual).."\n"
			else
0				errorMsg = errorPrefix..": "..wrapValue(expected)..", actual: "..wrapValue(actual)
			end
			--print (errorMsg)
0			error( errorMsg, 2 )
		end
	end
	
1	assert_equals = assertEquals
1	assert_error = assertError
	
1	function wrapFunctions(...)
		-- Use me to wrap a set of functions into a Runnable test class:
		-- TestToto = wrapFunctions( f1, f2, f3, f3, f5 )
		-- Now, TestToto will be picked up by LuaUnit:run()
0		local testClass, testFunction
0		testClass = {}
0		local function storeAsMethod(idx, testName)
0			testFunction = _G[testName]
0			testClass[testName] = testFunction
		end
0		table.foreachi( {...}, storeAsMethod )
0		return testClass
	end
	
1	function __genOrderedIndex( t )
2	    local orderedIndex = {}
12	    for key,_ in pairs(t) do
10	        table.insert( orderedIndex, key )
	    end
2	    table.sort( orderedIndex )
2	    return orderedIndex
	end
	
1	function orderedNext(t, state)
		-- Equivalent of the next() function of table iteration, but returns the
		-- keys in the alphabetic order. We use a temporary ordered key table that
		-- is stored in the table being iterated.
	
	    --print("orderedNext: state = "..tostring(state) )
12	    if state == nil then
	        -- the first time, generate the index
2	        t.__orderedIndex = __genOrderedIndex( t )
2	        key = t.__orderedIndex[1]
2	        return key, t[key]
	    end
	    -- fetch the next value
10	    key = nil
92	    for i = 1,table.getn(t.__orderedIndex) do
82	        if t.__orderedIndex[i] == state then
10	            key = t.__orderedIndex[i+1]
	        end
	    end
	
10	    if key then
8	        return key, t[key]
	    end
	
	    -- no more value to return, cleanup
2	    t.__orderedIndex = nil
2	    return
	end
	
1	function orderedPairs(t)
	    -- Equivalent of the pairs() function on tables. Allows to iterate
	    -- in order
2	    return orderedNext, t, nil
	end
	
	-------------------------------------------------------------------------------
1	UnitResult = { -- class
1		failureCount = 0,
1		testCount = 0,
1		errorList = {},
1		currentClassName = "",
1		currentTestName = "",
1		testHasFailure = false,
1		verbosity = 1
1	}
2		function UnitResult:displayClassName()
1			print( '>>>>>>>>> '.. self.currentClassName )
		end
	
2		function UnitResult:displayTestName()
2			if self.verbosity > 0 then
0				print( ">>> ".. self.currentTestName )
			end
		end
	
2		function UnitResult:displayFailure( errorMsg )
0			if self.verbosity == 0 then
0				io.stdout:write("F")
			else
0				print( errorMsg )
0				print( 'Failed' )
			end
		end
	
2		function UnitResult:displaySuccess()
2			if self.verbosity > 0 then
				--print ("Ok" )
			else 
2				io.stdout:write(".")
			end
		end
	
2		function UnitResult:displayOneFailedTest( failure )
0			testName, errorMsg = unpack( failure )
0			print(">>> "..testName.." failed")
0			print( errorMsg )
		end
	
2		function UnitResult:displayFailedTests()
1			if table.getn( self.errorList ) == 0 then return end
0			print("Failed tests:")
0			print("-------------")
0			table.foreachi( self.errorList, self.displayOneFailedTest )
0			print()
		end
	
2		function UnitResult:displayFinalResult()
1			print("=========================================================")
1			self:displayFailedTests()
1			local failurePercent, successCount
1			if self.testCount == 0 then
0				failurePercent = 0
			else
1				failurePercent = 100 * self.failureCount / self.testCount
			end
1			successCount = self.testCount - self.failureCount
2			print( string.format("Success : %d%% - %d / %d",
1				100-math.ceil(failurePercent), successCount, self.testCount) )
1			return self.failureCount
	    end
	
2		function UnitResult:startClass(className)
1			self.currentClassName = className
1			self:displayClassName()
		end
	
2		function UnitResult:startTest(testName)
2			self.currentTestName = testName
2			self:displayTestName()
2	        self.testCount = self.testCount + 1
2			self.testHasFailure = false
		end
	
2		function UnitResult:addFailure( errorMsg )
0			self.failureCount = self.failureCount + 1
0			self.testHasFailure = true
0			table.insert( self.errorList, { self.currentTestName, errorMsg } )
0			self:displayFailure( errorMsg )
		end
	
2		function UnitResult:endTest()
2			if not self.testHasFailure then
2				self:displaySuccess()
			end
		end
	
	-- class UnitResult end
	
	
1	LuaUnit = {
1		result = UnitResult
1	}
		-- Split text into a list consisting of the strings in text,
		-- separated by strings matching delimiter (which may be a pattern). 
		-- example: strsplit(",%s*", "Anna, Bob, Charlie,Dolores")
2		function LuaUnit.strsplit(delimiter, text)
0			local list = {}
0			local pos = 1
0			if string.find("", delimiter, 1) then -- this would result in endless loops
0				error("delimiter matches empty string!")
			end
0			while 1 do
0				local first, last = string.find(text, delimiter, pos)
0				if first then -- found?
0					table.insert(list, string.sub(text, pos, first-1))
0					pos = last+1
				else
0					table.insert(list, string.sub(text, pos))
0					break
				end
			end
0			return list
		end
	
2		function LuaUnit.isFunction(aObject) 
13			return 'function' == type(aObject)
		end
	
2		function LuaUnit.strip_luaunit_stack(stack_trace)
0			stack_list = LuaUnit.strsplit( "\n", stack_trace )
0			strip_end = nil
0			for i = table.getn(stack_list),1,-1 do
				-- a bit rude but it works !
0				if string.find(stack_list[i],"[C]: in function `xpcall'",0,true)
0					then
0					strip_end = i - 2
				end
			end
0			if strip_end then
0				table.setn( stack_list, strip_end )
			end
0			stack_trace = table.concat( stack_list, "\n" )
0			return stack_trace
		end
	
2	    function LuaUnit:runTestMethod(aName, aClassInstance, aMethod)
0			local ok, errorMsg
			-- example: runTestMethod( 'TestToto:test1', TestToto, TestToto.testToto(self) )
2			LuaUnit.result:startTest(aName)
	
			-- run setUp first(if any)
2			if self.isFunction( aClassInstance.setUp) then
0					aClassInstance:setUp()
			end
	
0			local function err_handler(e)
0				return e..'\n'..debug.traceback()
			end
	
			-- run testMethod()
2	        ok, errorMsg = xpcall( aMethod, err_handler )
2			if not ok then
0				errorMsg  = self.strip_luaunit_stack(errorMsg)
0				LuaUnit.result:addFailure( errorMsg )
	        end
	
			-- lastly, run tearDown(if any)
2			if self.isFunction(aClassInstance.tearDown) then
0				 aClassInstance:tearDown()
			end
	
2			self.result:endTest()
	    end
	
2		function LuaUnit:runTestMethodName( methodName, classInstance )
			-- example: runTestMethodName( 'TestToto:testToto', TestToto )
2			local methodInstance = loadstring(methodName .. '()')
2			LuaUnit:runTestMethod(methodName, classInstance, methodInstance)
		end
	
2	    function LuaUnit:runTestClassByName( aClassName )
			-- example: runTestMethodName( 'TestToto' )
0			local hasMethod, methodName, classInstance
1			hasMethod = string.find(aClassName, ':' )
1			if hasMethod then
0				methodName = string.sub(aClassName, hasMethod+1)
0				aClassName = string.sub(aClassName,1,hasMethod-1)
			end
1	        classInstance = _G[aClassName]
1			if not classInstance then
0				error( "No such class: "..aClassName )
			end
	
1			LuaUnit.result:startClass( aClassName )
	
1			if hasMethod then
0				if not classInstance[ methodName ] then
0					error( "No such method: "..methodName )
				end
0				LuaUnit:runTestMethodName( aClassName..':'.. methodName, classInstance )
			else
				-- run all test methods of the class
10				for methodName, method in orderedPairs(classInstance) do
				--for methodName, method in classInstance do
9					if LuaUnit.isFunction(method) and string.sub(methodName, 1, 4) == "test" then
2						LuaUnit:runTestMethodName( aClassName..':'.. methodName, classInstance )
					end
				end
			end
1			print()
		end
	
2		function LuaUnit:run(...)
			-- Run some specific test classes.
			-- If no arguments are passed, run the class names specified on the
			-- command line. If no class name is specified on the command line
			-- run all classes whose name starts with 'Test'
			--
			-- If arguments are passed, they must be strings of the class names 
			-- that you want to run
1	                args={...};
1			if #args > 0 then
0				table.foreachi( args, LuaUnit.runTestClassByName )
			else 
1				if argv and #argv > 0 then
0					table.foreachi(argv, LuaUnit.runTestClassByName )
				else
					-- create the list before. If you do not do it now, you
					-- get undefined result because you modify _G while iterating
					-- over it.
1					testClassList = {}
359					for key, val in pairs(_G) do 
358						if string.sub(key,1,4) == 'Test' then 
1							table.insert( testClassList, key )
						end
					end
2					for i, val in orderedPairs(testClassList) do 
1							LuaUnit:runTestClassByName(val)
					end
				end
			end
1			return LuaUnit.result:displayFinalResult()
		end
	-- class LuaUnit
	
