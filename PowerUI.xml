<Ui xmlns="http://www.blizzard.com/wow/ui/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.blizzard.com/wow/ui/
    ..\..\FrameXML\UI.xsd">
	<!-- Could put this in the TOC but...Effort? -->
	<Script file="PowerUI.lua" />
	<!-- Templates
		All templates are prefixed with Powa, and use a Template suffix.
		> BorderedFrame     -  Simple frame with a darkened tooltip border.
		> FrameSeparator    -  Acts as a separator for UI elements. Steals some stuff from archaeology textures.
		> Checkbox          -  Checkbox template.
		> EditBox           -  Simple bordered editbox template. Has a label included.
		> ColorWidget       -  Small color box thing. You know the one.
		> BrowserFrameBase  -  BrowserFrame template as below minus the page editbox.
		> BrowserFrame      -  BorderedFrame with an editbox and a couple of buttons for browsing pages of auras.
		> Slider            -  Slider with editbox.
		> TabButton         -  Button template for tabs.
		> TabDialog         -  Basic dialog frame, best used inside of a tab.
		> TabSidebarButton  -  Button template for a tabbed sidebar.
	-->	
	<Frame name="PowaBorderedFrameTemplate" virtual="true">
        <Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="4" right="4" top="4" bottom="4" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="16" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="16" />
			</EdgeSize>
			<Color r="0.0" g="0.0" b="0.0" a="0.75" />
			<BorderColor r="0.4" g="0.4" b="0.4" a="1.0" />
		</Backdrop>
	</Frame>
	
	<Frame name="PowaFrameSeparatorTemplate" virtual="true">
		<Size>
			<AbsDimension x="42" y="27" />
		</Size>
		<Layers>
			<!--
			<Layer level="BACKGROUND">
				<Texture file="Interface\Archeology\ArchaeologyParts" parentKey="LeftTex">
					<Size>
						<AbsDimension x="42" y="27" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" />
					</Anchors>
					<TexCoords left="0.00195313" right="0.10742188" top="0.70312500" bottom="0.83593750" />
				</Texture>
				<Texture file="Interface\Archeology\ArchaeologyParts" parentKey="RightTex">
					<Size>
						<AbsDimension x="42" y="27" />
					</Size>
					<Anchors>
						<Anchor point="RIGHT" />
					</Anchors>
					<TexCoords left="0.00195313" right="0.10742188" top="0.56250000" bottom="0.69531250" />
				</Texture>
			</Layer>
			-->
			<Layer level="OVERLAY">
				<FontString parentKey="Text" inherits="GameFontNormal" justifyH="CENTER" justifyV="MIDDLE">
					<Anchors>
						<Anchor point="LEFT" x="46" y="0" />
						<Anchor point="RIGHT" x="-46" y="0" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
	</Frame>
	
	<CheckButton name="PowaCheckboxTemplate" virtual="true">
		<NormalFont style="GameFontNormalSmall" />
		<DisabledFont style="GameFontDisableSmall" />
		<HighlightFont style="GameFontHighlightSmall" />
		<NormalTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled" blend="DISABLE">
			<Size>
				<AbsDimension x="20" y="20" />
			</Size>
			<Anchors>
				<Anchor point="LEFT" relativePoint="LEFT" x="4" y="-1" />
			</Anchors>
		</NormalTexture>
		<CheckedTexture file="Interface\Buttons\UI-CheckBox-Check" blend="DISABLE">
			<Size>
				<AbsDimension x="20" y="20" />
			</Size>
			<Anchors>
				<Anchor point="LEFT" relativePoint="LEFT" x="4" y="-1" />
			</Anchors>
		</CheckedTexture>
		<Backdrop bgFile="Interface\ChatFrame\ChatFrameBackground" edgeFile="Interface\ChatFrame\ChatFrameBackground" tile="true">
			<EdgeSize>
				<AbsValue val="1" />
			</EdgeSize>
			<TileSize>
				<AbsValue val="5" />
			</TileSize>
			<Color r="0.0" g="0.0" b="0.0" a="0.5" />
			<BorderColor r="0.3" g="0.3" b="0.3" a="0.8" />
		</Backdrop>
		<ButtonText name="$parentText" parentKey="Text" font="GameFontNormalSmall" justifyH="LEFT" justifyV="MIDDLE">
			<Size>
				<AbsDimension y="24"/>
			</Size>
			<Anchors>
				<Anchor point="LEFT" x="28" y="0" />
				<Anchor point="RIGHT" x="-4" y="0" />
			</Anchors>
		</ButtonText>
		<Scripts>
			<PostClick>
				self:UpdateColors();
			</PostClick>
			<OnEnter>
				self:UpdateColors();
			</OnEnter>
			<OnLeave>
				self:UpdateColors();
			</OnLeave>
		</Scripts>
	</CheckButton>
	
	<EditBox name="PowaEditBoxTemplate" virtual="true" autofocus="false" font="GameFontHighlightSmall" enableMouse="true">
		<Size>
			<AbsDimension x="70" y="17" />
		</Size>
		<Backdrop bgFile="Interface\ChatFrame\ChatFrameBackground" edgeFile="Interface\ChatFrame\ChatFrameBackground" tile="true">
			<EdgeSize>
				<AbsValue val="1" />
			</EdgeSize>
			<TileSize>
				<AbsValue val="5" />
			</TileSize>
			<Color r="0.0" g="0.0" b="0.0" a="0.5" />
			<BorderColor r="0.3" g="0.3" b="0.3" a="0.8" />
		</Backdrop>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentTitle" inherits="GameFontNormalSmall" parentKey="Title" justifyH="LEFT" justifyV="MIDDLE">
					<Size>
						<AbsDimension y="17" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativePoint="LEFT" x="3" y="-1" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<TextInsets>
			<AbsInset left="0" right="0" top="1" bottom="0" />
		</TextInsets>
		<Scripts>
			<OnEscapePressed>
				self:ClearFocus();
			</OnEscapePressed>
			<OnEnterPressed>
				self:ClearFocus();
			</OnEnterPressed>
			<OnEnter>
				self:UpdateColors();
			</OnEnter>
			<OnLeave>
				self:UpdateColors();
			</OnLeave>
			<OnEditFocusGained>
				self:UpdateColors(true);
				self:HighlightText();
			</OnEditFocusGained>
			<OnEditFocusLost>
				self:UpdateColors(false);
				self:HighlightText(0,0);
			</OnEditFocusLost>
		</Scripts>
	</EditBox>
	
	<Button name="PowaColorWidgetTemplate" virtual="true">
		<Size>
			<AbsDimension x="64" y="16" />
		</Size>
		<NormalFont style="GameFontNormalSmall" />
		<DisabledFont style="GameFontDisableSmall" />
		<HighlightFont style="GameFontHighlightSmall" />
		<NormalTexture file="Interface\Buttons\WHITE8X8" blend="DISABLE">
			<Size>
				<AbsDimension x="16" y="16" />
			</Size>
			<Anchors>
				<Anchor point="LEFT" relativePoint="LEFT" x="4" y="0" />
			</Anchors>
		</NormalTexture>
		<Backdrop bgFile="Interface\ChatFrame\ChatFrameBackground" edgeFile="Interface\ChatFrame\ChatFrameBackground" tile="true">
			<EdgeSize>
				<AbsValue val="1" />
			</EdgeSize>
			<TileSize>
				<AbsValue val="5" />
			</TileSize>
			<Color r="0.0" g="0.0" b="0.0" a="0.5" />
			<BorderColor r="0.3" g="0.3" b="0.3" a="0.8" />
		</Backdrop>
		<ButtonText name="$parentText" parentKey="Text" font="GameFontNormalSmall" justifyH="LEFT" justifyV="MIDDLE">
			<Size>
				<AbsDimension x="40" y="24"/>
			</Size>
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="28" y="0"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ButtonText>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp");
			</OnLoad>
			<OnClick>
				if(button == "LeftButton") then
					-- Set up colours/funcs.
					local r, g, b = 1, 1, 1;
					if(self.GetColors) then r, g, b = self:GetColors(); end
					ColorPickerFrame:SetColorRGB(r, g, b);
					ColorPickerFrame.hasOpacity = nil;
					ColorPickerFrame.previousValues = { r, g, b, 1 };
					-- Set functions.
					if(not self.ColorChanged) then
						self.ColorChanged = function(restore)
							-- Get colors.
							local r, g, b = ColorPickerFrame:GetColorRGB();
							if(restore) then r, g, b = unpack(restore); end
							-- Run custom OnColorChanged function.
							if(self.OnColorChanged) then
								self:OnColorChanged(r, g, b);
							end
							-- Tint the widget.
							self:GetNormalTexture():SetVertexColor(r, g, b, 1);
						end
					end
					ColorPickerFrame.func, ColorPickerFrame.cancelFunc = self.ColorChanged, self.ColorChanged;
					-- Show.
					ColorPickerFrame:Hide();
					ColorPickerFrame:Show();
				else
					-- Reset to default.
					self:GetNormalTexture():SetVertexColor(1, 1, 1, 1);
					if(self.OnColorChanged) then
						self:OnColorChanged(1, 1, 1);
					end					
				end
			</OnClick>
			<OnEnter>
				self:SetBackdropBorderColor(0.3, 0.3, 0.3, 1);
			</OnEnter>
			<OnLeave>
				self:SetBackdropBorderColor(0.3, 0.3, 0.3, 0.8);
			</OnLeave>
		</Scripts>
	</Button>
	
	<Frame name="PowaBrowserFrameBaseTemplate" virtual="true" inherits="PowaBorderedFrameTemplate">
		<Frames>
			<Button name="$parentPrevPageButton" parentKey="PrevPageButton">
				<Size>
					<AbsDimension x="27" y="27" /> <!-- It's actually 27x26, but the texture seems to blur a bit. -->
				</Size>
				<Anchors>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="5" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\UI-SpellbookIcon-PrevPage-Up">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</NormalTexture>
				<PushedTexture file="Interface\Buttons\UI-SpellbookIcon-PrevPage-Down">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</PushedTexture>
				<DisabledTexture file="Interface\Buttons\UI-SpellbookIcon-PrevPage-Disabled">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</DisabledTexture>
				<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</HighlightTexture>
				<Scripts>
					<OnClick>
						self:GetParent():PrevPage();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentNextPageButton" parentKey="NextPageButton">
				<Size>
					<AbsDimension x="27" y="27" /> <!-- It's actually 27x26, but the texture seems to blur a bit. -->
				</Size>
				<Anchors>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-5" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\UI-SpellbookIcon-NextPage-Up">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</NormalTexture>
				<PushedTexture file="Interface\Buttons\UI-SpellbookIcon-NextPage-Down">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</PushedTexture>
				<DisabledTexture file="Interface\Buttons\UI-SpellbookIcon-NextPage-Disabled">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</DisabledTexture>
				<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD">
					<TexCoords left="0.0625" right="0.90625" top="0.09375" bottom="0.90625" />
				</HighlightTexture>
				<Scripts>
					<OnClick>
						self:GetParent():NextPage();
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
	
	<Frame name="PowaBrowserFrameTemplate" virtual="true" inherits="PowaBrowserFrameBaseTemplate">
		<Frames>
			<EditBox name="$parentPageBox" parentKey="PageBox" inherits="PowaEditBoxTemplate">
				<Size>
					<AbsDimension x="70" y="17" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativePoint="BOTTOM" x="0" y="9" />
				</Anchors>
				<Scripts>
					<OnLoad>
						PowaAuras.UI.EditBox(self, nil, "UI_BrowserPage");
					</OnLoad>
				</Scripts>
				<OnEscapePressed>
					self:SetText(self:GetParent().Page);
					self:ClearFocus();
				</OnEscapePressed>
				<OnEnterPressed>
					if(tonumber(self:GetText(), 10)) then
						self:GetParent():SetPage(tonumber(self:GetText(), 10));
					else
						self:SetText(self:GetParent().Page);
					end
					self:ClearFocus();
				</OnEnterPressed>
			</EditBox>
		</Frames>
	</Frame>	
	
	<Slider name="PowaSliderTemplate" virtual="true" minValue="1" maxValue="100" defaultValue="50" valueStep="1" orientation="HORIZONTAL" enableMouse="true">
		<Size>
			<AbsDimension x="150" y="15" />
		</Size>
		<HitRectInsets>
			<AbsInset left="0" right="0" top="-14" bottom="-15" />
		</HitRectInsets>
		<Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
			<EdgeSize>
				<AbsValue val="8" />
			</EdgeSize>
			<TileSize>
				<AbsValue val="8" />
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="3" right="3" top="6" bottom="6" />
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentText" parentKey="Text" text="Text" inherits="GameFontNormalSmall">
					<Size>
						<AbsDimension y="14" />
					</Size>
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP" />
					</Anchors>
				</FontString>
				<FontString name="$parentLow" parentKey="Low" text="Low" inherits="GameFontHighlightSmall">
					<Size>
						<AbsDimension y="14" />
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="0" y="-1" />
					</Anchors>
				</FontString>
				<FontString name="$parentHigh" parentKey="High" text="High" inherits="GameFontHighlightSmall">
					<Size>
						<AbsDimension y="14" />
					</Size>
					<Anchors>
						<Anchor point="TOPRIGHT" relativePoint="BOTTOMRIGHT" x="0" y="-1" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<EditBox name="$parentValue" parentKey="Value" justifyH="CENTER" inherits="PowaEditBoxTemplate">
				<Size>
					<AbsDimension x="70" y="14" />
				</Size>
				<Anchors>
					<Anchor point="TOP" relativePoint="BOTTOM" x="0" y="-1" />
				</Anchors>
				<Scripts>
					<OnEscapePressed>
						self:SetText(self:GetParent():GetValue());
						self:ClearFocus();
					</OnEscapePressed>
					<OnEnterPressed>
						-- Get the value.
						local value = nil;
						if(self:GetParent().OnValueSet) then
							value = self:GetText();
						elseif(tonumber(self:GetText(), 10)) then
							value = tonumber(self:GetText(), 10);
						end
						-- If it exists, set it. Otherwise, default to the current one.
						if(value) then
							self:GetParent():SetValue(value);
						end
						-- Now reset the box.
						self:SetText(self:GetParent():GetValue());
						-- Done.
						self:ClearFocus();						
					</OnEnterPressed>
					<OnLoad>
						-- Setting justifyH in the XML doesn't work.
						self:SetJustifyH("CENTER");
						-- Initialize me!
						PowaAuras.UI.EditBox(self);
					</OnLoad>
				</Scripts>
			</EditBox>
		</Frames>
		<Scripts>
			<OnValueChanged>
				self.Value:SetText(self:GetValue());
				if(self.OnValueChanged) then
					-- Don't run the value through the OnValueGet mutator.
					self:OnValueChanged(value);
				end
			</OnValueChanged>
		</Scripts>
		<ThumbTexture name="$parentThumb" file="Interface\Buttons\UI-SliderBar-Button-Horizontal">
			<Size>
				<AbsDimension x="32" y="32" />
			</Size>
		</ThumbTexture>
	</Slider>
	
	<Button name="PowaTabButtonTemplate" virtual="true" text="Tab">
		<Size>
			<AbsDimension x="128" y="29" />
		</Size>
		<NormalFont style="GameFontNormalSmall" />
		<HighlightFont style="GameFontHighlightSmall"/>
		<DisabledFont style="GameFontHighlightSmall"/>
		<NormalTexture file="Interface\PaperDollInfoFrame\UI-Character-InActiveTab" />
		<HighlightTexture file="Interface\PaperDollInfoFrame\UI-Character-Tab-RealHighlight" alphaMode="ADD">
			<Anchors>
				<Anchor point="TOPLEFT">
					<Offset>
						<AbsDimension x="0" y="-7"/>
					</Offset>
				</Anchor>
				<Anchor point="BOTTOMRIGHT">
					<Offset>
						<AbsDimension x="0" y="0"/>
					</Offset>
				</Anchor>
				<TexCoords left="0" right="1" top="0.2" bottom="0.6" />
			</Anchors>
		</HighlightTexture>
		<ButtonText parentKey="Text">
			<Size>
				<AbsDimension x="0" y="10"/>
			</Size>
			<Anchors>
				<Anchor point="CENTER">
					<Offset>
						<AbsDimension x="0" y="-2"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ButtonText>
	</Button>
	
	<Frame name="PowaTabDialogTemplate" virtual="true">
		<Frames>
			<Button name="$parentAcceptButton" parentKey="AcceptButton" inherits="UIPanelButtonTemplate2" text="Save">
				<Size>
					<AbsDimension x="118" y="22" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset x="-5" y="5" />
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parentCancelButton" parentKey="CancelButton" inherits="UIPanelButtonTemplate2" text="Cancel">
				<Size>
					<AbsDimension x="118" y="22" />
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="$parentAcceptButton" relativePoint="LEFT">
						<Offset x="-10" y="0" />
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
	</Frame>
	
	<Button name="PowaTabSidebarButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="156" y="24"/>
		</Size>
		<NormalFont style="GameFontNormalSmall" />
		<HighlightFont style="GameFontHighlightSmall" />
		<DisabledFont style="GameFontHighlightSmall" />
		<ButtonText parentKey="Text">
			<Size>
				<AbsDimension x="0" y="10"/>
			</Size>
			<Anchors>
				<Anchor point="CENTER">
					<Offset>
						<AbsDimension x="0" y="0"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ButtonText>
		<HighlightTexture file="Interface\FriendsFrame\UI-FriendsFrame-HighlightBar-Blue" alphaMode="ADD" />
		<DisabledTexture file="Interface\FriendsFrame\UI-FriendsFrame-HighlightBar-Blue" alphamode="ADD" />
	</Button>
	
	<!-- Browser Frame -->
	<Frame name="PowaBrowser" toplevel="true" movable="true" parent="UIParent" hidden="false" frameStrata="MEDIUM" enableMouse="true" enableKeyboard="true">
		<Size>
          <AbsDimension x="500" y="450" />
        </Size>
        <Anchors>
			<Anchor point="CENTER" relativeTo="UIParent">
				<Offset>
					<AbsDimension x="0" y="50" />
				</Offset>
			</Anchor>
        </Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>	
		<Scripts>
			<OnMouseDown>
				if(button == "LeftButton" and not self.isMoving) then
					self:StartMoving();
					self.isMoving = true;
				end
			</OnMouseDown>
			<OnMouseUp>
				if(button == "LeftButton" and self.isMoving) then
					self:StopMovingOrSizing();
					self.isMoving = false;
				end
			</OnMouseUp>
			<OnHide>
				if(self.isMoving) then
					self:StopMovingOrSizing();
					self.isMoving = false;
				end
			</OnHide>
		</Scripts>
		<Layers>
			<Layer level="ARTWORK">
				<Texture file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="300" y="68" />
					</Size>
					<Anchors>
						<Anchor point="TOP" relativePoint="TOP" x="0" y="13"/>
					</Anchors>					
				</Texture>
				<FontString name="$parentTitle" inherits="GameFontNormal" text="Power Auras 5.0" justifyH="CENTER" justifyV="TOP">
					<Size>
						<AbsDimension x="300" y="68" />
					</Size>
					<Anchors>
						<Anchor point="TOP" relativePoint="TOP" x="0" y="-2"/>
					</Anchors>
				</FontString>
				<Texture file="Interface\DialogFrame\UI-DialogBox-Corner">
					<Size x="32" y="32" />	
					<Anchors>
						<Anchor point="TOPRIGHT">
							<Offset>
								<AbsDimension x="-4" y="-4" />
							</Offset>
						</Anchor>		
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentCloseButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
	</Frame>
	
	<!-- Editor Frame -->
	<Frame name="PowaEditor" toplevel="true" movable="true" parent="PowaBrowser" hidden="false" frameStrata="MEDIUM" enableMouse="true" enableKeyboard="true">
		<Size>
          <AbsDimension x="550" y="650" />
        </Size>
        <Anchors>
			<Anchor point="CENTER" relativeTo="UIParent">
				<Offset>
					<AbsDimension x="0" y="50" />
				</Offset>
			</Anchor>
        </Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Scripts>
			<OnMouseDown>
				if(button == "LeftButton" and not self.isMoving) then
					self:StartMoving();
					self.isMoving = true;
				end
			</OnMouseDown>
			<OnMouseUp>
				if(button == "LeftButton" and self.isMoving) then
					self:StopMovingOrSizing();
					self.isMoving = false;
				end
			</OnMouseUp>
			<OnHide>
				if(self.isMoving) then
					self:StopMovingOrSizing();
					self.isMoving = false;
				end
			</OnHide>
			<OnShow>
				PowaAuras:ToggleAdvancedElements(self.Advanced:GetChecked() and true or false);
			</OnShow>
		</Scripts>
		<Layers>
			<Layer level="ARTWORK">
				<Texture file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="300" y="68" />
					</Size>
					<Anchors>
						<Anchor point="TOP" relativePoint="TOP" x="0" y="13"/>
					</Anchors>					
				</Texture>
				<FontString name="$parentTitle" inherits="GameFontNormal" text="Aura Editor" justifyH="CENTER" justifyV="TOP">
					<Size>
						<AbsDimension x="300" y="68" />
					</Size>
					<Anchors>
						<Anchor point="TOP" relativePoint="TOP" x="0" y="-2"/>
					</Anchors>
				</FontString>
				<Texture file="Interface\DialogFrame\UI-DialogBox-Corner">
					<Size x="32" y="32" />	
					<Anchors>
						<Anchor point="TOPRIGHT">
							<Offset>
								<AbsDimension x="-4" y="-4" />
							</Offset>
						</Anchor>		
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentCloseButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Frame name="$parentDisplay" inherits="PowaBorderedFrameTemplate">
				<Size>
				  <AbsDimension y="260" />
				</Size>
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="-55" />
						</Offset>
					</Anchor>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="15" y="0" />
						</Offset>
					</Anchor>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-15" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Frames>
					<Frame name="$parentAura" parentKey="Aura" hidden="true">
						<Anchors>
							<Anchor point="TOPLEFT">
								<Offset>
									<AbsDimension x="0" y="0" />
								</Offset>
							</Anchor>
							<Anchor point="BOTTOMRIGHT">
								<Offset>
									<AbsDimension x="0" y="0" />
								</Offset>
							</Anchor>
						</Anchors>
						<Frames>
							<Frame name="$parentSidebar" parentKey="Sidebar">
								<Layers>
									<Layer level="ARTWORK">
										<Texture>
											<Anchors>
												<Anchor point="TOPLEFT">
													<Offset>
														<AbsDimension x="4" y="-4" />
													</Offset>
												</Anchor>
												<Anchor point="BOTTOMRIGHT">
													<Offset>
														<AbsDimension x="-8" y="4" />
													</Offset>
												</Anchor>
											</Anchors>
											<Color r="0" g="0" b="0" a="0.535" />
										</Texture>
										<Texture file="Interface\COMMON\ShadowOverlay-Left">
											<Size>
												<AbsDimension x="16" />
											</Size>
											<Anchors>
												<Anchor point="TOPRIGHT">
													<Offset>
														<AbsDimension x="8" y="-4" />
													</Offset>
												</Anchor>
												<Anchor point="BOTTOMRIGHT">
													<Offset>
														<AbsDimension x="8" y="4" />
													</Offset>
												</Anchor>
											</Anchors>
											<Color r="0" g="0" b="0" a="0.75" />
										</Texture>
										<FontString parentKey="Src" inherits="GameFontHighlight" justifyH="CENTER" justifyV="MIDDLE">
											<Size>
												<AbsDimension x="128" />
											</Size>
											<Anchors>
												<Anchor point="TOP" relativePoint="TOP" x="0" y="-110"/>
											</Anchors>
										</FontString>
									</Layer>
								</Layers>
								<Frames>
									<Button name="$parentIcon" parentKey="Icon">
										<Size>
											<AbsDimension x="96" y="96" />
										</Size>
										<Anchors>
											<Anchor point="TOP">
												<Offset>
													<AbsDimension x="0" y="-10" />
												</Offset>
											</Anchor>
										</Anchors>
										<Layers>
											<Layer level="OVERLAY">
												<Texture file="Interface\AddOns\PowerAuras\Auras\Aura1" name="$parentTexture" parentKey="Texture">
													<Size>
														<AbsDimension x="96" y="96" />
													</Size>
													<Anchors>
														<Anchor point="TOPLEFT">
															<Offset>
																<AbsDimension x="0" y="0" />
															</Offset>
														</Anchor>
														<Anchor point="BOTTOMRIGHT">
															<Offset>
																<AbsDimension x="0" y="0" />
															</Offset>
														</Anchor>
													</Anchors>
												</Texture>
												<FontString parentKey="Src" inherits="GameFontHighlight" justifyH="CENTER" justifyV="MIDDLE">
													<Size>
														<AbsDimension x="128" />
													</Size>
													<Anchors>
														<Anchor point="TOP" x="0" y="-110"/>
													</Anchors>
												</FontString>
											</Layer>
										</Layers>
										<Scripts>
											<OnLoad>
												self.Src:SetText(PowaAuras.Text["UI_Aura_TexClick"]);
											</OnLoad>
											<OnClick>
												PowaEditorDisplayAuraMain:SelectTab(2);
											</OnClick>
										</Scripts>
									</Button>
									<CheckButton name="$parentGlow" parentKey="Glow" text="UI_Aura_TexGlow" inherits="PowaCheckboxTemplate">
										<Size>
											<AbsDimension x="64" y="24" />
										</Size>
										<Anchors>
											<Anchor point="BOTTOM" x="0" y="35" />
										</Anchors>
										<Scripts>
											<OnLoad>
												PowaAuras.UI.Checkbox(self, "Glow");
											</OnLoad>
										</Scripts>
									</CheckButton>
									<Button name="$parentColor" parentKey="Color" inherits="PowaColorWidgetTemplate">
										<Size>
											<AbsDimension x="64" y="24" />
										</Size>
										<Anchors>
											<Anchor point="BOTTOM" x="0" y="9" />
										</Anchors>
										<Scripts>
											<OnShow>
												self.Text:SetText("Color");
											</OnShow>
										</Scripts>
									</Button>
								</Frames>
							</Frame>
							<Frame name="$parentMain" parentKey="Main">
								<Anchors>
									<Anchor point="TOPLEFT" />
									<Anchor point="BOTTOMRIGHT" />
								</Anchors>
								<Frames>
									<ScrollFrame name="$parentConfig" inherits="UIPanelScrollFrameTemplate" parentKey="Config">
										<Size>
											<AbsDimension x="350" />
										</Size>
										<Anchors>
											<Anchor point="TOPLEFT" x="0" y="-2" />
											<Anchor point="BOTTOMRIGHT" x="-24" y="2" />
										</Anchors>
										<ScrollChild>
											<Frame parentKey="Child">
												<Size>
													<!-- Layout frames now have an IsScrollChild property which will autoadjust the height. -->
													<AbsDimension x="328" y="0" />
												</Size>
												<Anchors>
													<Anchor point="TOPLEFT" />
													<Anchor point="BOTTOMRIGHT" />
												</Anchors>
												<Frames>
													<Frame parentKey="Separator1" inherits="PowaFrameSeparatorTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.FrameSeparator(self, "UI_Aura_Separator1");
															</OnLoad>
														</Scripts>
													</Frame>
													<Slider name="$parentOpacity" minValue="1" maxValue="100" defaultValue="75" valueStep="1" parentKey="Opacity" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.Slider(self, "UI_Aura_TexOpacity", "%");
															</OnLoad>
														</Scripts>
													</Slider>
													<Slider name="$parentScale" minValue="1" maxValue="500" defaultValue="75" valueStep="1" parentKey="Scale" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.Slider(self, "UI_Aura_TexScale", "%");
															</OnLoad>
														</Scripts>
													</Slider>
													<Slider name="$parentRotate" minValue="0" maxValue="360" defaultValue="0" valueStep="1" parentKey="Rotate" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.Slider(self, "UI_Aura_TexRotate");
															</OnLoad>
														</Scripts>
													</Slider>
													<Slider name="$parentFlip" minValue="1" maxValue="4" defaultValue="1" valueStep="1" parentKey="Flip" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																-- Add mutators to slider widgets BEFORE initializing them.
																self.OnValueGet = function(_, value)
																	if(value == 1) then return "";
																	elseif(value == 2) then return "X";
																	elseif(value == 3) then return "Y";
																	elseif(value == 4) then return "XY";
																	else return value; end
																end
																self.OnValueSet = function(_, value)
																	if(tonumber(value, 10)) then return tonumber(value, 10); end
																	
																	if(value == "") then return 1;
																	elseif(value == "X") then return 2;
																	elseif(value == "Y") then return 3;
																	elseif(value == "XY") then return 4;
																	else return 1; end
																end
																PowaAuras.UI.Slider(self, "UI_Aura_TexFlip", "", "None", "XY");
															</OnLoad>
														</Scripts>
													</Slider>
													<Frame parentKey="Separator2" inherits="PowaFrameSeparatorTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.FrameSeparator(self, "UI_Aura_Separator2");
															</OnLoad>
														</Scripts>
													</Frame>
													<EditBox name="$parentX" parentKey="X" inherits="PowaEditBoxTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.EditBox(self, "X", "UI_Aura_TexX");
																self:SetText(0);
															</OnLoad>
														</Scripts>
													</EditBox>
													<EditBox name="$parentY" parentKey="Y" inherits="PowaEditBoxTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.EditBox(self, "Y", "UI_Aura_TexY");
																self:SetText(0);
															</OnLoad>
														</Scripts>
													</EditBox>
													<Frame parentKey="Separator3" inherits="PowaFrameSeparatorTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.FrameSeparator(self, "UI_Aura_Separator3");
															</OnLoad>
														</Scripts>
													</Frame>
													<Slider name="$parentDeform" minValue="0.1" maxValue="2.0" defaultValue="1.0" valueStep="0.05" parentKey="Deform" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																-- Add mutators to slider widgets BEFORE initializing them.
																self.OnValueGet = function(_, value)
																	return format("%.2f", value);
																end
																-- Set 0.1 and 2.0 as the min/max labels in string form to prevent the huge precision mess.
																PowaAuras.UI.Slider(self, "UI_Aura_TexDeform", "", "0.1", "2.0");
															</OnLoad>
														</Scripts>
													</Slider>
													<Slider name="$parentStrata" minValue="-65536" maxValue="65536" defaultValue="0" valueStep="1" parentKey="Strata" inherits="PowaSliderTemplate">
														<Scripts>
															<OnLoad>
																PowaAuras.UI.Slider(self, "UI_Aura_TexStrata");
															</OnLoad>
														</Scripts>
													</Slider>
												</Frames>
												<Scripts>
													<OnLoad>
														-- Layout needed.
														PowaAuras.UI.LayoutFrame(self, 2, { [1] = { X = 0.5 }, [2] = { X = 0.5 } }, true);
														
														self:SetItem(self.Separator1, { Margin = { 0, 0, 0, 0 }, Padding = { 2, -2, 0, 0 }, Columns = 2 });
														self:SetItem(self.Opacity, { Margin = { 0, 0, 16, 20 }, Padding = { 2, 4, 0, 0 } });
														self:SetItem(self.Scale, { Margin = { 0, 0, 16, 20 }, Padding = { 4, -2, 0, 0 } });
														self:SetItem(self.Rotate, { Margin = { 0, 0, 16, 20 }, Padding = { 2, 4, 0, 0 } });
														self:SetItem(self.Flip, { Margin = { 0, 0, 16, 20 }, Padding = { 4, -2, 0, 0 } });
														
														self:SetItem(self.Separator2, { Margin = { 0, 0, 6, 0 }, Padding = { 2, -2, 0, 0 }, Columns = 2 });
														self:SetItem(self.X, { Margin = { 0, 0, 4, 4 }, Padding = { 2, 4, 0, 0 } });
														self:SetItem(self.Y, { Margin = { 0, 0, 4, 4 }, Padding = { 4, -2, 0, 0 } });
														
														self:SetItem(self.Separator3, { Margin = { 0, 0, 6, 0 }, Padding = { 2, -2, 0, 0 }, Columns = 2 });
														self:SetItem(self.Deform, { Margin = { 0, 0, 16, 20 }, Padding = { 2, 4, 0, 0 } });
														self:SetItem(self.Strata, { Margin = { 0, 0, 16, 20 }, Padding = { 4, -2, 0, 0 } });
														
														-- Register those last 3 as advanced elements.
														PowaAuras:RegisterAdvancedElement(self.Separator3);
														PowaAuras:RegisterAdvancedElement(self.Deform);
														PowaAuras:RegisterAdvancedElement(self.Strata);
													</OnLoad>
												</Scripts>
											</Frame>
										</ScrollChild>
									</ScrollFrame>
									<Frame name="$parentSelector" parentKey="Selector" inherits="PowaTabDialogTemplate">
										<Anchors>
											<Anchor point="TOPLEFT" />
											<Anchor point="BOTTOMRIGHT" />
										</Anchors>
										<Frames>
											<Frame name="$parentDefault" inherits="PowaBrowserFrameTemplate" parentKey="Default">
												<Anchors>
													<Anchor point="TOPLEFT">
														<Offset x="5" y="-5" />
													</Anchor>
													<Anchor point="BOTTOMRIGHT">
														<Offset x="-5" y="30" />
													</Anchor>
												</Anchors>
												<Layers>
													<Layer level="OVERLAY">
														<Texture parentKey="Texture">
															<Anchors>
																<Anchor point="CENTER" relativePoint="CENTER" x="0" y="0" />
															</Anchors>
														</Texture>
														<FontString parentKey="Error" hidden="true" nonSpaceWrap="true" inherits="GameFontHighlight" justifyH="CENTER" justifyV="MIDDLE">
															<Size>
																<AbsDimension x="256" />
															</Size>
															<Anchors>
																<Anchor point="CENTER" relativePoint="CENTER" x="0" y="0"/>
															</Anchors>
														</FontString>
													</Layer>
												</Layers>
												<Scripts>
													<OnLoad>
														PowaAuras.UI.BrowserFrame(self, 1, 9999, function()
															-- Automatic sizing trick. Set it to auto initially, then read the size and cap if needed!
															self.Texture:SetSize(0, 0);
															self.Texture:SetTexture("Interface\\AddOns\\PowerAuras\\Auras\\Aura" .. self.Page .. ".tga")
															-- SetTexture is SUPPOSED to return nil if it fails. It doesn't.
															-- GetTexture will return nil though.
															if(not self.Texture:GetTexture()) then
																-- No texture = no texture.
																self.Error:SetText(format(PowaAuras.Text["UI_Aura_TexErr"], "Interface\\AddOns\\PowerAuras\\Auras\\Aura" .. self.Page .. ".tga"));
																self.Error:Show();																
															else
																self.Error:Hide();
																-- Automatic sizing does not work for BLP files, so just use a static 128 if no size is reported.
																local x, y = self.Texture:GetSize();
																if(x == 0 or y == 0) then
																	self.Texture:SetSize(128, 128);
																else
																	local newX, newY = (256 >= x and x or 256), 0;
																	newY = (y*(newX/x));
																	if(newY > 128) then
																		self.Texture:SetSize((x*(128/y)), 128);
																	else
																		self.Texture:SetSize(newX, newY);																		
																	end
																end
															end
														end);
													</OnLoad>
												</Scripts>
											</Frame>
											<Frame name="$parentWoW" inherits="PowaBrowserFrameTemplate" parentKey="WoW">
												<Anchors>
													<Anchor point="TOPLEFT">
														<Offset x="5" y="-5" />
													</Anchor>
													<Anchor point="BOTTOMRIGHT">
														<Offset x="-5" y="30" />
													</Anchor>
												</Anchors>
												<Layers>
													<Layer level="OVERLAY">
														<Texture parentKey="Texture">
															<Anchors>
																<Anchor point="CENTER" relativePoint="CENTER" x="0" y="0" />
															</Anchors>
														</Texture>
													</Layer>
												</Layers>
												<Scripts>
													<OnLoad>
														PowaAuras.UI.BrowserFrame(self, 1, #(PowaAuras.WowTextures), function(self, page)
															-- Automatic sizing trick. Set it to auto initially, then read the size and cap if needed!
															self.Texture:SetSize(0, 0);
															self.Texture:SetTexture(PowaAuras.WowTextures[page]);
															-- Automatic sizing does not work for BLP files, so just use a static 128 if no size is reported.
															local x, y = self.Texture:GetSize();
															if(x == 0 or y == 0) then
																self.Texture:SetSize(128, 128);
															else
																local newX, newY = (256 >= x and x or 256), 0;
																newY = (y*(newX/x));
																if(newY > 128) then
																	self.Texture:SetSize((x*(128/y)), 128);
																else
																	self.Texture:SetSize(newX, newY);																		
																end
															end
														end);
													</OnLoad>
												</Scripts>
											</Frame>
											<Frame name="$parentCustom" inherits="PowaBrowserFrameBaseTemplate" parentKey="Custom">
												<Anchors>
													<Anchor point="TOPLEFT">
														<Offset x="5" y="-5" />
													</Anchor>
													<Anchor point="BOTTOMRIGHT">
														<Offset x="-5" y="30" />
													</Anchor>
												</Anchors>
												<Layers>
													<Layer level="OVERLAY">
														<Texture parentKey="Texture">
															<Anchors>
																<Anchor point="CENTER" relativePoint="CENTER" x="0" y="0" />
															</Anchors>
														</Texture>
														<FontString parentKey="Error" hidden="true" nonSpaceWrap="true" inherits="GameFontHighlight" justifyH="CENTER" justifyV="MIDDLE">
															<Size>
																<AbsDimension x="256" />
															</Size>
															<Anchors>
																<Anchor point="CENTER" relativePoint="CENTER" x="0" y="0"/>
															</Anchors>
														</FontString>
													</Layer>
												</Layers>
												<Frames>
													<EditBox name="$parentTexName" parentKey="TexName" inherits="PowaEditBoxTemplate">
														<Anchors>
															<Anchor point="BOTTOMLEFT" x="9" y="9" />
															<Anchor point="BOTTOMRIGHT" x="-9" y="9" />
														</Anchors>
														<Scripts>
															<OnLoad>
																PowaAuras.UI.EditBox(self, nil, "UI_BrowserTex");
																self:SetText("");
															</OnLoad>
															<OnEnterPressed>
																local text, page = self:GetText(), self:GetParent().Page;
																if(text ~= "") then
																	-- Store it.
																	if(not PowaGlobalMisc["CustomTextures"][page]) then
																		tinsert(PowaGlobalMisc["CustomTextures"], page, text);
																	else
																		PowaGlobalMisc["CustomTextures"][page] = text;
																	end
																	-- Update page count.
																	self:GetParent():SetMaxPage(#(PowaGlobalMisc["CustomTextures"])+1);
																elseif(text == "") then
																	-- Blank means remove.
																	tremove(PowaGlobalMisc["CustomTextures"], page);
																	self:GetParent():SetMaxPage(#(PowaGlobalMisc["CustomTextures"])+1);																			
																end
																self:ClearFocus();
															</OnEnterPressed>
														</Scripts>
													</EditBox>
												</Frames>
												<Scripts>
													<OnLoad>
														-- Initialize the frame.
														PowaAuras.UI.BrowserFrame(self, 1, #(PowaGlobalMisc["CustomTextures"])+1, function(self, page)
															-- Texture on this page?
															if(PowaGlobalMisc["CustomTextures"][page]) then
																local texpath, texture = PowaGlobalMisc["PathToAuras"], PowaGlobalMisc["CustomTextures"][page];
																-- Yes, wow.
																self.Error:Hide();
																self.TexName:SetText(texture);
																-- Set the texture up.
																self.Texture:SetSize(0, 0);
																self.Texture:SetTexture(texpath .. texture)
																if(not self.Texture:GetTexture()) then
																	-- No texture = no texture.
																	self.Error:SetText(format(PowaAuras.Text["UI_Aura_TexErr"], texpath .. texture));
																	self.Error:Show();		
																	self.Texture:Hide();														
																else
																	self.Error:Hide();
																	-- Automatic sizing does not work for BLP files, so just use a static 128 if no size is reported.
																	local x, y = self.Texture:GetSize();
																	if(x == 0 or y == 0) then
																		self.Texture:SetSize(128, 128);
																	else
																		local newX, newY = (256 >= x and x or 256), 0;
																		newY = (y*(newX/x));
																		if(newY > 128) then
																			self.Texture:SetSize((x*(128/y)), 128);
																		else
																			self.Texture:SetSize(newX, newY);																		
																		end
																	end
																	self.Texture:Show();
																end
															else
																-- Nope.
																self.Texture:Hide();
																self.Error:SetText(format(PowaAuras.Text["UI_Aura_TexErrCust"], PowaGlobalMisc["PathToAuras"]));
																self.Error:Show();
																self.TexName:SetText("");
															end
														end);
													</OnLoad>
													<OnShow>
														-- Temporary workaround. Will remove later.
														self:SetMaxPage(#(PowaGlobalMisc["CustomTextures"])+1);
													</OnShow>
												</Scripts>
											</Frame>
											<Frame name="$parentText" parentKey="Text">
												<Anchors>
													<Anchor point="TOPLEFT" />
													<Anchor point="BOTTOMRIGHT" />
												</Anchors>
											</Frame>
											<Frame name="$parentIcon" parentKey="Icon">
												<Anchors>
													<Anchor point="TOPLEFT" />
													<Anchor point="BOTTOMRIGHT" />
												</Anchors>
											</Frame>
										</Frames>
										<Scripts>
											<OnShow>
												PowaEditorDisplay.Aura.Sidebar.Src:Hide();
												PowaEditorDisplay.Aura.Sidebar.Icon:Hide();
											</OnShow>
											<OnHide>
												PowaEditorDisplay.Aura.Sidebar.Src:Show();
												PowaEditorDisplay.Aura.Sidebar.Icon:Show();
											</OnHide>
											<OnLoad>
												-- Uses the tab sidebar template.
												PowaAuras.UI.TabFrame(self, 2);
												self:RegisterTab(self.Default, "UI_Aura_SrcNorm");
												self:RegisterTab(self.WoW, "UI_Aura_SrcWoW");
												self:RegisterTab(self.Custom, "UI_Aura_SrcCust");
												self:RegisterTab(self.Text, "UI_Aura_SrcText");
												self:RegisterTab(self.Icon, "UI_Aura_SrcIcon");
												-- Dialog accept/close handlers.
												self.AcceptButton:SetScript("OnClick", function()
													PowaEditorDisplayAuraMain:SelectTab(1);
												end);
												self.CancelButton:SetScript("OnClick", function()
													PowaEditorDisplayAuraMain:SelectTab(1);
												end);
											</OnLoad>
										</Scripts>
									</Frame>
								</Frames>
								<Scripts>
									<OnLoad>
										-- This is actually a tab enabled frame, but we hide all the tabs.
										PowaAuras.UI.TabFrame(self, 3);
										self:RegisterTab(self.Config);
										self:RegisterTab(self.Selector);
									</OnLoad>
								</Scripts>
							</Frame>
						</Frames>
						<Scripts>
							<OnLoad>
								PowaAuras.UI.LayoutFrame(self);
								self:SetColumns(2, { [1] = { X = 0.3, Y = 1 }, [2] = { X = 0.7, Y = 1 } });
								self:SetItem(self.Sidebar);
								self:SetItem(self.Main, { Padding = { 4, 4, 4, 4 } });
							</OnLoad>
						</Scripts>
					</Frame>
					<Frame name="$parentTimer" parentKey="Timer" inherits="BasicFrameTemplate" hidden="true" />
					<Frame name="$parentStacks" parentKey="Stacks" inherits="BasicFrameTemplate" hidden="true" />
				</Frames>
				<Scripts>
					<OnLoad>
						PowaAuras.UI.TabFrame(self, 1);
						self:RegisterTab(self.Aura, "UI_Aura");
						self:RegisterTab(self.Timer, "UI_Timer");
						self:RegisterTab(self.Stacks, "UI_Stacks");
					</OnLoad>
				</Scripts>
			</Frame>
			<Frame name="$parentActivation" inherits="PowaBorderedFrameTemplate">
				<Size>
				  <AbsDimension y="260" />
				</Size>
				<Anchors>
					<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentDisplay">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="15" y="0" />
						</Offset>
					</Anchor>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-15" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Frames>
					<Frame name="$parentRules" parentKey="Rules" inherits="BasicFrameTemplate" hidden="true" />
					<Frame name="$parentAnim" parentKey="Anim" inherits="BasicFrameTemplate" hidden="true" />
					<Frame name="$parentSound" parentKey="Sound" inherits="BasicFrameTemplate" hidden="true" />
					<Frame name="$parentTriggers" parentKey="Triggers" inherits="BasicFrameTemplate" hidden="true" />
				</Frames>
				<Scripts>
					<OnLoad>
						PowaAuras.UI.TabFrame(self, 1);
						self:RegisterTab(self.Rules, "UI_Rules");
						self:RegisterTab(self.Anim, "UI_Anim");
						self:RegisterTab(self.Sound, "UI_Sound");
						self:RegisterTab(self.Triggers, "UI_Triggers");
					</OnLoad>
				</Scripts>
			</Frame>
			<CheckButton name="$parentAdvanced" parentKey="Advanced" text="UI_Advanced" inherits="PowaCheckboxTemplate">
				<Size>
					<AbsDimension x="92" y="24" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" x="-17" y="15" />
				</Anchors>
				<Scripts>
					<OnLoad>
						-- Use our own oncheck handler for advanced element showing/hiding.
						PowaAuras.UI.Checkbox(self, function(self)
							-- Amichecked? Am I?
							PowaAuras:ToggleAdvancedElements(self:GetChecked() and true or false);
						end);
					</OnLoad>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentDebug" parentKey="Debug" text="UI_Debug" inherits="PowaCheckboxTemplate">
				<Size>
					<AbsDimension x="74" y="24" />
				</Size>
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentAdvanced" x="-3" y="0" />
				</Anchors>
				<Scripts>
					<OnLoad>
						PowaAuras.UI.Checkbox(self, "Debug");
						PowaAuras:RegisterAdvancedElement(self);
					</OnLoad>
				</Scripts>
			</CheckButton>
		</Frames>
	</Frame>
</Ui>
